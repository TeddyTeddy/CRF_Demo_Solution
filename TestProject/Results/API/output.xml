<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0.3 (Python 3.7.4 on linux)" generated="20210730 13:51:44.119" rpa="false" schemaversion="2">
<suite id="s1" name="3-Updating-Personal-Information" source="/home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/Tests/API/3-Updating-Personal-Information.robot">
<kw name="Import DataManager" library="Common" type="SETUP">
<kw name="Convert Suite Variables To Correct Types" library="Common">
<doc>This keyword is needed because parameters passed by command line
to robot (i.e. -v variable_name:value) are of string types.
In run command we pass 2 parameters to robot:
robot -d Results/ -v DATA_SET_LENGTH:100 -v USE_EXISTING_FORM_DATA_SET:True -v BROWSER:chromium -P CustomLibs Tests/
So, we have the following variables passed as strings:
- DATA_SET_LENGTH:100
- USE_EXISTING_FORM_DATA_SET:True
We need to convert:
- DATA_SET_LENGTH to int (i.e. integer)
- USE_EXISTING_FORM_DATA_SET to bool (i.e. boolean)
Later these values will be used while loading DataManager.robot resource.</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${DATA_SET_LENGTH}</var>
<arg>int($DATA_SET_LENGTH)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:44.713" level="INFO">${DATA_SET_LENGTH} = 100</msg>
<status status="PASS" starttime="20210730 13:51:44.710" endtime="20210730 13:51:44.713"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${USE_EXISTING_FORM_DATA_SET}</var>
<arg>$USE_EXISTING_FORM_DATA_SET=='True'</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:44.714" level="INFO">${USE_EXISTING_FORM_DATA_SET} = True</msg>
<status status="PASS" starttime="20210730 13:51:44.713" endtime="20210730 13:51:44.714"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DATA_SET_LENGTH}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:51:44.714" level="INFO">${DATA_SET_LENGTH} = 100</msg>
<status status="PASS" starttime="20210730 13:51:44.714" endtime="20210730 13:51:44.714"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${USE_EXISTING_FORM_DATA_SET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:51:44.715" level="INFO">${USE_EXISTING_FORM_DATA_SET} = True</msg>
<status status="PASS" starttime="20210730 13:51:44.715" endtime="20210730 13:51:44.715"/>
</kw>
<status status="PASS" starttime="20210730 13:51:44.710" endtime="20210730 13:51:44.715"/>
</kw>
<kw name="Import Resource" library="BuiltIn">
<arg>${EXECDIR}${/}Resources${/}DataManager.robot</arg>
<doc>Imports a resource file with the given path.</doc>
<status status="PASS" starttime="20210730 13:51:44.715" endtime="20210730 13:51:44.722"/>
</kw>
<status status="PASS" starttime="20210730 13:51:44.710" endtime="20210730 13:51:44.722"/>
</kw>
<test id="s1-t1" name="With Each Valid Token, Updating Username Of Each System User With '' Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:51:44.726" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:51:44.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:51:44.736" level="INFO">${pids} = 11610</msg>
<status status="PASS" starttime="20210730 13:51:44.724" endtime="20210730 13:51:44.736"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:44.737" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:51:44.737" endtime="20210730 13:51:44.737"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:44.738" level="INFO">${pids} = ['11610']</msg>
<status status="PASS" starttime="20210730 13:51:44.738" endtime="20210730 13:51:44.738"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11610</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:44.742" level="INFO">Running command 'kill 11610 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:44.740" endtime="20210730 13:51:44.743"/>
</kw>
<status status="PASS" starttime="20210730 13:51:44.738" endtime="20210730 13:51:44.743"/>
</iter>
<status status="PASS" starttime="20210730 13:51:44.738" endtime="20210730 13:51:44.743"/>
</for>
<status status="PASS" starttime="20210730 13:51:44.738" endtime="20210730 13:51:44.743"/>
</branch>
<status status="PASS" starttime="20210730 13:51:44.737" endtime="20210730 13:51:44.743"/>
</if>
<status status="PASS" starttime="20210730 13:51:44.723" endtime="20210730 13:51:44.743"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:44.744" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:44.744" endtime="20210730 13:51:44.744"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:44.745" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:51:44.745" endtime="20210730 13:51:44.745"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:51:44.745" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:51:44.745" endtime="20210730 13:51:44.745"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:44.746" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:44.745" endtime="20210730 13:51:44.746"/>
</kw>
<msg timestamp="20210730 13:51:44.746" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:44.744" endtime="20210730 13:51:44.746"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:44.749" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:44.746" endtime="20210730 13:51:44.751"/>
</kw>
<status status="PASS" starttime="20210730 13:51:44.743" endtime="20210730 13:51:44.751"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:51:44.754" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:51:44.752" endtime="20210730 13:51:44.758"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:51:46.264" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:51:44.758" endtime="20210730 13:51:46.264"/>
</kw>
<status status="PASS" starttime="20210730 13:51:44.752" endtime="20210730 13:51:46.264"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:46.265" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:51:46.265" endtime="20210730 13:51:46.265"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:51:46.266" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:51:46.266" endtime="20210730 13:51:46.266"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:46.266" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:46.266" endtime="20210730 13:51:46.266"/>
</kw>
<msg timestamp="20210730 13:51:46.266" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:46.265" endtime="20210730 13:51:46.266"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:51:46.268" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:51:46.266" endtime="20210730 13:51:46.268"/>
</kw>
<status status="PASS" starttime="20210730 13:51:46.264" endtime="20210730 13:51:46.268"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:51:46.269" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:51:46.269" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:51:46.269" endtime="20210730 13:51:46.270"/>
</kw>
<status status="PASS" starttime="20210730 13:51:46.269" endtime="20210730 13:51:46.270"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:51:46.271" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:51:46.271" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:51:46.271" endtime="20210730 13:51:46.271"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:51:46.271" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:51:46.271" endtime="20210730 13:51:46.271"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:46.272" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:51:46.272" endtime="20210730 13:51:46.272"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:51:46.272" endtime="20210730 13:51:46.273"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:51:46.273" endtime="20210730 13:51:46.273"/>
</kw>
<status status="PASS" starttime="20210730 13:51:46.271" endtime="20210730 13:51:46.273"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:46.274" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:51:46.274" endtime="20210730 13:51:46.274"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:51:46.274" endtime="20210730 13:51:46.275"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:51:46.275" endtime="20210730 13:51:46.275"/>
</kw>
<status status="PASS" starttime="20210730 13:51:46.274" endtime="20210730 13:51:46.275"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:46.275" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:51:46.275" endtime="20210730 13:51:46.275"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:51:46.275" endtime="20210730 13:51:46.276"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:51:46.276" endtime="20210730 13:51:46.276"/>
</kw>
<status status="PASS" starttime="20210730 13:51:46.275" endtime="20210730 13:51:46.276"/>
</iter>
<status status="PASS" starttime="20210730 13:51:46.271" endtime="20210730 13:51:46.276"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:51:46.277" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:51:46.276" endtime="20210730 13:51:46.277"/>
</kw>
<status status="PASS" starttime="20210730 13:51:46.270" endtime="20210730 13:51:46.277"/>
</kw>
<status status="PASS" starttime="20210730 13:51:44.723" endtime="20210730 13:51:46.277"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=${EMPTY}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:46.279" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:51:46.278" endtime="20210730 13:51:46.279"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:46.279" level="INFO">${payload} = {'username': ''}</msg>
<status status="PASS" starttime="20210730 13:51:46.279" endtime="20210730 13:51:46.279"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:51:46.291" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:51:46.292" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:51:46.279" endtime="20210730 13:51:46.292"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:51:46.292" endtime="20210730 13:51:46.292"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:51:46.292" endtime="20210730 13:51:46.292"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:46.279" endtime="20210730 13:51:46.292"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:46.279" endtime="20210730 13:51:46.292"/>
</for>
<status status="FAIL" starttime="20210730 13:51:46.278" endtime="20210730 13:51:46.292"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:46.277" endtime="20210730 13:51:46.293"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=${EMPTY}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:46.294" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:51:46.294" endtime="20210730 13:51:46.294"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:46.294" level="INFO">${payload} = {'username': ''}</msg>
<status status="PASS" starttime="20210730 13:51:46.294" endtime="20210730 13:51:46.294"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:51:46.298" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:51:46.298" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:51:46.295" endtime="20210730 13:51:46.298"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:51:46.299" endtime="20210730 13:51:46.299"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:51:46.299" endtime="20210730 13:51:46.299"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:46.294" endtime="20210730 13:51:46.299"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:46.294" endtime="20210730 13:51:46.299"/>
</for>
<status status="FAIL" starttime="20210730 13:51:46.293" endtime="20210730 13:51:46.299"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:46.293" endtime="20210730 13:51:46.299"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=${EMPTY}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:46.300" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:51:46.300" endtime="20210730 13:51:46.300"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:46.301" level="INFO">${payload} = {'username': ''}</msg>
<status status="PASS" starttime="20210730 13:51:46.301" endtime="20210730 13:51:46.301"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:51:46.306" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:51:46.306" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:51:46.301" endtime="20210730 13:51:46.306"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:51:46.306" endtime="20210730 13:51:46.306"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:51:46.307" endtime="20210730 13:51:46.307"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:46.301" endtime="20210730 13:51:46.307"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:46.301" endtime="20210730 13:51:46.307"/>
</for>
<status status="FAIL" starttime="20210730 13:51:46.299" endtime="20210730 13:51:46.307"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:46.299" endtime="20210730 13:51:46.307"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:46.277" endtime="20210730 13:51:46.307"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:51:46.311" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:51:46.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:51:46.325" level="INFO">${pids} = 11634
11641
11646</msg>
<status status="PASS" starttime="20210730 13:51:46.308" endtime="20210730 13:51:46.325"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:46.326" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:51:46.325" endtime="20210730 13:51:46.326"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:46.327" level="INFO">${pids} = ['11634', '11641', '11646']</msg>
<status status="PASS" starttime="20210730 13:51:46.326" endtime="20210730 13:51:46.327"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11634</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:46.330" level="INFO">Running command 'kill 11634 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:46.327" endtime="20210730 13:51:46.330"/>
</kw>
<status status="PASS" starttime="20210730 13:51:46.327" endtime="20210730 13:51:46.330"/>
</iter>
<iter>
<var name="${pid}">11641</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:46.333" level="INFO">Running command 'kill 11641 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:46.331" endtime="20210730 13:51:46.334"/>
</kw>
<status status="PASS" starttime="20210730 13:51:46.331" endtime="20210730 13:51:46.334"/>
</iter>
<iter>
<var name="${pid}">11646</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:46.339" level="INFO">Running command 'kill 11646 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:46.335" endtime="20210730 13:51:46.340"/>
</kw>
<status status="PASS" starttime="20210730 13:51:46.335" endtime="20210730 13:51:46.340"/>
</iter>
<status status="PASS" starttime="20210730 13:51:46.327" endtime="20210730 13:51:46.340"/>
</for>
<status status="PASS" starttime="20210730 13:51:46.326" endtime="20210730 13:51:46.340"/>
</branch>
<status status="PASS" starttime="20210730 13:51:46.326" endtime="20210730 13:51:46.340"/>
</if>
<status status="PASS" starttime="20210730 13:51:46.307" endtime="20210730 13:51:46.341"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
username as such:
{
"username": ''
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:51:44.722" endtime="20210730 13:51:46.341">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t2" name="With Each Valid Token, Updating Username Of Each System User With !#%&amp;/¤% Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:51:46.345" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:51:46.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:51:46.356" level="INFO">${pids} = 11675</msg>
<status status="PASS" starttime="20210730 13:51:46.343" endtime="20210730 13:51:46.356"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:46.356" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:51:46.356" endtime="20210730 13:51:46.356"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:46.357" level="INFO">${pids} = ['11675']</msg>
<status status="PASS" starttime="20210730 13:51:46.357" endtime="20210730 13:51:46.357"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11675</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:46.360" level="INFO">Running command 'kill 11675 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:46.357" endtime="20210730 13:51:46.360"/>
</kw>
<status status="PASS" starttime="20210730 13:51:46.357" endtime="20210730 13:51:46.360"/>
</iter>
<status status="PASS" starttime="20210730 13:51:46.357" endtime="20210730 13:51:46.361"/>
</for>
<status status="PASS" starttime="20210730 13:51:46.357" endtime="20210730 13:51:46.361"/>
</branch>
<status status="PASS" starttime="20210730 13:51:46.357" endtime="20210730 13:51:46.361"/>
</if>
<status status="PASS" starttime="20210730 13:51:46.343" endtime="20210730 13:51:46.361"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:46.362" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:46.362" endtime="20210730 13:51:46.362"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:46.362" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:51:46.362" endtime="20210730 13:51:46.362"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:51:46.363" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:51:46.363" endtime="20210730 13:51:46.363"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:46.363" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:46.363" endtime="20210730 13:51:46.363"/>
</kw>
<msg timestamp="20210730 13:51:46.363" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:46.362" endtime="20210730 13:51:46.363"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:46.368" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:46.364" endtime="20210730 13:51:46.369"/>
</kw>
<status status="PASS" starttime="20210730 13:51:46.361" endtime="20210730 13:51:46.370"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:51:46.371" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:51:46.370" endtime="20210730 13:51:46.375"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:51:47.877" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:51:46.375" endtime="20210730 13:51:47.877"/>
</kw>
<status status="PASS" starttime="20210730 13:51:46.370" endtime="20210730 13:51:47.878"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:47.879" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:51:47.879" endtime="20210730 13:51:47.879"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:51:47.879" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:51:47.879" endtime="20210730 13:51:47.879"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:47.880" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:47.879" endtime="20210730 13:51:47.880"/>
</kw>
<msg timestamp="20210730 13:51:47.880" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:47.878" endtime="20210730 13:51:47.880"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:51:47.880" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:51:47.880" endtime="20210730 13:51:47.881"/>
</kw>
<status status="PASS" starttime="20210730 13:51:47.878" endtime="20210730 13:51:47.881"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:51:47.881" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:51:47.881" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:51:47.881" endtime="20210730 13:51:47.882"/>
</kw>
<status status="PASS" starttime="20210730 13:51:47.881" endtime="20210730 13:51:47.882"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:51:47.883" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:51:47.883" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:51:47.882" endtime="20210730 13:51:47.883"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:51:47.883" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:51:47.883" endtime="20210730 13:51:47.883"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:47.884" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:51:47.883" endtime="20210730 13:51:47.884"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:51:47.884" endtime="20210730 13:51:47.884"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:51:47.884" endtime="20210730 13:51:47.885"/>
</kw>
<status status="PASS" starttime="20210730 13:51:47.883" endtime="20210730 13:51:47.885"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:47.885" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:51:47.885" endtime="20210730 13:51:47.885"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:51:47.885" endtime="20210730 13:51:47.886"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:51:47.886" endtime="20210730 13:51:47.886"/>
</kw>
<status status="PASS" starttime="20210730 13:51:47.885" endtime="20210730 13:51:47.886"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:47.887" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:51:47.887" endtime="20210730 13:51:47.887"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:51:47.887" endtime="20210730 13:51:47.888"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:51:47.888" endtime="20210730 13:51:47.888"/>
</kw>
<status status="PASS" starttime="20210730 13:51:47.887" endtime="20210730 13:51:47.888"/>
</iter>
<status status="PASS" starttime="20210730 13:51:47.883" endtime="20210730 13:51:47.888"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:51:47.889" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:51:47.888" endtime="20210730 13:51:47.889"/>
</kw>
<status status="PASS" starttime="20210730 13:51:47.882" endtime="20210730 13:51:47.889"/>
</kw>
<status status="PASS" starttime="20210730 13:51:46.342" endtime="20210730 13:51:47.889"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!#%&amp;/¤%</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:47.890" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:51:47.890" endtime="20210730 13:51:47.890"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:47.891" level="INFO">${payload} = {'username': '!#%&amp;/¤%'}</msg>
<status status="PASS" starttime="20210730 13:51:47.890" endtime="20210730 13:51:47.891"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:51:47.899" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:51:47.900" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:51:47.891" endtime="20210730 13:51:47.900"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:51:47.900" endtime="20210730 13:51:47.900"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:51:47.900" endtime="20210730 13:51:47.900"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:47.891" endtime="20210730 13:51:47.900"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:47.891" endtime="20210730 13:51:47.900"/>
</for>
<status status="FAIL" starttime="20210730 13:51:47.889" endtime="20210730 13:51:47.901"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:47.889" endtime="20210730 13:51:47.901"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!#%&amp;/¤%</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:47.902" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:51:47.901" endtime="20210730 13:51:47.902"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:47.903" level="INFO">${payload} = {'username': '!#%&amp;/¤%'}</msg>
<status status="PASS" starttime="20210730 13:51:47.902" endtime="20210730 13:51:47.903"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:51:47.907" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:51:47.907" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:51:47.903" endtime="20210730 13:51:47.907"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:51:47.907" endtime="20210730 13:51:47.907"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:51:47.907" endtime="20210730 13:51:47.907"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:47.903" endtime="20210730 13:51:47.907"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:47.903" endtime="20210730 13:51:47.907"/>
</for>
<status status="FAIL" starttime="20210730 13:51:47.901" endtime="20210730 13:51:47.907"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:47.901" endtime="20210730 13:51:47.908"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!#%&amp;/¤%</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:47.909" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:51:47.908" endtime="20210730 13:51:47.909"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:47.909" level="INFO">${payload} = {'username': '!#%&amp;/¤%'}</msg>
<status status="PASS" starttime="20210730 13:51:47.909" endtime="20210730 13:51:47.909"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:51:47.913" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:51:47.913" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:51:47.909" endtime="20210730 13:51:47.913"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:51:47.914" endtime="20210730 13:51:47.914"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:51:47.914" endtime="20210730 13:51:47.914"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:47.909" endtime="20210730 13:51:47.914"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:47.909" endtime="20210730 13:51:47.914"/>
</for>
<status status="FAIL" starttime="20210730 13:51:47.908" endtime="20210730 13:51:47.914"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:47.908" endtime="20210730 13:51:47.914"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:47.889" endtime="20210730 13:51:47.914"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:51:47.921" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:51:47.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:51:47.930" level="INFO">${pids} = 11698
11705
11709</msg>
<status status="PASS" starttime="20210730 13:51:47.915" endtime="20210730 13:51:47.930"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:47.931" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:51:47.931" endtime="20210730 13:51:47.931"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:47.932" level="INFO">${pids} = ['11698', '11705', '11709']</msg>
<status status="PASS" starttime="20210730 13:51:47.932" endtime="20210730 13:51:47.932"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11698</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:47.937" level="INFO">Running command 'kill 11698 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:47.932" endtime="20210730 13:51:47.937"/>
</kw>
<status status="PASS" starttime="20210730 13:51:47.932" endtime="20210730 13:51:47.937"/>
</iter>
<iter>
<var name="${pid}">11705</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:47.941" level="INFO">Running command 'kill 11705 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:47.938" endtime="20210730 13:51:47.941"/>
</kw>
<status status="PASS" starttime="20210730 13:51:47.937" endtime="20210730 13:51:47.941"/>
</iter>
<iter>
<var name="${pid}">11709</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:47.944" level="INFO">Running command 'kill 11709 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:47.942" endtime="20210730 13:51:47.945"/>
</kw>
<status status="PASS" starttime="20210730 13:51:47.941" endtime="20210730 13:51:47.945"/>
</iter>
<status status="PASS" starttime="20210730 13:51:47.932" endtime="20210730 13:51:47.945"/>
</for>
<status status="PASS" starttime="20210730 13:51:47.932" endtime="20210730 13:51:47.945"/>
</branch>
<status status="PASS" starttime="20210730 13:51:47.931" endtime="20210730 13:51:47.945"/>
</if>
<status status="PASS" starttime="20210730 13:51:47.915" endtime="20210730 13:51:47.945"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '!#%&amp;/¤%'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:51:46.342" endtime="20210730 13:51:47.945">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t3" name="With Each Valid Token, Updating Username Of Each System User With !#%&amp;/¤%= Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:51:47.951" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:51:47.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:51:47.966" level="INFO">${pids} = 11738</msg>
<status status="PASS" starttime="20210730 13:51:47.948" endtime="20210730 13:51:47.966"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:47.967" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:51:47.966" endtime="20210730 13:51:47.967"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:47.967" level="INFO">${pids} = ['11738']</msg>
<status status="PASS" starttime="20210730 13:51:47.967" endtime="20210730 13:51:47.967"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11738</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:47.971" level="INFO">Running command 'kill 11738 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:47.968" endtime="20210730 13:51:47.971"/>
</kw>
<status status="PASS" starttime="20210730 13:51:47.968" endtime="20210730 13:51:47.971"/>
</iter>
<status status="PASS" starttime="20210730 13:51:47.967" endtime="20210730 13:51:47.971"/>
</for>
<status status="PASS" starttime="20210730 13:51:47.967" endtime="20210730 13:51:47.971"/>
</branch>
<status status="PASS" starttime="20210730 13:51:47.967" endtime="20210730 13:51:47.971"/>
</if>
<status status="PASS" starttime="20210730 13:51:47.948" endtime="20210730 13:51:47.972"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:47.973" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:47.973" endtime="20210730 13:51:47.973"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:47.974" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:51:47.973" endtime="20210730 13:51:47.974"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:51:47.974" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:51:47.974" endtime="20210730 13:51:47.974"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:47.974" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:47.974" endtime="20210730 13:51:47.974"/>
</kw>
<msg timestamp="20210730 13:51:47.975" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:47.973" endtime="20210730 13:51:47.975"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:47.978" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:47.975" endtime="20210730 13:51:47.979"/>
</kw>
<status status="PASS" starttime="20210730 13:51:47.972" endtime="20210730 13:51:47.979"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:51:47.981" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:51:47.980" endtime="20210730 13:51:47.985"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:51:49.489" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:51:47.985" endtime="20210730 13:51:49.489"/>
</kw>
<status status="PASS" starttime="20210730 13:51:47.980" endtime="20210730 13:51:49.489"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:49.491" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:51:49.491" endtime="20210730 13:51:49.491"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:51:49.491" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:51:49.491" endtime="20210730 13:51:49.491"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:49.492" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:49.491" endtime="20210730 13:51:49.492"/>
</kw>
<msg timestamp="20210730 13:51:49.492" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:49.490" endtime="20210730 13:51:49.492"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:51:49.492" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:51:49.492" endtime="20210730 13:51:49.493"/>
</kw>
<status status="PASS" starttime="20210730 13:51:49.490" endtime="20210730 13:51:49.493"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:51:49.493" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:51:49.493" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:51:49.493" endtime="20210730 13:51:49.493"/>
</kw>
<status status="PASS" starttime="20210730 13:51:49.493" endtime="20210730 13:51:49.493"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:51:49.494" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:51:49.494" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:51:49.494" endtime="20210730 13:51:49.494"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:51:49.494" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:51:49.494" endtime="20210730 13:51:49.494"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:49.495" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:51:49.495" endtime="20210730 13:51:49.495"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:51:49.495" endtime="20210730 13:51:49.496"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:51:49.496" endtime="20210730 13:51:49.496"/>
</kw>
<status status="PASS" starttime="20210730 13:51:49.495" endtime="20210730 13:51:49.496"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:49.496" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:51:49.496" endtime="20210730 13:51:49.496"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:51:49.496" endtime="20210730 13:51:49.497"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:51:49.497" endtime="20210730 13:51:49.498"/>
</kw>
<status status="PASS" starttime="20210730 13:51:49.496" endtime="20210730 13:51:49.498"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:49.498" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:51:49.498" endtime="20210730 13:51:49.498"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:51:49.498" endtime="20210730 13:51:49.499"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:51:49.499" endtime="20210730 13:51:49.499"/>
</kw>
<status status="PASS" starttime="20210730 13:51:49.498" endtime="20210730 13:51:49.499"/>
</iter>
<status status="PASS" starttime="20210730 13:51:49.494" endtime="20210730 13:51:49.499"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:51:49.500" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:51:49.499" endtime="20210730 13:51:49.500"/>
</kw>
<status status="PASS" starttime="20210730 13:51:49.494" endtime="20210730 13:51:49.500"/>
</kw>
<status status="PASS" starttime="20210730 13:51:47.947" endtime="20210730 13:51:49.500"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!#%&amp;/¤%=</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:49.501" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:51:49.501" endtime="20210730 13:51:49.501"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:49.502" level="INFO">${payload} = {'username': '!#%&amp;/¤%='}</msg>
<status status="PASS" starttime="20210730 13:51:49.501" endtime="20210730 13:51:49.502"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:51:49.511" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:51:49.511" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:51:49.502" endtime="20210730 13:51:49.512"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:51:49.512" endtime="20210730 13:51:49.512"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:51:49.512" endtime="20210730 13:51:49.512"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:49.502" endtime="20210730 13:51:49.512"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:49.502" endtime="20210730 13:51:49.512"/>
</for>
<status status="FAIL" starttime="20210730 13:51:49.501" endtime="20210730 13:51:49.512"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:49.500" endtime="20210730 13:51:49.512"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!#%&amp;/¤%=</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:49.514" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:51:49.514" endtime="20210730 13:51:49.514"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:49.515" level="INFO">${payload} = {'username': '!#%&amp;/¤%='}</msg>
<status status="PASS" starttime="20210730 13:51:49.515" endtime="20210730 13:51:49.515"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:51:49.520" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:51:49.520" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:51:49.515" endtime="20210730 13:51:49.520"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:51:49.521" endtime="20210730 13:51:49.521"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:51:49.521" endtime="20210730 13:51:49.521"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:49.515" endtime="20210730 13:51:49.521"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:49.515" endtime="20210730 13:51:49.521"/>
</for>
<status status="FAIL" starttime="20210730 13:51:49.513" endtime="20210730 13:51:49.521"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:49.512" endtime="20210730 13:51:49.521"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!#%&amp;/¤%=</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:49.523" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:51:49.522" endtime="20210730 13:51:49.523"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:49.523" level="INFO">${payload} = {'username': '!#%&amp;/¤%='}</msg>
<status status="PASS" starttime="20210730 13:51:49.523" endtime="20210730 13:51:49.523"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:51:49.527" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:51:49.527" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:51:49.523" endtime="20210730 13:51:49.528"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:51:49.528" endtime="20210730 13:51:49.528"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:51:49.528" endtime="20210730 13:51:49.528"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:49.523" endtime="20210730 13:51:49.528"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:49.523" endtime="20210730 13:51:49.528"/>
</for>
<status status="FAIL" starttime="20210730 13:51:49.522" endtime="20210730 13:51:49.528"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:49.521" endtime="20210730 13:51:49.528"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:49.500" endtime="20210730 13:51:49.528"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:51:49.533" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:51:49.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:51:49.542" level="INFO">${pids} = 11761
11768
11772</msg>
<status status="PASS" starttime="20210730 13:51:49.529" endtime="20210730 13:51:49.542"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:49.543" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:51:49.543" endtime="20210730 13:51:49.543"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:49.544" level="INFO">${pids} = ['11761', '11768', '11772']</msg>
<status status="PASS" starttime="20210730 13:51:49.543" endtime="20210730 13:51:49.544"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11761</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:49.547" level="INFO">Running command 'kill 11761 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:49.544" endtime="20210730 13:51:49.547"/>
</kw>
<status status="PASS" starttime="20210730 13:51:49.544" endtime="20210730 13:51:49.547"/>
</iter>
<iter>
<var name="${pid}">11768</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:49.554" level="INFO">Running command 'kill 11768 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:49.547" endtime="20210730 13:51:49.555"/>
</kw>
<status status="PASS" starttime="20210730 13:51:49.547" endtime="20210730 13:51:49.555"/>
</iter>
<iter>
<var name="${pid}">11772</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:49.559" level="INFO">Running command 'kill 11772 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:49.555" endtime="20210730 13:51:49.560"/>
</kw>
<status status="PASS" starttime="20210730 13:51:49.555" endtime="20210730 13:51:49.560"/>
</iter>
<status status="PASS" starttime="20210730 13:51:49.544" endtime="20210730 13:51:49.560"/>
</for>
<status status="PASS" starttime="20210730 13:51:49.543" endtime="20210730 13:51:49.560"/>
</branch>
<status status="PASS" starttime="20210730 13:51:49.543" endtime="20210730 13:51:49.560"/>
</if>
<status status="PASS" starttime="20210730 13:51:49.529" endtime="20210730 13:51:49.560"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '!#%&amp;/¤%='
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:51:47.946" endtime="20210730 13:51:49.560">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t4" name="With Each Valid Token, Updating Username Of Each System User With !#%&amp;/¤%=!()=? Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:51:49.566" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:51:49.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:51:49.577" level="INFO">${pids} = 11801</msg>
<status status="PASS" starttime="20210730 13:51:49.563" endtime="20210730 13:51:49.577"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:49.578" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:51:49.578" endtime="20210730 13:51:49.578"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:49.579" level="INFO">${pids} = ['11801']</msg>
<status status="PASS" starttime="20210730 13:51:49.579" endtime="20210730 13:51:49.579"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11801</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:49.583" level="INFO">Running command 'kill 11801 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:49.579" endtime="20210730 13:51:49.583"/>
</kw>
<status status="PASS" starttime="20210730 13:51:49.579" endtime="20210730 13:51:49.583"/>
</iter>
<status status="PASS" starttime="20210730 13:51:49.579" endtime="20210730 13:51:49.583"/>
</for>
<status status="PASS" starttime="20210730 13:51:49.579" endtime="20210730 13:51:49.583"/>
</branch>
<status status="PASS" starttime="20210730 13:51:49.578" endtime="20210730 13:51:49.583"/>
</if>
<status status="PASS" starttime="20210730 13:51:49.562" endtime="20210730 13:51:49.584"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:49.585" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:49.584" endtime="20210730 13:51:49.585"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:49.586" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:51:49.585" endtime="20210730 13:51:49.586"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:51:49.586" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:51:49.586" endtime="20210730 13:51:49.586"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:49.587" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:49.586" endtime="20210730 13:51:49.587"/>
</kw>
<msg timestamp="20210730 13:51:49.587" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:49.585" endtime="20210730 13:51:49.587"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:49.591" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:49.587" endtime="20210730 13:51:49.594"/>
</kw>
<status status="PASS" starttime="20210730 13:51:49.584" endtime="20210730 13:51:49.595"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:51:49.596" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:51:49.595" endtime="20210730 13:51:49.600"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:51:51.101" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:51:49.600" endtime="20210730 13:51:51.101"/>
</kw>
<status status="PASS" starttime="20210730 13:51:49.595" endtime="20210730 13:51:51.102"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:51.103" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:51:51.103" endtime="20210730 13:51:51.103"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:51:51.104" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:51:51.103" endtime="20210730 13:51:51.104"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:51.104" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:51.104" endtime="20210730 13:51:51.104"/>
</kw>
<msg timestamp="20210730 13:51:51.104" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:51.103" endtime="20210730 13:51:51.104"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:51:51.105" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:51:51.105" endtime="20210730 13:51:51.105"/>
</kw>
<status status="PASS" starttime="20210730 13:51:51.102" endtime="20210730 13:51:51.105"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:51:51.106" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:51:51.106" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:51:51.106" endtime="20210730 13:51:51.106"/>
</kw>
<status status="PASS" starttime="20210730 13:51:51.105" endtime="20210730 13:51:51.106"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:51:51.107" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:51:51.107" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:51:51.106" endtime="20210730 13:51:51.107"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:51:51.107" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:51:51.107" endtime="20210730 13:51:51.107"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:51.108" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:51:51.107" endtime="20210730 13:51:51.108"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:51:51.108" endtime="20210730 13:51:51.108"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:51:51.108" endtime="20210730 13:51:51.109"/>
</kw>
<status status="PASS" starttime="20210730 13:51:51.107" endtime="20210730 13:51:51.109"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:51.109" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:51:51.109" endtime="20210730 13:51:51.109"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:51:51.109" endtime="20210730 13:51:51.110"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:51:51.110" endtime="20210730 13:51:51.110"/>
</kw>
<status status="PASS" starttime="20210730 13:51:51.109" endtime="20210730 13:51:51.110"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:51.111" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:51:51.111" endtime="20210730 13:51:51.111"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:51:51.111" endtime="20210730 13:51:51.112"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:51:51.112" endtime="20210730 13:51:51.112"/>
</kw>
<status status="PASS" starttime="20210730 13:51:51.110" endtime="20210730 13:51:51.112"/>
</iter>
<status status="PASS" starttime="20210730 13:51:51.107" endtime="20210730 13:51:51.112"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:51:51.112" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:51:51.112" endtime="20210730 13:51:51.112"/>
</kw>
<status status="PASS" starttime="20210730 13:51:51.106" endtime="20210730 13:51:51.113"/>
</kw>
<status status="PASS" starttime="20210730 13:51:49.562" endtime="20210730 13:51:51.113"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!#%&amp;/¤%=!()=?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:51.114" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:51:51.114" endtime="20210730 13:51:51.114"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:51.114" level="INFO">${payload} = {'username': '!#%&amp;/¤%=!()=?'}</msg>
<status status="PASS" starttime="20210730 13:51:51.114" endtime="20210730 13:51:51.114"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:51:51.125" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:51:51.125" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:51:51.115" endtime="20210730 13:51:51.125"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:51:51.125" endtime="20210730 13:51:51.125"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:51:51.125" endtime="20210730 13:51:51.125"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:51.115" endtime="20210730 13:51:51.125"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:51.114" endtime="20210730 13:51:51.125"/>
</for>
<status status="FAIL" starttime="20210730 13:51:51.113" endtime="20210730 13:51:51.126"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:51.113" endtime="20210730 13:51:51.126"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!#%&amp;/¤%=!()=?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:51.127" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:51:51.126" endtime="20210730 13:51:51.127"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:51.127" level="INFO">${payload} = {'username': '!#%&amp;/¤%=!()=?'}</msg>
<status status="PASS" starttime="20210730 13:51:51.127" endtime="20210730 13:51:51.127"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:51:51.131" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:51:51.131" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:51:51.127" endtime="20210730 13:51:51.131"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:51:51.132" endtime="20210730 13:51:51.132"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:51:51.132" endtime="20210730 13:51:51.132"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:51.127" endtime="20210730 13:51:51.132"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:51.127" endtime="20210730 13:51:51.132"/>
</for>
<status status="FAIL" starttime="20210730 13:51:51.126" endtime="20210730 13:51:51.132"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:51.126" endtime="20210730 13:51:51.132"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!#%&amp;/¤%=!()=?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:51.133" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:51:51.133" endtime="20210730 13:51:51.133"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:51.133" level="INFO">${payload} = {'username': '!#%&amp;/¤%=!()=?'}</msg>
<status status="PASS" starttime="20210730 13:51:51.133" endtime="20210730 13:51:51.133"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:51:51.137" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:51:51.138" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:51:51.134" endtime="20210730 13:51:51.138"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:51:51.138" endtime="20210730 13:51:51.138"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:51:51.138" endtime="20210730 13:51:51.138"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:51.134" endtime="20210730 13:51:51.138"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:51.133" endtime="20210730 13:51:51.138"/>
</for>
<status status="FAIL" starttime="20210730 13:51:51.132" endtime="20210730 13:51:51.138"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:51.132" endtime="20210730 13:51:51.138"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:51.113" endtime="20210730 13:51:51.138"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:51:51.143" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:51:51.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:51:51.152" level="INFO">${pids} = 11824
11831
11836</msg>
<status status="PASS" starttime="20210730 13:51:51.139" endtime="20210730 13:51:51.152"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:51.154" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:51:51.153" endtime="20210730 13:51:51.154"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:51.155" level="INFO">${pids} = ['11824', '11831', '11836']</msg>
<status status="PASS" starttime="20210730 13:51:51.154" endtime="20210730 13:51:51.155"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11824</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:51.158" level="INFO">Running command 'kill 11824 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:51.155" endtime="20210730 13:51:51.158"/>
</kw>
<status status="PASS" starttime="20210730 13:51:51.155" endtime="20210730 13:51:51.158"/>
</iter>
<iter>
<var name="${pid}">11831</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:51.161" level="INFO">Running command 'kill 11831 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:51.159" endtime="20210730 13:51:51.161"/>
</kw>
<status status="PASS" starttime="20210730 13:51:51.158" endtime="20210730 13:51:51.162"/>
</iter>
<iter>
<var name="${pid}">11836</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:51.165" level="INFO">Running command 'kill 11836 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:51.162" endtime="20210730 13:51:51.165"/>
</kw>
<status status="PASS" starttime="20210730 13:51:51.162" endtime="20210730 13:51:51.165"/>
</iter>
<status status="PASS" starttime="20210730 13:51:51.155" endtime="20210730 13:51:51.165"/>
</for>
<status status="PASS" starttime="20210730 13:51:51.154" endtime="20210730 13:51:51.165"/>
</branch>
<status status="PASS" starttime="20210730 13:51:51.154" endtime="20210730 13:51:51.165"/>
</if>
<status status="PASS" starttime="20210730 13:51:51.139" endtime="20210730 13:51:51.166"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '!#%&amp;/¤%=!()=?'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:51:49.561" endtime="20210730 13:51:51.166">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t5" name="With Each Valid Token, Updating Username Of Each System User With 1234567 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:51:51.177" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:51:51.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:51:51.186" level="INFO">${pids} = 11865</msg>
<status status="PASS" starttime="20210730 13:51:51.168" endtime="20210730 13:51:51.186"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:51.187" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:51:51.186" endtime="20210730 13:51:51.187"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:51.188" level="INFO">${pids} = ['11865']</msg>
<status status="PASS" starttime="20210730 13:51:51.187" endtime="20210730 13:51:51.188"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11865</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:51.193" level="INFO">Running command 'kill 11865 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:51.188" endtime="20210730 13:51:51.193"/>
</kw>
<status status="PASS" starttime="20210730 13:51:51.188" endtime="20210730 13:51:51.194"/>
</iter>
<status status="PASS" starttime="20210730 13:51:51.188" endtime="20210730 13:51:51.194"/>
</for>
<status status="PASS" starttime="20210730 13:51:51.187" endtime="20210730 13:51:51.194"/>
</branch>
<status status="PASS" starttime="20210730 13:51:51.187" endtime="20210730 13:51:51.194"/>
</if>
<status status="PASS" starttime="20210730 13:51:51.167" endtime="20210730 13:51:51.194"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:51.195" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:51.195" endtime="20210730 13:51:51.195"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:51.196" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:51:51.196" endtime="20210730 13:51:51.196"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:51:51.196" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:51:51.196" endtime="20210730 13:51:51.196"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:51.196" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:51.196" endtime="20210730 13:51:51.196"/>
</kw>
<msg timestamp="20210730 13:51:51.197" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:51.195" endtime="20210730 13:51:51.197"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:51.200" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:51.197" endtime="20210730 13:51:51.201"/>
</kw>
<status status="PASS" starttime="20210730 13:51:51.194" endtime="20210730 13:51:51.202"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:51:51.203" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:51:51.203" endtime="20210730 13:51:51.207"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:51:52.709" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:51:51.208" endtime="20210730 13:51:52.709"/>
</kw>
<status status="PASS" starttime="20210730 13:51:51.202" endtime="20210730 13:51:52.710"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:52.711" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:51:52.711" endtime="20210730 13:51:52.711"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:51:52.711" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:51:52.711" endtime="20210730 13:51:52.711"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:52.712" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:52.712" endtime="20210730 13:51:52.712"/>
</kw>
<msg timestamp="20210730 13:51:52.712" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:52.710" endtime="20210730 13:51:52.712"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:51:52.713" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:51:52.712" endtime="20210730 13:51:52.713"/>
</kw>
<status status="PASS" starttime="20210730 13:51:52.710" endtime="20210730 13:51:52.713"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:51:52.714" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:51:52.714" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:51:52.714" endtime="20210730 13:51:52.714"/>
</kw>
<status status="PASS" starttime="20210730 13:51:52.713" endtime="20210730 13:51:52.714"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:51:52.715" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:51:52.715" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:51:52.715" endtime="20210730 13:51:52.715"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:51:52.716" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:51:52.716" endtime="20210730 13:51:52.716"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:52.716" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:51:52.716" endtime="20210730 13:51:52.716"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:51:52.716" endtime="20210730 13:51:52.717"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:51:52.717" endtime="20210730 13:51:52.717"/>
</kw>
<status status="PASS" starttime="20210730 13:51:52.716" endtime="20210730 13:51:52.717"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:52.718" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:51:52.718" endtime="20210730 13:51:52.718"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:51:52.718" endtime="20210730 13:51:52.719"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:51:52.719" endtime="20210730 13:51:52.719"/>
</kw>
<status status="PASS" starttime="20210730 13:51:52.717" endtime="20210730 13:51:52.719"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:52.720" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:51:52.720" endtime="20210730 13:51:52.720"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:51:52.720" endtime="20210730 13:51:52.721"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:51:52.721" endtime="20210730 13:51:52.721"/>
</kw>
<status status="PASS" starttime="20210730 13:51:52.719" endtime="20210730 13:51:52.721"/>
</iter>
<status status="PASS" starttime="20210730 13:51:52.716" endtime="20210730 13:51:52.721"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:51:52.722" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:51:52.722" endtime="20210730 13:51:52.722"/>
</kw>
<status status="PASS" starttime="20210730 13:51:52.714" endtime="20210730 13:51:52.722"/>
</kw>
<status status="PASS" starttime="20210730 13:51:51.167" endtime="20210730 13:51:52.722"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=1234567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:52.724" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:51:52.723" endtime="20210730 13:51:52.724"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:52.724" level="INFO">${payload} = {'username': '1234567'}</msg>
<status status="PASS" starttime="20210730 13:51:52.724" endtime="20210730 13:51:52.724"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:51:52.732" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:51:52.734" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:51:52.724" endtime="20210730 13:51:52.734"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:51:52.734" endtime="20210730 13:51:52.734"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:51:52.734" endtime="20210730 13:51:52.734"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:52.724" endtime="20210730 13:51:52.734"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:52.724" endtime="20210730 13:51:52.734"/>
</for>
<status status="FAIL" starttime="20210730 13:51:52.723" endtime="20210730 13:51:52.734"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:52.723" endtime="20210730 13:51:52.734"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=1234567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:52.736" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:51:52.736" endtime="20210730 13:51:52.736"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:52.737" level="INFO">${payload} = {'username': '1234567'}</msg>
<status status="PASS" starttime="20210730 13:51:52.736" endtime="20210730 13:51:52.737"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:51:52.741" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:51:52.741" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:51:52.737" endtime="20210730 13:51:52.741"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:51:52.741" endtime="20210730 13:51:52.741"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:51:52.741" endtime="20210730 13:51:52.741"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:52.737" endtime="20210730 13:51:52.741"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:52.737" endtime="20210730 13:51:52.741"/>
</for>
<status status="FAIL" starttime="20210730 13:51:52.735" endtime="20210730 13:51:52.741"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:52.735" endtime="20210730 13:51:52.742"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=1234567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:52.742" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:51:52.742" endtime="20210730 13:51:52.742"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:52.743" level="INFO">${payload} = {'username': '1234567'}</msg>
<status status="PASS" starttime="20210730 13:51:52.743" endtime="20210730 13:51:52.743"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:51:52.747" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:51:52.748" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:51:52.743" endtime="20210730 13:51:52.748"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:51:52.748" endtime="20210730 13:51:52.748"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:51:52.749" endtime="20210730 13:51:52.749"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:52.743" endtime="20210730 13:51:52.749"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:52.743" endtime="20210730 13:51:52.749"/>
</for>
<status status="FAIL" starttime="20210730 13:51:52.742" endtime="20210730 13:51:52.749"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:52.742" endtime="20210730 13:51:52.749"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:52.723" endtime="20210730 13:51:52.750"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:51:52.756" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:51:52.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:51:52.770" level="INFO">${pids} = 11888
11895
11899</msg>
<status status="PASS" starttime="20210730 13:51:52.750" endtime="20210730 13:51:52.770"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:52.771" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:51:52.771" endtime="20210730 13:51:52.771"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:52.772" level="INFO">${pids} = ['11888', '11895', '11899']</msg>
<status status="PASS" starttime="20210730 13:51:52.772" endtime="20210730 13:51:52.772"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11888</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:52.775" level="INFO">Running command 'kill 11888 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:52.772" endtime="20210730 13:51:52.776"/>
</kw>
<status status="PASS" starttime="20210730 13:51:52.772" endtime="20210730 13:51:52.776"/>
</iter>
<iter>
<var name="${pid}">11895</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:52.779" level="INFO">Running command 'kill 11895 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:52.776" endtime="20210730 13:51:52.779"/>
</kw>
<status status="PASS" starttime="20210730 13:51:52.776" endtime="20210730 13:51:52.779"/>
</iter>
<iter>
<var name="${pid}">11899</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:52.788" level="INFO">Running command 'kill 11899 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:52.781" endtime="20210730 13:51:52.788"/>
</kw>
<status status="PASS" starttime="20210730 13:51:52.780" endtime="20210730 13:51:52.788"/>
</iter>
<status status="PASS" starttime="20210730 13:51:52.772" endtime="20210730 13:51:52.789"/>
</for>
<status status="PASS" starttime="20210730 13:51:52.772" endtime="20210730 13:51:52.789"/>
</branch>
<status status="PASS" starttime="20210730 13:51:52.771" endtime="20210730 13:51:52.789"/>
</if>
<status status="PASS" starttime="20210730 13:51:52.750" endtime="20210730 13:51:52.789"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '1234567'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:51:51.166" endtime="20210730 13:51:52.789">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t6" name="With Each Valid Token, Updating Username Of Each System User With 12345678 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:51:52.797" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:51:52.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:51:52.807" level="INFO">${pids} = 11928</msg>
<status status="PASS" starttime="20210730 13:51:52.792" endtime="20210730 13:51:52.807"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:52.808" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:51:52.807" endtime="20210730 13:51:52.808"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:52.808" level="INFO">${pids} = ['11928']</msg>
<status status="PASS" starttime="20210730 13:51:52.808" endtime="20210730 13:51:52.808"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11928</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:52.812" level="INFO">Running command 'kill 11928 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:52.809" endtime="20210730 13:51:52.812"/>
</kw>
<status status="PASS" starttime="20210730 13:51:52.809" endtime="20210730 13:51:52.812"/>
</iter>
<status status="PASS" starttime="20210730 13:51:52.808" endtime="20210730 13:51:52.812"/>
</for>
<status status="PASS" starttime="20210730 13:51:52.808" endtime="20210730 13:51:52.812"/>
</branch>
<status status="PASS" starttime="20210730 13:51:52.808" endtime="20210730 13:51:52.812"/>
</if>
<status status="PASS" starttime="20210730 13:51:52.791" endtime="20210730 13:51:52.812"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:52.814" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:52.813" endtime="20210730 13:51:52.814"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:52.814" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:51:52.814" endtime="20210730 13:51:52.815"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:51:52.815" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:51:52.815" endtime="20210730 13:51:52.815"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:52.816" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:52.815" endtime="20210730 13:51:52.816"/>
</kw>
<msg timestamp="20210730 13:51:52.816" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:52.814" endtime="20210730 13:51:52.816"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:52.820" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:52.816" endtime="20210730 13:51:52.822"/>
</kw>
<status status="PASS" starttime="20210730 13:51:52.813" endtime="20210730 13:51:52.822"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:51:52.824" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:51:52.823" endtime="20210730 13:51:52.828"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:51:54.329" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:51:52.828" endtime="20210730 13:51:54.329"/>
</kw>
<status status="PASS" starttime="20210730 13:51:52.823" endtime="20210730 13:51:54.331"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:54.334" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:51:54.334" endtime="20210730 13:51:54.334"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:51:54.334" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:51:54.334" endtime="20210730 13:51:54.334"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:54.335" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:54.334" endtime="20210730 13:51:54.335"/>
</kw>
<msg timestamp="20210730 13:51:54.335" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:54.333" endtime="20210730 13:51:54.335"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:51:54.336" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:51:54.335" endtime="20210730 13:51:54.336"/>
</kw>
<status status="PASS" starttime="20210730 13:51:54.332" endtime="20210730 13:51:54.336"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:51:54.337" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:51:54.337" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:51:54.337" endtime="20210730 13:51:54.337"/>
</kw>
<status status="PASS" starttime="20210730 13:51:54.336" endtime="20210730 13:51:54.337"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:51:54.338" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:51:54.338" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:51:54.338" endtime="20210730 13:51:54.338"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:51:54.338" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:51:54.338" endtime="20210730 13:51:54.338"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:54.339" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:51:54.338" endtime="20210730 13:51:54.339"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:51:54.339" endtime="20210730 13:51:54.340"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:51:54.340" endtime="20210730 13:51:54.340"/>
</kw>
<status status="PASS" starttime="20210730 13:51:54.338" endtime="20210730 13:51:54.340"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:54.340" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:51:54.340" endtime="20210730 13:51:54.340"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:51:54.340" endtime="20210730 13:51:54.341"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:51:54.341" endtime="20210730 13:51:54.341"/>
</kw>
<status status="PASS" starttime="20210730 13:51:54.340" endtime="20210730 13:51:54.341"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:54.342" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:51:54.342" endtime="20210730 13:51:54.342"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:51:54.342" endtime="20210730 13:51:54.342"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:51:54.343" endtime="20210730 13:51:54.343"/>
</kw>
<status status="PASS" starttime="20210730 13:51:54.341" endtime="20210730 13:51:54.343"/>
</iter>
<status status="PASS" starttime="20210730 13:51:54.338" endtime="20210730 13:51:54.343"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:51:54.343" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:51:54.343" endtime="20210730 13:51:54.343"/>
</kw>
<status status="PASS" starttime="20210730 13:51:54.337" endtime="20210730 13:51:54.343"/>
</kw>
<status status="PASS" starttime="20210730 13:51:52.791" endtime="20210730 13:51:54.343"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=12345678</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:54.344" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:51:54.344" endtime="20210730 13:51:54.345"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:54.345" level="INFO">${payload} = {'username': '12345678'}</msg>
<status status="PASS" starttime="20210730 13:51:54.345" endtime="20210730 13:51:54.345"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:51:54.356" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:51:54.357" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:51:54.345" endtime="20210730 13:51:54.357"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:51:54.357" endtime="20210730 13:51:54.357"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:51:54.357" endtime="20210730 13:51:54.357"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:54.345" endtime="20210730 13:51:54.357"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:54.345" endtime="20210730 13:51:54.357"/>
</for>
<status status="FAIL" starttime="20210730 13:51:54.344" endtime="20210730 13:51:54.357"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:54.344" endtime="20210730 13:51:54.357"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=12345678</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:54.358" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:51:54.358" endtime="20210730 13:51:54.358"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:54.359" level="INFO">${payload} = {'username': '12345678'}</msg>
<status status="PASS" starttime="20210730 13:51:54.358" endtime="20210730 13:51:54.359"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:51:54.363" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:51:54.363" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:51:54.359" endtime="20210730 13:51:54.363"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:51:54.363" endtime="20210730 13:51:54.363"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:51:54.363" endtime="20210730 13:51:54.363"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:54.359" endtime="20210730 13:51:54.363"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:54.359" endtime="20210730 13:51:54.363"/>
</for>
<status status="FAIL" starttime="20210730 13:51:54.357" endtime="20210730 13:51:54.363"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:54.357" endtime="20210730 13:51:54.363"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=12345678</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:54.364" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:51:54.364" endtime="20210730 13:51:54.364"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:54.364" level="INFO">${payload} = {'username': '12345678'}</msg>
<status status="PASS" starttime="20210730 13:51:54.364" endtime="20210730 13:51:54.365"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:51:54.368" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:51:54.368" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:51:54.365" endtime="20210730 13:51:54.368"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:51:54.368" endtime="20210730 13:51:54.369"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:51:54.369" endtime="20210730 13:51:54.369"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:54.365" endtime="20210730 13:51:54.369"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:54.365" endtime="20210730 13:51:54.369"/>
</for>
<status status="FAIL" starttime="20210730 13:51:54.363" endtime="20210730 13:51:54.369"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:54.363" endtime="20210730 13:51:54.369"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:54.344" endtime="20210730 13:51:54.369"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:51:54.375" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:51:54.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:51:54.384" level="INFO">${pids} = 11951
11958
11962</msg>
<status status="PASS" starttime="20210730 13:51:54.371" endtime="20210730 13:51:54.385"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:54.385" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:51:54.385" endtime="20210730 13:51:54.385"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:54.386" level="INFO">${pids} = ['11951', '11958', '11962']</msg>
<status status="PASS" starttime="20210730 13:51:54.386" endtime="20210730 13:51:54.386"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11951</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:54.390" level="INFO">Running command 'kill 11951 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:54.387" endtime="20210730 13:51:54.391"/>
</kw>
<status status="PASS" starttime="20210730 13:51:54.387" endtime="20210730 13:51:54.391"/>
</iter>
<iter>
<var name="${pid}">11958</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:54.394" level="INFO">Running command 'kill 11958 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:54.391" endtime="20210730 13:51:54.394"/>
</kw>
<status status="PASS" starttime="20210730 13:51:54.391" endtime="20210730 13:51:54.394"/>
</iter>
<iter>
<var name="${pid}">11962</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:54.397" level="INFO">Running command 'kill 11962 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:54.395" endtime="20210730 13:51:54.398"/>
</kw>
<status status="PASS" starttime="20210730 13:51:54.395" endtime="20210730 13:51:54.398"/>
</iter>
<status status="PASS" starttime="20210730 13:51:54.386" endtime="20210730 13:51:54.398"/>
</for>
<status status="PASS" starttime="20210730 13:51:54.386" endtime="20210730 13:51:54.398"/>
</branch>
<status status="PASS" starttime="20210730 13:51:54.386" endtime="20210730 13:51:54.398"/>
</if>
<status status="PASS" starttime="20210730 13:51:54.371" endtime="20210730 13:51:54.398"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '12345678'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:51:52.790" endtime="20210730 13:51:54.398">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t7" name="With Each Valid Token, Updating Username Of Each System User With 12345678912345 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:51:54.408" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:51:54.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:51:54.417" level="INFO">${pids} = 11991</msg>
<status status="PASS" starttime="20210730 13:51:54.403" endtime="20210730 13:51:54.417"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:54.418" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:51:54.418" endtime="20210730 13:51:54.418"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:54.419" level="INFO">${pids} = ['11991']</msg>
<status status="PASS" starttime="20210730 13:51:54.419" endtime="20210730 13:51:54.419"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11991</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:54.430" level="INFO">Running command 'kill 11991 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:54.420" endtime="20210730 13:51:54.430"/>
</kw>
<status status="PASS" starttime="20210730 13:51:54.420" endtime="20210730 13:51:54.431"/>
</iter>
<status status="PASS" starttime="20210730 13:51:54.419" endtime="20210730 13:51:54.431"/>
</for>
<status status="PASS" starttime="20210730 13:51:54.419" endtime="20210730 13:51:54.431"/>
</branch>
<status status="PASS" starttime="20210730 13:51:54.418" endtime="20210730 13:51:54.431"/>
</if>
<status status="PASS" starttime="20210730 13:51:54.402" endtime="20210730 13:51:54.431"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:54.432" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:54.432" endtime="20210730 13:51:54.432"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:54.433" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:51:54.433" endtime="20210730 13:51:54.433"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:51:54.433" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:51:54.433" endtime="20210730 13:51:54.433"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:54.434" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:54.433" endtime="20210730 13:51:54.434"/>
</kw>
<msg timestamp="20210730 13:51:54.434" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:54.432" endtime="20210730 13:51:54.434"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:54.438" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:54.434" endtime="20210730 13:51:54.441"/>
</kw>
<status status="PASS" starttime="20210730 13:51:54.431" endtime="20210730 13:51:54.441"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:51:54.442" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:51:54.442" endtime="20210730 13:51:54.446"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:51:55.948" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:51:54.446" endtime="20210730 13:51:55.948"/>
</kw>
<status status="PASS" starttime="20210730 13:51:54.441" endtime="20210730 13:51:55.948"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:55.950" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:51:55.950" endtime="20210730 13:51:55.950"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:51:55.951" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:51:55.950" endtime="20210730 13:51:55.951"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:55.951" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:55.951" endtime="20210730 13:51:55.951"/>
</kw>
<msg timestamp="20210730 13:51:55.951" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:55.949" endtime="20210730 13:51:55.951"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:51:55.952" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:51:55.951" endtime="20210730 13:51:55.952"/>
</kw>
<status status="PASS" starttime="20210730 13:51:55.949" endtime="20210730 13:51:55.952"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:51:55.953" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:51:55.953" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:51:55.953" endtime="20210730 13:51:55.953"/>
</kw>
<status status="PASS" starttime="20210730 13:51:55.952" endtime="20210730 13:51:55.953"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:51:55.954" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:51:55.954" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:51:55.954" endtime="20210730 13:51:55.954"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:51:55.955" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:51:55.954" endtime="20210730 13:51:55.955"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:55.955" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:51:55.955" endtime="20210730 13:51:55.955"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:51:55.955" endtime="20210730 13:51:55.956"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:51:55.956" endtime="20210730 13:51:55.956"/>
</kw>
<status status="PASS" starttime="20210730 13:51:55.955" endtime="20210730 13:51:55.956"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:55.957" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:51:55.956" endtime="20210730 13:51:55.957"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:51:55.957" endtime="20210730 13:51:55.958"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:51:55.958" endtime="20210730 13:51:55.958"/>
</kw>
<status status="PASS" starttime="20210730 13:51:55.956" endtime="20210730 13:51:55.958"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:55.958" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:51:55.958" endtime="20210730 13:51:55.958"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:51:55.958" endtime="20210730 13:51:55.959"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:51:55.959" endtime="20210730 13:51:55.959"/>
</kw>
<status status="PASS" starttime="20210730 13:51:55.958" endtime="20210730 13:51:55.959"/>
</iter>
<status status="PASS" starttime="20210730 13:51:55.955" endtime="20210730 13:51:55.960"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:51:55.960" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:51:55.960" endtime="20210730 13:51:55.960"/>
</kw>
<status status="PASS" starttime="20210730 13:51:55.953" endtime="20210730 13:51:55.960"/>
</kw>
<status status="PASS" starttime="20210730 13:51:54.401" endtime="20210730 13:51:55.960"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=12345678912345</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:55.961" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:51:55.961" endtime="20210730 13:51:55.961"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:55.962" level="INFO">${payload} = {'username': '12345678912345'}</msg>
<status status="PASS" starttime="20210730 13:51:55.962" endtime="20210730 13:51:55.962"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:51:55.972" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:51:55.972" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:51:55.962" endtime="20210730 13:51:55.972"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:51:55.973" endtime="20210730 13:51:55.973"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:51:55.973" endtime="20210730 13:51:55.973"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:55.962" endtime="20210730 13:51:55.973"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:55.962" endtime="20210730 13:51:55.973"/>
</for>
<status status="FAIL" starttime="20210730 13:51:55.961" endtime="20210730 13:51:55.973"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:55.961" endtime="20210730 13:51:55.973"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=12345678912345</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:55.974" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:51:55.974" endtime="20210730 13:51:55.974"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:55.974" level="INFO">${payload} = {'username': '12345678912345'}</msg>
<status status="PASS" starttime="20210730 13:51:55.974" endtime="20210730 13:51:55.975"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:51:55.979" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:51:55.979" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:51:55.975" endtime="20210730 13:51:55.979"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:51:55.979" endtime="20210730 13:51:55.979"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:51:55.979" endtime="20210730 13:51:55.979"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:55.975" endtime="20210730 13:51:55.979"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:55.975" endtime="20210730 13:51:55.979"/>
</for>
<status status="FAIL" starttime="20210730 13:51:55.973" endtime="20210730 13:51:55.979"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:55.973" endtime="20210730 13:51:55.979"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=12345678912345</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:55.980" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:51:55.980" endtime="20210730 13:51:55.980"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:55.981" level="INFO">${payload} = {'username': '12345678912345'}</msg>
<status status="PASS" starttime="20210730 13:51:55.981" endtime="20210730 13:51:55.981"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:51:55.985" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:51:55.986" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:51:55.981" endtime="20210730 13:51:55.986"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:51:55.986" endtime="20210730 13:51:55.986"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:51:55.986" endtime="20210730 13:51:55.986"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:55.981" endtime="20210730 13:51:55.986"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:55.981" endtime="20210730 13:51:55.986"/>
</for>
<status status="FAIL" starttime="20210730 13:51:55.980" endtime="20210730 13:51:55.987"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:55.979" endtime="20210730 13:51:55.987"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:55.960" endtime="20210730 13:51:55.987"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:51:55.991" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:51:56.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:51:56.000" level="INFO">${pids} = 12014
12021
12026</msg>
<status status="PASS" starttime="20210730 13:51:55.988" endtime="20210730 13:51:56.000"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:56.001" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:51:56.000" endtime="20210730 13:51:56.001"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:56.001" level="INFO">${pids} = ['12014', '12021', '12026']</msg>
<status status="PASS" starttime="20210730 13:51:56.001" endtime="20210730 13:51:56.001"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12014</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:56.005" level="INFO">Running command 'kill 12014 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:56.002" endtime="20210730 13:51:56.006"/>
</kw>
<status status="PASS" starttime="20210730 13:51:56.002" endtime="20210730 13:51:56.006"/>
</iter>
<iter>
<var name="${pid}">12021</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:56.008" level="INFO">Running command 'kill 12021 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:56.006" endtime="20210730 13:51:56.009"/>
</kw>
<status status="PASS" starttime="20210730 13:51:56.006" endtime="20210730 13:51:56.009"/>
</iter>
<iter>
<var name="${pid}">12026</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:56.012" level="INFO">Running command 'kill 12026 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:56.009" endtime="20210730 13:51:56.013"/>
</kw>
<status status="PASS" starttime="20210730 13:51:56.009" endtime="20210730 13:51:56.013"/>
</iter>
<status status="PASS" starttime="20210730 13:51:56.001" endtime="20210730 13:51:56.013"/>
</for>
<status status="PASS" starttime="20210730 13:51:56.001" endtime="20210730 13:51:56.013"/>
</branch>
<status status="PASS" starttime="20210730 13:51:56.001" endtime="20210730 13:51:56.013"/>
</if>
<status status="PASS" starttime="20210730 13:51:55.987" endtime="20210730 13:51:56.013"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '12345678912345'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:51:54.399" endtime="20210730 13:51:56.013">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t8" name="With Each Valid Token, Updating Username Of Each System User With abcdefg Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:51:56.023" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:51:56.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:51:56.033" level="INFO">${pids} = 12056</msg>
<status status="PASS" starttime="20210730 13:51:56.016" endtime="20210730 13:51:56.033"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:56.034" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:51:56.033" endtime="20210730 13:51:56.034"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:56.035" level="INFO">${pids} = ['12056']</msg>
<status status="PASS" starttime="20210730 13:51:56.034" endtime="20210730 13:51:56.035"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12056</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:56.039" level="INFO">Running command 'kill 12056 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:56.035" endtime="20210730 13:51:56.040"/>
</kw>
<status status="PASS" starttime="20210730 13:51:56.035" endtime="20210730 13:51:56.040"/>
</iter>
<status status="PASS" starttime="20210730 13:51:56.035" endtime="20210730 13:51:56.040"/>
</for>
<status status="PASS" starttime="20210730 13:51:56.034" endtime="20210730 13:51:56.040"/>
</branch>
<status status="PASS" starttime="20210730 13:51:56.034" endtime="20210730 13:51:56.040"/>
</if>
<status status="PASS" starttime="20210730 13:51:56.016" endtime="20210730 13:51:56.040"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:56.042" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:56.041" endtime="20210730 13:51:56.042"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:56.042" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:51:56.042" endtime="20210730 13:51:56.042"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:51:56.043" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:51:56.042" endtime="20210730 13:51:56.043"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:56.043" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:56.043" endtime="20210730 13:51:56.043"/>
</kw>
<msg timestamp="20210730 13:51:56.043" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:56.042" endtime="20210730 13:51:56.043"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:56.053" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:56.043" endtime="20210730 13:51:56.055"/>
</kw>
<status status="PASS" starttime="20210730 13:51:56.041" endtime="20210730 13:51:56.056"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:51:56.057" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:51:56.056" endtime="20210730 13:51:56.061"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:51:57.562" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:51:56.061" endtime="20210730 13:51:57.562"/>
</kw>
<status status="PASS" starttime="20210730 13:51:56.056" endtime="20210730 13:51:57.562"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:57.564" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:51:57.563" endtime="20210730 13:51:57.564"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:51:57.564" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:51:57.564" endtime="20210730 13:51:57.564"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:57.564" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:57.564" endtime="20210730 13:51:57.564"/>
</kw>
<msg timestamp="20210730 13:51:57.565" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:57.563" endtime="20210730 13:51:57.565"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:51:57.565" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:51:57.565" endtime="20210730 13:51:57.566"/>
</kw>
<status status="PASS" starttime="20210730 13:51:57.562" endtime="20210730 13:51:57.566"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:51:57.566" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:51:57.566" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:51:57.566" endtime="20210730 13:51:57.566"/>
</kw>
<status status="PASS" starttime="20210730 13:51:57.566" endtime="20210730 13:51:57.567"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:51:57.567" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:51:57.567" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:51:57.567" endtime="20210730 13:51:57.567"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:51:57.567" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:51:57.567" endtime="20210730 13:51:57.567"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:57.568" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:51:57.568" endtime="20210730 13:51:57.568"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:51:57.568" endtime="20210730 13:51:57.569"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:51:57.569" endtime="20210730 13:51:57.570"/>
</kw>
<status status="PASS" starttime="20210730 13:51:57.568" endtime="20210730 13:51:57.570"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:57.570" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:51:57.570" endtime="20210730 13:51:57.570"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:51:57.570" endtime="20210730 13:51:57.571"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:51:57.571" endtime="20210730 13:51:57.571"/>
</kw>
<status status="PASS" starttime="20210730 13:51:57.570" endtime="20210730 13:51:57.571"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:57.572" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:51:57.571" endtime="20210730 13:51:57.572"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:51:57.572" endtime="20210730 13:51:57.572"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:51:57.572" endtime="20210730 13:51:57.573"/>
</kw>
<status status="PASS" starttime="20210730 13:51:57.571" endtime="20210730 13:51:57.573"/>
</iter>
<status status="PASS" starttime="20210730 13:51:57.567" endtime="20210730 13:51:57.573"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:51:57.573" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:51:57.573" endtime="20210730 13:51:57.573"/>
</kw>
<status status="PASS" starttime="20210730 13:51:57.567" endtime="20210730 13:51:57.573"/>
</kw>
<status status="PASS" starttime="20210730 13:51:56.015" endtime="20210730 13:51:57.573"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=abcdefg</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:57.575" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:51:57.574" endtime="20210730 13:51:57.575"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:57.575" level="INFO">${payload} = {'username': 'abcdefg'}</msg>
<status status="PASS" starttime="20210730 13:51:57.575" endtime="20210730 13:51:57.575"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:51:57.584" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:51:57.584" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:51:57.575" endtime="20210730 13:51:57.585"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:51:57.585" endtime="20210730 13:51:57.585"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:51:57.585" endtime="20210730 13:51:57.585"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:57.575" endtime="20210730 13:51:57.585"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:57.575" endtime="20210730 13:51:57.585"/>
</for>
<status status="FAIL" starttime="20210730 13:51:57.574" endtime="20210730 13:51:57.585"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:57.574" endtime="20210730 13:51:57.585"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=abcdefg</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:57.587" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:51:57.586" endtime="20210730 13:51:57.587"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:57.587" level="INFO">${payload} = {'username': 'abcdefg'}</msg>
<status status="PASS" starttime="20210730 13:51:57.587" endtime="20210730 13:51:57.587"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:51:57.592" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:51:57.592" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:51:57.588" endtime="20210730 13:51:57.592"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:51:57.592" endtime="20210730 13:51:57.592"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:51:57.592" endtime="20210730 13:51:57.592"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:57.588" endtime="20210730 13:51:57.592"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:57.587" endtime="20210730 13:51:57.592"/>
</for>
<status status="FAIL" starttime="20210730 13:51:57.586" endtime="20210730 13:51:57.593"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:57.586" endtime="20210730 13:51:57.593"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=abcdefg</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:57.594" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:51:57.593" endtime="20210730 13:51:57.594"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:57.594" level="INFO">${payload} = {'username': 'abcdefg'}</msg>
<status status="PASS" starttime="20210730 13:51:57.594" endtime="20210730 13:51:57.594"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:51:57.598" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:51:57.598" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:51:57.594" endtime="20210730 13:51:57.598"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:51:57.598" endtime="20210730 13:51:57.598"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:51:57.598" endtime="20210730 13:51:57.598"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:57.594" endtime="20210730 13:51:57.598"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:57.594" endtime="20210730 13:51:57.598"/>
</for>
<status status="FAIL" starttime="20210730 13:51:57.593" endtime="20210730 13:51:57.599"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:57.593" endtime="20210730 13:51:57.599"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:57.574" endtime="20210730 13:51:57.599"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:51:57.603" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:51:57.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:51:57.614" level="INFO">${pids} = 12081
12088
12105</msg>
<status status="PASS" starttime="20210730 13:51:57.600" endtime="20210730 13:51:57.614"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:57.615" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:51:57.614" endtime="20210730 13:51:57.615"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:57.615" level="INFO">${pids} = ['12081', '12088', '12105']</msg>
<status status="PASS" starttime="20210730 13:51:57.615" endtime="20210730 13:51:57.615"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12081</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:57.620" level="INFO">Running command 'kill 12081 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:57.616" endtime="20210730 13:51:57.620"/>
</kw>
<status status="PASS" starttime="20210730 13:51:57.616" endtime="20210730 13:51:57.620"/>
</iter>
<iter>
<var name="${pid}">12088</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:57.624" level="INFO">Running command 'kill 12088 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:57.621" endtime="20210730 13:51:57.624"/>
</kw>
<status status="PASS" starttime="20210730 13:51:57.621" endtime="20210730 13:51:57.624"/>
</iter>
<iter>
<var name="${pid}">12105</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:57.628" level="INFO">Running command 'kill 12105 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:57.625" endtime="20210730 13:51:57.628"/>
</kw>
<status status="PASS" starttime="20210730 13:51:57.625" endtime="20210730 13:51:57.628"/>
</iter>
<status status="PASS" starttime="20210730 13:51:57.616" endtime="20210730 13:51:57.628"/>
</for>
<status status="PASS" starttime="20210730 13:51:57.615" endtime="20210730 13:51:57.628"/>
</branch>
<status status="PASS" starttime="20210730 13:51:57.615" endtime="20210730 13:51:57.628"/>
</if>
<status status="PASS" starttime="20210730 13:51:57.599" endtime="20210730 13:51:57.629"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": 'abcdefg'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:51:56.014" endtime="20210730 13:51:57.629">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t9" name="With Each Valid Token, Updating Username Of Each System User With abcdefgh Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:51:57.638" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:51:57.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:51:57.647" level="INFO">${pids} = 12215</msg>
<status status="PASS" starttime="20210730 13:51:57.631" endtime="20210730 13:51:57.647"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:57.648" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:51:57.647" endtime="20210730 13:51:57.648"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:57.648" level="INFO">${pids} = ['12215']</msg>
<status status="PASS" starttime="20210730 13:51:57.648" endtime="20210730 13:51:57.648"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12215</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:57.652" level="INFO">Running command 'kill 12215 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:57.649" endtime="20210730 13:51:57.653"/>
</kw>
<status status="PASS" starttime="20210730 13:51:57.649" endtime="20210730 13:51:57.653"/>
</iter>
<status status="PASS" starttime="20210730 13:51:57.649" endtime="20210730 13:51:57.653"/>
</for>
<status status="PASS" starttime="20210730 13:51:57.648" endtime="20210730 13:51:57.653"/>
</branch>
<status status="PASS" starttime="20210730 13:51:57.648" endtime="20210730 13:51:57.653"/>
</if>
<status status="PASS" starttime="20210730 13:51:57.630" endtime="20210730 13:51:57.653"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:57.655" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:57.654" endtime="20210730 13:51:57.655"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:57.656" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:51:57.655" endtime="20210730 13:51:57.656"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:51:57.656" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:51:57.656" endtime="20210730 13:51:57.656"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:57.657" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:57.656" endtime="20210730 13:51:57.657"/>
</kw>
<msg timestamp="20210730 13:51:57.657" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:57.655" endtime="20210730 13:51:57.657"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:57.666" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:57.657" endtime="20210730 13:51:57.669"/>
</kw>
<status status="PASS" starttime="20210730 13:51:57.654" endtime="20210730 13:51:57.670"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:51:57.671" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:51:57.671" endtime="20210730 13:51:57.675"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:51:59.185" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:51:57.676" endtime="20210730 13:51:59.185"/>
</kw>
<status status="PASS" starttime="20210730 13:51:57.670" endtime="20210730 13:51:59.185"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:59.189" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:51:59.186" endtime="20210730 13:51:59.189"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:51:59.189" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:51:59.189" endtime="20210730 13:51:59.189"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:59.190" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:59.190" endtime="20210730 13:51:59.190"/>
</kw>
<msg timestamp="20210730 13:51:59.190" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:59.186" endtime="20210730 13:51:59.190"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:51:59.191" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:51:59.190" endtime="20210730 13:51:59.191"/>
</kw>
<status status="PASS" starttime="20210730 13:51:59.186" endtime="20210730 13:51:59.192"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:51:59.193" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:51:59.193" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:51:59.193" endtime="20210730 13:51:59.194"/>
</kw>
<status status="PASS" starttime="20210730 13:51:59.192" endtime="20210730 13:51:59.194"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:51:59.194" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:51:59.194" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:51:59.194" endtime="20210730 13:51:59.194"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:51:59.195" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:51:59.194" endtime="20210730 13:51:59.195"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:59.195" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:51:59.195" endtime="20210730 13:51:59.195"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:51:59.195" endtime="20210730 13:51:59.196"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:51:59.196" endtime="20210730 13:51:59.196"/>
</kw>
<status status="PASS" starttime="20210730 13:51:59.195" endtime="20210730 13:51:59.196"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:59.197" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:51:59.197" endtime="20210730 13:51:59.197"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:51:59.197" endtime="20210730 13:51:59.198"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:51:59.198" endtime="20210730 13:51:59.198"/>
</kw>
<status status="PASS" starttime="20210730 13:51:59.196" endtime="20210730 13:51:59.198"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:59.198" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:51:59.198" endtime="20210730 13:51:59.198"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:51:59.199" endtime="20210730 13:51:59.200"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:51:59.200" endtime="20210730 13:51:59.200"/>
</kw>
<status status="PASS" starttime="20210730 13:51:59.198" endtime="20210730 13:51:59.200"/>
</iter>
<status status="PASS" starttime="20210730 13:51:59.195" endtime="20210730 13:51:59.200"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:51:59.200" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:51:59.200" endtime="20210730 13:51:59.200"/>
</kw>
<status status="PASS" starttime="20210730 13:51:59.194" endtime="20210730 13:51:59.201"/>
</kw>
<status status="PASS" starttime="20210730 13:51:57.630" endtime="20210730 13:51:59.201"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=abcdefgh</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:59.202" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:51:59.202" endtime="20210730 13:51:59.202"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:59.203" level="INFO">${payload} = {'username': 'abcdefgh'}</msg>
<status status="PASS" starttime="20210730 13:51:59.202" endtime="20210730 13:51:59.203"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:51:59.212" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:51:59.212" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:51:59.203" endtime="20210730 13:51:59.212"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:51:59.212" endtime="20210730 13:51:59.212"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:51:59.212" endtime="20210730 13:51:59.212"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:59.203" endtime="20210730 13:51:59.212"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:59.203" endtime="20210730 13:51:59.212"/>
</for>
<status status="FAIL" starttime="20210730 13:51:59.201" endtime="20210730 13:51:59.213"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:59.201" endtime="20210730 13:51:59.213"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=abcdefgh</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:59.214" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:51:59.214" endtime="20210730 13:51:59.214"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:59.215" level="INFO">${payload} = {'username': 'abcdefgh'}</msg>
<status status="PASS" starttime="20210730 13:51:59.214" endtime="20210730 13:51:59.215"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:51:59.219" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:51:59.219" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:51:59.215" endtime="20210730 13:51:59.219"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:51:59.220" endtime="20210730 13:51:59.220"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:51:59.220" endtime="20210730 13:51:59.220"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:59.215" endtime="20210730 13:51:59.220"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:59.215" endtime="20210730 13:51:59.220"/>
</for>
<status status="FAIL" starttime="20210730 13:51:59.213" endtime="20210730 13:51:59.220"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:59.213" endtime="20210730 13:51:59.220"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=abcdefgh</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:59.222" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:51:59.221" endtime="20210730 13:51:59.222"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:51:59.222" level="INFO">${payload} = {'username': 'abcdefgh'}</msg>
<status status="PASS" starttime="20210730 13:51:59.222" endtime="20210730 13:51:59.222"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:51:59.226" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:51:59.226" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:51:59.222" endtime="20210730 13:51:59.227"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:51:59.227" endtime="20210730 13:51:59.227"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:51:59.227" endtime="20210730 13:51:59.227"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:59.222" endtime="20210730 13:51:59.227"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:59.222" endtime="20210730 13:51:59.227"/>
</for>
<status status="FAIL" starttime="20210730 13:51:59.221" endtime="20210730 13:51:59.227"/>
</kw>
<status status="FAIL" starttime="20210730 13:51:59.221" endtime="20210730 13:51:59.227"/>
</iter>
<status status="FAIL" starttime="20210730 13:51:59.201" endtime="20210730 13:51:59.227"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:51:59.233" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:51:59.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:51:59.242" level="INFO">${pids} = 12239
12246
12250</msg>
<status status="PASS" starttime="20210730 13:51:59.228" endtime="20210730 13:51:59.242"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:59.242" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:51:59.242" endtime="20210730 13:51:59.242"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:59.243" level="INFO">${pids} = ['12239', '12246', '12250']</msg>
<status status="PASS" starttime="20210730 13:51:59.243" endtime="20210730 13:51:59.243"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12239</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:59.247" level="INFO">Running command 'kill 12239 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:59.243" endtime="20210730 13:51:59.247"/>
</kw>
<status status="PASS" starttime="20210730 13:51:59.243" endtime="20210730 13:51:59.247"/>
</iter>
<iter>
<var name="${pid}">12246</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:59.252" level="INFO">Running command 'kill 12246 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:59.248" endtime="20210730 13:51:59.254"/>
</kw>
<status status="PASS" starttime="20210730 13:51:59.248" endtime="20210730 13:51:59.254"/>
</iter>
<iter>
<var name="${pid}">12250</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:59.257" level="INFO">Running command 'kill 12250 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:59.254" endtime="20210730 13:51:59.257"/>
</kw>
<status status="PASS" starttime="20210730 13:51:59.254" endtime="20210730 13:51:59.258"/>
</iter>
<status status="PASS" starttime="20210730 13:51:59.243" endtime="20210730 13:51:59.258"/>
</for>
<status status="PASS" starttime="20210730 13:51:59.243" endtime="20210730 13:51:59.258"/>
</branch>
<status status="PASS" starttime="20210730 13:51:59.243" endtime="20210730 13:51:59.258"/>
</if>
<status status="PASS" starttime="20210730 13:51:59.228" endtime="20210730 13:51:59.258"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": 'abcdefgh'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:51:57.629" endtime="20210730 13:51:59.258">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t10" name="With Each Valid Token, Updating Username Of Each System User With abcdefghijklmnprstop Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:51:59.266" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:51:59.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:51:59.277" level="INFO">${pids} = 12279</msg>
<status status="PASS" starttime="20210730 13:51:59.263" endtime="20210730 13:51:59.277"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:59.278" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:51:59.277" endtime="20210730 13:51:59.278"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:51:59.279" level="INFO">${pids} = ['12279']</msg>
<status status="PASS" starttime="20210730 13:51:59.278" endtime="20210730 13:51:59.279"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12279</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:59.282" level="INFO">Running command 'kill 12279 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:59.279" endtime="20210730 13:51:59.283"/>
</kw>
<status status="PASS" starttime="20210730 13:51:59.279" endtime="20210730 13:51:59.283"/>
</iter>
<status status="PASS" starttime="20210730 13:51:59.279" endtime="20210730 13:51:59.283"/>
</for>
<status status="PASS" starttime="20210730 13:51:59.278" endtime="20210730 13:51:59.283"/>
</branch>
<status status="PASS" starttime="20210730 13:51:59.278" endtime="20210730 13:51:59.283"/>
</if>
<status status="PASS" starttime="20210730 13:51:59.262" endtime="20210730 13:51:59.284"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:59.285" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:59.285" endtime="20210730 13:51:59.285"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:59.285" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:51:59.285" endtime="20210730 13:51:59.285"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:51:59.286" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:51:59.286" endtime="20210730 13:51:59.286"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:51:59.287" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:59.286" endtime="20210730 13:51:59.287"/>
</kw>
<msg timestamp="20210730 13:51:59.287" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:51:59.285" endtime="20210730 13:51:59.287"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:51:59.292" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:51:59.287" endtime="20210730 13:51:59.294"/>
</kw>
<status status="PASS" starttime="20210730 13:51:59.284" endtime="20210730 13:51:59.294"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:51:59.295" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:51:59.295" endtime="20210730 13:51:59.300"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:00.802" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:51:59.301" endtime="20210730 13:52:00.802"/>
</kw>
<status status="PASS" starttime="20210730 13:51:59.294" endtime="20210730 13:52:00.803"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:00.805" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:00.805" endtime="20210730 13:52:00.806"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:00.806" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:00.806" endtime="20210730 13:52:00.806"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:00.807" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:00.807" endtime="20210730 13:52:00.807"/>
</kw>
<msg timestamp="20210730 13:52:00.808" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:00.804" endtime="20210730 13:52:00.808"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:00.809" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:00.808" endtime="20210730 13:52:00.809"/>
</kw>
<status status="PASS" starttime="20210730 13:52:00.803" endtime="20210730 13:52:00.810"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:00.811" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:00.811" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:00.810" endtime="20210730 13:52:00.811"/>
</kw>
<status status="PASS" starttime="20210730 13:52:00.810" endtime="20210730 13:52:00.811"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:00.812" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:00.812" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:00.812" endtime="20210730 13:52:00.812"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:00.813" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:00.813" endtime="20210730 13:52:00.813"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:00.814" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:00.813" endtime="20210730 13:52:00.814"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:00.814" endtime="20210730 13:52:00.815"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:00.815" endtime="20210730 13:52:00.816"/>
</kw>
<status status="PASS" starttime="20210730 13:52:00.813" endtime="20210730 13:52:00.816"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:00.816" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:00.816" endtime="20210730 13:52:00.816"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:00.816" endtime="20210730 13:52:00.817"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:00.817" endtime="20210730 13:52:00.817"/>
</kw>
<status status="PASS" starttime="20210730 13:52:00.816" endtime="20210730 13:52:00.817"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:00.818" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:00.818" endtime="20210730 13:52:00.818"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:00.818" endtime="20210730 13:52:00.818"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:00.819" endtime="20210730 13:52:00.819"/>
</kw>
<status status="PASS" starttime="20210730 13:52:00.817" endtime="20210730 13:52:00.819"/>
</iter>
<status status="PASS" starttime="20210730 13:52:00.813" endtime="20210730 13:52:00.819"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:00.820" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:00.819" endtime="20210730 13:52:00.820"/>
</kw>
<status status="PASS" starttime="20210730 13:52:00.811" endtime="20210730 13:52:00.820"/>
</kw>
<status status="PASS" starttime="20210730 13:51:59.262" endtime="20210730 13:52:00.820"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=abcdefghijklmnprstop</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:00.822" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:00.821" endtime="20210730 13:52:00.822"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:00.822" level="INFO">${payload} = {'username': 'abcdefghijklmnprstop'}</msg>
<status status="PASS" starttime="20210730 13:52:00.822" endtime="20210730 13:52:00.822"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:00.831" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:00.832" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:00.822" endtime="20210730 13:52:00.832"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:00.832" endtime="20210730 13:52:00.832"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:00.832" endtime="20210730 13:52:00.832"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:00.822" endtime="20210730 13:52:00.832"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:00.822" endtime="20210730 13:52:00.832"/>
</for>
<status status="FAIL" starttime="20210730 13:52:00.821" endtime="20210730 13:52:00.832"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:00.820" endtime="20210730 13:52:00.832"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=abcdefghijklmnprstop</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:00.833" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:00.833" endtime="20210730 13:52:00.833"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:00.834" level="INFO">${payload} = {'username': 'abcdefghijklmnprstop'}</msg>
<status status="PASS" starttime="20210730 13:52:00.833" endtime="20210730 13:52:00.834"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:00.838" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:00.838" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:00.834" endtime="20210730 13:52:00.838"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:00.838" endtime="20210730 13:52:00.838"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:00.838" endtime="20210730 13:52:00.838"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:00.834" endtime="20210730 13:52:00.839"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:00.834" endtime="20210730 13:52:00.839"/>
</for>
<status status="FAIL" starttime="20210730 13:52:00.832" endtime="20210730 13:52:00.839"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:00.832" endtime="20210730 13:52:00.839"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=abcdefghijklmnprstop</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:00.840" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:00.840" endtime="20210730 13:52:00.840"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:00.840" level="INFO">${payload} = {'username': 'abcdefghijklmnprstop'}</msg>
<status status="PASS" starttime="20210730 13:52:00.840" endtime="20210730 13:52:00.840"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:00.844" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:00.844" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:00.841" endtime="20210730 13:52:00.844"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:00.844" endtime="20210730 13:52:00.844"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:00.844" endtime="20210730 13:52:00.844"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:00.840" endtime="20210730 13:52:00.845"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:00.840" endtime="20210730 13:52:00.845"/>
</for>
<status status="FAIL" starttime="20210730 13:52:00.839" endtime="20210730 13:52:00.845"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:00.839" endtime="20210730 13:52:00.845"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:00.820" endtime="20210730 13:52:00.845"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:00.853" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:00.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:00.862" level="INFO">${pids} = 12302
12309
12314</msg>
<status status="PASS" starttime="20210730 13:52:00.846" endtime="20210730 13:52:00.863"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:00.863" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:00.863" endtime="20210730 13:52:00.863"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:00.864" level="INFO">${pids} = ['12302', '12309', '12314']</msg>
<status status="PASS" starttime="20210730 13:52:00.864" endtime="20210730 13:52:00.864"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12302</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:00.867" level="INFO">Running command 'kill 12302 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:00.864" endtime="20210730 13:52:00.868"/>
</kw>
<status status="PASS" starttime="20210730 13:52:00.864" endtime="20210730 13:52:00.868"/>
</iter>
<iter>
<var name="${pid}">12309</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:00.871" level="INFO">Running command 'kill 12309 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:00.868" endtime="20210730 13:52:00.872"/>
</kw>
<status status="PASS" starttime="20210730 13:52:00.868" endtime="20210730 13:52:00.872"/>
</iter>
<iter>
<var name="${pid}">12314</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:00.875" level="INFO">Running command 'kill 12314 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:00.872" endtime="20210730 13:52:00.876"/>
</kw>
<status status="PASS" starttime="20210730 13:52:00.872" endtime="20210730 13:52:00.876"/>
</iter>
<status status="PASS" starttime="20210730 13:52:00.864" endtime="20210730 13:52:00.876"/>
</for>
<status status="PASS" starttime="20210730 13:52:00.864" endtime="20210730 13:52:00.876"/>
</branch>
<status status="PASS" starttime="20210730 13:52:00.864" endtime="20210730 13:52:00.876"/>
</if>
<status status="PASS" starttime="20210730 13:52:00.845" endtime="20210730 13:52:00.876"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": 'abcdefghijklmnprstop'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:51:59.259" endtime="20210730 13:52:00.876">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t11" name="With Each Valid Token, Updating Username Of Each System User With hakan12 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:00.891" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:00.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:00.911" level="INFO">${pids} = 12343</msg>
<status status="PASS" starttime="20210730 13:52:00.878" endtime="20210730 13:52:00.911"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:00.912" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:00.912" endtime="20210730 13:52:00.913"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:00.914" level="INFO">${pids} = ['12343']</msg>
<status status="PASS" starttime="20210730 13:52:00.913" endtime="20210730 13:52:00.914"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12343</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:00.919" level="INFO">Running command 'kill 12343 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:00.914" endtime="20210730 13:52:00.920"/>
</kw>
<status status="PASS" starttime="20210730 13:52:00.914" endtime="20210730 13:52:00.920"/>
</iter>
<status status="PASS" starttime="20210730 13:52:00.914" endtime="20210730 13:52:00.920"/>
</for>
<status status="PASS" starttime="20210730 13:52:00.913" endtime="20210730 13:52:00.920"/>
</branch>
<status status="PASS" starttime="20210730 13:52:00.913" endtime="20210730 13:52:00.920"/>
</if>
<status status="PASS" starttime="20210730 13:52:00.878" endtime="20210730 13:52:00.920"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:00.922" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:00.922" endtime="20210730 13:52:00.922"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:00.923" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:00.923" endtime="20210730 13:52:00.923"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:00.923" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:00.923" endtime="20210730 13:52:00.923"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:00.924" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:00.924" endtime="20210730 13:52:00.924"/>
</kw>
<msg timestamp="20210730 13:52:00.924" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:00.922" endtime="20210730 13:52:00.924"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:00.927" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:00.924" endtime="20210730 13:52:00.929"/>
</kw>
<status status="PASS" starttime="20210730 13:52:00.921" endtime="20210730 13:52:00.929"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:00.931" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:00.930" endtime="20210730 13:52:00.934"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:02.437" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:00.935" endtime="20210730 13:52:02.437"/>
</kw>
<status status="PASS" starttime="20210730 13:52:00.930" endtime="20210730 13:52:02.438"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:02.439" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:02.438" endtime="20210730 13:52:02.439"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:02.439" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:02.439" endtime="20210730 13:52:02.439"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:02.440" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:02.440" endtime="20210730 13:52:02.440"/>
</kw>
<msg timestamp="20210730 13:52:02.440" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:02.438" endtime="20210730 13:52:02.440"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:02.440" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:02.440" endtime="20210730 13:52:02.441"/>
</kw>
<status status="PASS" starttime="20210730 13:52:02.438" endtime="20210730 13:52:02.441"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:02.441" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:02.442" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:02.441" endtime="20210730 13:52:02.442"/>
</kw>
<status status="PASS" starttime="20210730 13:52:02.441" endtime="20210730 13:52:02.442"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:02.442" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:02.442" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:02.442" endtime="20210730 13:52:02.442"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:02.443" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:02.443" endtime="20210730 13:52:02.443"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:02.443" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:02.443" endtime="20210730 13:52:02.444"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:02.444" endtime="20210730 13:52:02.444"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:02.444" endtime="20210730 13:52:02.445"/>
</kw>
<status status="PASS" starttime="20210730 13:52:02.443" endtime="20210730 13:52:02.445"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:02.445" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:02.445" endtime="20210730 13:52:02.445"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:02.445" endtime="20210730 13:52:02.446"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:02.446" endtime="20210730 13:52:02.446"/>
</kw>
<status status="PASS" starttime="20210730 13:52:02.445" endtime="20210730 13:52:02.446"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:02.446" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:02.446" endtime="20210730 13:52:02.447"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:02.447" endtime="20210730 13:52:02.447"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:02.447" endtime="20210730 13:52:02.448"/>
</kw>
<status status="PASS" starttime="20210730 13:52:02.446" endtime="20210730 13:52:02.448"/>
</iter>
<status status="PASS" starttime="20210730 13:52:02.443" endtime="20210730 13:52:02.448"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:02.448" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:02.448" endtime="20210730 13:52:02.448"/>
</kw>
<status status="PASS" starttime="20210730 13:52:02.442" endtime="20210730 13:52:02.448"/>
</kw>
<status status="PASS" starttime="20210730 13:52:00.877" endtime="20210730 13:52:02.448"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=hakan12</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:02.450" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:02.450" endtime="20210730 13:52:02.450"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:02.450" level="INFO">${payload} = {'username': 'hakan12'}</msg>
<status status="PASS" starttime="20210730 13:52:02.450" endtime="20210730 13:52:02.450"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:02.459" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:02.460" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:02.451" endtime="20210730 13:52:02.460"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:02.460" endtime="20210730 13:52:02.460"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:02.460" endtime="20210730 13:52:02.460"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:02.451" endtime="20210730 13:52:02.460"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:02.450" endtime="20210730 13:52:02.460"/>
</for>
<status status="FAIL" starttime="20210730 13:52:02.449" endtime="20210730 13:52:02.460"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:02.449" endtime="20210730 13:52:02.460"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=hakan12</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:02.461" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:02.461" endtime="20210730 13:52:02.461"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:02.462" level="INFO">${payload} = {'username': 'hakan12'}</msg>
<status status="PASS" starttime="20210730 13:52:02.461" endtime="20210730 13:52:02.462"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:02.466" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:02.466" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:02.462" endtime="20210730 13:52:02.466"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:02.466" endtime="20210730 13:52:02.466"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:02.466" endtime="20210730 13:52:02.466"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:02.462" endtime="20210730 13:52:02.467"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:02.462" endtime="20210730 13:52:02.467"/>
</for>
<status status="FAIL" starttime="20210730 13:52:02.460" endtime="20210730 13:52:02.467"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:02.460" endtime="20210730 13:52:02.467"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=hakan12</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:02.468" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:02.467" endtime="20210730 13:52:02.468"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:02.468" level="INFO">${payload} = {'username': 'hakan12'}</msg>
<status status="PASS" starttime="20210730 13:52:02.468" endtime="20210730 13:52:02.468"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:02.472" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:02.473" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:02.468" endtime="20210730 13:52:02.473"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:02.473" endtime="20210730 13:52:02.473"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:02.473" endtime="20210730 13:52:02.473"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:02.468" endtime="20210730 13:52:02.473"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:02.468" endtime="20210730 13:52:02.473"/>
</for>
<status status="FAIL" starttime="20210730 13:52:02.467" endtime="20210730 13:52:02.473"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:02.467" endtime="20210730 13:52:02.473"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:02.449" endtime="20210730 13:52:02.473"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:02.479" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:02.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:02.490" level="INFO">${pids} = 12366
12373
12379</msg>
<status status="PASS" starttime="20210730 13:52:02.475" endtime="20210730 13:52:02.490"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:02.491" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:02.490" endtime="20210730 13:52:02.491"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:02.491" level="INFO">${pids} = ['12366', '12373', '12379']</msg>
<status status="PASS" starttime="20210730 13:52:02.491" endtime="20210730 13:52:02.491"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12366</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:02.494" level="INFO">Running command 'kill 12366 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:02.492" endtime="20210730 13:52:02.495"/>
</kw>
<status status="PASS" starttime="20210730 13:52:02.492" endtime="20210730 13:52:02.495"/>
</iter>
<iter>
<var name="${pid}">12373</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:02.498" level="INFO">Running command 'kill 12373 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:02.495" endtime="20210730 13:52:02.500"/>
</kw>
<status status="PASS" starttime="20210730 13:52:02.495" endtime="20210730 13:52:02.500"/>
</iter>
<iter>
<var name="${pid}">12379</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:02.504" level="INFO">Running command 'kill 12379 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:02.501" endtime="20210730 13:52:02.504"/>
</kw>
<status status="PASS" starttime="20210730 13:52:02.500" endtime="20210730 13:52:02.504"/>
</iter>
<status status="PASS" starttime="20210730 13:52:02.491" endtime="20210730 13:52:02.504"/>
</for>
<status status="PASS" starttime="20210730 13:52:02.491" endtime="20210730 13:52:02.504"/>
</branch>
<status status="PASS" starttime="20210730 13:52:02.491" endtime="20210730 13:52:02.504"/>
</if>
<status status="PASS" starttime="20210730 13:52:02.474" endtime="20210730 13:52:02.505"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": 'hakan12'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:00.877" endtime="20210730 13:52:02.505">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t12" name="With Each Valid Token, Updating Username Of Each System User With hakan123 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:02.512" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:02.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:02.522" level="INFO">${pids} = 12409</msg>
<status status="PASS" starttime="20210730 13:52:02.507" endtime="20210730 13:52:02.522"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:02.523" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:02.523" endtime="20210730 13:52:02.523"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:02.524" level="INFO">${pids} = ['12409']</msg>
<status status="PASS" starttime="20210730 13:52:02.524" endtime="20210730 13:52:02.524"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12409</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:02.538" level="INFO">Running command 'kill 12409 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:02.524" endtime="20210730 13:52:02.539"/>
</kw>
<status status="PASS" starttime="20210730 13:52:02.524" endtime="20210730 13:52:02.539"/>
</iter>
<status status="PASS" starttime="20210730 13:52:02.524" endtime="20210730 13:52:02.539"/>
</for>
<status status="PASS" starttime="20210730 13:52:02.523" endtime="20210730 13:52:02.539"/>
</branch>
<status status="PASS" starttime="20210730 13:52:02.523" endtime="20210730 13:52:02.539"/>
</if>
<status status="PASS" starttime="20210730 13:52:02.507" endtime="20210730 13:52:02.539"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:02.541" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:02.540" endtime="20210730 13:52:02.541"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:02.541" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:02.541" endtime="20210730 13:52:02.541"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:02.542" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:02.542" endtime="20210730 13:52:02.542"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:02.542" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:02.542" endtime="20210730 13:52:02.542"/>
</kw>
<msg timestamp="20210730 13:52:02.543" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:02.541" endtime="20210730 13:52:02.543"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:02.550" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:02.543" endtime="20210730 13:52:02.554"/>
</kw>
<status status="PASS" starttime="20210730 13:52:02.540" endtime="20210730 13:52:02.555"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:02.557" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:02.556" endtime="20210730 13:52:02.572"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:04.077" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:02.573" endtime="20210730 13:52:04.077"/>
</kw>
<status status="PASS" starttime="20210730 13:52:02.555" endtime="20210730 13:52:04.077"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:04.078" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:04.078" endtime="20210730 13:52:04.078"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:04.079" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:04.079" endtime="20210730 13:52:04.079"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:04.079" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:04.079" endtime="20210730 13:52:04.079"/>
</kw>
<msg timestamp="20210730 13:52:04.080" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:04.078" endtime="20210730 13:52:04.080"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:04.081" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:04.080" endtime="20210730 13:52:04.081"/>
</kw>
<status status="PASS" starttime="20210730 13:52:04.077" endtime="20210730 13:52:04.081"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:04.082" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:04.082" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:04.082" endtime="20210730 13:52:04.082"/>
</kw>
<status status="PASS" starttime="20210730 13:52:04.081" endtime="20210730 13:52:04.082"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:04.083" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:04.083" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:04.083" endtime="20210730 13:52:04.083"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:04.083" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:04.083" endtime="20210730 13:52:04.083"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:04.084" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:04.084" endtime="20210730 13:52:04.084"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:04.084" endtime="20210730 13:52:04.085"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:04.085" endtime="20210730 13:52:04.085"/>
</kw>
<status status="PASS" starttime="20210730 13:52:04.084" endtime="20210730 13:52:04.085"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:04.086" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:04.085" endtime="20210730 13:52:04.086"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:04.086" endtime="20210730 13:52:04.087"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:04.087" endtime="20210730 13:52:04.087"/>
</kw>
<status status="PASS" starttime="20210730 13:52:04.085" endtime="20210730 13:52:04.087"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:04.088" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:04.087" endtime="20210730 13:52:04.088"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:04.088" endtime="20210730 13:52:04.089"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:04.089" endtime="20210730 13:52:04.089"/>
</kw>
<status status="PASS" starttime="20210730 13:52:04.087" endtime="20210730 13:52:04.089"/>
</iter>
<status status="PASS" starttime="20210730 13:52:04.083" endtime="20210730 13:52:04.089"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:04.090" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:04.089" endtime="20210730 13:52:04.090"/>
</kw>
<status status="PASS" starttime="20210730 13:52:04.082" endtime="20210730 13:52:04.090"/>
</kw>
<status status="PASS" starttime="20210730 13:52:02.506" endtime="20210730 13:52:04.090"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=hakan123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:04.091" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:04.091" endtime="20210730 13:52:04.091"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:04.092" level="INFO">${payload} = {'username': 'hakan123'}</msg>
<status status="PASS" starttime="20210730 13:52:04.091" endtime="20210730 13:52:04.092"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:04.101" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:04.101" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:04.092" endtime="20210730 13:52:04.102"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:04.102" endtime="20210730 13:52:04.102"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:04.102" endtime="20210730 13:52:04.102"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:04.092" endtime="20210730 13:52:04.102"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:04.092" endtime="20210730 13:52:04.102"/>
</for>
<status status="FAIL" starttime="20210730 13:52:04.090" endtime="20210730 13:52:04.102"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:04.090" endtime="20210730 13:52:04.102"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=hakan123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:04.103" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:04.103" endtime="20210730 13:52:04.103"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:04.104" level="INFO">${payload} = {'username': 'hakan123'}</msg>
<status status="PASS" starttime="20210730 13:52:04.104" endtime="20210730 13:52:04.104"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:04.108" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:04.108" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:04.104" endtime="20210730 13:52:04.108"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:04.108" endtime="20210730 13:52:04.108"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:04.108" endtime="20210730 13:52:04.109"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:04.104" endtime="20210730 13:52:04.109"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:04.104" endtime="20210730 13:52:04.109"/>
</for>
<status status="FAIL" starttime="20210730 13:52:04.102" endtime="20210730 13:52:04.109"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:04.102" endtime="20210730 13:52:04.109"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=hakan123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:04.110" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:04.110" endtime="20210730 13:52:04.110"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:04.110" level="INFO">${payload} = {'username': 'hakan123'}</msg>
<status status="PASS" starttime="20210730 13:52:04.110" endtime="20210730 13:52:04.110"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:04.114" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:04.115" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:04.111" endtime="20210730 13:52:04.115"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:04.115" endtime="20210730 13:52:04.115"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:04.115" endtime="20210730 13:52:04.115"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:04.111" endtime="20210730 13:52:04.115"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:04.110" endtime="20210730 13:52:04.115"/>
</for>
<status status="FAIL" starttime="20210730 13:52:04.109" endtime="20210730 13:52:04.115"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:04.109" endtime="20210730 13:52:04.115"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:04.090" endtime="20210730 13:52:04.115"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:04.120" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:04.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:04.131" level="INFO">${pids} = 12432
12439
12445</msg>
<status status="PASS" starttime="20210730 13:52:04.116" endtime="20210730 13:52:04.131"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:04.132" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:04.131" endtime="20210730 13:52:04.132"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:04.132" level="INFO">${pids} = ['12432', '12439', '12445']</msg>
<status status="PASS" starttime="20210730 13:52:04.132" endtime="20210730 13:52:04.132"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12432</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:04.135" level="INFO">Running command 'kill 12432 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:04.133" endtime="20210730 13:52:04.136"/>
</kw>
<status status="PASS" starttime="20210730 13:52:04.133" endtime="20210730 13:52:04.136"/>
</iter>
<iter>
<var name="${pid}">12439</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:04.139" level="INFO">Running command 'kill 12439 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:04.136" endtime="20210730 13:52:04.139"/>
</kw>
<status status="PASS" starttime="20210730 13:52:04.136" endtime="20210730 13:52:04.140"/>
</iter>
<iter>
<var name="${pid}">12445</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:04.143" level="INFO">Running command 'kill 12445 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:04.140" endtime="20210730 13:52:04.143"/>
</kw>
<status status="PASS" starttime="20210730 13:52:04.140" endtime="20210730 13:52:04.143"/>
</iter>
<status status="PASS" starttime="20210730 13:52:04.132" endtime="20210730 13:52:04.143"/>
</for>
<status status="PASS" starttime="20210730 13:52:04.132" endtime="20210730 13:52:04.143"/>
</branch>
<status status="PASS" starttime="20210730 13:52:04.132" endtime="20210730 13:52:04.143"/>
</if>
<status status="PASS" starttime="20210730 13:52:04.116" endtime="20210730 13:52:04.144"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": 'hakan123'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:02.505" endtime="20210730 13:52:04.144">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t13" name="With Each Valid Token, Updating Username Of Each System User With hakan123456789123456789 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:04.150" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:04.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:04.162" level="INFO">${pids} = 12476</msg>
<status status="PASS" starttime="20210730 13:52:04.146" endtime="20210730 13:52:04.162"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:04.163" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:04.163" endtime="20210730 13:52:04.163"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:04.164" level="INFO">${pids} = ['12476']</msg>
<status status="PASS" starttime="20210730 13:52:04.164" endtime="20210730 13:52:04.164"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12476</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:04.170" level="INFO">Running command 'kill 12476 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:04.164" endtime="20210730 13:52:04.179"/>
</kw>
<status status="PASS" starttime="20210730 13:52:04.164" endtime="20210730 13:52:04.179"/>
</iter>
<status status="PASS" starttime="20210730 13:52:04.164" endtime="20210730 13:52:04.179"/>
</for>
<status status="PASS" starttime="20210730 13:52:04.164" endtime="20210730 13:52:04.179"/>
</branch>
<status status="PASS" starttime="20210730 13:52:04.163" endtime="20210730 13:52:04.179"/>
</if>
<status status="PASS" starttime="20210730 13:52:04.145" endtime="20210730 13:52:04.180"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:04.182" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:04.181" endtime="20210730 13:52:04.182"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:04.183" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:04.183" endtime="20210730 13:52:04.183"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:04.183" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:04.183" endtime="20210730 13:52:04.183"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:04.184" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:04.184" endtime="20210730 13:52:04.184"/>
</kw>
<msg timestamp="20210730 13:52:04.184" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:04.182" endtime="20210730 13:52:04.184"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:04.188" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:04.184" endtime="20210730 13:52:04.190"/>
</kw>
<status status="PASS" starttime="20210730 13:52:04.180" endtime="20210730 13:52:04.190"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:04.191" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:04.191" endtime="20210730 13:52:04.195"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:05.696" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:04.196" endtime="20210730 13:52:05.696"/>
</kw>
<status status="PASS" starttime="20210730 13:52:04.190" endtime="20210730 13:52:05.697"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:05.698" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:05.698" endtime="20210730 13:52:05.698"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:05.698" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:05.698" endtime="20210730 13:52:05.698"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:05.699" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:05.698" endtime="20210730 13:52:05.699"/>
</kw>
<msg timestamp="20210730 13:52:05.699" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:05.697" endtime="20210730 13:52:05.699"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:05.699" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:05.699" endtime="20210730 13:52:05.700"/>
</kw>
<status status="PASS" starttime="20210730 13:52:05.697" endtime="20210730 13:52:05.700"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:05.700" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:05.700" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:05.700" endtime="20210730 13:52:05.701"/>
</kw>
<status status="PASS" starttime="20210730 13:52:05.700" endtime="20210730 13:52:05.701"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:05.701" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:05.702" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:05.701" endtime="20210730 13:52:05.702"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:05.702" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:05.702" endtime="20210730 13:52:05.702"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:05.702" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:05.702" endtime="20210730 13:52:05.703"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:05.703" endtime="20210730 13:52:05.703"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:05.704" endtime="20210730 13:52:05.704"/>
</kw>
<status status="PASS" starttime="20210730 13:52:05.702" endtime="20210730 13:52:05.704"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:05.704" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:05.704" endtime="20210730 13:52:05.704"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:05.705" endtime="20210730 13:52:05.705"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:05.705" endtime="20210730 13:52:05.706"/>
</kw>
<status status="PASS" starttime="20210730 13:52:05.704" endtime="20210730 13:52:05.706"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:05.706" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:05.706" endtime="20210730 13:52:05.706"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:05.706" endtime="20210730 13:52:05.707"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:05.707" endtime="20210730 13:52:05.707"/>
</kw>
<status status="PASS" starttime="20210730 13:52:05.706" endtime="20210730 13:52:05.707"/>
</iter>
<status status="PASS" starttime="20210730 13:52:05.702" endtime="20210730 13:52:05.707"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:05.708" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:05.707" endtime="20210730 13:52:05.708"/>
</kw>
<status status="PASS" starttime="20210730 13:52:05.701" endtime="20210730 13:52:05.708"/>
</kw>
<status status="PASS" starttime="20210730 13:52:04.145" endtime="20210730 13:52:05.708"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=hakan123456789123456789</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:05.709" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:05.709" endtime="20210730 13:52:05.709"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:05.709" level="INFO">${payload} = {'username': 'hakan123456789123456789'}</msg>
<status status="PASS" starttime="20210730 13:52:05.709" endtime="20210730 13:52:05.709"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:05.720" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:05.720" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:05.710" endtime="20210730 13:52:05.720"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:05.721" endtime="20210730 13:52:05.721"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:05.721" endtime="20210730 13:52:05.721"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:05.710" endtime="20210730 13:52:05.721"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:05.709" endtime="20210730 13:52:05.721"/>
</for>
<status status="FAIL" starttime="20210730 13:52:05.708" endtime="20210730 13:52:05.721"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:05.708" endtime="20210730 13:52:05.721"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=hakan123456789123456789</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:05.723" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:05.722" endtime="20210730 13:52:05.723"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:05.723" level="INFO">${payload} = {'username': 'hakan123456789123456789'}</msg>
<status status="PASS" starttime="20210730 13:52:05.723" endtime="20210730 13:52:05.723"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:05.727" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:05.728" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:05.724" endtime="20210730 13:52:05.728"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:05.728" endtime="20210730 13:52:05.728"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:05.728" endtime="20210730 13:52:05.728"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:05.724" endtime="20210730 13:52:05.728"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:05.723" endtime="20210730 13:52:05.728"/>
</for>
<status status="FAIL" starttime="20210730 13:52:05.721" endtime="20210730 13:52:05.728"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:05.721" endtime="20210730 13:52:05.728"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=hakan123456789123456789</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:05.730" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:05.729" endtime="20210730 13:52:05.730"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:05.730" level="INFO">${payload} = {'username': 'hakan123456789123456789'}</msg>
<status status="PASS" starttime="20210730 13:52:05.730" endtime="20210730 13:52:05.730"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:05.734" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:05.734" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:05.731" endtime="20210730 13:52:05.734"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:05.734" endtime="20210730 13:52:05.735"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:05.735" endtime="20210730 13:52:05.735"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:05.730" endtime="20210730 13:52:05.735"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:05.730" endtime="20210730 13:52:05.735"/>
</for>
<status status="FAIL" starttime="20210730 13:52:05.729" endtime="20210730 13:52:05.735"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:05.729" endtime="20210730 13:52:05.735"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:05.708" endtime="20210730 13:52:05.735"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:05.741" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:05.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:05.751" level="INFO">${pids} = 12499
12506
12511</msg>
<status status="PASS" starttime="20210730 13:52:05.736" endtime="20210730 13:52:05.751"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:05.752" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:05.751" endtime="20210730 13:52:05.752"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:05.752" level="INFO">${pids} = ['12499', '12506', '12511']</msg>
<status status="PASS" starttime="20210730 13:52:05.752" endtime="20210730 13:52:05.752"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12499</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:05.756" level="INFO">Running command 'kill 12499 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:05.753" endtime="20210730 13:52:05.756"/>
</kw>
<status status="PASS" starttime="20210730 13:52:05.753" endtime="20210730 13:52:05.757"/>
</iter>
<iter>
<var name="${pid}">12506</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:05.760" level="INFO">Running command 'kill 12506 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:05.757" endtime="20210730 13:52:05.760"/>
</kw>
<status status="PASS" starttime="20210730 13:52:05.757" endtime="20210730 13:52:05.760"/>
</iter>
<iter>
<var name="${pid}">12511</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:05.765" level="INFO">Running command 'kill 12511 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:05.761" endtime="20210730 13:52:05.765"/>
</kw>
<status status="PASS" starttime="20210730 13:52:05.761" endtime="20210730 13:52:05.766"/>
</iter>
<status status="PASS" starttime="20210730 13:52:05.752" endtime="20210730 13:52:05.766"/>
</for>
<status status="PASS" starttime="20210730 13:52:05.752" endtime="20210730 13:52:05.766"/>
</branch>
<status status="PASS" starttime="20210730 13:52:05.752" endtime="20210730 13:52:05.766"/>
</if>
<status status="PASS" starttime="20210730 13:52:05.735" endtime="20210730 13:52:05.766"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": 'hakan123456789123456789'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:04.144" endtime="20210730 13:52:05.766">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t14" name="With Each Valid Token, Updating Username Of Each System User With #¤%123! Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:05.773" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:05.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:05.782" level="INFO">${pids} = 12540</msg>
<status status="PASS" starttime="20210730 13:52:05.769" endtime="20210730 13:52:05.782"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:05.783" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:05.783" endtime="20210730 13:52:05.783"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:05.784" level="INFO">${pids} = ['12540']</msg>
<status status="PASS" starttime="20210730 13:52:05.784" endtime="20210730 13:52:05.784"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12540</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:05.788" level="INFO">Running command 'kill 12540 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:05.784" endtime="20210730 13:52:05.788"/>
</kw>
<status status="PASS" starttime="20210730 13:52:05.784" endtime="20210730 13:52:05.788"/>
</iter>
<status status="PASS" starttime="20210730 13:52:05.784" endtime="20210730 13:52:05.788"/>
</for>
<status status="PASS" starttime="20210730 13:52:05.783" endtime="20210730 13:52:05.788"/>
</branch>
<status status="PASS" starttime="20210730 13:52:05.783" endtime="20210730 13:52:05.788"/>
</if>
<status status="PASS" starttime="20210730 13:52:05.768" endtime="20210730 13:52:05.789"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:05.790" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:05.789" endtime="20210730 13:52:05.790"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:05.791" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:05.791" endtime="20210730 13:52:05.791"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:05.791" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:05.791" endtime="20210730 13:52:05.791"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:05.792" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:05.791" endtime="20210730 13:52:05.792"/>
</kw>
<msg timestamp="20210730 13:52:05.792" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:05.790" endtime="20210730 13:52:05.792"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:05.795" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:05.792" endtime="20210730 13:52:05.797"/>
</kw>
<status status="PASS" starttime="20210730 13:52:05.789" endtime="20210730 13:52:05.797"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:05.799" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:05.798" endtime="20210730 13:52:05.805"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:07.309" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:05.805" endtime="20210730 13:52:07.310"/>
</kw>
<status status="PASS" starttime="20210730 13:52:05.798" endtime="20210730 13:52:07.310"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:07.311" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:07.311" endtime="20210730 13:52:07.311"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:07.312" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:07.311" endtime="20210730 13:52:07.312"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:07.312" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:07.312" endtime="20210730 13:52:07.312"/>
</kw>
<msg timestamp="20210730 13:52:07.312" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:07.311" endtime="20210730 13:52:07.312"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:07.313" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:07.312" endtime="20210730 13:52:07.313"/>
</kw>
<status status="PASS" starttime="20210730 13:52:07.310" endtime="20210730 13:52:07.313"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:07.314" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:07.314" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:07.314" endtime="20210730 13:52:07.314"/>
</kw>
<status status="PASS" starttime="20210730 13:52:07.313" endtime="20210730 13:52:07.314"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:07.315" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:07.316" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:07.314" endtime="20210730 13:52:07.316"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:07.316" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:07.316" endtime="20210730 13:52:07.316"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:07.317" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:07.316" endtime="20210730 13:52:07.317"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:07.317" endtime="20210730 13:52:07.318"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:07.318" endtime="20210730 13:52:07.318"/>
</kw>
<status status="PASS" starttime="20210730 13:52:07.316" endtime="20210730 13:52:07.318"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:07.318" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:07.318" endtime="20210730 13:52:07.318"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:07.319" endtime="20210730 13:52:07.319"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:07.319" endtime="20210730 13:52:07.320"/>
</kw>
<status status="PASS" starttime="20210730 13:52:07.318" endtime="20210730 13:52:07.320"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:07.320" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:07.320" endtime="20210730 13:52:07.320"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:07.321" endtime="20210730 13:52:07.321"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:07.321" endtime="20210730 13:52:07.322"/>
</kw>
<status status="PASS" starttime="20210730 13:52:07.320" endtime="20210730 13:52:07.322"/>
</iter>
<status status="PASS" starttime="20210730 13:52:07.316" endtime="20210730 13:52:07.322"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:07.322" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:07.322" endtime="20210730 13:52:07.322"/>
</kw>
<status status="PASS" starttime="20210730 13:52:07.314" endtime="20210730 13:52:07.322"/>
</kw>
<status status="PASS" starttime="20210730 13:52:05.768" endtime="20210730 13:52:07.323"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤%123!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:07.324" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:07.324" endtime="20210730 13:52:07.324"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:07.324" level="INFO">${payload} = {'username': '#¤%123!'}</msg>
<status status="PASS" starttime="20210730 13:52:07.324" endtime="20210730 13:52:07.324"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:07.334" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:07.334" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:07.325" endtime="20210730 13:52:07.334"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:07.334" endtime="20210730 13:52:07.335"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:07.335" endtime="20210730 13:52:07.335"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:07.325" endtime="20210730 13:52:07.335"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:07.324" endtime="20210730 13:52:07.335"/>
</for>
<status status="FAIL" starttime="20210730 13:52:07.323" endtime="20210730 13:52:07.335"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:07.323" endtime="20210730 13:52:07.335"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤%123!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:07.336" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:07.336" endtime="20210730 13:52:07.336"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:07.337" level="INFO">${payload} = {'username': '#¤%123!'}</msg>
<status status="PASS" starttime="20210730 13:52:07.336" endtime="20210730 13:52:07.337"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:07.341" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:07.341" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:07.337" endtime="20210730 13:52:07.341"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:07.341" endtime="20210730 13:52:07.341"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:07.341" endtime="20210730 13:52:07.342"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:07.337" endtime="20210730 13:52:07.342"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:07.337" endtime="20210730 13:52:07.342"/>
</for>
<status status="FAIL" starttime="20210730 13:52:07.335" endtime="20210730 13:52:07.342"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:07.335" endtime="20210730 13:52:07.342"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤%123!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:07.343" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:07.343" endtime="20210730 13:52:07.343"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:07.343" level="INFO">${payload} = {'username': '#¤%123!'}</msg>
<status status="PASS" starttime="20210730 13:52:07.343" endtime="20210730 13:52:07.343"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:07.348" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:07.348" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:07.344" endtime="20210730 13:52:07.348"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:07.348" endtime="20210730 13:52:07.348"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:07.348" endtime="20210730 13:52:07.348"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:07.344" endtime="20210730 13:52:07.348"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:07.343" endtime="20210730 13:52:07.349"/>
</for>
<status status="FAIL" starttime="20210730 13:52:07.342" endtime="20210730 13:52:07.349"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:07.342" endtime="20210730 13:52:07.349"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:07.323" endtime="20210730 13:52:07.349"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:07.355" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:07.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:07.364" level="INFO">${pids} = 12563
12570
12575</msg>
<status status="PASS" starttime="20210730 13:52:07.351" endtime="20210730 13:52:07.364"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:07.365" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:07.365" endtime="20210730 13:52:07.365"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:07.366" level="INFO">${pids} = ['12563', '12570', '12575']</msg>
<status status="PASS" starttime="20210730 13:52:07.366" endtime="20210730 13:52:07.366"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12563</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:07.371" level="INFO">Running command 'kill 12563 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:07.367" endtime="20210730 13:52:07.371"/>
</kw>
<status status="PASS" starttime="20210730 13:52:07.367" endtime="20210730 13:52:07.371"/>
</iter>
<iter>
<var name="${pid}">12570</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:07.374" level="INFO">Running command 'kill 12570 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:07.371" endtime="20210730 13:52:07.375"/>
</kw>
<status status="PASS" starttime="20210730 13:52:07.371" endtime="20210730 13:52:07.375"/>
</iter>
<iter>
<var name="${pid}">12575</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:07.377" level="INFO">Running command 'kill 12575 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:07.375" endtime="20210730 13:52:07.378"/>
</kw>
<status status="PASS" starttime="20210730 13:52:07.375" endtime="20210730 13:52:07.378"/>
</iter>
<status status="PASS" starttime="20210730 13:52:07.367" endtime="20210730 13:52:07.378"/>
</for>
<status status="PASS" starttime="20210730 13:52:07.366" endtime="20210730 13:52:07.378"/>
</branch>
<status status="PASS" starttime="20210730 13:52:07.366" endtime="20210730 13:52:07.378"/>
</if>
<status status="PASS" starttime="20210730 13:52:07.350" endtime="20210730 13:52:07.378"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤%123!'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:05.767" endtime="20210730 13:52:07.378">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t15" name="With Each Valid Token, Updating Username Of Each System User With #¤%123!&amp; Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:07.385" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:07.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:07.396" level="INFO">${pids} = 12604</msg>
<status status="PASS" starttime="20210730 13:52:07.380" endtime="20210730 13:52:07.396"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:07.397" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:07.396" endtime="20210730 13:52:07.397"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:07.397" level="INFO">${pids} = ['12604']</msg>
<status status="PASS" starttime="20210730 13:52:07.397" endtime="20210730 13:52:07.397"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12604</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:07.405" level="INFO">Running command 'kill 12604 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:07.398" endtime="20210730 13:52:07.414"/>
</kw>
<status status="PASS" starttime="20210730 13:52:07.398" endtime="20210730 13:52:07.415"/>
</iter>
<status status="PASS" starttime="20210730 13:52:07.398" endtime="20210730 13:52:07.415"/>
</for>
<status status="PASS" starttime="20210730 13:52:07.397" endtime="20210730 13:52:07.415"/>
</branch>
<status status="PASS" starttime="20210730 13:52:07.397" endtime="20210730 13:52:07.415"/>
</if>
<status status="PASS" starttime="20210730 13:52:07.380" endtime="20210730 13:52:07.415"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:07.417" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:07.416" endtime="20210730 13:52:07.417"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:07.418" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:07.417" endtime="20210730 13:52:07.418"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:07.419" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:07.418" endtime="20210730 13:52:07.419"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:07.420" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:07.419" endtime="20210730 13:52:07.420"/>
</kw>
<msg timestamp="20210730 13:52:07.420" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:07.417" endtime="20210730 13:52:07.420"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:07.423" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:07.420" endtime="20210730 13:52:07.425"/>
</kw>
<status status="PASS" starttime="20210730 13:52:07.416" endtime="20210730 13:52:07.425"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:07.426" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:07.426" endtime="20210730 13:52:07.431"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:08.933" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:07.431" endtime="20210730 13:52:08.933"/>
</kw>
<status status="PASS" starttime="20210730 13:52:07.425" endtime="20210730 13:52:08.933"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:08.935" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:08.934" endtime="20210730 13:52:08.935"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:08.935" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:08.935" endtime="20210730 13:52:08.935"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:08.935" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:08.935" endtime="20210730 13:52:08.935"/>
</kw>
<msg timestamp="20210730 13:52:08.935" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:08.934" endtime="20210730 13:52:08.935"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:08.936" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:08.936" endtime="20210730 13:52:08.936"/>
</kw>
<status status="PASS" starttime="20210730 13:52:08.934" endtime="20210730 13:52:08.936"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:08.937" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:08.937" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:08.937" endtime="20210730 13:52:08.937"/>
</kw>
<status status="PASS" starttime="20210730 13:52:08.936" endtime="20210730 13:52:08.937"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:08.938" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:08.938" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:08.938" endtime="20210730 13:52:08.938"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:08.938" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:08.938" endtime="20210730 13:52:08.938"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:08.939" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:08.939" endtime="20210730 13:52:08.939"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:08.939" endtime="20210730 13:52:08.940"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:08.940" endtime="20210730 13:52:08.940"/>
</kw>
<status status="PASS" starttime="20210730 13:52:08.939" endtime="20210730 13:52:08.940"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:08.941" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:08.941" endtime="20210730 13:52:08.941"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:08.941" endtime="20210730 13:52:08.942"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:08.942" endtime="20210730 13:52:08.942"/>
</kw>
<status status="PASS" starttime="20210730 13:52:08.940" endtime="20210730 13:52:08.942"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:08.942" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:08.942" endtime="20210730 13:52:08.942"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:08.943" endtime="20210730 13:52:08.943"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:08.943" endtime="20210730 13:52:08.944"/>
</kw>
<status status="PASS" starttime="20210730 13:52:08.942" endtime="20210730 13:52:08.944"/>
</iter>
<status status="PASS" starttime="20210730 13:52:08.938" endtime="20210730 13:52:08.944"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:08.944" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:08.944" endtime="20210730 13:52:08.944"/>
</kw>
<status status="PASS" starttime="20210730 13:52:08.937" endtime="20210730 13:52:08.944"/>
</kw>
<status status="PASS" starttime="20210730 13:52:07.380" endtime="20210730 13:52:08.944"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤%123!&amp;</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:08.946" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:08.945" endtime="20210730 13:52:08.946"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:08.946" level="INFO">${payload} = {'username': '#¤%123!&amp;'}</msg>
<status status="PASS" starttime="20210730 13:52:08.946" endtime="20210730 13:52:08.946"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:08.956" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:08.957" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:08.946" endtime="20210730 13:52:08.957"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:08.957" endtime="20210730 13:52:08.957"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:08.957" endtime="20210730 13:52:08.957"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:08.946" endtime="20210730 13:52:08.957"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:08.946" endtime="20210730 13:52:08.957"/>
</for>
<status status="FAIL" starttime="20210730 13:52:08.945" endtime="20210730 13:52:08.957"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:08.945" endtime="20210730 13:52:08.957"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤%123!&amp;</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:08.959" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:08.958" endtime="20210730 13:52:08.959"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:08.959" level="INFO">${payload} = {'username': '#¤%123!&amp;'}</msg>
<status status="PASS" starttime="20210730 13:52:08.959" endtime="20210730 13:52:08.959"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:08.963" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:08.963" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:08.959" endtime="20210730 13:52:08.964"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:08.964" endtime="20210730 13:52:08.964"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:08.964" endtime="20210730 13:52:08.964"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:08.959" endtime="20210730 13:52:08.964"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:08.959" endtime="20210730 13:52:08.964"/>
</for>
<status status="FAIL" starttime="20210730 13:52:08.957" endtime="20210730 13:52:08.964"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:08.957" endtime="20210730 13:52:08.964"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤%123!&amp;</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:08.965" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:08.965" endtime="20210730 13:52:08.965"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:08.966" level="INFO">${payload} = {'username': '#¤%123!&amp;'}</msg>
<status status="PASS" starttime="20210730 13:52:08.965" endtime="20210730 13:52:08.966"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:08.970" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:08.970" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:08.966" endtime="20210730 13:52:08.970"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:08.970" endtime="20210730 13:52:08.970"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:08.970" endtime="20210730 13:52:08.970"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:08.966" endtime="20210730 13:52:08.971"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:08.966" endtime="20210730 13:52:08.971"/>
</for>
<status status="FAIL" starttime="20210730 13:52:08.964" endtime="20210730 13:52:08.971"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:08.964" endtime="20210730 13:52:08.971"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:08.944" endtime="20210730 13:52:08.971"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:08.977" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:08.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:08.987" level="INFO">${pids} = 12627
12634
12638</msg>
<status status="PASS" starttime="20210730 13:52:08.972" endtime="20210730 13:52:08.987"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:08.988" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:08.988" endtime="20210730 13:52:08.988"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:08.989" level="INFO">${pids} = ['12627', '12634', '12638']</msg>
<status status="PASS" starttime="20210730 13:52:08.989" endtime="20210730 13:52:08.989"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12627</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:08.992" level="INFO">Running command 'kill 12627 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:08.989" endtime="20210730 13:52:08.993"/>
</kw>
<status status="PASS" starttime="20210730 13:52:08.989" endtime="20210730 13:52:08.993"/>
</iter>
<iter>
<var name="${pid}">12634</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:08.995" level="INFO">Running command 'kill 12634 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:08.993" endtime="20210730 13:52:08.996"/>
</kw>
<status status="PASS" starttime="20210730 13:52:08.993" endtime="20210730 13:52:08.996"/>
</iter>
<iter>
<var name="${pid}">12638</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:08.999" level="INFO">Running command 'kill 12638 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:08.996" endtime="20210730 13:52:09.000"/>
</kw>
<status status="PASS" starttime="20210730 13:52:08.996" endtime="20210730 13:52:09.000"/>
</iter>
<status status="PASS" starttime="20210730 13:52:08.989" endtime="20210730 13:52:09.000"/>
</for>
<status status="PASS" starttime="20210730 13:52:08.989" endtime="20210730 13:52:09.000"/>
</branch>
<status status="PASS" starttime="20210730 13:52:08.988" endtime="20210730 13:52:09.000"/>
</if>
<status status="PASS" starttime="20210730 13:52:08.971" endtime="20210730 13:52:09.001"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤%123!&amp;'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:07.379" endtime="20210730 13:52:09.001">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t16" name="With Each Valid Token, Updating Username Of Each System User With #¤%123!&amp;7683##()=?@#¤%&amp;34567 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:09.008" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:09.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:09.017" level="INFO">${pids} = 12667</msg>
<status status="PASS" starttime="20210730 13:52:09.004" endtime="20210730 13:52:09.017"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:09.018" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:09.018" endtime="20210730 13:52:09.018"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:09.019" level="INFO">${pids} = ['12667']</msg>
<status status="PASS" starttime="20210730 13:52:09.019" endtime="20210730 13:52:09.019"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12667</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:09.023" level="INFO">Running command 'kill 12667 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:09.019" endtime="20210730 13:52:09.023"/>
</kw>
<status status="PASS" starttime="20210730 13:52:09.019" endtime="20210730 13:52:09.023"/>
</iter>
<status status="PASS" starttime="20210730 13:52:09.019" endtime="20210730 13:52:09.023"/>
</for>
<status status="PASS" starttime="20210730 13:52:09.018" endtime="20210730 13:52:09.023"/>
</branch>
<status status="PASS" starttime="20210730 13:52:09.018" endtime="20210730 13:52:09.023"/>
</if>
<status status="PASS" starttime="20210730 13:52:09.003" endtime="20210730 13:52:09.023"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:09.025" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:09.024" endtime="20210730 13:52:09.025"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:09.025" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:09.025" endtime="20210730 13:52:09.025"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:09.025" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:09.025" endtime="20210730 13:52:09.025"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:09.026" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:09.026" endtime="20210730 13:52:09.026"/>
</kw>
<msg timestamp="20210730 13:52:09.026" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:09.025" endtime="20210730 13:52:09.026"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:09.029" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:09.026" endtime="20210730 13:52:09.031"/>
</kw>
<status status="PASS" starttime="20210730 13:52:09.024" endtime="20210730 13:52:09.031"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:09.032" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:09.032" endtime="20210730 13:52:09.040"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:10.543" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:09.040" endtime="20210730 13:52:10.543"/>
</kw>
<status status="PASS" starttime="20210730 13:52:09.031" endtime="20210730 13:52:10.544"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:10.545" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:10.545" endtime="20210730 13:52:10.545"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:10.545" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:10.545" endtime="20210730 13:52:10.545"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:10.550" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:10.549" endtime="20210730 13:52:10.550"/>
</kw>
<msg timestamp="20210730 13:52:10.550" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:10.544" endtime="20210730 13:52:10.551"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:10.551" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:10.551" endtime="20210730 13:52:10.551"/>
</kw>
<status status="PASS" starttime="20210730 13:52:10.544" endtime="20210730 13:52:10.552"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:10.552" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:10.552" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:10.552" endtime="20210730 13:52:10.552"/>
</kw>
<status status="PASS" starttime="20210730 13:52:10.552" endtime="20210730 13:52:10.552"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:10.554" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:10.554" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:10.553" endtime="20210730 13:52:10.554"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:10.554" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:10.554" endtime="20210730 13:52:10.554"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:10.555" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:10.555" endtime="20210730 13:52:10.555"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:10.555" endtime="20210730 13:52:10.556"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:10.556" endtime="20210730 13:52:10.556"/>
</kw>
<status status="PASS" starttime="20210730 13:52:10.555" endtime="20210730 13:52:10.556"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:10.557" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:10.557" endtime="20210730 13:52:10.557"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:10.557" endtime="20210730 13:52:10.558"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:10.558" endtime="20210730 13:52:10.558"/>
</kw>
<status status="PASS" starttime="20210730 13:52:10.556" endtime="20210730 13:52:10.558"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:10.559" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:10.558" endtime="20210730 13:52:10.559"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:10.559" endtime="20210730 13:52:10.560"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:10.560" endtime="20210730 13:52:10.560"/>
</kw>
<status status="PASS" starttime="20210730 13:52:10.558" endtime="20210730 13:52:10.560"/>
</iter>
<status status="PASS" starttime="20210730 13:52:10.554" endtime="20210730 13:52:10.560"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:10.560" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:10.560" endtime="20210730 13:52:10.561"/>
</kw>
<status status="PASS" starttime="20210730 13:52:10.553" endtime="20210730 13:52:10.561"/>
</kw>
<status status="PASS" starttime="20210730 13:52:09.003" endtime="20210730 13:52:10.561"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤%123!&amp;7683##()=?@#¤%&amp;34567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:10.562" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:10.562" endtime="20210730 13:52:10.562"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:10.563" level="INFO">${payload} = {'username': '#¤%123!&amp;7683##()=?@#¤%&amp;34567'}</msg>
<status status="PASS" starttime="20210730 13:52:10.562" endtime="20210730 13:52:10.563"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:10.572" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:10.572" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:10.563" endtime="20210730 13:52:10.572"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:10.572" endtime="20210730 13:52:10.572"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:10.572" endtime="20210730 13:52:10.572"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:10.563" endtime="20210730 13:52:10.572"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:10.563" endtime="20210730 13:52:10.573"/>
</for>
<status status="FAIL" starttime="20210730 13:52:10.561" endtime="20210730 13:52:10.573"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:10.561" endtime="20210730 13:52:10.573"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤%123!&amp;7683##()=?@#¤%&amp;34567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:10.574" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:10.573" endtime="20210730 13:52:10.574"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:10.574" level="INFO">${payload} = {'username': '#¤%123!&amp;7683##()=?@#¤%&amp;34567'}</msg>
<status status="PASS" starttime="20210730 13:52:10.574" endtime="20210730 13:52:10.574"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:10.578" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:10.579" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:10.575" endtime="20210730 13:52:10.579"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:10.579" endtime="20210730 13:52:10.579"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:10.579" endtime="20210730 13:52:10.579"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:10.574" endtime="20210730 13:52:10.579"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:10.574" endtime="20210730 13:52:10.579"/>
</for>
<status status="FAIL" starttime="20210730 13:52:10.573" endtime="20210730 13:52:10.579"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:10.573" endtime="20210730 13:52:10.579"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤%123!&amp;7683##()=?@#¤%&amp;34567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:10.580" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:10.580" endtime="20210730 13:52:10.580"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:10.581" level="INFO">${payload} = {'username': '#¤%123!&amp;7683##()=?@#¤%&amp;34567'}</msg>
<status status="PASS" starttime="20210730 13:52:10.581" endtime="20210730 13:52:10.581"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:10.585" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:10.585" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:10.581" endtime="20210730 13:52:10.585"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:10.586" endtime="20210730 13:52:10.586"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:10.586" endtime="20210730 13:52:10.586"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:10.581" endtime="20210730 13:52:10.586"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:10.581" endtime="20210730 13:52:10.586"/>
</for>
<status status="FAIL" starttime="20210730 13:52:10.579" endtime="20210730 13:52:10.586"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:10.579" endtime="20210730 13:52:10.586"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:10.561" endtime="20210730 13:52:10.586"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:10.593" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:10.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:10.602" level="INFO">${pids} = 12690
12697
12702</msg>
<status status="PASS" starttime="20210730 13:52:10.587" endtime="20210730 13:52:10.602"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:10.603" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:10.602" endtime="20210730 13:52:10.603"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:10.603" level="INFO">${pids} = ['12690', '12697', '12702']</msg>
<status status="PASS" starttime="20210730 13:52:10.603" endtime="20210730 13:52:10.604"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12690</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:10.607" level="INFO">Running command 'kill 12690 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:10.604" endtime="20210730 13:52:10.608"/>
</kw>
<status status="PASS" starttime="20210730 13:52:10.604" endtime="20210730 13:52:10.608"/>
</iter>
<iter>
<var name="${pid}">12697</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:10.611" level="INFO">Running command 'kill 12697 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:10.608" endtime="20210730 13:52:10.611"/>
</kw>
<status status="PASS" starttime="20210730 13:52:10.608" endtime="20210730 13:52:10.611"/>
</iter>
<iter>
<var name="${pid}">12702</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:10.614" level="INFO">Running command 'kill 12702 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:10.612" endtime="20210730 13:52:10.615"/>
</kw>
<status status="PASS" starttime="20210730 13:52:10.612" endtime="20210730 13:52:10.615"/>
</iter>
<status status="PASS" starttime="20210730 13:52:10.604" endtime="20210730 13:52:10.615"/>
</for>
<status status="PASS" starttime="20210730 13:52:10.603" endtime="20210730 13:52:10.615"/>
</branch>
<status status="PASS" starttime="20210730 13:52:10.603" endtime="20210730 13:52:10.615"/>
</if>
<status status="PASS" starttime="20210730 13:52:10.587" endtime="20210730 13:52:10.616"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤%123!&amp;7683##()=?@#¤%&amp;34567'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:09.001" endtime="20210730 13:52:10.616">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t17" name="With Each Valid Token, Updating Username Of Each System User With #¤123ab Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:10.627" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:10.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:10.637" level="INFO">${pids} = 12731</msg>
<status status="PASS" starttime="20210730 13:52:10.618" endtime="20210730 13:52:10.637"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:10.638" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:10.638" endtime="20210730 13:52:10.638"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:10.639" level="INFO">${pids} = ['12731']</msg>
<status status="PASS" starttime="20210730 13:52:10.639" endtime="20210730 13:52:10.639"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12731</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:10.651" level="INFO">Running command 'kill 12731 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:10.640" endtime="20210730 13:52:10.652"/>
</kw>
<status status="PASS" starttime="20210730 13:52:10.639" endtime="20210730 13:52:10.652"/>
</iter>
<status status="PASS" starttime="20210730 13:52:10.639" endtime="20210730 13:52:10.652"/>
</for>
<status status="PASS" starttime="20210730 13:52:10.639" endtime="20210730 13:52:10.652"/>
</branch>
<status status="PASS" starttime="20210730 13:52:10.638" endtime="20210730 13:52:10.652"/>
</if>
<status status="PASS" starttime="20210730 13:52:10.618" endtime="20210730 13:52:10.652"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:10.655" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:10.654" endtime="20210730 13:52:10.655"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:10.656" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:10.656" endtime="20210730 13:52:10.656"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:10.657" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:10.656" endtime="20210730 13:52:10.657"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:10.657" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:10.657" endtime="20210730 13:52:10.657"/>
</kw>
<msg timestamp="20210730 13:52:10.657" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:10.655" endtime="20210730 13:52:10.657"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:10.660" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:10.657" endtime="20210730 13:52:10.662"/>
</kw>
<status status="PASS" starttime="20210730 13:52:10.653" endtime="20210730 13:52:10.662"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:10.663" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:10.663" endtime="20210730 13:52:10.667"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:12.168" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:10.667" endtime="20210730 13:52:12.168"/>
</kw>
<status status="PASS" starttime="20210730 13:52:10.662" endtime="20210730 13:52:12.168"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:12.169" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:12.169" endtime="20210730 13:52:12.169"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:12.170" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:12.170" endtime="20210730 13:52:12.170"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:12.171" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:12.170" endtime="20210730 13:52:12.171"/>
</kw>
<msg timestamp="20210730 13:52:12.171" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:12.169" endtime="20210730 13:52:12.171"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:12.171" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:12.171" endtime="20210730 13:52:12.172"/>
</kw>
<status status="PASS" starttime="20210730 13:52:12.168" endtime="20210730 13:52:12.172"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:12.172" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:12.172" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:12.172" endtime="20210730 13:52:12.172"/>
</kw>
<status status="PASS" starttime="20210730 13:52:12.172" endtime="20210730 13:52:12.173"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:12.173" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:12.173" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:12.173" endtime="20210730 13:52:12.173"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:12.174" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:12.174" endtime="20210730 13:52:12.174"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:12.174" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:12.174" endtime="20210730 13:52:12.174"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:12.174" endtime="20210730 13:52:12.175"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:12.175" endtime="20210730 13:52:12.175"/>
</kw>
<status status="PASS" starttime="20210730 13:52:12.174" endtime="20210730 13:52:12.175"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:12.176" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:12.176" endtime="20210730 13:52:12.176"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:12.176" endtime="20210730 13:52:12.177"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:12.177" endtime="20210730 13:52:12.177"/>
</kw>
<status status="PASS" starttime="20210730 13:52:12.176" endtime="20210730 13:52:12.177"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:12.177" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:12.177" endtime="20210730 13:52:12.177"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:12.177" endtime="20210730 13:52:12.178"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:12.178" endtime="20210730 13:52:12.178"/>
</kw>
<status status="PASS" starttime="20210730 13:52:12.177" endtime="20210730 13:52:12.178"/>
</iter>
<status status="PASS" starttime="20210730 13:52:12.174" endtime="20210730 13:52:12.179"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:12.179" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:12.179" endtime="20210730 13:52:12.179"/>
</kw>
<status status="PASS" starttime="20210730 13:52:12.173" endtime="20210730 13:52:12.179"/>
</kw>
<status status="PASS" starttime="20210730 13:52:10.617" endtime="20210730 13:52:12.179"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤123ab</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:12.180" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:12.180" endtime="20210730 13:52:12.180"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:12.181" level="INFO">${payload} = {'username': '#¤123ab'}</msg>
<status status="PASS" starttime="20210730 13:52:12.180" endtime="20210730 13:52:12.181"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:12.191" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:12.191" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:12.181" endtime="20210730 13:52:12.191"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:12.191" endtime="20210730 13:52:12.191"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:12.191" endtime="20210730 13:52:12.191"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:12.181" endtime="20210730 13:52:12.191"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:12.181" endtime="20210730 13:52:12.191"/>
</for>
<status status="FAIL" starttime="20210730 13:52:12.180" endtime="20210730 13:52:12.192"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:12.180" endtime="20210730 13:52:12.192"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤123ab</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:12.193" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:12.192" endtime="20210730 13:52:12.193"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:12.193" level="INFO">${payload} = {'username': '#¤123ab'}</msg>
<status status="PASS" starttime="20210730 13:52:12.193" endtime="20210730 13:52:12.193"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:12.198" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:12.198" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:12.194" endtime="20210730 13:52:12.198"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:12.198" endtime="20210730 13:52:12.198"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:12.198" endtime="20210730 13:52:12.198"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:12.194" endtime="20210730 13:52:12.199"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:12.193" endtime="20210730 13:52:12.199"/>
</for>
<status status="FAIL" starttime="20210730 13:52:12.192" endtime="20210730 13:52:12.199"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:12.192" endtime="20210730 13:52:12.199"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤123ab</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:12.200" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:12.200" endtime="20210730 13:52:12.200"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:12.200" level="INFO">${payload} = {'username': '#¤123ab'}</msg>
<status status="PASS" starttime="20210730 13:52:12.200" endtime="20210730 13:52:12.200"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:12.204" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:12.205" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:12.201" endtime="20210730 13:52:12.205"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:12.205" endtime="20210730 13:52:12.205"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:12.205" endtime="20210730 13:52:12.205"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:12.201" endtime="20210730 13:52:12.205"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:12.200" endtime="20210730 13:52:12.205"/>
</for>
<status status="FAIL" starttime="20210730 13:52:12.199" endtime="20210730 13:52:12.205"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:12.199" endtime="20210730 13:52:12.205"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:12.179" endtime="20210730 13:52:12.206"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:12.211" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:12.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:12.222" level="INFO">${pids} = 12754
12761
12765</msg>
<status status="PASS" starttime="20210730 13:52:12.207" endtime="20210730 13:52:12.222"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:12.223" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:12.222" endtime="20210730 13:52:12.223"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:12.224" level="INFO">${pids} = ['12754', '12761', '12765']</msg>
<status status="PASS" starttime="20210730 13:52:12.223" endtime="20210730 13:52:12.224"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12754</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:12.227" level="INFO">Running command 'kill 12754 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:12.224" endtime="20210730 13:52:12.227"/>
</kw>
<status status="PASS" starttime="20210730 13:52:12.224" endtime="20210730 13:52:12.227"/>
</iter>
<iter>
<var name="${pid}">12761</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:12.230" level="INFO">Running command 'kill 12761 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:12.227" endtime="20210730 13:52:12.231"/>
</kw>
<status status="PASS" starttime="20210730 13:52:12.227" endtime="20210730 13:52:12.231"/>
</iter>
<iter>
<var name="${pid}">12765</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:12.235" level="INFO">Running command 'kill 12765 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:12.232" endtime="20210730 13:52:12.236"/>
</kw>
<status status="PASS" starttime="20210730 13:52:12.231" endtime="20210730 13:52:12.236"/>
</iter>
<status status="PASS" starttime="20210730 13:52:12.224" endtime="20210730 13:52:12.236"/>
</for>
<status status="PASS" starttime="20210730 13:52:12.223" endtime="20210730 13:52:12.236"/>
</branch>
<status status="PASS" starttime="20210730 13:52:12.223" endtime="20210730 13:52:12.236"/>
</if>
<status status="PASS" starttime="20210730 13:52:12.206" endtime="20210730 13:52:12.236"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤123ab'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:10.617" endtime="20210730 13:52:12.237">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t18" name="With Each Valid Token, Updating Username Of Each System User With #¤123abc Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:12.242" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:12.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:12.252" level="INFO">${pids} = 12794</msg>
<status status="PASS" starttime="20210730 13:52:12.239" endtime="20210730 13:52:12.252"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:12.253" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:12.252" endtime="20210730 13:52:12.253"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:12.254" level="INFO">${pids} = ['12794']</msg>
<status status="PASS" starttime="20210730 13:52:12.253" endtime="20210730 13:52:12.254"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12794</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:12.258" level="INFO">Running command 'kill 12794 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:12.254" endtime="20210730 13:52:12.258"/>
</kw>
<status status="PASS" starttime="20210730 13:52:12.254" endtime="20210730 13:52:12.258"/>
</iter>
<status status="PASS" starttime="20210730 13:52:12.254" endtime="20210730 13:52:12.258"/>
</for>
<status status="PASS" starttime="20210730 13:52:12.253" endtime="20210730 13:52:12.258"/>
</branch>
<status status="PASS" starttime="20210730 13:52:12.253" endtime="20210730 13:52:12.259"/>
</if>
<status status="PASS" starttime="20210730 13:52:12.239" endtime="20210730 13:52:12.259"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:12.260" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:12.260" endtime="20210730 13:52:12.260"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:12.260" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:12.260" endtime="20210730 13:52:12.260"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:12.261" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:12.261" endtime="20210730 13:52:12.261"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:12.261" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:12.261" endtime="20210730 13:52:12.261"/>
</kw>
<msg timestamp="20210730 13:52:12.261" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:12.260" endtime="20210730 13:52:12.261"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:12.264" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:12.261" endtime="20210730 13:52:12.266"/>
</kw>
<status status="PASS" starttime="20210730 13:52:12.259" endtime="20210730 13:52:12.266"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:12.267" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:12.267" endtime="20210730 13:52:12.276"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:13.778" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:12.276" endtime="20210730 13:52:13.778"/>
</kw>
<status status="PASS" starttime="20210730 13:52:12.266" endtime="20210730 13:52:13.778"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:13.779" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:13.779" endtime="20210730 13:52:13.779"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:13.780" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:13.780" endtime="20210730 13:52:13.780"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:13.781" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:13.780" endtime="20210730 13:52:13.781"/>
</kw>
<msg timestamp="20210730 13:52:13.781" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:13.779" endtime="20210730 13:52:13.781"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:13.782" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:13.781" endtime="20210730 13:52:13.782"/>
</kw>
<status status="PASS" starttime="20210730 13:52:13.778" endtime="20210730 13:52:13.783"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:13.783" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:13.783" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:13.783" endtime="20210730 13:52:13.783"/>
</kw>
<status status="PASS" starttime="20210730 13:52:13.783" endtime="20210730 13:52:13.784"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:13.784" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:13.785" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:13.784" endtime="20210730 13:52:13.785"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:13.785" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:13.785" endtime="20210730 13:52:13.785"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:13.785" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:13.785" endtime="20210730 13:52:13.785"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:13.786" endtime="20210730 13:52:13.786"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:13.786" endtime="20210730 13:52:13.787"/>
</kw>
<status status="PASS" starttime="20210730 13:52:13.785" endtime="20210730 13:52:13.787"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:13.787" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:13.787" endtime="20210730 13:52:13.787"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:13.787" endtime="20210730 13:52:13.788"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:13.788" endtime="20210730 13:52:13.789"/>
</kw>
<status status="PASS" starttime="20210730 13:52:13.787" endtime="20210730 13:52:13.789"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:13.789" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:13.789" endtime="20210730 13:52:13.789"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:13.789" endtime="20210730 13:52:13.790"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:13.790" endtime="20210730 13:52:13.791"/>
</kw>
<status status="PASS" starttime="20210730 13:52:13.789" endtime="20210730 13:52:13.791"/>
</iter>
<status status="PASS" starttime="20210730 13:52:13.785" endtime="20210730 13:52:13.791"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:13.791" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:13.791" endtime="20210730 13:52:13.791"/>
</kw>
<status status="PASS" starttime="20210730 13:52:13.784" endtime="20210730 13:52:13.791"/>
</kw>
<status status="PASS" starttime="20210730 13:52:12.238" endtime="20210730 13:52:13.791"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤123abc</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:13.793" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:13.792" endtime="20210730 13:52:13.793"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:13.793" level="INFO">${payload} = {'username': '#¤123abc'}</msg>
<status status="PASS" starttime="20210730 13:52:13.793" endtime="20210730 13:52:13.793"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:13.802" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:13.802" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:13.793" endtime="20210730 13:52:13.802"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:13.802" endtime="20210730 13:52:13.802"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:13.803" endtime="20210730 13:52:13.803"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:13.793" endtime="20210730 13:52:13.803"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:13.793" endtime="20210730 13:52:13.803"/>
</for>
<status status="FAIL" starttime="20210730 13:52:13.792" endtime="20210730 13:52:13.803"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:13.792" endtime="20210730 13:52:13.803"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤123abc</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:13.804" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:13.804" endtime="20210730 13:52:13.804"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:13.805" level="INFO">${payload} = {'username': '#¤123abc'}</msg>
<status status="PASS" starttime="20210730 13:52:13.805" endtime="20210730 13:52:13.805"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:13.809" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:13.809" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:13.805" endtime="20210730 13:52:13.809"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:13.809" endtime="20210730 13:52:13.809"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:13.810" endtime="20210730 13:52:13.810"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:13.805" endtime="20210730 13:52:13.810"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:13.805" endtime="20210730 13:52:13.810"/>
</for>
<status status="FAIL" starttime="20210730 13:52:13.803" endtime="20210730 13:52:13.810"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:13.803" endtime="20210730 13:52:13.810"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤123abc</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:13.812" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:13.811" endtime="20210730 13:52:13.812"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:13.812" level="INFO">${payload} = {'username': '#¤123abc'}</msg>
<status status="PASS" starttime="20210730 13:52:13.812" endtime="20210730 13:52:13.812"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:13.816" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:13.817" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:13.813" endtime="20210730 13:52:13.817"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:13.817" endtime="20210730 13:52:13.817"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:13.817" endtime="20210730 13:52:13.817"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:13.812" endtime="20210730 13:52:13.817"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:13.812" endtime="20210730 13:52:13.817"/>
</for>
<status status="FAIL" starttime="20210730 13:52:13.811" endtime="20210730 13:52:13.817"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:13.810" endtime="20210730 13:52:13.818"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:13.792" endtime="20210730 13:52:13.818"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:13.826" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:13.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:13.835" level="INFO">${pids} = 12817
12824
12828</msg>
<status status="PASS" starttime="20210730 13:52:13.819" endtime="20210730 13:52:13.835"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:13.835" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:13.835" endtime="20210730 13:52:13.835"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:13.836" level="INFO">${pids} = ['12817', '12824', '12828']</msg>
<status status="PASS" starttime="20210730 13:52:13.836" endtime="20210730 13:52:13.836"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12817</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:13.839" level="INFO">Running command 'kill 12817 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:13.836" endtime="20210730 13:52:13.840"/>
</kw>
<status status="PASS" starttime="20210730 13:52:13.836" endtime="20210730 13:52:13.840"/>
</iter>
<iter>
<var name="${pid}">12824</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:13.843" level="INFO">Running command 'kill 12824 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:13.840" endtime="20210730 13:52:13.843"/>
</kw>
<status status="PASS" starttime="20210730 13:52:13.840" endtime="20210730 13:52:13.843"/>
</iter>
<iter>
<var name="${pid}">12828</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:13.847" level="INFO">Running command 'kill 12828 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:13.844" endtime="20210730 13:52:13.847"/>
</kw>
<status status="PASS" starttime="20210730 13:52:13.844" endtime="20210730 13:52:13.847"/>
</iter>
<status status="PASS" starttime="20210730 13:52:13.836" endtime="20210730 13:52:13.847"/>
</for>
<status status="PASS" starttime="20210730 13:52:13.836" endtime="20210730 13:52:13.847"/>
</branch>
<status status="PASS" starttime="20210730 13:52:13.835" endtime="20210730 13:52:13.847"/>
</if>
<status status="PASS" starttime="20210730 13:52:13.818" endtime="20210730 13:52:13.848"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤123abc'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:12.238" endtime="20210730 13:52:13.848">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t19" name="With Each Valid Token, Updating Username Of Each System User With #¤/&amp;¤!!123abc456hjk Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:13.855" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:13.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:13.865" level="INFO">${pids} = 12857</msg>
<status status="PASS" starttime="20210730 13:52:13.851" endtime="20210730 13:52:13.865"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:13.866" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:13.865" endtime="20210730 13:52:13.866"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:13.866" level="INFO">${pids} = ['12857']</msg>
<status status="PASS" starttime="20210730 13:52:13.866" endtime="20210730 13:52:13.866"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12857</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:13.869" level="INFO">Running command 'kill 12857 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:13.867" endtime="20210730 13:52:13.870"/>
</kw>
<status status="PASS" starttime="20210730 13:52:13.867" endtime="20210730 13:52:13.870"/>
</iter>
<status status="PASS" starttime="20210730 13:52:13.866" endtime="20210730 13:52:13.870"/>
</for>
<status status="PASS" starttime="20210730 13:52:13.866" endtime="20210730 13:52:13.870"/>
</branch>
<status status="PASS" starttime="20210730 13:52:13.866" endtime="20210730 13:52:13.870"/>
</if>
<status status="PASS" starttime="20210730 13:52:13.850" endtime="20210730 13:52:13.871"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:13.872" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:13.871" endtime="20210730 13:52:13.872"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:13.872" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:13.872" endtime="20210730 13:52:13.872"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:13.872" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:13.872" endtime="20210730 13:52:13.872"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:13.873" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:13.873" endtime="20210730 13:52:13.873"/>
</kw>
<msg timestamp="20210730 13:52:13.873" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:13.872" endtime="20210730 13:52:13.873"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:13.876" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:13.873" endtime="20210730 13:52:13.877"/>
</kw>
<status status="PASS" starttime="20210730 13:52:13.871" endtime="20210730 13:52:13.878"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:13.879" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:13.878" endtime="20210730 13:52:13.885"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:15.386" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:13.885" endtime="20210730 13:52:15.386"/>
</kw>
<status status="PASS" starttime="20210730 13:52:13.878" endtime="20210730 13:52:15.386"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:15.388" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:15.387" endtime="20210730 13:52:15.388"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:15.388" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:15.388" endtime="20210730 13:52:15.388"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:15.389" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:15.388" endtime="20210730 13:52:15.389"/>
</kw>
<msg timestamp="20210730 13:52:15.389" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:15.387" endtime="20210730 13:52:15.389"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:15.389" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:15.389" endtime="20210730 13:52:15.390"/>
</kw>
<status status="PASS" starttime="20210730 13:52:15.386" endtime="20210730 13:52:15.390"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:15.391" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:15.391" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:15.391" endtime="20210730 13:52:15.391"/>
</kw>
<status status="PASS" starttime="20210730 13:52:15.390" endtime="20210730 13:52:15.391"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:15.392" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:15.392" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:15.391" endtime="20210730 13:52:15.392"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:15.392" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:15.392" endtime="20210730 13:52:15.392"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:15.393" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:15.393" endtime="20210730 13:52:15.393"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:15.393" endtime="20210730 13:52:15.394"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:15.394" endtime="20210730 13:52:15.394"/>
</kw>
<status status="PASS" starttime="20210730 13:52:15.392" endtime="20210730 13:52:15.394"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:15.394" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:15.394" endtime="20210730 13:52:15.394"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:15.394" endtime="20210730 13:52:15.395"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:15.395" endtime="20210730 13:52:15.395"/>
</kw>
<status status="PASS" starttime="20210730 13:52:15.394" endtime="20210730 13:52:15.395"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:15.396" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:15.396" endtime="20210730 13:52:15.396"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:15.396" endtime="20210730 13:52:15.397"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:15.397" endtime="20210730 13:52:15.397"/>
</kw>
<status status="PASS" starttime="20210730 13:52:15.396" endtime="20210730 13:52:15.397"/>
</iter>
<status status="PASS" starttime="20210730 13:52:15.392" endtime="20210730 13:52:15.397"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:15.397" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:15.397" endtime="20210730 13:52:15.398"/>
</kw>
<status status="PASS" starttime="20210730 13:52:15.391" endtime="20210730 13:52:15.398"/>
</kw>
<status status="PASS" starttime="20210730 13:52:13.850" endtime="20210730 13:52:15.398"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/&amp;¤!!123abc456hjk</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:15.399" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:15.399" endtime="20210730 13:52:15.399"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:15.399" level="INFO">${payload} = {'username': '#¤/&amp;¤!!123abc456hjk'}</msg>
<status status="PASS" starttime="20210730 13:52:15.399" endtime="20210730 13:52:15.399"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:15.408" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:15.408" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:15.400" endtime="20210730 13:52:15.408"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:15.408" endtime="20210730 13:52:15.408"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:15.408" endtime="20210730 13:52:15.408"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:15.400" endtime="20210730 13:52:15.408"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:15.399" endtime="20210730 13:52:15.408"/>
</for>
<status status="FAIL" starttime="20210730 13:52:15.398" endtime="20210730 13:52:15.409"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:15.398" endtime="20210730 13:52:15.409"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/&amp;¤!!123abc456hjk</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:15.410" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:15.410" endtime="20210730 13:52:15.410"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:15.411" level="INFO">${payload} = {'username': '#¤/&amp;¤!!123abc456hjk'}</msg>
<status status="PASS" starttime="20210730 13:52:15.411" endtime="20210730 13:52:15.411"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:15.416" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:15.417" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:15.412" endtime="20210730 13:52:15.417"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:15.417" endtime="20210730 13:52:15.417"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:15.417" endtime="20210730 13:52:15.417"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:15.412" endtime="20210730 13:52:15.417"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:15.411" endtime="20210730 13:52:15.417"/>
</for>
<status status="FAIL" starttime="20210730 13:52:15.409" endtime="20210730 13:52:15.417"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:15.409" endtime="20210730 13:52:15.417"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/&amp;¤!!123abc456hjk</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:15.418" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:15.418" endtime="20210730 13:52:15.418"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:15.419" level="INFO">${payload} = {'username': '#¤/&amp;¤!!123abc456hjk'}</msg>
<status status="PASS" starttime="20210730 13:52:15.419" endtime="20210730 13:52:15.419"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:15.423" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:15.424" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:15.419" endtime="20210730 13:52:15.424"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:15.424" endtime="20210730 13:52:15.424"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:15.424" endtime="20210730 13:52:15.424"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:15.419" endtime="20210730 13:52:15.424"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:15.419" endtime="20210730 13:52:15.424"/>
</for>
<status status="FAIL" starttime="20210730 13:52:15.418" endtime="20210730 13:52:15.424"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:15.418" endtime="20210730 13:52:15.424"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:15.398" endtime="20210730 13:52:15.424"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:15.429" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:15.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:15.438" level="INFO">${pids} = 12880
12887
12892</msg>
<status status="PASS" starttime="20210730 13:52:15.425" endtime="20210730 13:52:15.438"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:15.439" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:15.439" endtime="20210730 13:52:15.439"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:15.440" level="INFO">${pids} = ['12880', '12887', '12892']</msg>
<status status="PASS" starttime="20210730 13:52:15.440" endtime="20210730 13:52:15.440"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12880</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:15.443" level="INFO">Running command 'kill 12880 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:15.440" endtime="20210730 13:52:15.444"/>
</kw>
<status status="PASS" starttime="20210730 13:52:15.440" endtime="20210730 13:52:15.444"/>
</iter>
<iter>
<var name="${pid}">12887</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:15.446" level="INFO">Running command 'kill 12887 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:15.444" endtime="20210730 13:52:15.447"/>
</kw>
<status status="PASS" starttime="20210730 13:52:15.444" endtime="20210730 13:52:15.447"/>
</iter>
<iter>
<var name="${pid}">12892</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:15.452" level="INFO">Running command 'kill 12892 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:15.448" endtime="20210730 13:52:15.452"/>
</kw>
<status status="PASS" starttime="20210730 13:52:15.447" endtime="20210730 13:52:15.452"/>
</iter>
<status status="PASS" starttime="20210730 13:52:15.440" endtime="20210730 13:52:15.452"/>
</for>
<status status="PASS" starttime="20210730 13:52:15.439" endtime="20210730 13:52:15.452"/>
</branch>
<status status="PASS" starttime="20210730 13:52:15.439" endtime="20210730 13:52:15.452"/>
</if>
<status status="PASS" starttime="20210730 13:52:15.425" endtime="20210730 13:52:15.453"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤/&amp;¤!!123abc456hjk'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:13.849" endtime="20210730 13:52:15.453">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t20" name="With Each Valid Token, Updating Username Of Each System User With #¤/abc! Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:15.463" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:15.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:15.473" level="INFO">${pids} = 12921</msg>
<status status="PASS" starttime="20210730 13:52:15.455" endtime="20210730 13:52:15.473"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:15.474" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:15.474" endtime="20210730 13:52:15.474"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:15.475" level="INFO">${pids} = ['12921']</msg>
<status status="PASS" starttime="20210730 13:52:15.475" endtime="20210730 13:52:15.475"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12921</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:15.490" level="INFO">Running command 'kill 12921 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:15.475" endtime="20210730 13:52:15.491"/>
</kw>
<status status="PASS" starttime="20210730 13:52:15.475" endtime="20210730 13:52:15.491"/>
</iter>
<status status="PASS" starttime="20210730 13:52:15.475" endtime="20210730 13:52:15.491"/>
</for>
<status status="PASS" starttime="20210730 13:52:15.475" endtime="20210730 13:52:15.491"/>
</branch>
<status status="PASS" starttime="20210730 13:52:15.474" endtime="20210730 13:52:15.491"/>
</if>
<status status="PASS" starttime="20210730 13:52:15.455" endtime="20210730 13:52:15.491"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:15.492" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:15.492" endtime="20210730 13:52:15.492"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:15.493" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:15.493" endtime="20210730 13:52:15.493"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:15.494" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:15.493" endtime="20210730 13:52:15.494"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:15.494" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:15.494" endtime="20210730 13:52:15.494"/>
</kw>
<msg timestamp="20210730 13:52:15.494" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:15.493" endtime="20210730 13:52:15.494"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:15.498" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:15.495" endtime="20210730 13:52:15.499"/>
</kw>
<status status="PASS" starttime="20210730 13:52:15.491" endtime="20210730 13:52:15.500"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:15.501" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:15.500" endtime="20210730 13:52:15.505"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:17.007" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:15.506" endtime="20210730 13:52:17.007"/>
</kw>
<status status="PASS" starttime="20210730 13:52:15.500" endtime="20210730 13:52:17.008"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:17.009" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:17.009" endtime="20210730 13:52:17.009"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:17.009" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:17.009" endtime="20210730 13:52:17.009"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:17.010" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:17.010" endtime="20210730 13:52:17.010"/>
</kw>
<msg timestamp="20210730 13:52:17.010" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:17.008" endtime="20210730 13:52:17.010"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:17.011" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:17.010" endtime="20210730 13:52:17.011"/>
</kw>
<status status="PASS" starttime="20210730 13:52:17.008" endtime="20210730 13:52:17.011"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:17.012" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:17.012" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:17.012" endtime="20210730 13:52:17.012"/>
</kw>
<status status="PASS" starttime="20210730 13:52:17.011" endtime="20210730 13:52:17.012"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:17.013" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:17.013" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:17.012" endtime="20210730 13:52:17.013"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:17.013" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:17.013" endtime="20210730 13:52:17.013"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:17.014" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:17.014" endtime="20210730 13:52:17.014"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:17.014" endtime="20210730 13:52:17.015"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:17.015" endtime="20210730 13:52:17.016"/>
</kw>
<status status="PASS" starttime="20210730 13:52:17.013" endtime="20210730 13:52:17.016"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:17.016" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:17.016" endtime="20210730 13:52:17.016"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:17.016" endtime="20210730 13:52:17.017"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:17.017" endtime="20210730 13:52:17.017"/>
</kw>
<status status="PASS" starttime="20210730 13:52:17.016" endtime="20210730 13:52:17.017"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:17.018" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:17.017" endtime="20210730 13:52:17.018"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:17.018" endtime="20210730 13:52:17.019"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:17.019" endtime="20210730 13:52:17.019"/>
</kw>
<status status="PASS" starttime="20210730 13:52:17.017" endtime="20210730 13:52:17.019"/>
</iter>
<status status="PASS" starttime="20210730 13:52:17.013" endtime="20210730 13:52:17.019"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:17.019" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:17.019" endtime="20210730 13:52:17.019"/>
</kw>
<status status="PASS" starttime="20210730 13:52:17.012" endtime="20210730 13:52:17.019"/>
</kw>
<status status="PASS" starttime="20210730 13:52:15.454" endtime="20210730 13:52:17.020"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/abc!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:17.021" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:17.021" endtime="20210730 13:52:17.022"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:17.022" level="INFO">${payload} = {'username': '#¤/abc!'}</msg>
<status status="PASS" starttime="20210730 13:52:17.022" endtime="20210730 13:52:17.022"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:17.031" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:17.031" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:17.023" endtime="20210730 13:52:17.031"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:17.031" endtime="20210730 13:52:17.032"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:17.032" endtime="20210730 13:52:17.032"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:17.023" endtime="20210730 13:52:17.032"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:17.022" endtime="20210730 13:52:17.032"/>
</for>
<status status="FAIL" starttime="20210730 13:52:17.020" endtime="20210730 13:52:17.032"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:17.020" endtime="20210730 13:52:17.032"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/abc!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:17.033" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:17.033" endtime="20210730 13:52:17.033"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:17.033" level="INFO">${payload} = {'username': '#¤/abc!'}</msg>
<status status="PASS" starttime="20210730 13:52:17.033" endtime="20210730 13:52:17.033"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:17.041" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:17.041" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:17.035" endtime="20210730 13:52:17.041"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:17.042" endtime="20210730 13:52:17.042"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:17.042" endtime="20210730 13:52:17.042"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:17.035" endtime="20210730 13:52:17.042"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:17.033" endtime="20210730 13:52:17.042"/>
</for>
<status status="FAIL" starttime="20210730 13:52:17.032" endtime="20210730 13:52:17.042"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:17.032" endtime="20210730 13:52:17.042"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/abc!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:17.043" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:17.043" endtime="20210730 13:52:17.043"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:17.043" level="INFO">${payload} = {'username': '#¤/abc!'}</msg>
<status status="PASS" starttime="20210730 13:52:17.043" endtime="20210730 13:52:17.043"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:17.048" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:17.048" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:17.044" endtime="20210730 13:52:17.048"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:17.048" endtime="20210730 13:52:17.048"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:17.049" endtime="20210730 13:52:17.049"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:17.044" endtime="20210730 13:52:17.049"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:17.043" endtime="20210730 13:52:17.049"/>
</for>
<status status="FAIL" starttime="20210730 13:52:17.042" endtime="20210730 13:52:17.049"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:17.042" endtime="20210730 13:52:17.049"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:17.020" endtime="20210730 13:52:17.049"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:17.054" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:17.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:17.064" level="INFO">${pids} = 12944
12951
12956</msg>
<status status="PASS" starttime="20210730 13:52:17.051" endtime="20210730 13:52:17.064"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:17.064" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:17.064" endtime="20210730 13:52:17.064"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:17.065" level="INFO">${pids} = ['12944', '12951', '12956']</msg>
<status status="PASS" starttime="20210730 13:52:17.065" endtime="20210730 13:52:17.065"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12944</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:17.068" level="INFO">Running command 'kill 12944 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:17.065" endtime="20210730 13:52:17.069"/>
</kw>
<status status="PASS" starttime="20210730 13:52:17.065" endtime="20210730 13:52:17.069"/>
</iter>
<iter>
<var name="${pid}">12951</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:17.073" level="INFO">Running command 'kill 12951 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:17.069" endtime="20210730 13:52:17.075"/>
</kw>
<status status="PASS" starttime="20210730 13:52:17.069" endtime="20210730 13:52:17.075"/>
</iter>
<iter>
<var name="${pid}">12956</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:17.079" level="INFO">Running command 'kill 12956 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:17.075" endtime="20210730 13:52:17.080"/>
</kw>
<status status="PASS" starttime="20210730 13:52:17.075" endtime="20210730 13:52:17.080"/>
</iter>
<status status="PASS" starttime="20210730 13:52:17.065" endtime="20210730 13:52:17.080"/>
</for>
<status status="PASS" starttime="20210730 13:52:17.065" endtime="20210730 13:52:17.080"/>
</branch>
<status status="PASS" starttime="20210730 13:52:17.065" endtime="20210730 13:52:17.080"/>
</if>
<status status="PASS" starttime="20210730 13:52:17.050" endtime="20210730 13:52:17.081"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤/abc!'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:15.453" endtime="20210730 13:52:17.081">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t21" name="With Each Valid Token, Updating Username Of Each System User With #¤/abc!g Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:17.086" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:17.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:17.096" level="INFO">${pids} = 12985</msg>
<status status="PASS" starttime="20210730 13:52:17.083" endtime="20210730 13:52:17.096"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:17.097" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:17.096" endtime="20210730 13:52:17.097"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:17.097" level="INFO">${pids} = ['12985']</msg>
<status status="PASS" starttime="20210730 13:52:17.097" endtime="20210730 13:52:17.098"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12985</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:17.101" level="INFO">Running command 'kill 12985 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:17.098" endtime="20210730 13:52:17.102"/>
</kw>
<status status="PASS" starttime="20210730 13:52:17.098" endtime="20210730 13:52:17.102"/>
</iter>
<status status="PASS" starttime="20210730 13:52:17.098" endtime="20210730 13:52:17.102"/>
</for>
<status status="PASS" starttime="20210730 13:52:17.097" endtime="20210730 13:52:17.102"/>
</branch>
<status status="PASS" starttime="20210730 13:52:17.097" endtime="20210730 13:52:17.102"/>
</if>
<status status="PASS" starttime="20210730 13:52:17.083" endtime="20210730 13:52:17.102"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:17.103" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:17.103" endtime="20210730 13:52:17.103"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:17.104" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:17.103" endtime="20210730 13:52:17.104"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:17.104" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:17.104" endtime="20210730 13:52:17.104"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:17.105" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:17.104" endtime="20210730 13:52:17.105"/>
</kw>
<msg timestamp="20210730 13:52:17.105" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:17.103" endtime="20210730 13:52:17.105"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:17.108" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:17.105" endtime="20210730 13:52:17.109"/>
</kw>
<status status="PASS" starttime="20210730 13:52:17.102" endtime="20210730 13:52:17.110"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:17.112" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:17.111" endtime="20210730 13:52:17.118"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:18.619" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:17.118" endtime="20210730 13:52:18.619"/>
</kw>
<status status="PASS" starttime="20210730 13:52:17.110" endtime="20210730 13:52:18.619"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:18.621" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:18.620" endtime="20210730 13:52:18.621"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:18.621" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:18.621" endtime="20210730 13:52:18.621"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:18.622" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:18.621" endtime="20210730 13:52:18.622"/>
</kw>
<msg timestamp="20210730 13:52:18.622" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:18.620" endtime="20210730 13:52:18.622"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:18.623" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:18.622" endtime="20210730 13:52:18.623"/>
</kw>
<status status="PASS" starttime="20210730 13:52:18.619" endtime="20210730 13:52:18.623"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:18.623" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:18.623" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:18.623" endtime="20210730 13:52:18.624"/>
</kw>
<status status="PASS" starttime="20210730 13:52:18.623" endtime="20210730 13:52:18.624"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:18.624" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:18.625" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:18.624" endtime="20210730 13:52:18.625"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:18.625" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:18.625" endtime="20210730 13:52:18.625"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:18.625" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:18.625" endtime="20210730 13:52:18.625"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:18.626" endtime="20210730 13:52:18.626"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:18.626" endtime="20210730 13:52:18.627"/>
</kw>
<status status="PASS" starttime="20210730 13:52:18.625" endtime="20210730 13:52:18.627"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:18.627" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:18.627" endtime="20210730 13:52:18.627"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:18.627" endtime="20210730 13:52:18.628"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:18.628" endtime="20210730 13:52:18.628"/>
</kw>
<status status="PASS" starttime="20210730 13:52:18.627" endtime="20210730 13:52:18.628"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:18.628" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:18.628" endtime="20210730 13:52:18.628"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:18.629" endtime="20210730 13:52:18.629"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:18.629" endtime="20210730 13:52:18.630"/>
</kw>
<status status="PASS" starttime="20210730 13:52:18.628" endtime="20210730 13:52:18.630"/>
</iter>
<status status="PASS" starttime="20210730 13:52:18.625" endtime="20210730 13:52:18.630"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:18.630" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:18.630" endtime="20210730 13:52:18.630"/>
</kw>
<status status="PASS" starttime="20210730 13:52:18.624" endtime="20210730 13:52:18.630"/>
</kw>
<status status="PASS" starttime="20210730 13:52:17.083" endtime="20210730 13:52:18.630"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/abc!g</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:18.631" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:18.631" endtime="20210730 13:52:18.631"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:18.632" level="INFO">${payload} = {'username': '#¤/abc!g'}</msg>
<status status="PASS" starttime="20210730 13:52:18.631" endtime="20210730 13:52:18.632"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:18.642" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:18.644" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:18.632" endtime="20210730 13:52:18.644"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:18.644" endtime="20210730 13:52:18.644"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:18.644" endtime="20210730 13:52:18.644"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:18.632" endtime="20210730 13:52:18.644"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:18.632" endtime="20210730 13:52:18.644"/>
</for>
<status status="FAIL" starttime="20210730 13:52:18.631" endtime="20210730 13:52:18.644"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:18.631" endtime="20210730 13:52:18.644"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/abc!g</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:18.645" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:18.645" endtime="20210730 13:52:18.645"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:18.646" level="INFO">${payload} = {'username': '#¤/abc!g'}</msg>
<status status="PASS" starttime="20210730 13:52:18.646" endtime="20210730 13:52:18.646"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:18.651" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:18.651" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:18.646" endtime="20210730 13:52:18.651"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:18.651" endtime="20210730 13:52:18.651"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:18.651" endtime="20210730 13:52:18.651"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:18.646" endtime="20210730 13:52:18.652"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:18.646" endtime="20210730 13:52:18.652"/>
</for>
<status status="FAIL" starttime="20210730 13:52:18.645" endtime="20210730 13:52:18.652"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:18.644" endtime="20210730 13:52:18.652"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/abc!g</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:18.653" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:18.652" endtime="20210730 13:52:18.653"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:18.653" level="INFO">${payload} = {'username': '#¤/abc!g'}</msg>
<status status="PASS" starttime="20210730 13:52:18.653" endtime="20210730 13:52:18.653"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:18.658" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:18.658" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:18.654" endtime="20210730 13:52:18.658"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:18.659" endtime="20210730 13:52:18.659"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:18.659" endtime="20210730 13:52:18.659"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:18.654" endtime="20210730 13:52:18.659"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:18.653" endtime="20210730 13:52:18.659"/>
</for>
<status status="FAIL" starttime="20210730 13:52:18.652" endtime="20210730 13:52:18.659"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:18.652" endtime="20210730 13:52:18.659"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:18.630" endtime="20210730 13:52:18.659"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:18.665" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:18.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:18.674" level="INFO">${pids} = 13008
13015
13019</msg>
<status status="PASS" starttime="20210730 13:52:18.662" endtime="20210730 13:52:18.674"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:18.675" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:18.674" endtime="20210730 13:52:18.675"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:18.675" level="INFO">${pids} = ['13008', '13015', '13019']</msg>
<status status="PASS" starttime="20210730 13:52:18.675" endtime="20210730 13:52:18.675"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13008</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:18.678" level="INFO">Running command 'kill 13008 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:18.675" endtime="20210730 13:52:18.679"/>
</kw>
<status status="PASS" starttime="20210730 13:52:18.675" endtime="20210730 13:52:18.679"/>
</iter>
<iter>
<var name="${pid}">13015</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:18.683" level="INFO">Running command 'kill 13015 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:18.679" endtime="20210730 13:52:18.684"/>
</kw>
<status status="PASS" starttime="20210730 13:52:18.679" endtime="20210730 13:52:18.684"/>
</iter>
<iter>
<var name="${pid}">13019</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:18.688" level="INFO">Running command 'kill 13019 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:18.684" endtime="20210730 13:52:18.688"/>
</kw>
<status status="PASS" starttime="20210730 13:52:18.684" endtime="20210730 13:52:18.688"/>
</iter>
<status status="PASS" starttime="20210730 13:52:18.675" endtime="20210730 13:52:18.688"/>
</for>
<status status="PASS" starttime="20210730 13:52:18.675" endtime="20210730 13:52:18.689"/>
</branch>
<status status="PASS" starttime="20210730 13:52:18.675" endtime="20210730 13:52:18.689"/>
</if>
<status status="PASS" starttime="20210730 13:52:18.660" endtime="20210730 13:52:18.689"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤/abc!g'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:17.082" endtime="20210730 13:52:18.689">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t22" name="With Each Valid Token, Updating Username Of Each System User With #¤/abc!g()=&amp;%¤fghjklQWERTY Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:18.696" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:18.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:18.706" level="INFO">${pids} = 13048</msg>
<status status="PASS" starttime="20210730 13:52:18.691" endtime="20210730 13:52:18.706"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:18.706" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:18.706" endtime="20210730 13:52:18.706"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:18.707" level="INFO">${pids} = ['13048']</msg>
<status status="PASS" starttime="20210730 13:52:18.707" endtime="20210730 13:52:18.707"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13048</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:18.711" level="INFO">Running command 'kill 13048 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:18.707" endtime="20210730 13:52:18.712"/>
</kw>
<status status="PASS" starttime="20210730 13:52:18.707" endtime="20210730 13:52:18.712"/>
</iter>
<status status="PASS" starttime="20210730 13:52:18.707" endtime="20210730 13:52:18.712"/>
</for>
<status status="PASS" starttime="20210730 13:52:18.707" endtime="20210730 13:52:18.712"/>
</branch>
<status status="PASS" starttime="20210730 13:52:18.706" endtime="20210730 13:52:18.712"/>
</if>
<status status="PASS" starttime="20210730 13:52:18.691" endtime="20210730 13:52:18.712"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:18.713" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:18.713" endtime="20210730 13:52:18.713"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:18.714" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:18.713" endtime="20210730 13:52:18.714"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:18.714" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:18.714" endtime="20210730 13:52:18.714"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:18.715" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:18.714" endtime="20210730 13:52:18.715"/>
</kw>
<msg timestamp="20210730 13:52:18.715" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:18.713" endtime="20210730 13:52:18.715"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:18.718" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:18.715" endtime="20210730 13:52:18.719"/>
</kw>
<status status="PASS" starttime="20210730 13:52:18.712" endtime="20210730 13:52:18.720"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:18.722" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:18.721" endtime="20210730 13:52:18.729"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:20.231" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:18.730" endtime="20210730 13:52:20.231"/>
</kw>
<status status="PASS" starttime="20210730 13:52:18.720" endtime="20210730 13:52:20.232"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:20.233" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:20.233" endtime="20210730 13:52:20.233"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:20.233" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:20.233" endtime="20210730 13:52:20.233"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:20.234" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:20.233" endtime="20210730 13:52:20.234"/>
</kw>
<msg timestamp="20210730 13:52:20.234" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:20.232" endtime="20210730 13:52:20.234"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:20.234" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:20.234" endtime="20210730 13:52:20.235"/>
</kw>
<status status="PASS" starttime="20210730 13:52:20.232" endtime="20210730 13:52:20.235"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:20.235" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:20.235" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:20.235" endtime="20210730 13:52:20.235"/>
</kw>
<status status="PASS" starttime="20210730 13:52:20.235" endtime="20210730 13:52:20.236"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:20.236" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:20.236" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:20.236" endtime="20210730 13:52:20.236"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:20.237" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:20.237" endtime="20210730 13:52:20.237"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:20.238" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:20.237" endtime="20210730 13:52:20.238"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:20.238" endtime="20210730 13:52:20.238"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:20.238" endtime="20210730 13:52:20.239"/>
</kw>
<status status="PASS" starttime="20210730 13:52:20.237" endtime="20210730 13:52:20.239"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:20.239" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:20.239" endtime="20210730 13:52:20.239"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:20.239" endtime="20210730 13:52:20.240"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:20.240" endtime="20210730 13:52:20.240"/>
</kw>
<status status="PASS" starttime="20210730 13:52:20.239" endtime="20210730 13:52:20.240"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:20.241" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:20.241" endtime="20210730 13:52:20.241"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:20.241" endtime="20210730 13:52:20.242"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:20.242" endtime="20210730 13:52:20.242"/>
</kw>
<status status="PASS" starttime="20210730 13:52:20.240" endtime="20210730 13:52:20.242"/>
</iter>
<status status="PASS" starttime="20210730 13:52:20.237" endtime="20210730 13:52:20.242"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:20.243" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:20.242" endtime="20210730 13:52:20.243"/>
</kw>
<status status="PASS" starttime="20210730 13:52:20.236" endtime="20210730 13:52:20.243"/>
</kw>
<status status="PASS" starttime="20210730 13:52:18.691" endtime="20210730 13:52:20.243"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/abc!g()=&amp;%¤fghjklQWERTY</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:20.244" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:20.244" endtime="20210730 13:52:20.244"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:20.245" level="INFO">${payload} = {'username': '#¤/abc!g()=&amp;%¤fghjklQWERTY'}</msg>
<status status="PASS" starttime="20210730 13:52:20.244" endtime="20210730 13:52:20.245"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:20.257" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:20.257" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:20.245" endtime="20210730 13:52:20.257"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:20.257" endtime="20210730 13:52:20.257"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:20.257" endtime="20210730 13:52:20.257"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:20.245" endtime="20210730 13:52:20.257"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:20.245" endtime="20210730 13:52:20.257"/>
</for>
<status status="FAIL" starttime="20210730 13:52:20.243" endtime="20210730 13:52:20.258"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:20.243" endtime="20210730 13:52:20.258"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/abc!g()=&amp;%¤fghjklQWERTY</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:20.259" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:20.258" endtime="20210730 13:52:20.259"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:20.259" level="INFO">${payload} = {'username': '#¤/abc!g()=&amp;%¤fghjklQWERTY'}</msg>
<status status="PASS" starttime="20210730 13:52:20.259" endtime="20210730 13:52:20.259"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:20.264" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:20.265" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:20.260" endtime="20210730 13:52:20.265"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:20.265" endtime="20210730 13:52:20.265"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:20.265" endtime="20210730 13:52:20.265"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:20.260" endtime="20210730 13:52:20.265"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:20.259" endtime="20210730 13:52:20.265"/>
</for>
<status status="FAIL" starttime="20210730 13:52:20.258" endtime="20210730 13:52:20.265"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:20.258" endtime="20210730 13:52:20.265"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/abc!g()=&amp;%¤fghjklQWERTY</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:20.266" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:20.266" endtime="20210730 13:52:20.266"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:20.266" level="INFO">${payload} = {'username': '#¤/abc!g()=&amp;%¤fghjklQWERTY'}</msg>
<status status="PASS" starttime="20210730 13:52:20.266" endtime="20210730 13:52:20.266"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:20.270" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:20.271" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:20.267" endtime="20210730 13:52:20.271"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:20.271" endtime="20210730 13:52:20.271"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:20.271" endtime="20210730 13:52:20.271"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:20.267" endtime="20210730 13:52:20.271"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:20.267" endtime="20210730 13:52:20.271"/>
</for>
<status status="FAIL" starttime="20210730 13:52:20.265" endtime="20210730 13:52:20.272"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:20.265" endtime="20210730 13:52:20.272"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:20.243" endtime="20210730 13:52:20.272"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:20.278" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:20.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:20.288" level="INFO">${pids} = 13071
13078
13083</msg>
<status status="PASS" starttime="20210730 13:52:20.273" endtime="20210730 13:52:20.288"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:20.289" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:20.289" endtime="20210730 13:52:20.289"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:20.291" level="INFO">${pids} = ['13071', '13078', '13083']</msg>
<status status="PASS" starttime="20210730 13:52:20.290" endtime="20210730 13:52:20.291"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13071</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:20.294" level="INFO">Running command 'kill 13071 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:20.291" endtime="20210730 13:52:20.294"/>
</kw>
<status status="PASS" starttime="20210730 13:52:20.291" endtime="20210730 13:52:20.294"/>
</iter>
<iter>
<var name="${pid}">13078</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:20.297" level="INFO">Running command 'kill 13078 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:20.295" endtime="20210730 13:52:20.297"/>
</kw>
<status status="PASS" starttime="20210730 13:52:20.295" endtime="20210730 13:52:20.297"/>
</iter>
<iter>
<var name="${pid}">13083</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:20.301" level="INFO">Running command 'kill 13083 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:20.298" endtime="20210730 13:52:20.301"/>
</kw>
<status status="PASS" starttime="20210730 13:52:20.298" endtime="20210730 13:52:20.301"/>
</iter>
<status status="PASS" starttime="20210730 13:52:20.291" endtime="20210730 13:52:20.301"/>
</for>
<status status="PASS" starttime="20210730 13:52:20.290" endtime="20210730 13:52:20.301"/>
</branch>
<status status="PASS" starttime="20210730 13:52:20.290" endtime="20210730 13:52:20.301"/>
</if>
<status status="PASS" starttime="20210730 13:52:20.272" endtime="20210730 13:52:20.301"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤/abc!g()=&amp;%¤fghjklQWERTY'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:18.690" endtime="20210730 13:52:20.302">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t23" name="With Each Valid Token, Updating Username Of Each System User With !# &amp;/¤% Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:20.308" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:20.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:20.318" level="INFO">${pids} = 13112</msg>
<status status="PASS" starttime="20210730 13:52:20.304" endtime="20210730 13:52:20.319"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:20.319" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:20.319" endtime="20210730 13:52:20.320"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:20.320" level="INFO">${pids} = ['13112']</msg>
<status status="PASS" starttime="20210730 13:52:20.320" endtime="20210730 13:52:20.320"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13112</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:20.324" level="INFO">Running command 'kill 13112 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:20.321" endtime="20210730 13:52:20.324"/>
</kw>
<status status="PASS" starttime="20210730 13:52:20.321" endtime="20210730 13:52:20.324"/>
</iter>
<status status="PASS" starttime="20210730 13:52:20.321" endtime="20210730 13:52:20.324"/>
</for>
<status status="PASS" starttime="20210730 13:52:20.320" endtime="20210730 13:52:20.324"/>
</branch>
<status status="PASS" starttime="20210730 13:52:20.320" endtime="20210730 13:52:20.324"/>
</if>
<status status="PASS" starttime="20210730 13:52:20.303" endtime="20210730 13:52:20.325"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:20.326" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:20.325" endtime="20210730 13:52:20.326"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:20.327" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:20.326" endtime="20210730 13:52:20.327"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:20.327" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:20.327" endtime="20210730 13:52:20.327"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:20.327" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:20.327" endtime="20210730 13:52:20.327"/>
</kw>
<msg timestamp="20210730 13:52:20.328" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:20.326" endtime="20210730 13:52:20.328"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:20.330" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:20.328" endtime="20210730 13:52:20.332"/>
</kw>
<status status="PASS" starttime="20210730 13:52:20.325" endtime="20210730 13:52:20.332"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:20.334" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:20.334" endtime="20210730 13:52:20.341"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:21.853" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:20.342" endtime="20210730 13:52:21.854"/>
</kw>
<status status="PASS" starttime="20210730 13:52:20.332" endtime="20210730 13:52:21.854"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:21.855" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:21.855" endtime="20210730 13:52:21.855"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:21.856" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:21.855" endtime="20210730 13:52:21.856"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:21.856" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:21.856" endtime="20210730 13:52:21.856"/>
</kw>
<msg timestamp="20210730 13:52:21.856" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:21.855" endtime="20210730 13:52:21.856"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:21.857" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:21.856" endtime="20210730 13:52:21.857"/>
</kw>
<status status="PASS" starttime="20210730 13:52:21.854" endtime="20210730 13:52:21.857"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:21.858" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:21.858" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:21.858" endtime="20210730 13:52:21.858"/>
</kw>
<status status="PASS" starttime="20210730 13:52:21.857" endtime="20210730 13:52:21.858"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:21.859" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:21.859" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:21.858" endtime="20210730 13:52:21.859"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:21.859" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:21.859" endtime="20210730 13:52:21.859"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:21.860" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:21.859" endtime="20210730 13:52:21.860"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:21.860" endtime="20210730 13:52:21.861"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:21.861" endtime="20210730 13:52:21.861"/>
</kw>
<status status="PASS" starttime="20210730 13:52:21.859" endtime="20210730 13:52:21.861"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:21.861" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:21.861" endtime="20210730 13:52:21.862"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:21.862" endtime="20210730 13:52:21.862"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:21.862" endtime="20210730 13:52:21.863"/>
</kw>
<status status="PASS" starttime="20210730 13:52:21.861" endtime="20210730 13:52:21.863"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:21.863" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:21.863" endtime="20210730 13:52:21.863"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:21.863" endtime="20210730 13:52:21.864"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:21.864" endtime="20210730 13:52:21.864"/>
</kw>
<status status="PASS" starttime="20210730 13:52:21.863" endtime="20210730 13:52:21.864"/>
</iter>
<status status="PASS" starttime="20210730 13:52:21.859" endtime="20210730 13:52:21.864"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:21.865" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:21.864" endtime="20210730 13:52:21.865"/>
</kw>
<status status="PASS" starttime="20210730 13:52:21.858" endtime="20210730 13:52:21.865"/>
</kw>
<status status="PASS" starttime="20210730 13:52:20.303" endtime="20210730 13:52:21.865"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!# &amp;/¤%</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:21.866" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:21.866" endtime="20210730 13:52:21.866"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:21.866" level="INFO">${payload} = {'username': '!# &amp;/¤%'}</msg>
<status status="PASS" starttime="20210730 13:52:21.866" endtime="20210730 13:52:21.866"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:21.875" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:21.876" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:21.867" endtime="20210730 13:52:21.876"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:21.876" endtime="20210730 13:52:21.876"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:21.876" endtime="20210730 13:52:21.876"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:21.867" endtime="20210730 13:52:21.876"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:21.866" endtime="20210730 13:52:21.876"/>
</for>
<status status="FAIL" starttime="20210730 13:52:21.865" endtime="20210730 13:52:21.876"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:21.865" endtime="20210730 13:52:21.877"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!# &amp;/¤%</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:21.878" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:21.877" endtime="20210730 13:52:21.878"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:21.878" level="INFO">${payload} = {'username': '!# &amp;/¤%'}</msg>
<status status="PASS" starttime="20210730 13:52:21.878" endtime="20210730 13:52:21.878"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:21.883" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:21.883" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:21.878" endtime="20210730 13:52:21.883"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:21.883" endtime="20210730 13:52:21.883"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:21.883" endtime="20210730 13:52:21.883"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:21.878" endtime="20210730 13:52:21.883"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:21.878" endtime="20210730 13:52:21.883"/>
</for>
<status status="FAIL" starttime="20210730 13:52:21.877" endtime="20210730 13:52:21.883"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:21.877" endtime="20210730 13:52:21.883"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!# &amp;/¤%</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:21.884" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:21.884" endtime="20210730 13:52:21.884"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:21.885" level="INFO">${payload} = {'username': '!# &amp;/¤%'}</msg>
<status status="PASS" starttime="20210730 13:52:21.885" endtime="20210730 13:52:21.885"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:21.890" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:21.890" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:21.885" endtime="20210730 13:52:21.890"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:21.890" endtime="20210730 13:52:21.890"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:21.891" endtime="20210730 13:52:21.891"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:21.885" endtime="20210730 13:52:21.891"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:21.885" endtime="20210730 13:52:21.891"/>
</for>
<status status="FAIL" starttime="20210730 13:52:21.884" endtime="20210730 13:52:21.891"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:21.884" endtime="20210730 13:52:21.891"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:21.865" endtime="20210730 13:52:21.891"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:21.897" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:21.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:21.907" level="INFO">${pids} = 13135
13142
13147</msg>
<status status="PASS" starttime="20210730 13:52:21.892" endtime="20210730 13:52:21.907"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:21.908" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:21.907" endtime="20210730 13:52:21.908"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:21.908" level="INFO">${pids} = ['13135', '13142', '13147']</msg>
<status status="PASS" starttime="20210730 13:52:21.908" endtime="20210730 13:52:21.908"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13135</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:21.912" level="INFO">Running command 'kill 13135 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:21.909" endtime="20210730 13:52:21.912"/>
</kw>
<status status="PASS" starttime="20210730 13:52:21.908" endtime="20210730 13:52:21.912"/>
</iter>
<iter>
<var name="${pid}">13142</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:21.915" level="INFO">Running command 'kill 13142 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:21.912" endtime="20210730 13:52:21.915"/>
</kw>
<status status="PASS" starttime="20210730 13:52:21.912" endtime="20210730 13:52:21.915"/>
</iter>
<iter>
<var name="${pid}">13147</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:21.919" level="INFO">Running command 'kill 13147 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:21.916" endtime="20210730 13:52:21.920"/>
</kw>
<status status="PASS" starttime="20210730 13:52:21.915" endtime="20210730 13:52:21.920"/>
</iter>
<status status="PASS" starttime="20210730 13:52:21.908" endtime="20210730 13:52:21.920"/>
</for>
<status status="PASS" starttime="20210730 13:52:21.908" endtime="20210730 13:52:21.920"/>
</branch>
<status status="PASS" starttime="20210730 13:52:21.908" endtime="20210730 13:52:21.920"/>
</if>
<status status="PASS" starttime="20210730 13:52:21.892" endtime="20210730 13:52:21.921"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '!# &amp;/¤%'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:20.302" endtime="20210730 13:52:21.921">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t24" name="With Each Valid Token, Updating Username Of Each System User With !#%&amp;/¤ = Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:21.928" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:21.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:21.938" level="INFO">${pids} = 13176</msg>
<status status="PASS" starttime="20210730 13:52:21.923" endtime="20210730 13:52:21.938"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:21.939" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:21.938" endtime="20210730 13:52:21.939"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:21.940" level="INFO">${pids} = ['13176']</msg>
<status status="PASS" starttime="20210730 13:52:21.939" endtime="20210730 13:52:21.940"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13176</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:21.943" level="INFO">Running command 'kill 13176 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:21.940" endtime="20210730 13:52:21.943"/>
</kw>
<status status="PASS" starttime="20210730 13:52:21.940" endtime="20210730 13:52:21.943"/>
</iter>
<status status="PASS" starttime="20210730 13:52:21.940" endtime="20210730 13:52:21.943"/>
</for>
<status status="PASS" starttime="20210730 13:52:21.939" endtime="20210730 13:52:21.943"/>
</branch>
<status status="PASS" starttime="20210730 13:52:21.939" endtime="20210730 13:52:21.944"/>
</if>
<status status="PASS" starttime="20210730 13:52:21.923" endtime="20210730 13:52:21.944"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:21.945" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:21.944" endtime="20210730 13:52:21.945"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:21.945" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:21.945" endtime="20210730 13:52:21.945"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:21.946" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:21.945" endtime="20210730 13:52:21.946"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:21.946" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:21.946" endtime="20210730 13:52:21.946"/>
</kw>
<msg timestamp="20210730 13:52:21.946" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:21.945" endtime="20210730 13:52:21.946"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:21.949" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:21.946" endtime="20210730 13:52:21.951"/>
</kw>
<status status="PASS" starttime="20210730 13:52:21.944" endtime="20210730 13:52:21.951"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:21.953" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:21.952" endtime="20210730 13:52:21.975"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:23.477" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:21.976" endtime="20210730 13:52:23.477"/>
</kw>
<status status="PASS" starttime="20210730 13:52:21.952" endtime="20210730 13:52:23.477"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:23.478" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:23.478" endtime="20210730 13:52:23.478"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:23.479" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:23.478" endtime="20210730 13:52:23.479"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:23.479" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:23.479" endtime="20210730 13:52:23.479"/>
</kw>
<msg timestamp="20210730 13:52:23.479" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:23.478" endtime="20210730 13:52:23.479"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:23.480" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:23.480" endtime="20210730 13:52:23.481"/>
</kw>
<status status="PASS" starttime="20210730 13:52:23.477" endtime="20210730 13:52:23.481"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:23.481" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:23.481" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:23.481" endtime="20210730 13:52:23.482"/>
</kw>
<status status="PASS" starttime="20210730 13:52:23.481" endtime="20210730 13:52:23.482"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:23.482" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:23.483" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:23.482" endtime="20210730 13:52:23.483"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:23.483" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:23.483" endtime="20210730 13:52:23.483"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:23.483" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:23.483" endtime="20210730 13:52:23.484"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:23.484" endtime="20210730 13:52:23.484"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:23.484" endtime="20210730 13:52:23.485"/>
</kw>
<status status="PASS" starttime="20210730 13:52:23.483" endtime="20210730 13:52:23.485"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:23.485" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:23.485" endtime="20210730 13:52:23.485"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:23.485" endtime="20210730 13:52:23.486"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:23.486" endtime="20210730 13:52:23.486"/>
</kw>
<status status="PASS" starttime="20210730 13:52:23.485" endtime="20210730 13:52:23.486"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:23.487" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:23.487" endtime="20210730 13:52:23.487"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:23.487" endtime="20210730 13:52:23.488"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:23.489" endtime="20210730 13:52:23.489"/>
</kw>
<status status="PASS" starttime="20210730 13:52:23.487" endtime="20210730 13:52:23.489"/>
</iter>
<status status="PASS" starttime="20210730 13:52:23.483" endtime="20210730 13:52:23.489"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:23.490" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:23.489" endtime="20210730 13:52:23.490"/>
</kw>
<status status="PASS" starttime="20210730 13:52:23.482" endtime="20210730 13:52:23.490"/>
</kw>
<status status="PASS" starttime="20210730 13:52:21.923" endtime="20210730 13:52:23.490"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!#%&amp;/¤ =</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:23.492" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:23.491" endtime="20210730 13:52:23.492"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:23.492" level="INFO">${payload} = {'username': '!#%&amp;/¤ ='}</msg>
<status status="PASS" starttime="20210730 13:52:23.492" endtime="20210730 13:52:23.492"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:23.501" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:23.501" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:23.492" endtime="20210730 13:52:23.501"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:23.502" endtime="20210730 13:52:23.502"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:23.502" endtime="20210730 13:52:23.502"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:23.492" endtime="20210730 13:52:23.502"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:23.492" endtime="20210730 13:52:23.502"/>
</for>
<status status="FAIL" starttime="20210730 13:52:23.491" endtime="20210730 13:52:23.502"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:23.491" endtime="20210730 13:52:23.502"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!#%&amp;/¤ =</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:23.503" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:23.503" endtime="20210730 13:52:23.503"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:23.504" level="INFO">${payload} = {'username': '!#%&amp;/¤ ='}</msg>
<status status="PASS" starttime="20210730 13:52:23.503" endtime="20210730 13:52:23.504"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:23.508" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:23.508" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:23.504" endtime="20210730 13:52:23.508"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:23.508" endtime="20210730 13:52:23.508"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:23.508" endtime="20210730 13:52:23.508"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:23.504" endtime="20210730 13:52:23.508"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:23.504" endtime="20210730 13:52:23.508"/>
</for>
<status status="FAIL" starttime="20210730 13:52:23.502" endtime="20210730 13:52:23.508"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:23.502" endtime="20210730 13:52:23.509"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!#%&amp;/¤ =</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:23.510" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:23.509" endtime="20210730 13:52:23.510"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:23.510" level="INFO">${payload} = {'username': '!#%&amp;/¤ ='}</msg>
<status status="PASS" starttime="20210730 13:52:23.510" endtime="20210730 13:52:23.510"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:23.514" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:23.514" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:23.511" endtime="20210730 13:52:23.514"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:23.515" endtime="20210730 13:52:23.515"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:23.515" endtime="20210730 13:52:23.515"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:23.511" endtime="20210730 13:52:23.515"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:23.510" endtime="20210730 13:52:23.515"/>
</for>
<status status="FAIL" starttime="20210730 13:52:23.509" endtime="20210730 13:52:23.515"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:23.509" endtime="20210730 13:52:23.515"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:23.490" endtime="20210730 13:52:23.515"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:23.522" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:23.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:23.531" level="INFO">${pids} = 13199
13206
13215</msg>
<status status="PASS" starttime="20210730 13:52:23.517" endtime="20210730 13:52:23.531"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:23.532" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:23.532" endtime="20210730 13:52:23.532"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:23.533" level="INFO">${pids} = ['13199', '13206', '13215']</msg>
<status status="PASS" starttime="20210730 13:52:23.532" endtime="20210730 13:52:23.533"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13199</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:23.536" level="INFO">Running command 'kill 13199 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:23.533" endtime="20210730 13:52:23.536"/>
</kw>
<status status="PASS" starttime="20210730 13:52:23.533" endtime="20210730 13:52:23.536"/>
</iter>
<iter>
<var name="${pid}">13206</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:23.541" level="INFO">Running command 'kill 13206 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:23.537" endtime="20210730 13:52:23.543"/>
</kw>
<status status="PASS" starttime="20210730 13:52:23.537" endtime="20210730 13:52:23.543"/>
</iter>
<iter>
<var name="${pid}">13215</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:23.548" level="INFO">Running command 'kill 13215 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:23.544" endtime="20210730 13:52:23.548"/>
</kw>
<status status="PASS" starttime="20210730 13:52:23.544" endtime="20210730 13:52:23.548"/>
</iter>
<status status="PASS" starttime="20210730 13:52:23.533" endtime="20210730 13:52:23.548"/>
</for>
<status status="PASS" starttime="20210730 13:52:23.532" endtime="20210730 13:52:23.548"/>
</branch>
<status status="PASS" starttime="20210730 13:52:23.532" endtime="20210730 13:52:23.549"/>
</if>
<status status="PASS" starttime="20210730 13:52:23.517" endtime="20210730 13:52:23.549"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '!#%&amp;/¤ ='
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:21.922" endtime="20210730 13:52:23.549">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t25" name="With Each Valid Token, Updating Username Of Each System User With !#%&amp;/¤%= ()=? Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:23.557" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:23.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:23.567" level="INFO">${pids} = 13244</msg>
<status status="PASS" starttime="20210730 13:52:23.553" endtime="20210730 13:52:23.567"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:23.568" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:23.567" endtime="20210730 13:52:23.568"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:23.568" level="INFO">${pids} = ['13244']</msg>
<status status="PASS" starttime="20210730 13:52:23.568" endtime="20210730 13:52:23.568"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13244</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:23.572" level="INFO">Running command 'kill 13244 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:23.569" endtime="20210730 13:52:23.572"/>
</kw>
<status status="PASS" starttime="20210730 13:52:23.568" endtime="20210730 13:52:23.572"/>
</iter>
<status status="PASS" starttime="20210730 13:52:23.568" endtime="20210730 13:52:23.572"/>
</for>
<status status="PASS" starttime="20210730 13:52:23.568" endtime="20210730 13:52:23.572"/>
</branch>
<status status="PASS" starttime="20210730 13:52:23.568" endtime="20210730 13:52:23.572"/>
</if>
<status status="PASS" starttime="20210730 13:52:23.553" endtime="20210730 13:52:23.573"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:23.574" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:23.573" endtime="20210730 13:52:23.574"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:23.574" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:23.574" endtime="20210730 13:52:23.574"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:23.575" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:23.575" endtime="20210730 13:52:23.575"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:23.575" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:23.575" endtime="20210730 13:52:23.575"/>
</kw>
<msg timestamp="20210730 13:52:23.575" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:23.574" endtime="20210730 13:52:23.575"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:23.578" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:23.575" endtime="20210730 13:52:23.580"/>
</kw>
<status status="PASS" starttime="20210730 13:52:23.573" endtime="20210730 13:52:23.580"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:23.582" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:23.581" endtime="20210730 13:52:23.588"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:25.091" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:23.588" endtime="20210730 13:52:25.091"/>
</kw>
<status status="PASS" starttime="20210730 13:52:23.580" endtime="20210730 13:52:25.092"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:25.093" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:25.092" endtime="20210730 13:52:25.093"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:25.093" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:25.093" endtime="20210730 13:52:25.093"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:25.093" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:25.093" endtime="20210730 13:52:25.093"/>
</kw>
<msg timestamp="20210730 13:52:25.094" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:25.092" endtime="20210730 13:52:25.094"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:25.094" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:25.094" endtime="20210730 13:52:25.094"/>
</kw>
<status status="PASS" starttime="20210730 13:52:25.092" endtime="20210730 13:52:25.094"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:25.095" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:25.095" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:25.095" endtime="20210730 13:52:25.095"/>
</kw>
<status status="PASS" starttime="20210730 13:52:25.095" endtime="20210730 13:52:25.095"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:25.096" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:25.096" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:25.096" endtime="20210730 13:52:25.096"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:25.096" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:25.096" endtime="20210730 13:52:25.096"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:25.097" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:25.097" endtime="20210730 13:52:25.097"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:25.097" endtime="20210730 13:52:25.098"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:25.098" endtime="20210730 13:52:25.099"/>
</kw>
<status status="PASS" starttime="20210730 13:52:25.097" endtime="20210730 13:52:25.099"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:25.099" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:25.099" endtime="20210730 13:52:25.099"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:25.099" endtime="20210730 13:52:25.100"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:25.100" endtime="20210730 13:52:25.100"/>
</kw>
<status status="PASS" starttime="20210730 13:52:25.099" endtime="20210730 13:52:25.100"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:25.100" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:25.100" endtime="20210730 13:52:25.100"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:25.101" endtime="20210730 13:52:25.101"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:25.101" endtime="20210730 13:52:25.102"/>
</kw>
<status status="PASS" starttime="20210730 13:52:25.100" endtime="20210730 13:52:25.102"/>
</iter>
<status status="PASS" starttime="20210730 13:52:25.097" endtime="20210730 13:52:25.102"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:25.102" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:25.102" endtime="20210730 13:52:25.102"/>
</kw>
<status status="PASS" starttime="20210730 13:52:25.095" endtime="20210730 13:52:25.102"/>
</kw>
<status status="PASS" starttime="20210730 13:52:23.553" endtime="20210730 13:52:25.102"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!#%&amp;/¤%= ()=?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:25.104" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:25.103" endtime="20210730 13:52:25.104"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:25.104" level="INFO">${payload} = {'username': '!#%&amp;/¤%= ()=?'}</msg>
<status status="PASS" starttime="20210730 13:52:25.104" endtime="20210730 13:52:25.104"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:25.114" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:25.114" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:25.104" endtime="20210730 13:52:25.114"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:25.115" endtime="20210730 13:52:25.115"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:25.115" endtime="20210730 13:52:25.115"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:25.104" endtime="20210730 13:52:25.115"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:25.104" endtime="20210730 13:52:25.115"/>
</for>
<status status="FAIL" starttime="20210730 13:52:25.103" endtime="20210730 13:52:25.115"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:25.103" endtime="20210730 13:52:25.115"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!#%&amp;/¤%= ()=?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:25.117" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:25.116" endtime="20210730 13:52:25.117"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:25.118" level="INFO">${payload} = {'username': '!#%&amp;/¤%= ()=?'}</msg>
<status status="PASS" starttime="20210730 13:52:25.117" endtime="20210730 13:52:25.118"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:25.122" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:25.122" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:25.118" endtime="20210730 13:52:25.123"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:25.123" endtime="20210730 13:52:25.123"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:25.123" endtime="20210730 13:52:25.123"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:25.118" endtime="20210730 13:52:25.123"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:25.118" endtime="20210730 13:52:25.123"/>
</for>
<status status="FAIL" starttime="20210730 13:52:25.116" endtime="20210730 13:52:25.123"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:25.116" endtime="20210730 13:52:25.123"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!#%&amp;/¤%= ()=?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:25.124" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:25.124" endtime="20210730 13:52:25.124"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:25.125" level="INFO">${payload} = {'username': '!#%&amp;/¤%= ()=?'}</msg>
<status status="PASS" starttime="20210730 13:52:25.124" endtime="20210730 13:52:25.125"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:25.129" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:25.129" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:25.125" endtime="20210730 13:52:25.129"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:25.129" endtime="20210730 13:52:25.129"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:25.129" endtime="20210730 13:52:25.129"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:25.125" endtime="20210730 13:52:25.129"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:25.125" endtime="20210730 13:52:25.129"/>
</for>
<status status="FAIL" starttime="20210730 13:52:25.123" endtime="20210730 13:52:25.129"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:25.123" endtime="20210730 13:52:25.129"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:25.103" endtime="20210730 13:52:25.129"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:25.134" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:25.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:25.144" level="INFO">${pids} = 13267
13274
13279</msg>
<status status="PASS" starttime="20210730 13:52:25.131" endtime="20210730 13:52:25.144"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:25.145" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:25.144" endtime="20210730 13:52:25.145"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:25.146" level="INFO">${pids} = ['13267', '13274', '13279']</msg>
<status status="PASS" starttime="20210730 13:52:25.146" endtime="20210730 13:52:25.146"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13267</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:25.150" level="INFO">Running command 'kill 13267 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:25.146" endtime="20210730 13:52:25.150"/>
</kw>
<status status="PASS" starttime="20210730 13:52:25.146" endtime="20210730 13:52:25.150"/>
</iter>
<iter>
<var name="${pid}">13274</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:25.154" level="INFO">Running command 'kill 13274 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:25.151" endtime="20210730 13:52:25.156"/>
</kw>
<status status="PASS" starttime="20210730 13:52:25.151" endtime="20210730 13:52:25.156"/>
</iter>
<iter>
<var name="${pid}">13279</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:25.160" level="INFO">Running command 'kill 13279 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:25.157" endtime="20210730 13:52:25.161"/>
</kw>
<status status="PASS" starttime="20210730 13:52:25.157" endtime="20210730 13:52:25.161"/>
</iter>
<status status="PASS" starttime="20210730 13:52:25.146" endtime="20210730 13:52:25.161"/>
</for>
<status status="PASS" starttime="20210730 13:52:25.145" endtime="20210730 13:52:25.161"/>
</branch>
<status status="PASS" starttime="20210730 13:52:25.145" endtime="20210730 13:52:25.161"/>
</if>
<status status="PASS" starttime="20210730 13:52:25.130" endtime="20210730 13:52:25.162"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '!#%&amp;/¤%= ()=?'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:23.552" endtime="20210730 13:52:25.162">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t26" name="With Each Valid Token, Updating Username Of Each System User With 1234 67 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:25.166" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:25.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:25.175" level="INFO">${pids} = 13308</msg>
<status status="PASS" starttime="20210730 13:52:25.163" endtime="20210730 13:52:25.175"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:25.176" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:25.175" endtime="20210730 13:52:25.176"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:25.177" level="INFO">${pids} = ['13308']</msg>
<status status="PASS" starttime="20210730 13:52:25.176" endtime="20210730 13:52:25.177"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13308</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:25.182" level="INFO">Running command 'kill 13308 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:25.177" endtime="20210730 13:52:25.183"/>
</kw>
<status status="PASS" starttime="20210730 13:52:25.177" endtime="20210730 13:52:25.183"/>
</iter>
<status status="PASS" starttime="20210730 13:52:25.177" endtime="20210730 13:52:25.183"/>
</for>
<status status="PASS" starttime="20210730 13:52:25.176" endtime="20210730 13:52:25.183"/>
</branch>
<status status="PASS" starttime="20210730 13:52:25.176" endtime="20210730 13:52:25.183"/>
</if>
<status status="PASS" starttime="20210730 13:52:25.163" endtime="20210730 13:52:25.183"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:25.184" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:25.184" endtime="20210730 13:52:25.184"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:25.185" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:25.185" endtime="20210730 13:52:25.185"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:25.185" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:25.185" endtime="20210730 13:52:25.185"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:25.186" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:25.185" endtime="20210730 13:52:25.186"/>
</kw>
<msg timestamp="20210730 13:52:25.186" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:25.184" endtime="20210730 13:52:25.186"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:25.190" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:25.186" endtime="20210730 13:52:25.193"/>
</kw>
<status status="PASS" starttime="20210730 13:52:25.184" endtime="20210730 13:52:25.193"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:25.195" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:25.194" endtime="20210730 13:52:25.200"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:26.702" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:25.201" endtime="20210730 13:52:26.702"/>
</kw>
<status status="PASS" starttime="20210730 13:52:25.194" endtime="20210730 13:52:26.703"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:26.704" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:26.704" endtime="20210730 13:52:26.704"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:26.705" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:26.704" endtime="20210730 13:52:26.705"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:26.705" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:26.705" endtime="20210730 13:52:26.705"/>
</kw>
<msg timestamp="20210730 13:52:26.705" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:26.703" endtime="20210730 13:52:26.706"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:26.706" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:26.706" endtime="20210730 13:52:26.706"/>
</kw>
<status status="PASS" starttime="20210730 13:52:26.703" endtime="20210730 13:52:26.707"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:26.707" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:26.707" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:26.707" endtime="20210730 13:52:26.708"/>
</kw>
<status status="PASS" starttime="20210730 13:52:26.707" endtime="20210730 13:52:26.708"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:26.709" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:26.709" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:26.708" endtime="20210730 13:52:26.709"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:26.709" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:26.709" endtime="20210730 13:52:26.709"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:26.710" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:26.710" endtime="20210730 13:52:26.710"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:26.710" endtime="20210730 13:52:26.711"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:26.711" endtime="20210730 13:52:26.711"/>
</kw>
<status status="PASS" starttime="20210730 13:52:26.709" endtime="20210730 13:52:26.711"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:26.712" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:26.712" endtime="20210730 13:52:26.712"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:26.712" endtime="20210730 13:52:26.713"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:26.713" endtime="20210730 13:52:26.713"/>
</kw>
<status status="PASS" starttime="20210730 13:52:26.711" endtime="20210730 13:52:26.713"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:26.714" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:26.714" endtime="20210730 13:52:26.714"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:26.714" endtime="20210730 13:52:26.715"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:26.715" endtime="20210730 13:52:26.715"/>
</kw>
<status status="PASS" starttime="20210730 13:52:26.713" endtime="20210730 13:52:26.715"/>
</iter>
<status status="PASS" starttime="20210730 13:52:26.709" endtime="20210730 13:52:26.716"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:26.717" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:26.716" endtime="20210730 13:52:26.717"/>
</kw>
<status status="PASS" starttime="20210730 13:52:26.708" endtime="20210730 13:52:26.717"/>
</kw>
<status status="PASS" starttime="20210730 13:52:25.163" endtime="20210730 13:52:26.717"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=1234 67</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:26.718" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:26.718" endtime="20210730 13:52:26.718"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:26.719" level="INFO">${payload} = {'username': '1234 67'}</msg>
<status status="PASS" starttime="20210730 13:52:26.718" endtime="20210730 13:52:26.719"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:26.730" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:26.730" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:26.719" endtime="20210730 13:52:26.730"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:26.730" endtime="20210730 13:52:26.730"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:26.731" endtime="20210730 13:52:26.731"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:26.719" endtime="20210730 13:52:26.731"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:26.719" endtime="20210730 13:52:26.731"/>
</for>
<status status="FAIL" starttime="20210730 13:52:26.717" endtime="20210730 13:52:26.731"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:26.717" endtime="20210730 13:52:26.731"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=1234 67</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:26.732" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:26.732" endtime="20210730 13:52:26.732"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:26.733" level="INFO">${payload} = {'username': '1234 67'}</msg>
<status status="PASS" starttime="20210730 13:52:26.732" endtime="20210730 13:52:26.733"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:26.738" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:26.738" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:26.733" endtime="20210730 13:52:26.738"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:26.738" endtime="20210730 13:52:26.738"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:26.738" endtime="20210730 13:52:26.738"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:26.733" endtime="20210730 13:52:26.739"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:26.733" endtime="20210730 13:52:26.739"/>
</for>
<status status="FAIL" starttime="20210730 13:52:26.731" endtime="20210730 13:52:26.739"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:26.731" endtime="20210730 13:52:26.739"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=1234 67</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:26.740" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:26.740" endtime="20210730 13:52:26.740"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:26.741" level="INFO">${payload} = {'username': '1234 67'}</msg>
<status status="PASS" starttime="20210730 13:52:26.740" endtime="20210730 13:52:26.741"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:26.746" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:26.747" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:26.741" endtime="20210730 13:52:26.747"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:26.747" endtime="20210730 13:52:26.747"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:26.747" endtime="20210730 13:52:26.747"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:26.741" endtime="20210730 13:52:26.747"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:26.741" endtime="20210730 13:52:26.747"/>
</for>
<status status="FAIL" starttime="20210730 13:52:26.739" endtime="20210730 13:52:26.748"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:26.739" endtime="20210730 13:52:26.748"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:26.717" endtime="20210730 13:52:26.748"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:26.753" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:26.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:26.767" level="INFO">${pids} = 13331
13338
13342</msg>
<status status="PASS" starttime="20210730 13:52:26.749" endtime="20210730 13:52:26.767"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:26.768" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:26.767" endtime="20210730 13:52:26.768"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:26.769" level="INFO">${pids} = ['13331', '13338', '13342']</msg>
<status status="PASS" starttime="20210730 13:52:26.768" endtime="20210730 13:52:26.769"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13331</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:26.774" level="INFO">Running command 'kill 13331 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:26.769" endtime="20210730 13:52:26.774"/>
</kw>
<status status="PASS" starttime="20210730 13:52:26.769" endtime="20210730 13:52:26.775"/>
</iter>
<iter>
<var name="${pid}">13338</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:26.781" level="INFO">Running command 'kill 13338 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:26.775" endtime="20210730 13:52:26.781"/>
</kw>
<status status="PASS" starttime="20210730 13:52:26.775" endtime="20210730 13:52:26.782"/>
</iter>
<iter>
<var name="${pid}">13342</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:26.785" level="INFO">Running command 'kill 13342 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:26.782" endtime="20210730 13:52:26.786"/>
</kw>
<status status="PASS" starttime="20210730 13:52:26.782" endtime="20210730 13:52:26.786"/>
</iter>
<status status="PASS" starttime="20210730 13:52:26.769" endtime="20210730 13:52:26.786"/>
</for>
<status status="PASS" starttime="20210730 13:52:26.768" endtime="20210730 13:52:26.786"/>
</branch>
<status status="PASS" starttime="20210730 13:52:26.768" endtime="20210730 13:52:26.786"/>
</if>
<status status="PASS" starttime="20210730 13:52:26.748" endtime="20210730 13:52:26.786"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '1234 67'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:25.162" endtime="20210730 13:52:26.787">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t27" name="With Each Valid Token, Updating Username Of Each System User With 123456 8 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:26.792" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:26.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:26.803" level="INFO">${pids} = 13371</msg>
<status status="PASS" starttime="20210730 13:52:26.789" endtime="20210730 13:52:26.803"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:26.804" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:26.803" endtime="20210730 13:52:26.804"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:26.805" level="INFO">${pids} = ['13371']</msg>
<status status="PASS" starttime="20210730 13:52:26.805" endtime="20210730 13:52:26.805"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13371</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:26.813" level="INFO">Running command 'kill 13371 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:26.806" endtime="20210730 13:52:26.813"/>
</kw>
<status status="PASS" starttime="20210730 13:52:26.806" endtime="20210730 13:52:26.813"/>
</iter>
<status status="PASS" starttime="20210730 13:52:26.806" endtime="20210730 13:52:26.813"/>
</for>
<status status="PASS" starttime="20210730 13:52:26.804" endtime="20210730 13:52:26.814"/>
</branch>
<status status="PASS" starttime="20210730 13:52:26.804" endtime="20210730 13:52:26.814"/>
</if>
<status status="PASS" starttime="20210730 13:52:26.789" endtime="20210730 13:52:26.814"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:26.815" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:26.815" endtime="20210730 13:52:26.815"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:26.816" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:26.816" endtime="20210730 13:52:26.816"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:26.817" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:26.816" endtime="20210730 13:52:26.817"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:26.817" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:26.817" endtime="20210730 13:52:26.817"/>
</kw>
<msg timestamp="20210730 13:52:26.818" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:26.816" endtime="20210730 13:52:26.818"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:26.822" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:26.818" endtime="20210730 13:52:26.824"/>
</kw>
<status status="PASS" starttime="20210730 13:52:26.814" endtime="20210730 13:52:26.825"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:26.827" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:26.826" endtime="20210730 13:52:26.841"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:28.345" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:26.842" endtime="20210730 13:52:28.345"/>
</kw>
<status status="PASS" starttime="20210730 13:52:26.825" endtime="20210730 13:52:28.345"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:28.346" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:28.346" endtime="20210730 13:52:28.346"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:28.347" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:28.346" endtime="20210730 13:52:28.347"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:28.347" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:28.347" endtime="20210730 13:52:28.347"/>
</kw>
<msg timestamp="20210730 13:52:28.347" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:28.346" endtime="20210730 13:52:28.347"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:28.348" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:28.347" endtime="20210730 13:52:28.348"/>
</kw>
<status status="PASS" starttime="20210730 13:52:28.345" endtime="20210730 13:52:28.348"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:28.349" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:28.349" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:28.349" endtime="20210730 13:52:28.349"/>
</kw>
<status status="PASS" starttime="20210730 13:52:28.348" endtime="20210730 13:52:28.349"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:28.350" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:28.351" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:28.350" endtime="20210730 13:52:28.351"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:28.351" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:28.351" endtime="20210730 13:52:28.351"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:28.352" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:28.352" endtime="20210730 13:52:28.352"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:28.352" endtime="20210730 13:52:28.353"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:28.353" endtime="20210730 13:52:28.353"/>
</kw>
<status status="PASS" starttime="20210730 13:52:28.351" endtime="20210730 13:52:28.353"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:28.353" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:28.353" endtime="20210730 13:52:28.353"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:28.354" endtime="20210730 13:52:28.355"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:28.355" endtime="20210730 13:52:28.355"/>
</kw>
<status status="PASS" starttime="20210730 13:52:28.353" endtime="20210730 13:52:28.355"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:28.355" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:28.355" endtime="20210730 13:52:28.355"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:28.356" endtime="20210730 13:52:28.356"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:28.356" endtime="20210730 13:52:28.357"/>
</kw>
<status status="PASS" starttime="20210730 13:52:28.355" endtime="20210730 13:52:28.357"/>
</iter>
<status status="PASS" starttime="20210730 13:52:28.351" endtime="20210730 13:52:28.357"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:28.357" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:28.357" endtime="20210730 13:52:28.357"/>
</kw>
<status status="PASS" starttime="20210730 13:52:28.350" endtime="20210730 13:52:28.358"/>
</kw>
<status status="PASS" starttime="20210730 13:52:26.788" endtime="20210730 13:52:28.358"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=123456 8</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:28.359" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:28.359" endtime="20210730 13:52:28.359"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:28.359" level="INFO">${payload} = {'username': '123456 8'}</msg>
<status status="PASS" starttime="20210730 13:52:28.359" endtime="20210730 13:52:28.359"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:28.368" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:28.368" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:28.360" endtime="20210730 13:52:28.368"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:28.368" endtime="20210730 13:52:28.369"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:28.369" endtime="20210730 13:52:28.369"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:28.359" endtime="20210730 13:52:28.369"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:28.359" endtime="20210730 13:52:28.369"/>
</for>
<status status="FAIL" starttime="20210730 13:52:28.358" endtime="20210730 13:52:28.369"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:28.358" endtime="20210730 13:52:28.369"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=123456 8</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:28.371" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:28.370" endtime="20210730 13:52:28.371"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:28.371" level="INFO">${payload} = {'username': '123456 8'}</msg>
<status status="PASS" starttime="20210730 13:52:28.371" endtime="20210730 13:52:28.371"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:28.376" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:28.376" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:28.372" endtime="20210730 13:52:28.376"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:28.376" endtime="20210730 13:52:28.376"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:28.376" endtime="20210730 13:52:28.376"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:28.372" endtime="20210730 13:52:28.376"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:28.371" endtime="20210730 13:52:28.376"/>
</for>
<status status="FAIL" starttime="20210730 13:52:28.369" endtime="20210730 13:52:28.376"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:28.369" endtime="20210730 13:52:28.377"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=123456 8</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:28.378" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:28.377" endtime="20210730 13:52:28.378"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:28.378" level="INFO">${payload} = {'username': '123456 8'}</msg>
<status status="PASS" starttime="20210730 13:52:28.378" endtime="20210730 13:52:28.378"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:28.383" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:28.383" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:28.378" endtime="20210730 13:52:28.383"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:28.383" endtime="20210730 13:52:28.383"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:28.383" endtime="20210730 13:52:28.383"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:28.378" endtime="20210730 13:52:28.383"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:28.378" endtime="20210730 13:52:28.384"/>
</for>
<status status="FAIL" starttime="20210730 13:52:28.377" endtime="20210730 13:52:28.384"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:28.377" endtime="20210730 13:52:28.384"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:28.358" endtime="20210730 13:52:28.384"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:28.390" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:28.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:28.399" level="INFO">${pids} = 13394
13401
13405</msg>
<status status="PASS" starttime="20210730 13:52:28.385" endtime="20210730 13:52:28.399"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:28.400" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:28.399" endtime="20210730 13:52:28.400"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:28.401" level="INFO">${pids} = ['13394', '13401', '13405']</msg>
<status status="PASS" starttime="20210730 13:52:28.401" endtime="20210730 13:52:28.401"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13394</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:28.404" level="INFO">Running command 'kill 13394 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:28.401" endtime="20210730 13:52:28.405"/>
</kw>
<status status="PASS" starttime="20210730 13:52:28.401" endtime="20210730 13:52:28.405"/>
</iter>
<iter>
<var name="${pid}">13401</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:28.409" level="INFO">Running command 'kill 13401 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:28.405" endtime="20210730 13:52:28.411"/>
</kw>
<status status="PASS" starttime="20210730 13:52:28.405" endtime="20210730 13:52:28.411"/>
</iter>
<iter>
<var name="${pid}">13405</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:28.415" level="INFO">Running command 'kill 13405 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:28.411" endtime="20210730 13:52:28.415"/>
</kw>
<status status="PASS" starttime="20210730 13:52:28.411" endtime="20210730 13:52:28.415"/>
</iter>
<status status="PASS" starttime="20210730 13:52:28.401" endtime="20210730 13:52:28.416"/>
</for>
<status status="PASS" starttime="20210730 13:52:28.400" endtime="20210730 13:52:28.416"/>
</branch>
<status status="PASS" starttime="20210730 13:52:28.400" endtime="20210730 13:52:28.416"/>
</if>
<status status="PASS" starttime="20210730 13:52:28.384" endtime="20210730 13:52:28.416"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '123456 8'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:26.787" endtime="20210730 13:52:28.416">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t28" name="With Each Valid Token, Updating Username Of Each System User With 12345678 12345 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:28.423" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:28.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:28.434" level="INFO">${pids} = 13434</msg>
<status status="PASS" starttime="20210730 13:52:28.419" endtime="20210730 13:52:28.434"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:28.435" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:28.435" endtime="20210730 13:52:28.435"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:28.436" level="INFO">${pids} = ['13434']</msg>
<status status="PASS" starttime="20210730 13:52:28.436" endtime="20210730 13:52:28.436"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13434</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:28.440" level="INFO">Running command 'kill 13434 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:28.436" endtime="20210730 13:52:28.440"/>
</kw>
<status status="PASS" starttime="20210730 13:52:28.436" endtime="20210730 13:52:28.440"/>
</iter>
<status status="PASS" starttime="20210730 13:52:28.436" endtime="20210730 13:52:28.440"/>
</for>
<status status="PASS" starttime="20210730 13:52:28.435" endtime="20210730 13:52:28.440"/>
</branch>
<status status="PASS" starttime="20210730 13:52:28.435" endtime="20210730 13:52:28.440"/>
</if>
<status status="PASS" starttime="20210730 13:52:28.419" endtime="20210730 13:52:28.441"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:28.442" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:28.441" endtime="20210730 13:52:28.442"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:28.442" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:28.442" endtime="20210730 13:52:28.442"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:28.443" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:28.443" endtime="20210730 13:52:28.443"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:28.443" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:28.443" endtime="20210730 13:52:28.443"/>
</kw>
<msg timestamp="20210730 13:52:28.443" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:28.442" endtime="20210730 13:52:28.443"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:28.452" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:28.444" endtime="20210730 13:52:28.453"/>
</kw>
<status status="PASS" starttime="20210730 13:52:28.441" endtime="20210730 13:52:28.454"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:28.455" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:28.455" endtime="20210730 13:52:28.459"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:29.962" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:28.460" endtime="20210730 13:52:29.962"/>
</kw>
<status status="PASS" starttime="20210730 13:52:28.454" endtime="20210730 13:52:29.963"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:29.964" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:29.964" endtime="20210730 13:52:29.964"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:29.964" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:29.964" endtime="20210730 13:52:29.964"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:29.965" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:29.965" endtime="20210730 13:52:29.965"/>
</kw>
<msg timestamp="20210730 13:52:29.965" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:29.963" endtime="20210730 13:52:29.965"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:29.966" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:29.965" endtime="20210730 13:52:29.966"/>
</kw>
<status status="PASS" starttime="20210730 13:52:29.963" endtime="20210730 13:52:29.966"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:29.967" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:29.967" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:29.966" endtime="20210730 13:52:29.967"/>
</kw>
<status status="PASS" starttime="20210730 13:52:29.966" endtime="20210730 13:52:29.967"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:29.968" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:29.968" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:29.967" endtime="20210730 13:52:29.968"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:29.968" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:29.968" endtime="20210730 13:52:29.968"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:29.969" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:29.968" endtime="20210730 13:52:29.969"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:29.969" endtime="20210730 13:52:29.969"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:29.969" endtime="20210730 13:52:29.970"/>
</kw>
<status status="PASS" starttime="20210730 13:52:29.968" endtime="20210730 13:52:29.970"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:29.970" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:29.970" endtime="20210730 13:52:29.970"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:29.971" endtime="20210730 13:52:29.972"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:29.972" endtime="20210730 13:52:29.973"/>
</kw>
<status status="PASS" starttime="20210730 13:52:29.970" endtime="20210730 13:52:29.973"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:29.973" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:29.973" endtime="20210730 13:52:29.973"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:29.973" endtime="20210730 13:52:29.974"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:29.974" endtime="20210730 13:52:29.974"/>
</kw>
<status status="PASS" starttime="20210730 13:52:29.973" endtime="20210730 13:52:29.974"/>
</iter>
<status status="PASS" starttime="20210730 13:52:29.968" endtime="20210730 13:52:29.974"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:29.975" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:29.974" endtime="20210730 13:52:29.975"/>
</kw>
<status status="PASS" starttime="20210730 13:52:29.967" endtime="20210730 13:52:29.975"/>
</kw>
<status status="PASS" starttime="20210730 13:52:28.418" endtime="20210730 13:52:29.975"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=12345678 12345</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:29.976" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:29.976" endtime="20210730 13:52:29.976"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:29.977" level="INFO">${payload} = {'username': '12345678 12345'}</msg>
<status status="PASS" starttime="20210730 13:52:29.977" endtime="20210730 13:52:29.977"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:29.986" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:29.986" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:29.977" endtime="20210730 13:52:29.986"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:29.986" endtime="20210730 13:52:29.986"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:29.987" endtime="20210730 13:52:29.987"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:29.977" endtime="20210730 13:52:29.987"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:29.977" endtime="20210730 13:52:29.987"/>
</for>
<status status="FAIL" starttime="20210730 13:52:29.976" endtime="20210730 13:52:29.987"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:29.975" endtime="20210730 13:52:29.987"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=12345678 12345</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:29.989" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:29.988" endtime="20210730 13:52:29.989"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:29.989" level="INFO">${payload} = {'username': '12345678 12345'}</msg>
<status status="PASS" starttime="20210730 13:52:29.989" endtime="20210730 13:52:29.989"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:29.994" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:29.994" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:29.990" endtime="20210730 13:52:29.994"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:29.994" endtime="20210730 13:52:29.994"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:29.994" endtime="20210730 13:52:29.994"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:29.990" endtime="20210730 13:52:29.994"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:29.989" endtime="20210730 13:52:29.994"/>
</for>
<status status="FAIL" starttime="20210730 13:52:29.987" endtime="20210730 13:52:29.995"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:29.987" endtime="20210730 13:52:29.995"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=12345678 12345</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:29.996" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:29.995" endtime="20210730 13:52:29.996"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:29.996" level="INFO">${payload} = {'username': '12345678 12345'}</msg>
<status status="PASS" starttime="20210730 13:52:29.996" endtime="20210730 13:52:29.996"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:30.001" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:30.001" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:29.997" endtime="20210730 13:52:30.001"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:30.001" endtime="20210730 13:52:30.001"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:30.001" endtime="20210730 13:52:30.002"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:29.996" endtime="20210730 13:52:30.002"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:29.996" endtime="20210730 13:52:30.002"/>
</for>
<status status="FAIL" starttime="20210730 13:52:29.995" endtime="20210730 13:52:30.002"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:29.995" endtime="20210730 13:52:30.002"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:29.975" endtime="20210730 13:52:30.002"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:30.007" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:30.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:30.016" level="INFO">${pids} = 13457
13464
13470</msg>
<status status="PASS" starttime="20210730 13:52:30.003" endtime="20210730 13:52:30.016"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:30.017" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:30.017" endtime="20210730 13:52:30.017"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:30.018" level="INFO">${pids} = ['13457', '13464', '13470']</msg>
<status status="PASS" starttime="20210730 13:52:30.018" endtime="20210730 13:52:30.018"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13457</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:30.022" level="INFO">Running command 'kill 13457 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:30.018" endtime="20210730 13:52:30.022"/>
</kw>
<status status="PASS" starttime="20210730 13:52:30.018" endtime="20210730 13:52:30.022"/>
</iter>
<iter>
<var name="${pid}">13464</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:30.026" level="INFO">Running command 'kill 13464 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:30.023" endtime="20210730 13:52:30.027"/>
</kw>
<status status="PASS" starttime="20210730 13:52:30.023" endtime="20210730 13:52:30.027"/>
</iter>
<iter>
<var name="${pid}">13470</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:30.030" level="INFO">Running command 'kill 13470 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:30.027" endtime="20210730 13:52:30.031"/>
</kw>
<status status="PASS" starttime="20210730 13:52:30.027" endtime="20210730 13:52:30.031"/>
</iter>
<status status="PASS" starttime="20210730 13:52:30.018" endtime="20210730 13:52:30.031"/>
</for>
<status status="PASS" starttime="20210730 13:52:30.018" endtime="20210730 13:52:30.031"/>
</branch>
<status status="PASS" starttime="20210730 13:52:30.017" endtime="20210730 13:52:30.031"/>
</if>
<status status="PASS" starttime="20210730 13:52:30.002" endtime="20210730 13:52:30.031"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '12345678 12345'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:28.417" endtime="20210730 13:52:30.031">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t29" name="With Each Valid Token, Updating Username Of Each System User With abcd fg Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:30.038" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:30.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:30.047" level="INFO">${pids} = 13499</msg>
<status status="PASS" starttime="20210730 13:52:30.034" endtime="20210730 13:52:30.047"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:30.048" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:30.048" endtime="20210730 13:52:30.048"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:30.049" level="INFO">${pids} = ['13499']</msg>
<status status="PASS" starttime="20210730 13:52:30.049" endtime="20210730 13:52:30.049"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13499</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:30.052" level="INFO">Running command 'kill 13499 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:30.049" endtime="20210730 13:52:30.053"/>
</kw>
<status status="PASS" starttime="20210730 13:52:30.049" endtime="20210730 13:52:30.053"/>
</iter>
<status status="PASS" starttime="20210730 13:52:30.049" endtime="20210730 13:52:30.053"/>
</for>
<status status="PASS" starttime="20210730 13:52:30.048" endtime="20210730 13:52:30.053"/>
</branch>
<status status="PASS" starttime="20210730 13:52:30.048" endtime="20210730 13:52:30.053"/>
</if>
<status status="PASS" starttime="20210730 13:52:30.033" endtime="20210730 13:52:30.053"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:30.055" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:30.054" endtime="20210730 13:52:30.055"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:30.055" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:30.055" endtime="20210730 13:52:30.055"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:30.056" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:30.056" endtime="20210730 13:52:30.056"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:30.056" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:30.056" endtime="20210730 13:52:30.056"/>
</kw>
<msg timestamp="20210730 13:52:30.057" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:30.055" endtime="20210730 13:52:30.057"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:30.060" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:30.057" endtime="20210730 13:52:30.061"/>
</kw>
<status status="PASS" starttime="20210730 13:52:30.053" endtime="20210730 13:52:30.062"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:30.063" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:30.062" endtime="20210730 13:52:30.070"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:31.579" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:30.071" endtime="20210730 13:52:31.579"/>
</kw>
<status status="PASS" starttime="20210730 13:52:30.062" endtime="20210730 13:52:31.579"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:31.581" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:31.581" endtime="20210730 13:52:31.581"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:31.581" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:31.581" endtime="20210730 13:52:31.581"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:31.582" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:31.581" endtime="20210730 13:52:31.582"/>
</kw>
<msg timestamp="20210730 13:52:31.582" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:31.580" endtime="20210730 13:52:31.582"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:31.583" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:31.582" endtime="20210730 13:52:31.583"/>
</kw>
<status status="PASS" starttime="20210730 13:52:31.580" endtime="20210730 13:52:31.583"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:31.584" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:31.584" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:31.584" endtime="20210730 13:52:31.584"/>
</kw>
<status status="PASS" starttime="20210730 13:52:31.583" endtime="20210730 13:52:31.584"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:31.585" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:31.585" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:31.584" endtime="20210730 13:52:31.585"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:31.585" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:31.585" endtime="20210730 13:52:31.586"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:31.586" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:31.586" endtime="20210730 13:52:31.586"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:31.586" endtime="20210730 13:52:31.588"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:31.588" endtime="20210730 13:52:31.588"/>
</kw>
<status status="PASS" starttime="20210730 13:52:31.586" endtime="20210730 13:52:31.588"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:31.589" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:31.588" endtime="20210730 13:52:31.589"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:31.589" endtime="20210730 13:52:31.590"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:31.590" endtime="20210730 13:52:31.590"/>
</kw>
<status status="PASS" starttime="20210730 13:52:31.588" endtime="20210730 13:52:31.590"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:31.591" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:31.590" endtime="20210730 13:52:31.591"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:31.591" endtime="20210730 13:52:31.591"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:31.591" endtime="20210730 13:52:31.592"/>
</kw>
<status status="PASS" starttime="20210730 13:52:31.590" endtime="20210730 13:52:31.592"/>
</iter>
<status status="PASS" starttime="20210730 13:52:31.586" endtime="20210730 13:52:31.592"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:31.592" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:31.592" endtime="20210730 13:52:31.592"/>
</kw>
<status status="PASS" starttime="20210730 13:52:31.584" endtime="20210730 13:52:31.592"/>
</kw>
<status status="PASS" starttime="20210730 13:52:30.033" endtime="20210730 13:52:31.592"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=abcd fg</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:31.594" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:31.593" endtime="20210730 13:52:31.594"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:31.594" level="INFO">${payload} = {'username': 'abcd fg'}</msg>
<status status="PASS" starttime="20210730 13:52:31.594" endtime="20210730 13:52:31.594"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:31.604" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:31.604" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:31.594" endtime="20210730 13:52:31.604"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:31.605" endtime="20210730 13:52:31.605"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:31.605" endtime="20210730 13:52:31.605"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:31.594" endtime="20210730 13:52:31.605"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:31.594" endtime="20210730 13:52:31.605"/>
</for>
<status status="FAIL" starttime="20210730 13:52:31.593" endtime="20210730 13:52:31.605"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:31.593" endtime="20210730 13:52:31.605"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=abcd fg</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:31.606" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:31.606" endtime="20210730 13:52:31.606"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:31.607" level="INFO">${payload} = {'username': 'abcd fg'}</msg>
<status status="PASS" starttime="20210730 13:52:31.607" endtime="20210730 13:52:31.607"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:31.611" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:31.612" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:31.607" endtime="20210730 13:52:31.612"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:31.612" endtime="20210730 13:52:31.612"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:31.612" endtime="20210730 13:52:31.612"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:31.607" endtime="20210730 13:52:31.612"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:31.607" endtime="20210730 13:52:31.612"/>
</for>
<status status="FAIL" starttime="20210730 13:52:31.606" endtime="20210730 13:52:31.612"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:31.605" endtime="20210730 13:52:31.612"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=abcd fg</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:31.614" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:31.613" endtime="20210730 13:52:31.614"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:31.614" level="INFO">${payload} = {'username': 'abcd fg'}</msg>
<status status="PASS" starttime="20210730 13:52:31.614" endtime="20210730 13:52:31.614"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:31.620" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:31.620" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:31.614" endtime="20210730 13:52:31.620"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:31.620" endtime="20210730 13:52:31.620"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:31.620" endtime="20210730 13:52:31.620"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:31.614" endtime="20210730 13:52:31.621"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:31.614" endtime="20210730 13:52:31.621"/>
</for>
<status status="FAIL" starttime="20210730 13:52:31.613" endtime="20210730 13:52:31.621"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:31.612" endtime="20210730 13:52:31.621"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:31.593" endtime="20210730 13:52:31.621"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:31.626" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:31.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:31.635" level="INFO">${pids} = 13522
13529
13533</msg>
<status status="PASS" starttime="20210730 13:52:31.622" endtime="20210730 13:52:31.635"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:31.636" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:31.635" endtime="20210730 13:52:31.636"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:31.637" level="INFO">${pids} = ['13522', '13529', '13533']</msg>
<status status="PASS" starttime="20210730 13:52:31.636" endtime="20210730 13:52:31.637"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13522</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:31.640" level="INFO">Running command 'kill 13522 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:31.637" endtime="20210730 13:52:31.641"/>
</kw>
<status status="PASS" starttime="20210730 13:52:31.637" endtime="20210730 13:52:31.641"/>
</iter>
<iter>
<var name="${pid}">13529</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:31.644" level="INFO">Running command 'kill 13529 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:31.641" endtime="20210730 13:52:31.645"/>
</kw>
<status status="PASS" starttime="20210730 13:52:31.641" endtime="20210730 13:52:31.645"/>
</iter>
<iter>
<var name="${pid}">13533</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:31.649" level="INFO">Running command 'kill 13533 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:31.646" endtime="20210730 13:52:31.649"/>
</kw>
<status status="PASS" starttime="20210730 13:52:31.646" endtime="20210730 13:52:31.650"/>
</iter>
<status status="PASS" starttime="20210730 13:52:31.637" endtime="20210730 13:52:31.650"/>
</for>
<status status="PASS" starttime="20210730 13:52:31.636" endtime="20210730 13:52:31.650"/>
</branch>
<status status="PASS" starttime="20210730 13:52:31.636" endtime="20210730 13:52:31.650"/>
</if>
<status status="PASS" starttime="20210730 13:52:31.621" endtime="20210730 13:52:31.650"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": 'abcd fg'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:30.032" endtime="20210730 13:52:31.651">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t30" name="With Each Valid Token, Updating Username Of Each System User With ab defgh Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:31.657" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:31.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:31.666" level="INFO">${pids} = 13562</msg>
<status status="PASS" starttime="20210730 13:52:31.653" endtime="20210730 13:52:31.666"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:31.667" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:31.666" endtime="20210730 13:52:31.667"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:31.668" level="INFO">${pids} = ['13562']</msg>
<status status="PASS" starttime="20210730 13:52:31.667" endtime="20210730 13:52:31.668"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13562</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:31.671" level="INFO">Running command 'kill 13562 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:31.668" endtime="20210730 13:52:31.672"/>
</kw>
<status status="PASS" starttime="20210730 13:52:31.668" endtime="20210730 13:52:31.672"/>
</iter>
<status status="PASS" starttime="20210730 13:52:31.668" endtime="20210730 13:52:31.672"/>
</for>
<status status="PASS" starttime="20210730 13:52:31.667" endtime="20210730 13:52:31.672"/>
</branch>
<status status="PASS" starttime="20210730 13:52:31.667" endtime="20210730 13:52:31.672"/>
</if>
<status status="PASS" starttime="20210730 13:52:31.652" endtime="20210730 13:52:31.672"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:31.673" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:31.673" endtime="20210730 13:52:31.673"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:31.674" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:31.674" endtime="20210730 13:52:31.674"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:31.674" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:31.674" endtime="20210730 13:52:31.674"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:31.675" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:31.675" endtime="20210730 13:52:31.675"/>
</kw>
<msg timestamp="20210730 13:52:31.675" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:31.674" endtime="20210730 13:52:31.675"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:31.678" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:31.675" endtime="20210730 13:52:31.679"/>
</kw>
<status status="PASS" starttime="20210730 13:52:31.673" endtime="20210730 13:52:31.680"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:31.681" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:31.681" endtime="20210730 13:52:31.690"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:33.198" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:31.691" endtime="20210730 13:52:33.198"/>
</kw>
<status status="PASS" starttime="20210730 13:52:31.680" endtime="20210730 13:52:33.198"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:33.199" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:33.199" endtime="20210730 13:52:33.199"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:33.200" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:33.199" endtime="20210730 13:52:33.200"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:33.200" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:33.200" endtime="20210730 13:52:33.200"/>
</kw>
<msg timestamp="20210730 13:52:33.201" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:33.199" endtime="20210730 13:52:33.201"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:33.201" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:33.201" endtime="20210730 13:52:33.201"/>
</kw>
<status status="PASS" starttime="20210730 13:52:33.198" endtime="20210730 13:52:33.202"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:33.202" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:33.202" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:33.202" endtime="20210730 13:52:33.202"/>
</kw>
<status status="PASS" starttime="20210730 13:52:33.202" endtime="20210730 13:52:33.202"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:33.203" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:33.203" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:33.203" endtime="20210730 13:52:33.203"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:33.203" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:33.203" endtime="20210730 13:52:33.203"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:33.204" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:33.204" endtime="20210730 13:52:33.204"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:33.204" endtime="20210730 13:52:33.205"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:33.205" endtime="20210730 13:52:33.205"/>
</kw>
<status status="PASS" starttime="20210730 13:52:33.204" endtime="20210730 13:52:33.205"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:33.206" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:33.205" endtime="20210730 13:52:33.206"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:33.206" endtime="20210730 13:52:33.206"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:33.207" endtime="20210730 13:52:33.207"/>
</kw>
<status status="PASS" starttime="20210730 13:52:33.205" endtime="20210730 13:52:33.207"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:33.207" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:33.207" endtime="20210730 13:52:33.207"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:33.207" endtime="20210730 13:52:33.208"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:33.208" endtime="20210730 13:52:33.208"/>
</kw>
<status status="PASS" starttime="20210730 13:52:33.207" endtime="20210730 13:52:33.208"/>
</iter>
<status status="PASS" starttime="20210730 13:52:33.203" endtime="20210730 13:52:33.208"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:33.209" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:33.209" endtime="20210730 13:52:33.209"/>
</kw>
<status status="PASS" starttime="20210730 13:52:33.202" endtime="20210730 13:52:33.209"/>
</kw>
<status status="PASS" starttime="20210730 13:52:31.652" endtime="20210730 13:52:33.209"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=ab defgh</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:33.211" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:33.210" endtime="20210730 13:52:33.211"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:33.211" level="INFO">${payload} = {'username': 'ab defgh'}</msg>
<status status="PASS" starttime="20210730 13:52:33.211" endtime="20210730 13:52:33.211"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:33.221" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:33.222" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:33.211" endtime="20210730 13:52:33.222"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:33.222" endtime="20210730 13:52:33.222"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:33.223" endtime="20210730 13:52:33.223"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:33.211" endtime="20210730 13:52:33.223"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:33.211" endtime="20210730 13:52:33.223"/>
</for>
<status status="FAIL" starttime="20210730 13:52:33.210" endtime="20210730 13:52:33.223"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:33.210" endtime="20210730 13:52:33.223"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=ab defgh</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:33.224" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:33.224" endtime="20210730 13:52:33.224"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:33.225" level="INFO">${payload} = {'username': 'ab defgh'}</msg>
<status status="PASS" starttime="20210730 13:52:33.224" endtime="20210730 13:52:33.225"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:33.229" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:33.229" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:33.225" endtime="20210730 13:52:33.229"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:33.229" endtime="20210730 13:52:33.229"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:33.229" endtime="20210730 13:52:33.229"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:33.225" endtime="20210730 13:52:33.229"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:33.225" endtime="20210730 13:52:33.230"/>
</for>
<status status="FAIL" starttime="20210730 13:52:33.223" endtime="20210730 13:52:33.230"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:33.223" endtime="20210730 13:52:33.230"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=ab defgh</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:33.231" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:33.231" endtime="20210730 13:52:33.231"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:33.231" level="INFO">${payload} = {'username': 'ab defgh'}</msg>
<status status="PASS" starttime="20210730 13:52:33.231" endtime="20210730 13:52:33.231"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:33.236" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:33.236" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:33.232" endtime="20210730 13:52:33.236"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:33.236" endtime="20210730 13:52:33.237"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:33.237" endtime="20210730 13:52:33.237"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:33.232" endtime="20210730 13:52:33.237"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:33.231" endtime="20210730 13:52:33.237"/>
</for>
<status status="FAIL" starttime="20210730 13:52:33.230" endtime="20210730 13:52:33.237"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:33.230" endtime="20210730 13:52:33.237"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:33.210" endtime="20210730 13:52:33.237"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:33.242" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:33.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:33.252" level="INFO">${pids} = 13585
13592
13596</msg>
<status status="PASS" starttime="20210730 13:52:33.238" endtime="20210730 13:52:33.252"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:33.252" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:33.252" endtime="20210730 13:52:33.252"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:33.253" level="INFO">${pids} = ['13585', '13592', '13596']</msg>
<status status="PASS" starttime="20210730 13:52:33.253" endtime="20210730 13:52:33.253"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13585</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:33.257" level="INFO">Running command 'kill 13585 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:33.254" endtime="20210730 13:52:33.257"/>
</kw>
<status status="PASS" starttime="20210730 13:52:33.253" endtime="20210730 13:52:33.257"/>
</iter>
<iter>
<var name="${pid}">13592</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:33.260" level="INFO">Running command 'kill 13592 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:33.258" endtime="20210730 13:52:33.261"/>
</kw>
<status status="PASS" starttime="20210730 13:52:33.258" endtime="20210730 13:52:33.261"/>
</iter>
<iter>
<var name="${pid}">13596</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:33.265" level="INFO">Running command 'kill 13596 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:33.261" endtime="20210730 13:52:33.265"/>
</kw>
<status status="PASS" starttime="20210730 13:52:33.261" endtime="20210730 13:52:33.265"/>
</iter>
<status status="PASS" starttime="20210730 13:52:33.253" endtime="20210730 13:52:33.265"/>
</for>
<status status="PASS" starttime="20210730 13:52:33.253" endtime="20210730 13:52:33.265"/>
</branch>
<status status="PASS" starttime="20210730 13:52:33.253" endtime="20210730 13:52:33.265"/>
</if>
<status status="PASS" starttime="20210730 13:52:33.237" endtime="20210730 13:52:33.265"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": 'ab defgh'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:31.651" endtime="20210730 13:52:33.266">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t31" name="With Each Valid Token, Updating Username Of Each System User With abcdefghijklmnp stop Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:33.272" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:33.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:33.283" level="INFO">${pids} = 13625</msg>
<status status="PASS" starttime="20210730 13:52:33.269" endtime="20210730 13:52:33.284"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:33.284" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:33.284" endtime="20210730 13:52:33.284"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:33.285" level="INFO">${pids} = ['13625']</msg>
<status status="PASS" starttime="20210730 13:52:33.285" endtime="20210730 13:52:33.285"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13625</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:33.292" level="INFO">Running command 'kill 13625 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:33.286" endtime="20210730 13:52:33.292"/>
</kw>
<status status="PASS" starttime="20210730 13:52:33.286" endtime="20210730 13:52:33.292"/>
</iter>
<status status="PASS" starttime="20210730 13:52:33.285" endtime="20210730 13:52:33.292"/>
</for>
<status status="PASS" starttime="20210730 13:52:33.285" endtime="20210730 13:52:33.292"/>
</branch>
<status status="PASS" starttime="20210730 13:52:33.285" endtime="20210730 13:52:33.292"/>
</if>
<status status="PASS" starttime="20210730 13:52:33.268" endtime="20210730 13:52:33.293"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:33.294" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:33.293" endtime="20210730 13:52:33.294"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:33.294" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:33.294" endtime="20210730 13:52:33.294"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:33.295" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:33.294" endtime="20210730 13:52:33.295"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:33.295" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:33.295" endtime="20210730 13:52:33.295"/>
</kw>
<msg timestamp="20210730 13:52:33.295" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:33.294" endtime="20210730 13:52:33.295"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:33.301" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:33.295" endtime="20210730 13:52:33.306"/>
</kw>
<status status="PASS" starttime="20210730 13:52:33.293" endtime="20210730 13:52:33.306"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:33.307" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:33.307" endtime="20210730 13:52:33.311"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:34.817" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:33.312" endtime="20210730 13:52:34.817"/>
</kw>
<status status="PASS" starttime="20210730 13:52:33.306" endtime="20210730 13:52:34.818"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:34.819" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:34.819" endtime="20210730 13:52:34.819"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:34.820" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:34.819" endtime="20210730 13:52:34.820"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:34.820" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:34.820" endtime="20210730 13:52:34.820"/>
</kw>
<msg timestamp="20210730 13:52:34.820" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:34.818" endtime="20210730 13:52:34.820"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:34.821" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:34.820" endtime="20210730 13:52:34.822"/>
</kw>
<status status="PASS" starttime="20210730 13:52:34.818" endtime="20210730 13:52:34.822"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:34.825" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:34.825" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:34.823" endtime="20210730 13:52:34.825"/>
</kw>
<status status="PASS" starttime="20210730 13:52:34.822" endtime="20210730 13:52:34.825"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:34.826" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:34.826" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:34.826" endtime="20210730 13:52:34.826"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:34.827" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:34.826" endtime="20210730 13:52:34.827"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:34.827" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:34.827" endtime="20210730 13:52:34.827"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:34.827" endtime="20210730 13:52:34.828"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:34.828" endtime="20210730 13:52:34.828"/>
</kw>
<status status="PASS" starttime="20210730 13:52:34.827" endtime="20210730 13:52:34.828"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:34.829" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:34.829" endtime="20210730 13:52:34.829"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:34.829" endtime="20210730 13:52:34.830"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:34.830" endtime="20210730 13:52:34.830"/>
</kw>
<status status="PASS" starttime="20210730 13:52:34.829" endtime="20210730 13:52:34.830"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:34.830" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:34.830" endtime="20210730 13:52:34.830"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:34.831" endtime="20210730 13:52:34.831"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:34.831" endtime="20210730 13:52:34.831"/>
</kw>
<status status="PASS" starttime="20210730 13:52:34.830" endtime="20210730 13:52:34.831"/>
</iter>
<status status="PASS" starttime="20210730 13:52:34.827" endtime="20210730 13:52:34.832"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:34.832" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:34.832" endtime="20210730 13:52:34.832"/>
</kw>
<status status="PASS" starttime="20210730 13:52:34.825" endtime="20210730 13:52:34.832"/>
</kw>
<status status="PASS" starttime="20210730 13:52:33.268" endtime="20210730 13:52:34.832"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=abcdefghijklmnp stop</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:34.833" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:34.833" endtime="20210730 13:52:34.833"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:34.834" level="INFO">${payload} = {'username': 'abcdefghijklmnp stop'}</msg>
<status status="PASS" starttime="20210730 13:52:34.833" endtime="20210730 13:52:34.834"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:34.843" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:34.844" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:34.834" endtime="20210730 13:52:34.844"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:34.844" endtime="20210730 13:52:34.844"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:34.844" endtime="20210730 13:52:34.844"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:34.834" endtime="20210730 13:52:34.844"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:34.834" endtime="20210730 13:52:34.844"/>
</for>
<status status="FAIL" starttime="20210730 13:52:34.833" endtime="20210730 13:52:34.844"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:34.832" endtime="20210730 13:52:34.844"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=abcdefghijklmnp stop</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:34.846" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:34.845" endtime="20210730 13:52:34.846"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:34.846" level="INFO">${payload} = {'username': 'abcdefghijklmnp stop'}</msg>
<status status="PASS" starttime="20210730 13:52:34.846" endtime="20210730 13:52:34.846"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:34.850" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:34.851" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:34.846" endtime="20210730 13:52:34.851"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:34.851" endtime="20210730 13:52:34.851"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:34.851" endtime="20210730 13:52:34.851"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:34.846" endtime="20210730 13:52:34.851"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:34.846" endtime="20210730 13:52:34.851"/>
</for>
<status status="FAIL" starttime="20210730 13:52:34.845" endtime="20210730 13:52:34.851"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:34.844" endtime="20210730 13:52:34.851"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=abcdefghijklmnp stop</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:34.852" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:34.852" endtime="20210730 13:52:34.852"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:34.853" level="INFO">${payload} = {'username': 'abcdefghijklmnp stop'}</msg>
<status status="PASS" starttime="20210730 13:52:34.852" endtime="20210730 13:52:34.853"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:34.857" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:34.858" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:34.853" endtime="20210730 13:52:34.858"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:34.858" endtime="20210730 13:52:34.858"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:34.858" endtime="20210730 13:52:34.858"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:34.853" endtime="20210730 13:52:34.858"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:34.853" endtime="20210730 13:52:34.858"/>
</for>
<status status="FAIL" starttime="20210730 13:52:34.852" endtime="20210730 13:52:34.859"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:34.851" endtime="20210730 13:52:34.859"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:34.832" endtime="20210730 13:52:34.859"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:34.864" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:34.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:34.873" level="INFO">${pids} = 13648
13655
13660</msg>
<status status="PASS" starttime="20210730 13:52:34.860" endtime="20210730 13:52:34.873"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:34.874" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:34.873" endtime="20210730 13:52:34.874"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:34.875" level="INFO">${pids} = ['13648', '13655', '13660']</msg>
<status status="PASS" starttime="20210730 13:52:34.874" endtime="20210730 13:52:34.875"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13648</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:34.878" level="INFO">Running command 'kill 13648 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:34.875" endtime="20210730 13:52:34.878"/>
</kw>
<status status="PASS" starttime="20210730 13:52:34.875" endtime="20210730 13:52:34.878"/>
</iter>
<iter>
<var name="${pid}">13655</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:34.881" level="INFO">Running command 'kill 13655 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:34.879" endtime="20210730 13:52:34.883"/>
</kw>
<status status="PASS" starttime="20210730 13:52:34.878" endtime="20210730 13:52:34.883"/>
</iter>
<iter>
<var name="${pid}">13660</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:34.887" level="INFO">Running command 'kill 13660 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:34.884" endtime="20210730 13:52:34.887"/>
</kw>
<status status="PASS" starttime="20210730 13:52:34.884" endtime="20210730 13:52:34.888"/>
</iter>
<status status="PASS" starttime="20210730 13:52:34.875" endtime="20210730 13:52:34.888"/>
</for>
<status status="PASS" starttime="20210730 13:52:34.874" endtime="20210730 13:52:34.888"/>
</branch>
<status status="PASS" starttime="20210730 13:52:34.874" endtime="20210730 13:52:34.888"/>
</if>
<status status="PASS" starttime="20210730 13:52:34.859" endtime="20210730 13:52:34.888"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": 'abcdefghijklmnp stop'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:33.267" endtime="20210730 13:52:34.889">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t32" name="With Each Valid Token, Updating Username Of Each System User With haka 12 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:34.896" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:34.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:34.905" level="INFO">${pids} = 13689</msg>
<status status="PASS" starttime="20210730 13:52:34.891" endtime="20210730 13:52:34.905"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:34.906" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:34.906" endtime="20210730 13:52:34.906"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:34.907" level="INFO">${pids} = ['13689']</msg>
<status status="PASS" starttime="20210730 13:52:34.907" endtime="20210730 13:52:34.907"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13689</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:34.910" level="INFO">Running command 'kill 13689 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:34.907" endtime="20210730 13:52:34.911"/>
</kw>
<status status="PASS" starttime="20210730 13:52:34.907" endtime="20210730 13:52:34.911"/>
</iter>
<status status="PASS" starttime="20210730 13:52:34.907" endtime="20210730 13:52:34.911"/>
</for>
<status status="PASS" starttime="20210730 13:52:34.907" endtime="20210730 13:52:34.911"/>
</branch>
<status status="PASS" starttime="20210730 13:52:34.906" endtime="20210730 13:52:34.911"/>
</if>
<status status="PASS" starttime="20210730 13:52:34.891" endtime="20210730 13:52:34.911"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:34.912" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:34.912" endtime="20210730 13:52:34.912"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:34.913" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:34.913" endtime="20210730 13:52:34.913"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:34.913" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:34.913" endtime="20210730 13:52:34.913"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:34.914" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:34.913" endtime="20210730 13:52:34.914"/>
</kw>
<msg timestamp="20210730 13:52:34.914" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:34.912" endtime="20210730 13:52:34.914"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:34.917" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:34.914" endtime="20210730 13:52:34.919"/>
</kw>
<status status="PASS" starttime="20210730 13:52:34.912" endtime="20210730 13:52:34.919"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:34.920" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:34.920" endtime="20210730 13:52:34.928"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:36.429" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:34.928" endtime="20210730 13:52:36.429"/>
</kw>
<status status="PASS" starttime="20210730 13:52:34.919" endtime="20210730 13:52:36.430"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:36.431" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:36.431" endtime="20210730 13:52:36.431"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:36.431" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:36.431" endtime="20210730 13:52:36.431"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:36.432" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:36.431" endtime="20210730 13:52:36.432"/>
</kw>
<msg timestamp="20210730 13:52:36.432" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:36.430" endtime="20210730 13:52:36.432"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:36.432" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:36.432" endtime="20210730 13:52:36.433"/>
</kw>
<status status="PASS" starttime="20210730 13:52:36.430" endtime="20210730 13:52:36.433"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:36.433" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:36.433" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:36.433" endtime="20210730 13:52:36.434"/>
</kw>
<status status="PASS" starttime="20210730 13:52:36.433" endtime="20210730 13:52:36.434"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:36.434" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:36.434" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:36.434" endtime="20210730 13:52:36.435"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:36.435" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:36.435" endtime="20210730 13:52:36.435"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:36.435" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:36.435" endtime="20210730 13:52:36.435"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:36.435" endtime="20210730 13:52:36.436"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:36.436" endtime="20210730 13:52:36.436"/>
</kw>
<status status="PASS" starttime="20210730 13:52:36.435" endtime="20210730 13:52:36.436"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:36.437" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:36.437" endtime="20210730 13:52:36.437"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:36.437" endtime="20210730 13:52:36.438"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:36.438" endtime="20210730 13:52:36.438"/>
</kw>
<status status="PASS" starttime="20210730 13:52:36.436" endtime="20210730 13:52:36.438"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:36.438" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:36.438" endtime="20210730 13:52:36.438"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:36.439" endtime="20210730 13:52:36.439"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:36.440" endtime="20210730 13:52:36.440"/>
</kw>
<status status="PASS" starttime="20210730 13:52:36.438" endtime="20210730 13:52:36.440"/>
</iter>
<status status="PASS" starttime="20210730 13:52:36.435" endtime="20210730 13:52:36.440"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:36.440" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:36.440" endtime="20210730 13:52:36.440"/>
</kw>
<status status="PASS" starttime="20210730 13:52:36.434" endtime="20210730 13:52:36.441"/>
</kw>
<status status="PASS" starttime="20210730 13:52:34.890" endtime="20210730 13:52:36.441"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=haka 12</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:36.442" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:36.442" endtime="20210730 13:52:36.442"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:36.442" level="INFO">${payload} = {'username': 'haka 12'}</msg>
<status status="PASS" starttime="20210730 13:52:36.442" endtime="20210730 13:52:36.442"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:36.453" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:36.453" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:36.443" endtime="20210730 13:52:36.454"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:36.454" endtime="20210730 13:52:36.454"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:36.454" endtime="20210730 13:52:36.454"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:36.442" endtime="20210730 13:52:36.454"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:36.442" endtime="20210730 13:52:36.454"/>
</for>
<status status="FAIL" starttime="20210730 13:52:36.441" endtime="20210730 13:52:36.454"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:36.441" endtime="20210730 13:52:36.454"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=haka 12</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:36.455" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:36.455" endtime="20210730 13:52:36.455"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:36.456" level="INFO">${payload} = {'username': 'haka 12'}</msg>
<status status="PASS" starttime="20210730 13:52:36.456" endtime="20210730 13:52:36.456"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:36.460" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:36.461" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:36.456" endtime="20210730 13:52:36.461"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:36.461" endtime="20210730 13:52:36.461"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:36.461" endtime="20210730 13:52:36.461"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:36.456" endtime="20210730 13:52:36.461"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:36.456" endtime="20210730 13:52:36.461"/>
</for>
<status status="FAIL" starttime="20210730 13:52:36.454" endtime="20210730 13:52:36.461"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:36.454" endtime="20210730 13:52:36.461"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=haka 12</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:36.462" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:36.462" endtime="20210730 13:52:36.462"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:36.463" level="INFO">${payload} = {'username': 'haka 12'}</msg>
<status status="PASS" starttime="20210730 13:52:36.462" endtime="20210730 13:52:36.463"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:36.466" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:36.467" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:36.463" endtime="20210730 13:52:36.467"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:36.467" endtime="20210730 13:52:36.467"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:36.467" endtime="20210730 13:52:36.467"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:36.463" endtime="20210730 13:52:36.467"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:36.463" endtime="20210730 13:52:36.467"/>
</for>
<status status="FAIL" starttime="20210730 13:52:36.461" endtime="20210730 13:52:36.467"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:36.461" endtime="20210730 13:52:36.467"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:36.441" endtime="20210730 13:52:36.467"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:36.472" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:36.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:36.482" level="INFO">${pids} = 13712
13719
13726</msg>
<status status="PASS" starttime="20210730 13:52:36.468" endtime="20210730 13:52:36.482"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:36.483" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:36.482" endtime="20210730 13:52:36.483"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:36.484" level="INFO">${pids} = ['13712', '13719', '13726']</msg>
<status status="PASS" starttime="20210730 13:52:36.483" endtime="20210730 13:52:36.484"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13712</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:36.487" level="INFO">Running command 'kill 13712 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:36.484" endtime="20210730 13:52:36.488"/>
</kw>
<status status="PASS" starttime="20210730 13:52:36.484" endtime="20210730 13:52:36.488"/>
</iter>
<iter>
<var name="${pid}">13719</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:36.492" level="INFO">Running command 'kill 13719 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:36.488" endtime="20210730 13:52:36.494"/>
</kw>
<status status="PASS" starttime="20210730 13:52:36.488" endtime="20210730 13:52:36.494"/>
</iter>
<iter>
<var name="${pid}">13726</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:36.497" level="INFO">Running command 'kill 13726 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:36.495" endtime="20210730 13:52:36.498"/>
</kw>
<status status="PASS" starttime="20210730 13:52:36.494" endtime="20210730 13:52:36.498"/>
</iter>
<status status="PASS" starttime="20210730 13:52:36.484" endtime="20210730 13:52:36.498"/>
</for>
<status status="PASS" starttime="20210730 13:52:36.483" endtime="20210730 13:52:36.498"/>
</branch>
<status status="PASS" starttime="20210730 13:52:36.483" endtime="20210730 13:52:36.498"/>
</if>
<status status="PASS" starttime="20210730 13:52:36.467" endtime="20210730 13:52:36.498"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": 'haka 12'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:34.889" endtime="20210730 13:52:36.498">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t33" name="With Each Valid Token, Updating Username Of Each System User With haka 123 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:36.505" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:36.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:36.514" level="INFO">${pids} = 13755</msg>
<status status="PASS" starttime="20210730 13:52:36.501" endtime="20210730 13:52:36.514"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:36.515" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:36.515" endtime="20210730 13:52:36.515"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:36.516" level="INFO">${pids} = ['13755']</msg>
<status status="PASS" starttime="20210730 13:52:36.516" endtime="20210730 13:52:36.516"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13755</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:36.519" level="INFO">Running command 'kill 13755 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:36.516" endtime="20210730 13:52:36.520"/>
</kw>
<status status="PASS" starttime="20210730 13:52:36.516" endtime="20210730 13:52:36.520"/>
</iter>
<status status="PASS" starttime="20210730 13:52:36.516" endtime="20210730 13:52:36.520"/>
</for>
<status status="PASS" starttime="20210730 13:52:36.516" endtime="20210730 13:52:36.520"/>
</branch>
<status status="PASS" starttime="20210730 13:52:36.515" endtime="20210730 13:52:36.520"/>
</if>
<status status="PASS" starttime="20210730 13:52:36.500" endtime="20210730 13:52:36.520"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:36.521" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:36.521" endtime="20210730 13:52:36.522"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:36.522" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:36.522" endtime="20210730 13:52:36.522"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:36.523" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:36.522" endtime="20210730 13:52:36.523"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:36.523" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:36.523" endtime="20210730 13:52:36.523"/>
</kw>
<msg timestamp="20210730 13:52:36.523" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:36.522" endtime="20210730 13:52:36.523"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:36.526" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:36.523" endtime="20210730 13:52:36.528"/>
</kw>
<status status="PASS" starttime="20210730 13:52:36.520" endtime="20210730 13:52:36.528"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:36.529" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:36.529" endtime="20210730 13:52:36.537"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:38.043" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:36.538" endtime="20210730 13:52:38.043"/>
</kw>
<status status="PASS" starttime="20210730 13:52:36.528" endtime="20210730 13:52:38.043"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:38.044" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:38.044" endtime="20210730 13:52:38.044"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:38.045" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:38.045" endtime="20210730 13:52:38.045"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:38.045" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:38.045" endtime="20210730 13:52:38.045"/>
</kw>
<msg timestamp="20210730 13:52:38.045" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:38.044" endtime="20210730 13:52:38.045"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:38.046" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:38.046" endtime="20210730 13:52:38.046"/>
</kw>
<status status="PASS" starttime="20210730 13:52:38.044" endtime="20210730 13:52:38.046"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:38.047" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:38.047" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:38.047" endtime="20210730 13:52:38.048"/>
</kw>
<status status="PASS" starttime="20210730 13:52:38.047" endtime="20210730 13:52:38.048"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:38.050" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:38.050" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:38.048" endtime="20210730 13:52:38.050"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:38.050" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:38.050" endtime="20210730 13:52:38.050"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:38.053" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:38.051" endtime="20210730 13:52:38.053"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:38.053" endtime="20210730 13:52:38.054"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:38.054" endtime="20210730 13:52:38.054"/>
</kw>
<status status="PASS" starttime="20210730 13:52:38.051" endtime="20210730 13:52:38.054"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:38.055" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:38.055" endtime="20210730 13:52:38.055"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:38.055" endtime="20210730 13:52:38.056"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:38.056" endtime="20210730 13:52:38.056"/>
</kw>
<status status="PASS" starttime="20210730 13:52:38.054" endtime="20210730 13:52:38.056"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:38.057" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:38.057" endtime="20210730 13:52:38.057"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:38.057" endtime="20210730 13:52:38.058"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:38.058" endtime="20210730 13:52:38.058"/>
</kw>
<status status="PASS" starttime="20210730 13:52:38.056" endtime="20210730 13:52:38.058"/>
</iter>
<status status="PASS" starttime="20210730 13:52:38.050" endtime="20210730 13:52:38.058"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:38.059" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:38.058" endtime="20210730 13:52:38.059"/>
</kw>
<status status="PASS" starttime="20210730 13:52:38.048" endtime="20210730 13:52:38.059"/>
</kw>
<status status="PASS" starttime="20210730 13:52:36.500" endtime="20210730 13:52:38.059"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=haka 123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:38.060" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:38.060" endtime="20210730 13:52:38.060"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:38.060" level="INFO">${payload} = {'username': 'haka 123'}</msg>
<status status="PASS" starttime="20210730 13:52:38.060" endtime="20210730 13:52:38.060"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:38.068" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:38.069" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:38.061" endtime="20210730 13:52:38.069"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:38.069" endtime="20210730 13:52:38.069"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:38.069" endtime="20210730 13:52:38.069"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:38.060" endtime="20210730 13:52:38.069"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:38.060" endtime="20210730 13:52:38.069"/>
</for>
<status status="FAIL" starttime="20210730 13:52:38.059" endtime="20210730 13:52:38.069"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:38.059" endtime="20210730 13:52:38.069"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=haka 123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:38.071" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:38.070" endtime="20210730 13:52:38.071"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:38.072" level="INFO">${payload} = {'username': 'haka 123'}</msg>
<status status="PASS" starttime="20210730 13:52:38.071" endtime="20210730 13:52:38.072"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:38.076" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:38.076" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:38.072" endtime="20210730 13:52:38.076"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:38.076" endtime="20210730 13:52:38.076"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:38.076" endtime="20210730 13:52:38.076"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:38.072" endtime="20210730 13:52:38.076"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:38.072" endtime="20210730 13:52:38.076"/>
</for>
<status status="FAIL" starttime="20210730 13:52:38.070" endtime="20210730 13:52:38.077"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:38.070" endtime="20210730 13:52:38.077"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=haka 123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:38.078" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:38.077" endtime="20210730 13:52:38.078"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:38.078" level="INFO">${payload} = {'username': 'haka 123'}</msg>
<status status="PASS" starttime="20210730 13:52:38.078" endtime="20210730 13:52:38.078"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:38.082" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:38.083" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:38.078" endtime="20210730 13:52:38.083"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:38.083" endtime="20210730 13:52:38.083"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:38.083" endtime="20210730 13:52:38.083"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:38.078" endtime="20210730 13:52:38.083"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:38.078" endtime="20210730 13:52:38.083"/>
</for>
<status status="FAIL" starttime="20210730 13:52:38.077" endtime="20210730 13:52:38.083"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:38.077" endtime="20210730 13:52:38.083"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:38.059" endtime="20210730 13:52:38.083"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:38.088" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:38.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:38.099" level="INFO">${pids} = 13778
13785
13789</msg>
<status status="PASS" starttime="20210730 13:52:38.084" endtime="20210730 13:52:38.099"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:38.100" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:38.099" endtime="20210730 13:52:38.100"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:38.101" level="INFO">${pids} = ['13778', '13785', '13789']</msg>
<status status="PASS" starttime="20210730 13:52:38.100" endtime="20210730 13:52:38.101"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13778</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:38.104" level="INFO">Running command 'kill 13778 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:38.101" endtime="20210730 13:52:38.105"/>
</kw>
<status status="PASS" starttime="20210730 13:52:38.101" endtime="20210730 13:52:38.105"/>
</iter>
<iter>
<var name="${pid}">13785</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:38.108" level="INFO">Running command 'kill 13785 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:38.105" endtime="20210730 13:52:38.110"/>
</kw>
<status status="PASS" starttime="20210730 13:52:38.105" endtime="20210730 13:52:38.110"/>
</iter>
<iter>
<var name="${pid}">13789</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:38.114" level="INFO">Running command 'kill 13789 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:38.111" endtime="20210730 13:52:38.115"/>
</kw>
<status status="PASS" starttime="20210730 13:52:38.111" endtime="20210730 13:52:38.115"/>
</iter>
<status status="PASS" starttime="20210730 13:52:38.101" endtime="20210730 13:52:38.115"/>
</for>
<status status="PASS" starttime="20210730 13:52:38.100" endtime="20210730 13:52:38.115"/>
</branch>
<status status="PASS" starttime="20210730 13:52:38.100" endtime="20210730 13:52:38.115"/>
</if>
<status status="PASS" starttime="20210730 13:52:38.084" endtime="20210730 13:52:38.115"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": 'haka 123'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:36.499" endtime="20210730 13:52:38.116">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t34" name="With Each Valid Token, Updating Username Of Each System User With haka 123456789123456789 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:38.124" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:38.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:38.133" level="INFO">${pids} = 13818</msg>
<status status="PASS" starttime="20210730 13:52:38.118" endtime="20210730 13:52:38.133"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:38.134" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:38.133" endtime="20210730 13:52:38.134"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:38.134" level="INFO">${pids} = ['13818']</msg>
<status status="PASS" starttime="20210730 13:52:38.134" endtime="20210730 13:52:38.134"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13818</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:38.137" level="INFO">Running command 'kill 13818 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:38.135" endtime="20210730 13:52:38.138"/>
</kw>
<status status="PASS" starttime="20210730 13:52:38.134" endtime="20210730 13:52:38.138"/>
</iter>
<status status="PASS" starttime="20210730 13:52:38.134" endtime="20210730 13:52:38.138"/>
</for>
<status status="PASS" starttime="20210730 13:52:38.134" endtime="20210730 13:52:38.138"/>
</branch>
<status status="PASS" starttime="20210730 13:52:38.134" endtime="20210730 13:52:38.138"/>
</if>
<status status="PASS" starttime="20210730 13:52:38.118" endtime="20210730 13:52:38.138"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:38.139" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:38.139" endtime="20210730 13:52:38.139"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:38.140" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:38.140" endtime="20210730 13:52:38.140"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:38.140" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:38.140" endtime="20210730 13:52:38.140"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:38.141" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:38.141" endtime="20210730 13:52:38.141"/>
</kw>
<msg timestamp="20210730 13:52:38.141" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:38.140" endtime="20210730 13:52:38.141"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:38.144" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:38.141" endtime="20210730 13:52:38.146"/>
</kw>
<status status="PASS" starttime="20210730 13:52:38.139" endtime="20210730 13:52:38.146"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:38.147" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:38.147" endtime="20210730 13:52:38.157"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:39.658" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:38.157" endtime="20210730 13:52:39.658"/>
</kw>
<status status="PASS" starttime="20210730 13:52:38.146" endtime="20210730 13:52:39.659"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:39.660" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:39.659" endtime="20210730 13:52:39.660"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:39.660" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:39.660" endtime="20210730 13:52:39.660"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:39.660" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:39.660" endtime="20210730 13:52:39.661"/>
</kw>
<msg timestamp="20210730 13:52:39.661" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:39.659" endtime="20210730 13:52:39.661"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:39.662" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:39.661" endtime="20210730 13:52:39.662"/>
</kw>
<status status="PASS" starttime="20210730 13:52:39.659" endtime="20210730 13:52:39.662"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:39.662" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:39.662" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:39.662" endtime="20210730 13:52:39.663"/>
</kw>
<status status="PASS" starttime="20210730 13:52:39.662" endtime="20210730 13:52:39.663"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:39.663" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:39.664" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:39.663" endtime="20210730 13:52:39.664"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:39.664" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:39.664" endtime="20210730 13:52:39.664"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:39.664" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:39.664" endtime="20210730 13:52:39.664"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:39.665" endtime="20210730 13:52:39.665"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:39.665" endtime="20210730 13:52:39.666"/>
</kw>
<status status="PASS" starttime="20210730 13:52:39.664" endtime="20210730 13:52:39.666"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:39.666" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:39.666" endtime="20210730 13:52:39.666"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:39.666" endtime="20210730 13:52:39.667"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:39.667" endtime="20210730 13:52:39.667"/>
</kw>
<status status="PASS" starttime="20210730 13:52:39.666" endtime="20210730 13:52:39.667"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:39.667" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:39.667" endtime="20210730 13:52:39.667"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:39.668" endtime="20210730 13:52:39.668"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:39.669" endtime="20210730 13:52:39.669"/>
</kw>
<status status="PASS" starttime="20210730 13:52:39.667" endtime="20210730 13:52:39.669"/>
</iter>
<status status="PASS" starttime="20210730 13:52:39.664" endtime="20210730 13:52:39.669"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:39.669" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:39.669" endtime="20210730 13:52:39.669"/>
</kw>
<status status="PASS" starttime="20210730 13:52:39.663" endtime="20210730 13:52:39.669"/>
</kw>
<status status="PASS" starttime="20210730 13:52:38.117" endtime="20210730 13:52:39.670"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=haka 123456789123456789</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:39.671" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:39.670" endtime="20210730 13:52:39.671"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:39.671" level="INFO">${payload} = {'username': 'haka 123456789123456789'}</msg>
<status status="PASS" starttime="20210730 13:52:39.671" endtime="20210730 13:52:39.671"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:39.681" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:39.683" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:39.671" endtime="20210730 13:52:39.683"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:39.684" endtime="20210730 13:52:39.684"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:39.684" endtime="20210730 13:52:39.684"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:39.671" endtime="20210730 13:52:39.684"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:39.671" endtime="20210730 13:52:39.684"/>
</for>
<status status="FAIL" starttime="20210730 13:52:39.670" endtime="20210730 13:52:39.685"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:39.670" endtime="20210730 13:52:39.685"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=haka 123456789123456789</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:39.686" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:39.685" endtime="20210730 13:52:39.686"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:39.686" level="INFO">${payload} = {'username': 'haka 123456789123456789'}</msg>
<status status="PASS" starttime="20210730 13:52:39.686" endtime="20210730 13:52:39.686"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:39.691" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:39.691" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:39.686" endtime="20210730 13:52:39.691"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:39.691" endtime="20210730 13:52:39.691"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:39.691" endtime="20210730 13:52:39.691"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:39.686" endtime="20210730 13:52:39.691"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:39.686" endtime="20210730 13:52:39.691"/>
</for>
<status status="FAIL" starttime="20210730 13:52:39.685" endtime="20210730 13:52:39.692"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:39.685" endtime="20210730 13:52:39.692"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=haka 123456789123456789</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:39.693" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:39.692" endtime="20210730 13:52:39.693"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:39.693" level="INFO">${payload} = {'username': 'haka 123456789123456789'}</msg>
<status status="PASS" starttime="20210730 13:52:39.693" endtime="20210730 13:52:39.693"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:39.697" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:39.698" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:39.693" endtime="20210730 13:52:39.698"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:39.698" endtime="20210730 13:52:39.698"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:39.698" endtime="20210730 13:52:39.698"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:39.693" endtime="20210730 13:52:39.699"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:39.693" endtime="20210730 13:52:39.699"/>
</for>
<status status="FAIL" starttime="20210730 13:52:39.692" endtime="20210730 13:52:39.699"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:39.692" endtime="20210730 13:52:39.700"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:39.670" endtime="20210730 13:52:39.700"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:39.706" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:39.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:39.715" level="INFO">${pids} = 13841
13848
13852</msg>
<status status="PASS" starttime="20210730 13:52:39.702" endtime="20210730 13:52:39.715"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:39.716" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:39.715" endtime="20210730 13:52:39.716"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:39.716" level="INFO">${pids} = ['13841', '13848', '13852']</msg>
<status status="PASS" starttime="20210730 13:52:39.716" endtime="20210730 13:52:39.716"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13841</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:39.720" level="INFO">Running command 'kill 13841 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:39.717" endtime="20210730 13:52:39.721"/>
</kw>
<status status="PASS" starttime="20210730 13:52:39.717" endtime="20210730 13:52:39.721"/>
</iter>
<iter>
<var name="${pid}">13848</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:39.725" level="INFO">Running command 'kill 13848 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:39.722" endtime="20210730 13:52:39.728"/>
</kw>
<status status="PASS" starttime="20210730 13:52:39.721" endtime="20210730 13:52:39.728"/>
</iter>
<iter>
<var name="${pid}">13852</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:39.734" level="INFO">Running command 'kill 13852 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:39.728" endtime="20210730 13:52:39.734"/>
</kw>
<status status="PASS" starttime="20210730 13:52:39.728" endtime="20210730 13:52:39.734"/>
</iter>
<status status="PASS" starttime="20210730 13:52:39.716" endtime="20210730 13:52:39.734"/>
</for>
<status status="PASS" starttime="20210730 13:52:39.716" endtime="20210730 13:52:39.734"/>
</branch>
<status status="PASS" starttime="20210730 13:52:39.716" endtime="20210730 13:52:39.734"/>
</if>
<status status="PASS" starttime="20210730 13:52:39.701" endtime="20210730 13:52:39.735"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": 'haka 123456789123456789'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:38.116" endtime="20210730 13:52:39.735">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t35" name="With Each Valid Token, Updating Username Of Each System User With #¤% 23! Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:39.740" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:39.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:39.749" level="INFO">${pids} = 13882</msg>
<status status="PASS" starttime="20210730 13:52:39.737" endtime="20210730 13:52:39.750"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:39.750" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:39.750" endtime="20210730 13:52:39.750"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:39.751" level="INFO">${pids} = ['13882']</msg>
<status status="PASS" starttime="20210730 13:52:39.751" endtime="20210730 13:52:39.751"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13882</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:39.754" level="INFO">Running command 'kill 13882 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:39.752" endtime="20210730 13:52:39.755"/>
</kw>
<status status="PASS" starttime="20210730 13:52:39.751" endtime="20210730 13:52:39.755"/>
</iter>
<status status="PASS" starttime="20210730 13:52:39.751" endtime="20210730 13:52:39.755"/>
</for>
<status status="PASS" starttime="20210730 13:52:39.751" endtime="20210730 13:52:39.755"/>
</branch>
<status status="PASS" starttime="20210730 13:52:39.751" endtime="20210730 13:52:39.755"/>
</if>
<status status="PASS" starttime="20210730 13:52:39.736" endtime="20210730 13:52:39.756"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:39.757" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:39.756" endtime="20210730 13:52:39.757"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:39.759" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:39.759" endtime="20210730 13:52:39.759"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:39.760" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:39.759" endtime="20210730 13:52:39.760"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:39.760" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:39.760" endtime="20210730 13:52:39.760"/>
</kw>
<msg timestamp="20210730 13:52:39.760" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:39.757" endtime="20210730 13:52:39.760"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:39.764" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:39.761" endtime="20210730 13:52:39.766"/>
</kw>
<status status="PASS" starttime="20210730 13:52:39.756" endtime="20210730 13:52:39.767"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:39.768" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:39.767" endtime="20210730 13:52:39.773"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:41.274" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:39.773" endtime="20210730 13:52:41.274"/>
</kw>
<status status="PASS" starttime="20210730 13:52:39.767" endtime="20210730 13:52:41.275"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:41.276" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:41.276" endtime="20210730 13:52:41.276"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:41.277" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:41.276" endtime="20210730 13:52:41.277"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:41.277" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:41.277" endtime="20210730 13:52:41.277"/>
</kw>
<msg timestamp="20210730 13:52:41.278" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:41.276" endtime="20210730 13:52:41.278"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:41.278" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:41.278" endtime="20210730 13:52:41.279"/>
</kw>
<status status="PASS" starttime="20210730 13:52:41.275" endtime="20210730 13:52:41.279"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:41.279" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:41.279" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:41.279" endtime="20210730 13:52:41.279"/>
</kw>
<status status="PASS" starttime="20210730 13:52:41.279" endtime="20210730 13:52:41.279"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:41.280" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:41.281" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:41.280" endtime="20210730 13:52:41.281"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:41.281" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:41.281" endtime="20210730 13:52:41.281"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:41.282" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:41.282" endtime="20210730 13:52:41.282"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:41.282" endtime="20210730 13:52:41.283"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:41.284" endtime="20210730 13:52:41.284"/>
</kw>
<status status="PASS" starttime="20210730 13:52:41.282" endtime="20210730 13:52:41.284"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:41.284" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:41.284" endtime="20210730 13:52:41.284"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:41.284" endtime="20210730 13:52:41.285"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:41.285" endtime="20210730 13:52:41.285"/>
</kw>
<status status="PASS" starttime="20210730 13:52:41.284" endtime="20210730 13:52:41.285"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:41.286" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:41.286" endtime="20210730 13:52:41.286"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:41.286" endtime="20210730 13:52:41.287"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:41.287" endtime="20210730 13:52:41.287"/>
</kw>
<status status="PASS" starttime="20210730 13:52:41.285" endtime="20210730 13:52:41.287"/>
</iter>
<status status="PASS" starttime="20210730 13:52:41.281" endtime="20210730 13:52:41.287"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:41.287" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:41.287" endtime="20210730 13:52:41.287"/>
</kw>
<status status="PASS" starttime="20210730 13:52:41.279" endtime="20210730 13:52:41.288"/>
</kw>
<status status="PASS" starttime="20210730 13:52:39.736" endtime="20210730 13:52:41.288"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤% 23!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:41.289" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:41.289" endtime="20210730 13:52:41.289"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:41.289" level="INFO">${payload} = {'username': '#¤% 23!'}</msg>
<status status="PASS" starttime="20210730 13:52:41.289" endtime="20210730 13:52:41.290"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:41.298" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:41.298" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:41.290" endtime="20210730 13:52:41.298"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:41.299" endtime="20210730 13:52:41.299"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:41.299" endtime="20210730 13:52:41.299"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:41.290" endtime="20210730 13:52:41.299"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:41.290" endtime="20210730 13:52:41.299"/>
</for>
<status status="FAIL" starttime="20210730 13:52:41.288" endtime="20210730 13:52:41.299"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:41.288" endtime="20210730 13:52:41.299"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤% 23!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:41.301" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:41.300" endtime="20210730 13:52:41.301"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:41.301" level="INFO">${payload} = {'username': '#¤% 23!'}</msg>
<status status="PASS" starttime="20210730 13:52:41.301" endtime="20210730 13:52:41.301"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:41.306" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:41.306" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:41.302" endtime="20210730 13:52:41.306"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:41.306" endtime="20210730 13:52:41.307"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:41.307" endtime="20210730 13:52:41.307"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:41.302" endtime="20210730 13:52:41.307"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:41.301" endtime="20210730 13:52:41.307"/>
</for>
<status status="FAIL" starttime="20210730 13:52:41.300" endtime="20210730 13:52:41.307"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:41.299" endtime="20210730 13:52:41.307"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤% 23!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:41.308" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:41.308" endtime="20210730 13:52:41.309"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:41.309" level="INFO">${payload} = {'username': '#¤% 23!'}</msg>
<status status="PASS" starttime="20210730 13:52:41.309" endtime="20210730 13:52:41.309"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:41.314" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:41.314" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:41.310" endtime="20210730 13:52:41.314"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:41.315" endtime="20210730 13:52:41.315"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:41.315" endtime="20210730 13:52:41.315"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:41.309" endtime="20210730 13:52:41.315"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:41.309" endtime="20210730 13:52:41.315"/>
</for>
<status status="FAIL" starttime="20210730 13:52:41.307" endtime="20210730 13:52:41.315"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:41.307" endtime="20210730 13:52:41.315"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:41.288" endtime="20210730 13:52:41.315"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:41.322" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:41.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:41.331" level="INFO">${pids} = 13905
13912
13916</msg>
<status status="PASS" starttime="20210730 13:52:41.318" endtime="20210730 13:52:41.331"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:41.332" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:41.332" endtime="20210730 13:52:41.332"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:41.333" level="INFO">${pids} = ['13905', '13912', '13916']</msg>
<status status="PASS" starttime="20210730 13:52:41.332" endtime="20210730 13:52:41.333"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13905</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:41.336" level="INFO">Running command 'kill 13905 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:41.333" endtime="20210730 13:52:41.336"/>
</kw>
<status status="PASS" starttime="20210730 13:52:41.333" endtime="20210730 13:52:41.336"/>
</iter>
<iter>
<var name="${pid}">13912</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:41.340" level="INFO">Running command 'kill 13912 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:41.337" endtime="20210730 13:52:41.341"/>
</kw>
<status status="PASS" starttime="20210730 13:52:41.337" endtime="20210730 13:52:41.341"/>
</iter>
<iter>
<var name="${pid}">13916</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:41.346" level="INFO">Running command 'kill 13916 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:41.342" endtime="20210730 13:52:41.346"/>
</kw>
<status status="PASS" starttime="20210730 13:52:41.341" endtime="20210730 13:52:41.346"/>
</iter>
<status status="PASS" starttime="20210730 13:52:41.333" endtime="20210730 13:52:41.346"/>
</for>
<status status="PASS" starttime="20210730 13:52:41.332" endtime="20210730 13:52:41.346"/>
</branch>
<status status="PASS" starttime="20210730 13:52:41.332" endtime="20210730 13:52:41.346"/>
</if>
<status status="PASS" starttime="20210730 13:52:41.317" endtime="20210730 13:52:41.347"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤% 23!'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:39.735" endtime="20210730 13:52:41.348">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t36" name="With Each Valid Token, Updating Username Of Each System User With # %123!&amp; Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:41.353" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:41.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:41.363" level="INFO">${pids} = 13945</msg>
<status status="PASS" starttime="20210730 13:52:41.350" endtime="20210730 13:52:41.363"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:41.364" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:41.364" endtime="20210730 13:52:41.364"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:41.365" level="INFO">${pids} = ['13945']</msg>
<status status="PASS" starttime="20210730 13:52:41.365" endtime="20210730 13:52:41.365"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13945</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:41.368" level="INFO">Running command 'kill 13945 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:41.365" endtime="20210730 13:52:41.369"/>
</kw>
<status status="PASS" starttime="20210730 13:52:41.365" endtime="20210730 13:52:41.369"/>
</iter>
<status status="PASS" starttime="20210730 13:52:41.365" endtime="20210730 13:52:41.369"/>
</for>
<status status="PASS" starttime="20210730 13:52:41.364" endtime="20210730 13:52:41.369"/>
</branch>
<status status="PASS" starttime="20210730 13:52:41.364" endtime="20210730 13:52:41.369"/>
</if>
<status status="PASS" starttime="20210730 13:52:41.350" endtime="20210730 13:52:41.369"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:41.370" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:41.370" endtime="20210730 13:52:41.370"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:41.371" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:41.370" endtime="20210730 13:52:41.371"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:41.371" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:41.371" endtime="20210730 13:52:41.371"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:41.372" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:41.371" endtime="20210730 13:52:41.372"/>
</kw>
<msg timestamp="20210730 13:52:41.372" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:41.370" endtime="20210730 13:52:41.372"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:41.375" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:41.372" endtime="20210730 13:52:41.377"/>
</kw>
<status status="PASS" starttime="20210730 13:52:41.369" endtime="20210730 13:52:41.379"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:41.380" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:41.379" endtime="20210730 13:52:41.385"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:42.886" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:41.386" endtime="20210730 13:52:42.887"/>
</kw>
<status status="PASS" starttime="20210730 13:52:41.379" endtime="20210730 13:52:42.887"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:42.888" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:42.888" endtime="20210730 13:52:42.888"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:42.889" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:42.888" endtime="20210730 13:52:42.889"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:42.889" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:42.889" endtime="20210730 13:52:42.889"/>
</kw>
<msg timestamp="20210730 13:52:42.889" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:42.887" endtime="20210730 13:52:42.889"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:42.890" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:42.889" endtime="20210730 13:52:42.890"/>
</kw>
<status status="PASS" starttime="20210730 13:52:42.887" endtime="20210730 13:52:42.891"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:42.891" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:42.891" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:42.891" endtime="20210730 13:52:42.891"/>
</kw>
<status status="PASS" starttime="20210730 13:52:42.891" endtime="20210730 13:52:42.891"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:42.892" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:42.892" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:42.892" endtime="20210730 13:52:42.892"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:42.893" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:42.893" endtime="20210730 13:52:42.893"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:42.893" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:42.893" endtime="20210730 13:52:42.893"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:42.893" endtime="20210730 13:52:42.894"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:42.894" endtime="20210730 13:52:42.894"/>
</kw>
<status status="PASS" starttime="20210730 13:52:42.893" endtime="20210730 13:52:42.894"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:42.895" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:42.895" endtime="20210730 13:52:42.895"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:42.895" endtime="20210730 13:52:42.896"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:42.896" endtime="20210730 13:52:42.896"/>
</kw>
<status status="PASS" starttime="20210730 13:52:42.895" endtime="20210730 13:52:42.896"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:42.896" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:42.896" endtime="20210730 13:52:42.896"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:42.896" endtime="20210730 13:52:42.897"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:42.897" endtime="20210730 13:52:42.898"/>
</kw>
<status status="PASS" starttime="20210730 13:52:42.896" endtime="20210730 13:52:42.898"/>
</iter>
<status status="PASS" starttime="20210730 13:52:42.893" endtime="20210730 13:52:42.898"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:42.898" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:42.898" endtime="20210730 13:52:42.898"/>
</kw>
<status status="PASS" starttime="20210730 13:52:42.892" endtime="20210730 13:52:42.898"/>
</kw>
<status status="PASS" starttime="20210730 13:52:41.350" endtime="20210730 13:52:42.898"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=# %123!&amp;</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:42.900" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:42.899" endtime="20210730 13:52:42.900"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:42.900" level="INFO">${payload} = {'username': '# %123!&amp;'}</msg>
<status status="PASS" starttime="20210730 13:52:42.900" endtime="20210730 13:52:42.900"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:42.909" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:42.910" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:42.900" endtime="20210730 13:52:42.910"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:42.910" endtime="20210730 13:52:42.910"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:42.910" endtime="20210730 13:52:42.910"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:42.900" endtime="20210730 13:52:42.910"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:42.900" endtime="20210730 13:52:42.910"/>
</for>
<status status="FAIL" starttime="20210730 13:52:42.899" endtime="20210730 13:52:42.911"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:42.899" endtime="20210730 13:52:42.911"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=# %123!&amp;</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:42.912" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:42.911" endtime="20210730 13:52:42.912"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:42.912" level="INFO">${payload} = {'username': '# %123!&amp;'}</msg>
<status status="PASS" starttime="20210730 13:52:42.912" endtime="20210730 13:52:42.912"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:42.917" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:42.917" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:42.913" endtime="20210730 13:52:42.917"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:42.917" endtime="20210730 13:52:42.917"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:42.917" endtime="20210730 13:52:42.917"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:42.912" endtime="20210730 13:52:42.918"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:42.912" endtime="20210730 13:52:42.918"/>
</for>
<status status="FAIL" starttime="20210730 13:52:42.911" endtime="20210730 13:52:42.918"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:42.911" endtime="20210730 13:52:42.918"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=# %123!&amp;</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:42.919" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:42.919" endtime="20210730 13:52:42.919"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:42.919" level="INFO">${payload} = {'username': '# %123!&amp;'}</msg>
<status status="PASS" starttime="20210730 13:52:42.919" endtime="20210730 13:52:42.919"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:42.924" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:42.925" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:42.920" endtime="20210730 13:52:42.925"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:42.925" endtime="20210730 13:52:42.925"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:42.925" endtime="20210730 13:52:42.925"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:42.920" endtime="20210730 13:52:42.925"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:42.919" endtime="20210730 13:52:42.926"/>
</for>
<status status="FAIL" starttime="20210730 13:52:42.918" endtime="20210730 13:52:42.926"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:42.918" endtime="20210730 13:52:42.926"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:42.898" endtime="20210730 13:52:42.926"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:42.932" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:42.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:42.941" level="INFO">${pids} = 13968
13975
13982</msg>
<status status="PASS" starttime="20210730 13:52:42.927" endtime="20210730 13:52:42.941"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:42.942" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:42.942" endtime="20210730 13:52:42.942"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:42.943" level="INFO">${pids} = ['13968', '13975', '13982']</msg>
<status status="PASS" starttime="20210730 13:52:42.943" endtime="20210730 13:52:42.943"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13968</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:42.947" level="INFO">Running command 'kill 13968 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:42.943" endtime="20210730 13:52:42.947"/>
</kw>
<status status="PASS" starttime="20210730 13:52:42.943" endtime="20210730 13:52:42.947"/>
</iter>
<iter>
<var name="${pid}">13975</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:42.951" level="INFO">Running command 'kill 13975 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:42.948" endtime="20210730 13:52:42.952"/>
</kw>
<status status="PASS" starttime="20210730 13:52:42.947" endtime="20210730 13:52:42.952"/>
</iter>
<iter>
<var name="${pid}">13982</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:42.956" level="INFO">Running command 'kill 13982 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:42.952" endtime="20210730 13:52:42.957"/>
</kw>
<status status="PASS" starttime="20210730 13:52:42.952" endtime="20210730 13:52:42.957"/>
</iter>
<status status="PASS" starttime="20210730 13:52:42.943" endtime="20210730 13:52:42.957"/>
</for>
<status status="PASS" starttime="20210730 13:52:42.943" endtime="20210730 13:52:42.957"/>
</branch>
<status status="PASS" starttime="20210730 13:52:42.942" endtime="20210730 13:52:42.957"/>
</if>
<status status="PASS" starttime="20210730 13:52:42.926" endtime="20210730 13:52:42.957"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '# %123!&amp;'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:41.348" endtime="20210730 13:52:42.957">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t37" name="With Each Valid Token, Updating Username Of Each System User With #¤%123!&amp;7683##() ?@#¤%&amp;34567 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:42.963" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:42.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:42.972" level="INFO">${pids} = 14011</msg>
<status status="PASS" starttime="20210730 13:52:42.959" endtime="20210730 13:52:42.973"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:42.974" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:42.973" endtime="20210730 13:52:42.974"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:42.974" level="INFO">${pids} = ['14011']</msg>
<status status="PASS" starttime="20210730 13:52:42.974" endtime="20210730 13:52:42.974"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14011</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:42.978" level="INFO">Running command 'kill 14011 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:42.975" endtime="20210730 13:52:42.978"/>
</kw>
<status status="PASS" starttime="20210730 13:52:42.975" endtime="20210730 13:52:42.978"/>
</iter>
<status status="PASS" starttime="20210730 13:52:42.974" endtime="20210730 13:52:42.978"/>
</for>
<status status="PASS" starttime="20210730 13:52:42.974" endtime="20210730 13:52:42.978"/>
</branch>
<status status="PASS" starttime="20210730 13:52:42.974" endtime="20210730 13:52:42.978"/>
</if>
<status status="PASS" starttime="20210730 13:52:42.959" endtime="20210730 13:52:42.979"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:42.980" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:42.979" endtime="20210730 13:52:42.980"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:42.980" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:42.980" endtime="20210730 13:52:42.980"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:42.981" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:42.981" endtime="20210730 13:52:42.981"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:42.981" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:42.981" endtime="20210730 13:52:42.981"/>
</kw>
<msg timestamp="20210730 13:52:42.982" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:42.980" endtime="20210730 13:52:42.982"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:42.985" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:42.982" endtime="20210730 13:52:42.986"/>
</kw>
<status status="PASS" starttime="20210730 13:52:42.979" endtime="20210730 13:52:42.987"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:42.988" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:42.987" endtime="20210730 13:52:42.995"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:44.498" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:42.996" endtime="20210730 13:52:44.499"/>
</kw>
<status status="PASS" starttime="20210730 13:52:42.987" endtime="20210730 13:52:44.500"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:44.502" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:44.502" endtime="20210730 13:52:44.502"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:44.502" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:44.502" endtime="20210730 13:52:44.502"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:44.503" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:44.502" endtime="20210730 13:52:44.503"/>
</kw>
<msg timestamp="20210730 13:52:44.503" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:44.501" endtime="20210730 13:52:44.503"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:44.503" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:44.503" endtime="20210730 13:52:44.504"/>
</kw>
<status status="PASS" starttime="20210730 13:52:44.501" endtime="20210730 13:52:44.504"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:44.504" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:44.504" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:44.504" endtime="20210730 13:52:44.505"/>
</kw>
<status status="PASS" starttime="20210730 13:52:44.504" endtime="20210730 13:52:44.505"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:44.506" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:44.506" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:44.505" endtime="20210730 13:52:44.506"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:44.506" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:44.506" endtime="20210730 13:52:44.506"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:44.507" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:44.506" endtime="20210730 13:52:44.507"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:44.507" endtime="20210730 13:52:44.507"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:44.508" endtime="20210730 13:52:44.508"/>
</kw>
<status status="PASS" starttime="20210730 13:52:44.506" endtime="20210730 13:52:44.508"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:44.508" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:44.508" endtime="20210730 13:52:44.508"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:44.508" endtime="20210730 13:52:44.509"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:44.509" endtime="20210730 13:52:44.509"/>
</kw>
<status status="PASS" starttime="20210730 13:52:44.508" endtime="20210730 13:52:44.509"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:44.510" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:44.509" endtime="20210730 13:52:44.510"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:44.510" endtime="20210730 13:52:44.510"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:44.511" endtime="20210730 13:52:44.511"/>
</kw>
<status status="PASS" starttime="20210730 13:52:44.509" endtime="20210730 13:52:44.511"/>
</iter>
<status status="PASS" starttime="20210730 13:52:44.506" endtime="20210730 13:52:44.511"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:44.511" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:44.511" endtime="20210730 13:52:44.511"/>
</kw>
<status status="PASS" starttime="20210730 13:52:44.505" endtime="20210730 13:52:44.511"/>
</kw>
<status status="PASS" starttime="20210730 13:52:42.959" endtime="20210730 13:52:44.512"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤%123!&amp;7683##() ?@#¤%&amp;34567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:44.513" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:44.512" endtime="20210730 13:52:44.513"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:44.513" level="INFO">${payload} = {'username': '#¤%123!&amp;7683##() ?@#¤%&amp;34567'}</msg>
<status status="PASS" starttime="20210730 13:52:44.513" endtime="20210730 13:52:44.513"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:44.523" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:44.524" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:44.514" endtime="20210730 13:52:44.524"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:44.524" endtime="20210730 13:52:44.524"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:44.524" endtime="20210730 13:52:44.524"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:44.513" endtime="20210730 13:52:44.524"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:44.513" endtime="20210730 13:52:44.524"/>
</for>
<status status="FAIL" starttime="20210730 13:52:44.512" endtime="20210730 13:52:44.525"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:44.512" endtime="20210730 13:52:44.525"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤%123!&amp;7683##() ?@#¤%&amp;34567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:44.526" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:44.525" endtime="20210730 13:52:44.526"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:44.526" level="INFO">${payload} = {'username': '#¤%123!&amp;7683##() ?@#¤%&amp;34567'}</msg>
<status status="PASS" starttime="20210730 13:52:44.526" endtime="20210730 13:52:44.526"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:44.530" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:44.531" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:44.526" endtime="20210730 13:52:44.531"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:44.531" endtime="20210730 13:52:44.531"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:44.531" endtime="20210730 13:52:44.531"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:44.526" endtime="20210730 13:52:44.531"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:44.526" endtime="20210730 13:52:44.531"/>
</for>
<status status="FAIL" starttime="20210730 13:52:44.525" endtime="20210730 13:52:44.531"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:44.525" endtime="20210730 13:52:44.531"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤%123!&amp;7683##() ?@#¤%&amp;34567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:44.532" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:44.532" endtime="20210730 13:52:44.532"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:44.533" level="INFO">${payload} = {'username': '#¤%123!&amp;7683##() ?@#¤%&amp;34567'}</msg>
<status status="PASS" starttime="20210730 13:52:44.532" endtime="20210730 13:52:44.533"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:44.537" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:44.537" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:44.533" endtime="20210730 13:52:44.537"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:44.537" endtime="20210730 13:52:44.537"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:44.537" endtime="20210730 13:52:44.537"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:44.533" endtime="20210730 13:52:44.537"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:44.533" endtime="20210730 13:52:44.537"/>
</for>
<status status="FAIL" starttime="20210730 13:52:44.531" endtime="20210730 13:52:44.538"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:44.531" endtime="20210730 13:52:44.538"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:44.512" endtime="20210730 13:52:44.538"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:44.542" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:44.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:44.553" level="INFO">${pids} = 14034
14041
14045</msg>
<status status="PASS" starttime="20210730 13:52:44.539" endtime="20210730 13:52:44.553"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:44.554" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:44.553" endtime="20210730 13:52:44.554"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:44.554" level="INFO">${pids} = ['14034', '14041', '14045']</msg>
<status status="PASS" starttime="20210730 13:52:44.554" endtime="20210730 13:52:44.554"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14034</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:44.558" level="INFO">Running command 'kill 14034 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:44.555" endtime="20210730 13:52:44.559"/>
</kw>
<status status="PASS" starttime="20210730 13:52:44.555" endtime="20210730 13:52:44.559"/>
</iter>
<iter>
<var name="${pid}">14041</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:44.563" level="INFO">Running command 'kill 14041 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:44.559" endtime="20210730 13:52:44.563"/>
</kw>
<status status="PASS" starttime="20210730 13:52:44.559" endtime="20210730 13:52:44.563"/>
</iter>
<iter>
<var name="${pid}">14045</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:44.567" level="INFO">Running command 'kill 14045 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:44.564" endtime="20210730 13:52:44.567"/>
</kw>
<status status="PASS" starttime="20210730 13:52:44.563" endtime="20210730 13:52:44.567"/>
</iter>
<status status="PASS" starttime="20210730 13:52:44.555" endtime="20210730 13:52:44.568"/>
</for>
<status status="PASS" starttime="20210730 13:52:44.554" endtime="20210730 13:52:44.568"/>
</branch>
<status status="PASS" starttime="20210730 13:52:44.554" endtime="20210730 13:52:44.568"/>
</if>
<status status="PASS" starttime="20210730 13:52:44.538" endtime="20210730 13:52:44.568"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤%123!&amp;7683##() ?@#¤%&amp;34567'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:42.958" endtime="20210730 13:52:44.568">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t38" name="With Each Valid Token, Updating Username Of Each System User With #¤12 ab Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:44.575" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:44.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:44.584" level="INFO">${pids} = 14074</msg>
<status status="PASS" starttime="20210730 13:52:44.570" endtime="20210730 13:52:44.584"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:44.585" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:44.584" endtime="20210730 13:52:44.585"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:44.586" level="INFO">${pids} = ['14074']</msg>
<status status="PASS" starttime="20210730 13:52:44.585" endtime="20210730 13:52:44.586"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14074</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:44.589" level="INFO">Running command 'kill 14074 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:44.586" endtime="20210730 13:52:44.590"/>
</kw>
<status status="PASS" starttime="20210730 13:52:44.586" endtime="20210730 13:52:44.590"/>
</iter>
<status status="PASS" starttime="20210730 13:52:44.586" endtime="20210730 13:52:44.590"/>
</for>
<status status="PASS" starttime="20210730 13:52:44.585" endtime="20210730 13:52:44.590"/>
</branch>
<status status="PASS" starttime="20210730 13:52:44.585" endtime="20210730 13:52:44.590"/>
</if>
<status status="PASS" starttime="20210730 13:52:44.570" endtime="20210730 13:52:44.590"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:44.591" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:44.591" endtime="20210730 13:52:44.591"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:44.592" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:44.592" endtime="20210730 13:52:44.592"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:44.592" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:44.592" endtime="20210730 13:52:44.592"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:44.593" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:44.592" endtime="20210730 13:52:44.593"/>
</kw>
<msg timestamp="20210730 13:52:44.593" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:44.591" endtime="20210730 13:52:44.593"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:44.596" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:44.593" endtime="20210730 13:52:44.598"/>
</kw>
<status status="PASS" starttime="20210730 13:52:44.590" endtime="20210730 13:52:44.598"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:44.599" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:44.599" endtime="20210730 13:52:44.607"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:46.112" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:44.608" endtime="20210730 13:52:46.113"/>
</kw>
<status status="PASS" starttime="20210730 13:52:44.598" endtime="20210730 13:52:46.114"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:46.117" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:46.117" endtime="20210730 13:52:46.117"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:46.117" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:46.117" endtime="20210730 13:52:46.117"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:46.118" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:46.117" endtime="20210730 13:52:46.118"/>
</kw>
<msg timestamp="20210730 13:52:46.118" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:46.116" endtime="20210730 13:52:46.118"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:46.119" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:46.118" endtime="20210730 13:52:46.119"/>
</kw>
<status status="PASS" starttime="20210730 13:52:46.115" endtime="20210730 13:52:46.119"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:46.119" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:46.120" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:46.119" endtime="20210730 13:52:46.120"/>
</kw>
<status status="PASS" starttime="20210730 13:52:46.119" endtime="20210730 13:52:46.120"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:46.121" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:46.121" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:46.120" endtime="20210730 13:52:46.121"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:46.121" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:46.121" endtime="20210730 13:52:46.122"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:46.122" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:46.122" endtime="20210730 13:52:46.123"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:46.123" endtime="20210730 13:52:46.124"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:46.124" endtime="20210730 13:52:46.124"/>
</kw>
<status status="PASS" starttime="20210730 13:52:46.122" endtime="20210730 13:52:46.124"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:46.125" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:46.125" endtime="20210730 13:52:46.125"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:46.125" endtime="20210730 13:52:46.126"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:46.126" endtime="20210730 13:52:46.126"/>
</kw>
<status status="PASS" starttime="20210730 13:52:46.124" endtime="20210730 13:52:46.126"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:46.127" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:46.127" endtime="20210730 13:52:46.127"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:46.127" endtime="20210730 13:52:46.128"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:46.128" endtime="20210730 13:52:46.128"/>
</kw>
<status status="PASS" starttime="20210730 13:52:46.126" endtime="20210730 13:52:46.128"/>
</iter>
<status status="PASS" starttime="20210730 13:52:46.122" endtime="20210730 13:52:46.128"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:46.128" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:46.128" endtime="20210730 13:52:46.128"/>
</kw>
<status status="PASS" starttime="20210730 13:52:46.120" endtime="20210730 13:52:46.129"/>
</kw>
<status status="PASS" starttime="20210730 13:52:44.569" endtime="20210730 13:52:46.129"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤12 ab</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:46.130" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:46.129" endtime="20210730 13:52:46.130"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:46.130" level="INFO">${payload} = {'username': '#¤12 ab'}</msg>
<status status="PASS" starttime="20210730 13:52:46.130" endtime="20210730 13:52:46.130"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:46.141" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:46.141" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:46.131" endtime="20210730 13:52:46.141"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:46.141" endtime="20210730 13:52:46.142"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:46.142" endtime="20210730 13:52:46.142"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:46.130" endtime="20210730 13:52:46.142"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:46.130" endtime="20210730 13:52:46.142"/>
</for>
<status status="FAIL" starttime="20210730 13:52:46.129" endtime="20210730 13:52:46.142"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:46.129" endtime="20210730 13:52:46.142"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤12 ab</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:46.143" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:46.143" endtime="20210730 13:52:46.143"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:46.144" level="INFO">${payload} = {'username': '#¤12 ab'}</msg>
<status status="PASS" starttime="20210730 13:52:46.143" endtime="20210730 13:52:46.144"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:46.149" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:46.149" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:46.144" endtime="20210730 13:52:46.149"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:46.149" endtime="20210730 13:52:46.149"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:46.149" endtime="20210730 13:52:46.149"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:46.144" endtime="20210730 13:52:46.149"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:46.144" endtime="20210730 13:52:46.149"/>
</for>
<status status="FAIL" starttime="20210730 13:52:46.142" endtime="20210730 13:52:46.150"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:46.142" endtime="20210730 13:52:46.150"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤12 ab</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:46.151" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:46.151" endtime="20210730 13:52:46.151"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:46.152" level="INFO">${payload} = {'username': '#¤12 ab'}</msg>
<status status="PASS" starttime="20210730 13:52:46.151" endtime="20210730 13:52:46.152"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:46.157" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:46.157" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:46.152" endtime="20210730 13:52:46.157"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:46.157" endtime="20210730 13:52:46.157"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:46.157" endtime="20210730 13:52:46.157"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:46.152" endtime="20210730 13:52:46.157"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:46.152" endtime="20210730 13:52:46.158"/>
</for>
<status status="FAIL" starttime="20210730 13:52:46.150" endtime="20210730 13:52:46.158"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:46.150" endtime="20210730 13:52:46.158"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:46.129" endtime="20210730 13:52:46.158"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:46.163" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:46.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:46.172" level="INFO">${pids} = 14097
14104
14109</msg>
<status status="PASS" starttime="20210730 13:52:46.159" endtime="20210730 13:52:46.172"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:46.173" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:46.172" endtime="20210730 13:52:46.173"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:46.173" level="INFO">${pids} = ['14097', '14104', '14109']</msg>
<status status="PASS" starttime="20210730 13:52:46.173" endtime="20210730 13:52:46.173"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14097</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:46.177" level="INFO">Running command 'kill 14097 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:46.174" endtime="20210730 13:52:46.177"/>
</kw>
<status status="PASS" starttime="20210730 13:52:46.174" endtime="20210730 13:52:46.177"/>
</iter>
<iter>
<var name="${pid}">14104</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:46.180" level="INFO">Running command 'kill 14104 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:46.178" endtime="20210730 13:52:46.181"/>
</kw>
<status status="PASS" starttime="20210730 13:52:46.178" endtime="20210730 13:52:46.181"/>
</iter>
<iter>
<var name="${pid}">14109</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:46.186" level="INFO">Running command 'kill 14109 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:46.182" endtime="20210730 13:52:46.187"/>
</kw>
<status status="PASS" starttime="20210730 13:52:46.182" endtime="20210730 13:52:46.187"/>
</iter>
<status status="PASS" starttime="20210730 13:52:46.174" endtime="20210730 13:52:46.187"/>
</for>
<status status="PASS" starttime="20210730 13:52:46.173" endtime="20210730 13:52:46.187"/>
</branch>
<status status="PASS" starttime="20210730 13:52:46.173" endtime="20210730 13:52:46.187"/>
</if>
<status status="PASS" starttime="20210730 13:52:46.158" endtime="20210730 13:52:46.187"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤12 ab'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:44.569" endtime="20210730 13:52:46.187">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t39" name="With Each Valid Token, Updating Username Of Each System User With # 123abc Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:46.194" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:46.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:46.205" level="INFO">${pids} = 14138</msg>
<status status="PASS" starttime="20210730 13:52:46.191" endtime="20210730 13:52:46.205"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:46.206" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:46.206" endtime="20210730 13:52:46.206"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:46.207" level="INFO">${pids} = ['14138']</msg>
<status status="PASS" starttime="20210730 13:52:46.206" endtime="20210730 13:52:46.207"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14138</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:46.210" level="INFO">Running command 'kill 14138 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:46.207" endtime="20210730 13:52:46.211"/>
</kw>
<status status="PASS" starttime="20210730 13:52:46.207" endtime="20210730 13:52:46.211"/>
</iter>
<status status="PASS" starttime="20210730 13:52:46.207" endtime="20210730 13:52:46.211"/>
</for>
<status status="PASS" starttime="20210730 13:52:46.206" endtime="20210730 13:52:46.211"/>
</branch>
<status status="PASS" starttime="20210730 13:52:46.206" endtime="20210730 13:52:46.211"/>
</if>
<status status="PASS" starttime="20210730 13:52:46.191" endtime="20210730 13:52:46.211"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:46.212" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:46.212" endtime="20210730 13:52:46.212"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:46.212" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:46.212" endtime="20210730 13:52:46.212"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:46.213" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:46.213" endtime="20210730 13:52:46.213"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:46.213" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:46.213" endtime="20210730 13:52:46.213"/>
</kw>
<msg timestamp="20210730 13:52:46.213" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:46.212" endtime="20210730 13:52:46.213"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:46.216" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:46.214" endtime="20210730 13:52:46.222"/>
</kw>
<status status="PASS" starttime="20210730 13:52:46.211" endtime="20210730 13:52:46.222"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:46.225" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:46.224" endtime="20210730 13:52:46.228"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:47.731" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:46.229" endtime="20210730 13:52:47.731"/>
</kw>
<status status="PASS" starttime="20210730 13:52:46.223" endtime="20210730 13:52:47.732"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:47.733" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:47.733" endtime="20210730 13:52:47.733"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:47.733" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:47.733" endtime="20210730 13:52:47.733"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:47.734" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:47.734" endtime="20210730 13:52:47.734"/>
</kw>
<msg timestamp="20210730 13:52:47.734" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:47.732" endtime="20210730 13:52:47.734"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:47.734" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:47.734" endtime="20210730 13:52:47.735"/>
</kw>
<status status="PASS" starttime="20210730 13:52:47.732" endtime="20210730 13:52:47.735"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:47.735" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:47.735" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:47.735" endtime="20210730 13:52:47.736"/>
</kw>
<status status="PASS" starttime="20210730 13:52:47.735" endtime="20210730 13:52:47.736"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:47.737" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:47.737" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:47.736" endtime="20210730 13:52:47.737"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:47.737" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:47.737" endtime="20210730 13:52:47.737"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:47.738" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:47.737" endtime="20210730 13:52:47.738"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:47.738" endtime="20210730 13:52:47.739"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:47.739" endtime="20210730 13:52:47.739"/>
</kw>
<status status="PASS" starttime="20210730 13:52:47.737" endtime="20210730 13:52:47.739"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:47.740" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:47.739" endtime="20210730 13:52:47.740"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:47.740" endtime="20210730 13:52:47.740"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:47.741" endtime="20210730 13:52:47.741"/>
</kw>
<status status="PASS" starttime="20210730 13:52:47.739" endtime="20210730 13:52:47.741"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:47.741" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:47.741" endtime="20210730 13:52:47.741"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:47.741" endtime="20210730 13:52:47.742"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:47.742" endtime="20210730 13:52:47.742"/>
</kw>
<status status="PASS" starttime="20210730 13:52:47.741" endtime="20210730 13:52:47.743"/>
</iter>
<status status="PASS" starttime="20210730 13:52:47.737" endtime="20210730 13:52:47.743"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:47.743" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:47.743" endtime="20210730 13:52:47.743"/>
</kw>
<status status="PASS" starttime="20210730 13:52:47.736" endtime="20210730 13:52:47.743"/>
</kw>
<status status="PASS" starttime="20210730 13:52:46.190" endtime="20210730 13:52:47.743"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=# 123abc</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:47.744" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:47.744" endtime="20210730 13:52:47.744"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:47.745" level="INFO">${payload} = {'username': '# 123abc'}</msg>
<status status="PASS" starttime="20210730 13:52:47.744" endtime="20210730 13:52:47.745"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:47.754" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:47.755" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:47.745" endtime="20210730 13:52:47.755"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:47.755" endtime="20210730 13:52:47.755"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:47.755" endtime="20210730 13:52:47.755"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:47.745" endtime="20210730 13:52:47.755"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:47.745" endtime="20210730 13:52:47.755"/>
</for>
<status status="FAIL" starttime="20210730 13:52:47.744" endtime="20210730 13:52:47.756"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:47.744" endtime="20210730 13:52:47.756"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=# 123abc</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:47.757" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:47.757" endtime="20210730 13:52:47.757"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:47.757" level="INFO">${payload} = {'username': '# 123abc'}</msg>
<status status="PASS" starttime="20210730 13:52:47.757" endtime="20210730 13:52:47.757"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:47.762" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:47.762" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:47.758" endtime="20210730 13:52:47.762"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:47.763" endtime="20210730 13:52:47.763"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:47.763" endtime="20210730 13:52:47.763"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:47.758" endtime="20210730 13:52:47.763"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:47.757" endtime="20210730 13:52:47.763"/>
</for>
<status status="FAIL" starttime="20210730 13:52:47.756" endtime="20210730 13:52:47.763"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:47.756" endtime="20210730 13:52:47.763"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=# 123abc</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:47.764" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:47.764" endtime="20210730 13:52:47.764"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:47.764" level="INFO">${payload} = {'username': '# 123abc'}</msg>
<status status="PASS" starttime="20210730 13:52:47.764" endtime="20210730 13:52:47.764"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:47.769" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:47.769" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:47.765" endtime="20210730 13:52:47.769"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:47.769" endtime="20210730 13:52:47.769"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:47.769" endtime="20210730 13:52:47.769"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:47.765" endtime="20210730 13:52:47.769"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:47.765" endtime="20210730 13:52:47.769"/>
</for>
<status status="FAIL" starttime="20210730 13:52:47.763" endtime="20210730 13:52:47.769"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:47.763" endtime="20210730 13:52:47.769"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:47.743" endtime="20210730 13:52:47.769"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:47.775" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:47.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:47.784" level="INFO">${pids} = 14161
14168
14173</msg>
<status status="PASS" starttime="20210730 13:52:47.770" endtime="20210730 13:52:47.784"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:47.785" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:47.785" endtime="20210730 13:52:47.785"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:47.786" level="INFO">${pids} = ['14161', '14168', '14173']</msg>
<status status="PASS" starttime="20210730 13:52:47.786" endtime="20210730 13:52:47.786"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14161</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:47.790" level="INFO">Running command 'kill 14161 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:47.786" endtime="20210730 13:52:47.791"/>
</kw>
<status status="PASS" starttime="20210730 13:52:47.786" endtime="20210730 13:52:47.791"/>
</iter>
<iter>
<var name="${pid}">14168</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:47.795" level="INFO">Running command 'kill 14168 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:47.791" endtime="20210730 13:52:47.797"/>
</kw>
<status status="PASS" starttime="20210730 13:52:47.791" endtime="20210730 13:52:47.797"/>
</iter>
<iter>
<var name="${pid}">14173</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:47.800" level="INFO">Running command 'kill 14173 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:47.797" endtime="20210730 13:52:47.801"/>
</kw>
<status status="PASS" starttime="20210730 13:52:47.797" endtime="20210730 13:52:47.801"/>
</iter>
<status status="PASS" starttime="20210730 13:52:47.786" endtime="20210730 13:52:47.801"/>
</for>
<status status="PASS" starttime="20210730 13:52:47.786" endtime="20210730 13:52:47.801"/>
</branch>
<status status="PASS" starttime="20210730 13:52:47.785" endtime="20210730 13:52:47.802"/>
</if>
<status status="PASS" starttime="20210730 13:52:47.770" endtime="20210730 13:52:47.802"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '# 123abc'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:46.188" endtime="20210730 13:52:47.802">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t40" name="With Each Valid Token, Updating Username Of Each System User With #¤/&amp;  !123abc456hjk Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:47.809" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:47.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:47.819" level="INFO">${pids} = 14202</msg>
<status status="PASS" starttime="20210730 13:52:47.805" endtime="20210730 13:52:47.819"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:47.820" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:47.819" endtime="20210730 13:52:47.820"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:47.820" level="INFO">${pids} = ['14202']</msg>
<status status="PASS" starttime="20210730 13:52:47.820" endtime="20210730 13:52:47.820"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14202</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:47.824" level="INFO">Running command 'kill 14202 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:47.821" endtime="20210730 13:52:47.825"/>
</kw>
<status status="PASS" starttime="20210730 13:52:47.821" endtime="20210730 13:52:47.825"/>
</iter>
<status status="PASS" starttime="20210730 13:52:47.820" endtime="20210730 13:52:47.825"/>
</for>
<status status="PASS" starttime="20210730 13:52:47.820" endtime="20210730 13:52:47.825"/>
</branch>
<status status="PASS" starttime="20210730 13:52:47.820" endtime="20210730 13:52:47.825"/>
</if>
<status status="PASS" starttime="20210730 13:52:47.805" endtime="20210730 13:52:47.825"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:47.826" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:47.826" endtime="20210730 13:52:47.826"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:47.827" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:47.827" endtime="20210730 13:52:47.827"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:47.827" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:47.827" endtime="20210730 13:52:47.827"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:47.828" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:47.827" endtime="20210730 13:52:47.828"/>
</kw>
<msg timestamp="20210730 13:52:47.828" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:47.826" endtime="20210730 13:52:47.828"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:47.831" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:47.828" endtime="20210730 13:52:47.834"/>
</kw>
<status status="PASS" starttime="20210730 13:52:47.825" endtime="20210730 13:52:47.834"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:47.836" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:47.835" endtime="20210730 13:52:47.841"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:49.343" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:47.841" endtime="20210730 13:52:49.344"/>
</kw>
<status status="PASS" starttime="20210730 13:52:47.835" endtime="20210730 13:52:49.344"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:49.345" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:49.345" endtime="20210730 13:52:49.346"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:49.346" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:49.346" endtime="20210730 13:52:49.346"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:49.346" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:49.346" endtime="20210730 13:52:49.346"/>
</kw>
<msg timestamp="20210730 13:52:49.346" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:49.345" endtime="20210730 13:52:49.347"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:49.347" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:49.347" endtime="20210730 13:52:49.347"/>
</kw>
<status status="PASS" starttime="20210730 13:52:49.345" endtime="20210730 13:52:49.347"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:49.348" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:49.348" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:49.348" endtime="20210730 13:52:49.348"/>
</kw>
<status status="PASS" starttime="20210730 13:52:49.347" endtime="20210730 13:52:49.348"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:49.350" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:49.350" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:49.349" endtime="20210730 13:52:49.350"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:49.350" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:49.350" endtime="20210730 13:52:49.350"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:49.351" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:49.350" endtime="20210730 13:52:49.351"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:49.351" endtime="20210730 13:52:49.352"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:49.352" endtime="20210730 13:52:49.352"/>
</kw>
<status status="PASS" starttime="20210730 13:52:49.350" endtime="20210730 13:52:49.352"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:49.353" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:49.352" endtime="20210730 13:52:49.353"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:49.353" endtime="20210730 13:52:49.353"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:49.353" endtime="20210730 13:52:49.354"/>
</kw>
<status status="PASS" starttime="20210730 13:52:49.352" endtime="20210730 13:52:49.354"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:49.354" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:49.354" endtime="20210730 13:52:49.354"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:49.354" endtime="20210730 13:52:49.355"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:49.355" endtime="20210730 13:52:49.355"/>
</kw>
<status status="PASS" starttime="20210730 13:52:49.354" endtime="20210730 13:52:49.355"/>
</iter>
<status status="PASS" starttime="20210730 13:52:49.350" endtime="20210730 13:52:49.355"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:49.356" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:49.356" endtime="20210730 13:52:49.356"/>
</kw>
<status status="PASS" starttime="20210730 13:52:49.348" endtime="20210730 13:52:49.356"/>
</kw>
<status status="PASS" starttime="20210730 13:52:47.804" endtime="20210730 13:52:49.356"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/&amp;\ \ !123abc456hjk</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:49.358" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:49.357" endtime="20210730 13:52:49.358"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:49.358" level="INFO">${payload} = {'username': '#¤/&amp;  !123abc456hjk'}</msg>
<status status="PASS" starttime="20210730 13:52:49.358" endtime="20210730 13:52:49.358"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:49.367" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:49.367" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:49.358" endtime="20210730 13:52:49.367"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:49.367" endtime="20210730 13:52:49.367"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:49.367" endtime="20210730 13:52:49.368"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:49.358" endtime="20210730 13:52:49.368"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:49.358" endtime="20210730 13:52:49.368"/>
</for>
<status status="FAIL" starttime="20210730 13:52:49.357" endtime="20210730 13:52:49.368"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:49.357" endtime="20210730 13:52:49.368"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/&amp;\ \ !123abc456hjk</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:49.369" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:49.369" endtime="20210730 13:52:49.369"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:49.369" level="INFO">${payload} = {'username': '#¤/&amp;  !123abc456hjk'}</msg>
<status status="PASS" starttime="20210730 13:52:49.369" endtime="20210730 13:52:49.369"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:49.374" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:49.374" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:49.370" endtime="20210730 13:52:49.374"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:49.375" endtime="20210730 13:52:49.375"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:49.375" endtime="20210730 13:52:49.375"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:49.370" endtime="20210730 13:52:49.375"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:49.369" endtime="20210730 13:52:49.375"/>
</for>
<status status="FAIL" starttime="20210730 13:52:49.368" endtime="20210730 13:52:49.375"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:49.368" endtime="20210730 13:52:49.375"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/&amp;\ \ !123abc456hjk</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:49.376" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:49.376" endtime="20210730 13:52:49.376"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:49.376" level="INFO">${payload} = {'username': '#¤/&amp;  !123abc456hjk'}</msg>
<status status="PASS" starttime="20210730 13:52:49.376" endtime="20210730 13:52:49.376"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:49.380" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:49.380" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:49.377" endtime="20210730 13:52:49.381"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:49.381" endtime="20210730 13:52:49.381"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:49.381" endtime="20210730 13:52:49.381"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:49.377" endtime="20210730 13:52:49.381"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:49.376" endtime="20210730 13:52:49.381"/>
</for>
<status status="FAIL" starttime="20210730 13:52:49.375" endtime="20210730 13:52:49.381"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:49.375" endtime="20210730 13:52:49.381"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:49.356" endtime="20210730 13:52:49.381"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:49.387" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:49.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:49.398" level="INFO">${pids} = 14225
14232
14236</msg>
<status status="PASS" starttime="20210730 13:52:49.382" endtime="20210730 13:52:49.398"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:49.399" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:49.398" endtime="20210730 13:52:49.399"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:49.399" level="INFO">${pids} = ['14225', '14232', '14236']</msg>
<status status="PASS" starttime="20210730 13:52:49.399" endtime="20210730 13:52:49.399"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14225</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:49.403" level="INFO">Running command 'kill 14225 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:49.400" endtime="20210730 13:52:49.404"/>
</kw>
<status status="PASS" starttime="20210730 13:52:49.400" endtime="20210730 13:52:49.404"/>
</iter>
<iter>
<var name="${pid}">14232</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:49.409" level="INFO">Running command 'kill 14232 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:49.405" endtime="20210730 13:52:49.409"/>
</kw>
<status status="PASS" starttime="20210730 13:52:49.404" endtime="20210730 13:52:49.410"/>
</iter>
<iter>
<var name="${pid}">14236</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:49.413" level="INFO">Running command 'kill 14236 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:49.410" endtime="20210730 13:52:49.414"/>
</kw>
<status status="PASS" starttime="20210730 13:52:49.410" endtime="20210730 13:52:49.414"/>
</iter>
<status status="PASS" starttime="20210730 13:52:49.399" endtime="20210730 13:52:49.414"/>
</for>
<status status="PASS" starttime="20210730 13:52:49.399" endtime="20210730 13:52:49.414"/>
</branch>
<status status="PASS" starttime="20210730 13:52:49.399" endtime="20210730 13:52:49.414"/>
</if>
<status status="PASS" starttime="20210730 13:52:49.382" endtime="20210730 13:52:49.414"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤/&amp; !123abc456hjk'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:47.803" endtime="20210730 13:52:49.415">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t41" name="With Each Valid Token, Updating Username Of Each System User With #¤ abc! Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:49.419" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:49.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:49.430" level="INFO">${pids} = 14265</msg>
<status status="PASS" starttime="20210730 13:52:49.417" endtime="20210730 13:52:49.430"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:49.432" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:49.431" endtime="20210730 13:52:49.432"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:49.432" level="INFO">${pids} = ['14265']</msg>
<status status="PASS" starttime="20210730 13:52:49.432" endtime="20210730 13:52:49.432"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14265</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:49.436" level="INFO">Running command 'kill 14265 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:49.433" endtime="20210730 13:52:49.436"/>
</kw>
<status status="PASS" starttime="20210730 13:52:49.433" endtime="20210730 13:52:49.436"/>
</iter>
<status status="PASS" starttime="20210730 13:52:49.432" endtime="20210730 13:52:49.436"/>
</for>
<status status="PASS" starttime="20210730 13:52:49.432" endtime="20210730 13:52:49.436"/>
</branch>
<status status="PASS" starttime="20210730 13:52:49.432" endtime="20210730 13:52:49.436"/>
</if>
<status status="PASS" starttime="20210730 13:52:49.416" endtime="20210730 13:52:49.437"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:49.438" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:49.437" endtime="20210730 13:52:49.438"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:49.438" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:49.438" endtime="20210730 13:52:49.438"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:49.439" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:49.438" endtime="20210730 13:52:49.439"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:49.439" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:49.439" endtime="20210730 13:52:49.439"/>
</kw>
<msg timestamp="20210730 13:52:49.439" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:49.438" endtime="20210730 13:52:49.439"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:49.444" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:49.439" endtime="20210730 13:52:49.446"/>
</kw>
<status status="PASS" starttime="20210730 13:52:49.437" endtime="20210730 13:52:49.446"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:49.447" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:49.447" endtime="20210730 13:52:49.452"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:50.953" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:49.452" endtime="20210730 13:52:50.954"/>
</kw>
<status status="PASS" starttime="20210730 13:52:49.446" endtime="20210730 13:52:50.954"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:50.955" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:50.955" endtime="20210730 13:52:50.955"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:50.956" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:50.955" endtime="20210730 13:52:50.956"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:50.956" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:50.956" endtime="20210730 13:52:50.956"/>
</kw>
<msg timestamp="20210730 13:52:50.956" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:50.954" endtime="20210730 13:52:50.956"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:50.957" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:50.956" endtime="20210730 13:52:50.957"/>
</kw>
<status status="PASS" starttime="20210730 13:52:50.954" endtime="20210730 13:52:50.957"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:50.958" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:50.958" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:50.958" endtime="20210730 13:52:50.958"/>
</kw>
<status status="PASS" starttime="20210730 13:52:50.958" endtime="20210730 13:52:50.958"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:50.959" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:50.959" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:50.959" endtime="20210730 13:52:50.959"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:50.959" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:50.959" endtime="20210730 13:52:50.960"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:50.960" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:50.960" endtime="20210730 13:52:50.960"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:50.960" endtime="20210730 13:52:50.961"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:50.962" endtime="20210730 13:52:50.962"/>
</kw>
<status status="PASS" starttime="20210730 13:52:50.960" endtime="20210730 13:52:50.962"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:50.962" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:50.962" endtime="20210730 13:52:50.962"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:50.963" endtime="20210730 13:52:50.963"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:50.963" endtime="20210730 13:52:50.963"/>
</kw>
<status status="PASS" starttime="20210730 13:52:50.962" endtime="20210730 13:52:50.964"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:50.964" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:50.964" endtime="20210730 13:52:50.964"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:50.964" endtime="20210730 13:52:50.965"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:50.965" endtime="20210730 13:52:50.965"/>
</kw>
<status status="PASS" starttime="20210730 13:52:50.964" endtime="20210730 13:52:50.965"/>
</iter>
<status status="PASS" starttime="20210730 13:52:50.960" endtime="20210730 13:52:50.965"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:50.966" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:50.965" endtime="20210730 13:52:50.966"/>
</kw>
<status status="PASS" starttime="20210730 13:52:50.958" endtime="20210730 13:52:50.966"/>
</kw>
<status status="PASS" starttime="20210730 13:52:49.416" endtime="20210730 13:52:50.966"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤ abc!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:50.967" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:50.967" endtime="20210730 13:52:50.967"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:50.967" level="INFO">${payload} = {'username': '#¤ abc!'}</msg>
<status status="PASS" starttime="20210730 13:52:50.967" endtime="20210730 13:52:50.967"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:50.978" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:50.978" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:50.968" endtime="20210730 13:52:50.978"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:50.978" endtime="20210730 13:52:50.978"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:50.979" endtime="20210730 13:52:50.979"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:50.967" endtime="20210730 13:52:50.979"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:50.967" endtime="20210730 13:52:50.979"/>
</for>
<status status="FAIL" starttime="20210730 13:52:50.966" endtime="20210730 13:52:50.979"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:50.966" endtime="20210730 13:52:50.979"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤ abc!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:50.980" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:50.980" endtime="20210730 13:52:50.980"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:50.980" level="INFO">${payload} = {'username': '#¤ abc!'}</msg>
<status status="PASS" starttime="20210730 13:52:50.980" endtime="20210730 13:52:50.980"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:50.985" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:50.985" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:50.981" endtime="20210730 13:52:50.985"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:50.985" endtime="20210730 13:52:50.985"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:50.985" endtime="20210730 13:52:50.985"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:50.981" endtime="20210730 13:52:50.986"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:50.980" endtime="20210730 13:52:50.986"/>
</for>
<status status="FAIL" starttime="20210730 13:52:50.979" endtime="20210730 13:52:50.986"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:50.979" endtime="20210730 13:52:50.986"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤ abc!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:50.987" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:50.987" endtime="20210730 13:52:50.987"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:50.988" level="INFO">${payload} = {'username': '#¤ abc!'}</msg>
<status status="PASS" starttime="20210730 13:52:50.987" endtime="20210730 13:52:50.988"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:50.993" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:50.993" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:50.988" endtime="20210730 13:52:50.993"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:50.993" endtime="20210730 13:52:50.993"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:50.993" endtime="20210730 13:52:50.993"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:50.988" endtime="20210730 13:52:50.994"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:50.988" endtime="20210730 13:52:50.994"/>
</for>
<status status="FAIL" starttime="20210730 13:52:50.986" endtime="20210730 13:52:50.994"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:50.986" endtime="20210730 13:52:50.994"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:50.966" endtime="20210730 13:52:50.994"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:50.999" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:51.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:51.009" level="INFO">${pids} = 14288
14295
14300</msg>
<status status="PASS" starttime="20210730 13:52:50.995" endtime="20210730 13:52:51.009"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:51.010" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:51.009" endtime="20210730 13:52:51.010"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:51.010" level="INFO">${pids} = ['14288', '14295', '14300']</msg>
<status status="PASS" starttime="20210730 13:52:51.010" endtime="20210730 13:52:51.010"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14288</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:51.014" level="INFO">Running command 'kill 14288 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:51.011" endtime="20210730 13:52:51.014"/>
</kw>
<status status="PASS" starttime="20210730 13:52:51.011" endtime="20210730 13:52:51.014"/>
</iter>
<iter>
<var name="${pid}">14295</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:51.019" level="INFO">Running command 'kill 14295 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:51.015" endtime="20210730 13:52:51.019"/>
</kw>
<status status="PASS" starttime="20210730 13:52:51.015" endtime="20210730 13:52:51.020"/>
</iter>
<iter>
<var name="${pid}">14300</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:51.025" level="INFO">Running command 'kill 14300 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:51.020" endtime="20210730 13:52:51.025"/>
</kw>
<status status="PASS" starttime="20210730 13:52:51.020" endtime="20210730 13:52:51.025"/>
</iter>
<status status="PASS" starttime="20210730 13:52:51.010" endtime="20210730 13:52:51.025"/>
</for>
<status status="PASS" starttime="20210730 13:52:51.010" endtime="20210730 13:52:51.025"/>
</branch>
<status status="PASS" starttime="20210730 13:52:51.010" endtime="20210730 13:52:51.025"/>
</if>
<status status="PASS" starttime="20210730 13:52:50.994" endtime="20210730 13:52:51.026"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤ abc!'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:49.415" endtime="20210730 13:52:51.026">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t42" name="With Each Valid Token, Updating Username Of Each System User With #¤ abc!g Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:51.030" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:51.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:51.040" level="INFO">${pids} = 14329</msg>
<status status="PASS" starttime="20210730 13:52:51.028" endtime="20210730 13:52:51.040"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:51.041" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:51.040" endtime="20210730 13:52:51.041"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:51.042" level="INFO">${pids} = ['14329']</msg>
<status status="PASS" starttime="20210730 13:52:51.041" endtime="20210730 13:52:51.042"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14329</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:51.046" level="INFO">Running command 'kill 14329 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:51.042" endtime="20210730 13:52:51.046"/>
</kw>
<status status="PASS" starttime="20210730 13:52:51.042" endtime="20210730 13:52:51.046"/>
</iter>
<status status="PASS" starttime="20210730 13:52:51.042" endtime="20210730 13:52:51.046"/>
</for>
<status status="PASS" starttime="20210730 13:52:51.041" endtime="20210730 13:52:51.046"/>
</branch>
<status status="PASS" starttime="20210730 13:52:51.041" endtime="20210730 13:52:51.046"/>
</if>
<status status="PASS" starttime="20210730 13:52:51.027" endtime="20210730 13:52:51.046"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:51.048" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:51.047" endtime="20210730 13:52:51.048"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:51.049" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:51.049" endtime="20210730 13:52:51.049"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:51.049" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:51.049" endtime="20210730 13:52:51.049"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:51.050" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:51.049" endtime="20210730 13:52:51.050"/>
</kw>
<msg timestamp="20210730 13:52:51.050" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:51.048" endtime="20210730 13:52:51.050"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:51.053" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:51.050" endtime="20210730 13:52:51.055"/>
</kw>
<status status="PASS" starttime="20210730 13:52:51.047" endtime="20210730 13:52:51.055"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:51.057" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:51.057" endtime="20210730 13:52:51.063"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:52.565" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:51.064" endtime="20210730 13:52:52.565"/>
</kw>
<status status="PASS" starttime="20210730 13:52:51.056" endtime="20210730 13:52:52.566"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:52.567" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:52.567" endtime="20210730 13:52:52.567"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:52.567" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:52.567" endtime="20210730 13:52:52.567"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:52.568" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:52.567" endtime="20210730 13:52:52.568"/>
</kw>
<msg timestamp="20210730 13:52:52.568" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:52.566" endtime="20210730 13:52:52.568"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:52.568" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:52.568" endtime="20210730 13:52:52.569"/>
</kw>
<status status="PASS" starttime="20210730 13:52:52.566" endtime="20210730 13:52:52.569"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:52.569" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:52.569" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:52.569" endtime="20210730 13:52:52.569"/>
</kw>
<status status="PASS" starttime="20210730 13:52:52.569" endtime="20210730 13:52:52.569"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:52.570" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:52.570" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:52.570" endtime="20210730 13:52:52.570"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:52.571" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:52.570" endtime="20210730 13:52:52.571"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:52.572" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:52.571" endtime="20210730 13:52:52.572"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:52.572" endtime="20210730 13:52:52.572"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:52.573" endtime="20210730 13:52:52.573"/>
</kw>
<status status="PASS" starttime="20210730 13:52:52.571" endtime="20210730 13:52:52.573"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:52.573" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:52.573" endtime="20210730 13:52:52.573"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:52.573" endtime="20210730 13:52:52.574"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:52.574" endtime="20210730 13:52:52.574"/>
</kw>
<status status="PASS" starttime="20210730 13:52:52.573" endtime="20210730 13:52:52.574"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:52.575" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:52.575" endtime="20210730 13:52:52.575"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:52.575" endtime="20210730 13:52:52.576"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:52.576" endtime="20210730 13:52:52.576"/>
</kw>
<status status="PASS" starttime="20210730 13:52:52.575" endtime="20210730 13:52:52.576"/>
</iter>
<status status="PASS" starttime="20210730 13:52:52.571" endtime="20210730 13:52:52.576"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:52.576" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:52.576" endtime="20210730 13:52:52.577"/>
</kw>
<status status="PASS" starttime="20210730 13:52:52.570" endtime="20210730 13:52:52.577"/>
</kw>
<status status="PASS" starttime="20210730 13:52:51.027" endtime="20210730 13:52:52.577"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤ abc!g</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:52.578" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:52.578" endtime="20210730 13:52:52.578"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:52.578" level="INFO">${payload} = {'username': '#¤ abc!g'}</msg>
<status status="PASS" starttime="20210730 13:52:52.578" endtime="20210730 13:52:52.578"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:52.587" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:52.588" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:52.579" endtime="20210730 13:52:52.588"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:52.588" endtime="20210730 13:52:52.588"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:52.591" endtime="20210730 13:52:52.591"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:52.579" endtime="20210730 13:52:52.591"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:52.579" endtime="20210730 13:52:52.591"/>
</for>
<status status="FAIL" starttime="20210730 13:52:52.577" endtime="20210730 13:52:52.591"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:52.577" endtime="20210730 13:52:52.591"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤ abc!g</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:52.593" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:52.592" endtime="20210730 13:52:52.593"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:52.593" level="INFO">${payload} = {'username': '#¤ abc!g'}</msg>
<status status="PASS" starttime="20210730 13:52:52.593" endtime="20210730 13:52:52.593"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:52.597" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:52.597" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:52.593" endtime="20210730 13:52:52.598"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:52.598" endtime="20210730 13:52:52.598"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:52.598" endtime="20210730 13:52:52.598"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:52.593" endtime="20210730 13:52:52.598"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:52.593" endtime="20210730 13:52:52.598"/>
</for>
<status status="FAIL" starttime="20210730 13:52:52.592" endtime="20210730 13:52:52.598"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:52.592" endtime="20210730 13:52:52.598"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤ abc!g</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:52.599" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:52.599" endtime="20210730 13:52:52.599"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:52.600" level="INFO">${payload} = {'username': '#¤ abc!g'}</msg>
<status status="PASS" starttime="20210730 13:52:52.599" endtime="20210730 13:52:52.600"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:52.604" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:52.604" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:52.600" endtime="20210730 13:52:52.604"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:52.604" endtime="20210730 13:52:52.605"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:52.605" endtime="20210730 13:52:52.605"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:52.600" endtime="20210730 13:52:52.605"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:52.600" endtime="20210730 13:52:52.605"/>
</for>
<status status="FAIL" starttime="20210730 13:52:52.598" endtime="20210730 13:52:52.606"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:52.598" endtime="20210730 13:52:52.606"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:52.577" endtime="20210730 13:52:52.606"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:52.612" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:52.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:52.622" level="INFO">${pids} = 14352
14359
14363</msg>
<status status="PASS" starttime="20210730 13:52:52.608" endtime="20210730 13:52:52.622"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:52.623" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:52.622" endtime="20210730 13:52:52.623"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:52.624" level="INFO">${pids} = ['14352', '14359', '14363']</msg>
<status status="PASS" starttime="20210730 13:52:52.623" endtime="20210730 13:52:52.624"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14352</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:52.627" level="INFO">Running command 'kill 14352 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:52.624" endtime="20210730 13:52:52.627"/>
</kw>
<status status="PASS" starttime="20210730 13:52:52.624" endtime="20210730 13:52:52.628"/>
</iter>
<iter>
<var name="${pid}">14359</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:52.630" level="INFO">Running command 'kill 14359 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:52.628" endtime="20210730 13:52:52.631"/>
</kw>
<status status="PASS" starttime="20210730 13:52:52.628" endtime="20210730 13:52:52.631"/>
</iter>
<iter>
<var name="${pid}">14363</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:52.636" level="INFO">Running command 'kill 14363 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:52.632" endtime="20210730 13:52:52.639"/>
</kw>
<status status="PASS" starttime="20210730 13:52:52.632" endtime="20210730 13:52:52.639"/>
</iter>
<status status="PASS" starttime="20210730 13:52:52.624" endtime="20210730 13:52:52.639"/>
</for>
<status status="PASS" starttime="20210730 13:52:52.623" endtime="20210730 13:52:52.639"/>
</branch>
<status status="PASS" starttime="20210730 13:52:52.623" endtime="20210730 13:52:52.639"/>
</if>
<status status="PASS" starttime="20210730 13:52:52.606" endtime="20210730 13:52:52.639"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤ abc!g'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:51.026" endtime="20210730 13:52:52.640">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t43" name="With Each Valid Token, Updating Username Of Each System User With #¤/abc!g() &amp;%¤fghjklQWERTY Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:52.644" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:52.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:52.657" level="INFO">${pids} = 14392</msg>
<status status="PASS" starttime="20210730 13:52:52.642" endtime="20210730 13:52:52.657"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:52.658" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:52.657" endtime="20210730 13:52:52.658"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:52.659" level="INFO">${pids} = ['14392']</msg>
<status status="PASS" starttime="20210730 13:52:52.658" endtime="20210730 13:52:52.659"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14392</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:52.662" level="INFO">Running command 'kill 14392 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:52.659" endtime="20210730 13:52:52.662"/>
</kw>
<status status="PASS" starttime="20210730 13:52:52.659" endtime="20210730 13:52:52.663"/>
</iter>
<status status="PASS" starttime="20210730 13:52:52.659" endtime="20210730 13:52:52.663"/>
</for>
<status status="PASS" starttime="20210730 13:52:52.658" endtime="20210730 13:52:52.663"/>
</branch>
<status status="PASS" starttime="20210730 13:52:52.658" endtime="20210730 13:52:52.663"/>
</if>
<status status="PASS" starttime="20210730 13:52:52.641" endtime="20210730 13:52:52.663"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:52.664" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:52.664" endtime="20210730 13:52:52.664"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:52.665" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:52.664" endtime="20210730 13:52:52.665"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:52.665" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:52.665" endtime="20210730 13:52:52.665"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:52.666" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:52.666" endtime="20210730 13:52:52.666"/>
</kw>
<msg timestamp="20210730 13:52:52.667" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:52.664" endtime="20210730 13:52:52.667"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:52.672" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:52.668" endtime="20210730 13:52:52.673"/>
</kw>
<status status="PASS" starttime="20210730 13:52:52.663" endtime="20210730 13:52:52.674"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:52.675" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:52.674" endtime="20210730 13:52:52.679"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:54.194" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:52.679" endtime="20210730 13:52:54.194"/>
</kw>
<status status="PASS" starttime="20210730 13:52:52.674" endtime="20210730 13:52:54.194"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:54.195" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:54.195" endtime="20210730 13:52:54.195"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:54.196" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:54.195" endtime="20210730 13:52:54.196"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:54.196" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:54.196" endtime="20210730 13:52:54.196"/>
</kw>
<msg timestamp="20210730 13:52:54.196" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:54.195" endtime="20210730 13:52:54.196"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:54.197" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:54.196" endtime="20210730 13:52:54.197"/>
</kw>
<status status="PASS" starttime="20210730 13:52:54.194" endtime="20210730 13:52:54.197"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:54.198" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:54.198" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:54.197" endtime="20210730 13:52:54.198"/>
</kw>
<status status="PASS" starttime="20210730 13:52:54.197" endtime="20210730 13:52:54.198"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:54.199" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:54.199" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:54.198" endtime="20210730 13:52:54.199"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:54.199" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:54.199" endtime="20210730 13:52:54.199"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:54.200" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:54.199" endtime="20210730 13:52:54.200"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:54.200" endtime="20210730 13:52:54.200"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:54.201" endtime="20210730 13:52:54.201"/>
</kw>
<status status="PASS" starttime="20210730 13:52:54.199" endtime="20210730 13:52:54.201"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:54.201" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:54.201" endtime="20210730 13:52:54.201"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:54.202" endtime="20210730 13:52:54.202"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:54.202" endtime="20210730 13:52:54.202"/>
</kw>
<status status="PASS" starttime="20210730 13:52:54.201" endtime="20210730 13:52:54.203"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:54.203" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:54.203" endtime="20210730 13:52:54.203"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:54.203" endtime="20210730 13:52:54.204"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:54.204" endtime="20210730 13:52:54.204"/>
</kw>
<status status="PASS" starttime="20210730 13:52:54.203" endtime="20210730 13:52:54.204"/>
</iter>
<status status="PASS" starttime="20210730 13:52:54.199" endtime="20210730 13:52:54.204"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:54.204" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:54.204" endtime="20210730 13:52:54.204"/>
</kw>
<status status="PASS" starttime="20210730 13:52:54.198" endtime="20210730 13:52:54.204"/>
</kw>
<status status="PASS" starttime="20210730 13:52:52.641" endtime="20210730 13:52:54.205"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/abc!g() &amp;%¤fghjklQWERTY</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:54.206" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:54.206" endtime="20210730 13:52:54.206"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:54.206" level="INFO">${payload} = {'username': '#¤/abc!g() &amp;%¤fghjklQWERTY'}</msg>
<status status="PASS" starttime="20210730 13:52:54.206" endtime="20210730 13:52:54.206"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:54.215" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:54.216" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:54.207" endtime="20210730 13:52:54.216"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:54.216" endtime="20210730 13:52:54.216"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:54.218" endtime="20210730 13:52:54.218"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:54.207" endtime="20210730 13:52:54.218"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:54.206" endtime="20210730 13:52:54.218"/>
</for>
<status status="FAIL" starttime="20210730 13:52:54.205" endtime="20210730 13:52:54.218"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:54.205" endtime="20210730 13:52:54.218"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/abc!g() &amp;%¤fghjklQWERTY</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:54.220" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:54.219" endtime="20210730 13:52:54.220"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:54.220" level="INFO">${payload} = {'username': '#¤/abc!g() &amp;%¤fghjklQWERTY'}</msg>
<status status="PASS" starttime="20210730 13:52:54.220" endtime="20210730 13:52:54.220"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:54.225" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:54.225" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:54.220" endtime="20210730 13:52:54.225"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:54.225" endtime="20210730 13:52:54.225"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:54.225" endtime="20210730 13:52:54.225"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:54.220" endtime="20210730 13:52:54.225"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:54.220" endtime="20210730 13:52:54.225"/>
</for>
<status status="FAIL" starttime="20210730 13:52:54.219" endtime="20210730 13:52:54.225"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:54.218" endtime="20210730 13:52:54.226"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/abc!g() &amp;%¤fghjklQWERTY</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:54.227" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:54.226" endtime="20210730 13:52:54.227"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:54.227" level="INFO">${payload} = {'username': '#¤/abc!g() &amp;%¤fghjklQWERTY'}</msg>
<status status="PASS" starttime="20210730 13:52:54.227" endtime="20210730 13:52:54.227"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:54.232" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:54.232" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:54.227" endtime="20210730 13:52:54.232"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:54.232" endtime="20210730 13:52:54.232"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:54.232" endtime="20210730 13:52:54.232"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:54.227" endtime="20210730 13:52:54.232"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:54.227" endtime="20210730 13:52:54.232"/>
</for>
<status status="FAIL" starttime="20210730 13:52:54.226" endtime="20210730 13:52:54.232"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:54.226" endtime="20210730 13:52:54.232"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:54.205" endtime="20210730 13:52:54.232"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:54.240" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:54.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:54.249" level="INFO">${pids} = 14415
14422
14427</msg>
<status status="PASS" starttime="20210730 13:52:54.234" endtime="20210730 13:52:54.249"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:54.250" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:54.249" endtime="20210730 13:52:54.250"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:54.251" level="INFO">${pids} = ['14415', '14422', '14427']</msg>
<status status="PASS" starttime="20210730 13:52:54.250" endtime="20210730 13:52:54.251"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14415</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:54.255" level="INFO">Running command 'kill 14415 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:54.252" endtime="20210730 13:52:54.255"/>
</kw>
<status status="PASS" starttime="20210730 13:52:54.251" endtime="20210730 13:52:54.255"/>
</iter>
<iter>
<var name="${pid}">14422</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:54.259" level="INFO">Running command 'kill 14422 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:54.256" endtime="20210730 13:52:54.260"/>
</kw>
<status status="PASS" starttime="20210730 13:52:54.256" endtime="20210730 13:52:54.260"/>
</iter>
<iter>
<var name="${pid}">14427</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:54.268" level="INFO">Running command 'kill 14427 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:54.260" endtime="20210730 13:52:54.268"/>
</kw>
<status status="PASS" starttime="20210730 13:52:54.260" endtime="20210730 13:52:54.268"/>
</iter>
<status status="PASS" starttime="20210730 13:52:54.251" endtime="20210730 13:52:54.268"/>
</for>
<status status="PASS" starttime="20210730 13:52:54.250" endtime="20210730 13:52:54.268"/>
</branch>
<status status="PASS" starttime="20210730 13:52:54.250" endtime="20210730 13:52:54.268"/>
</if>
<status status="PASS" starttime="20210730 13:52:54.233" endtime="20210730 13:52:54.268"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤/abc!g() &amp;%¤fghjklQWERTY'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:52.640" endtime="20210730 13:52:54.269">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t44" name="With Each Valid Token, Updating Password Of Each System User With '' Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:54.274" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:54.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:54.284" level="INFO">${pids} = 14456</msg>
<status status="PASS" starttime="20210730 13:52:54.270" endtime="20210730 13:52:54.284"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:54.285" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:54.284" endtime="20210730 13:52:54.285"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:54.285" level="INFO">${pids} = ['14456']</msg>
<status status="PASS" starttime="20210730 13:52:54.285" endtime="20210730 13:52:54.285"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14456</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:54.289" level="INFO">Running command 'kill 14456 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:54.286" endtime="20210730 13:52:54.290"/>
</kw>
<status status="PASS" starttime="20210730 13:52:54.286" endtime="20210730 13:52:54.290"/>
</iter>
<status status="PASS" starttime="20210730 13:52:54.285" endtime="20210730 13:52:54.290"/>
</for>
<status status="PASS" starttime="20210730 13:52:54.285" endtime="20210730 13:52:54.290"/>
</branch>
<status status="PASS" starttime="20210730 13:52:54.285" endtime="20210730 13:52:54.290"/>
</if>
<status status="PASS" starttime="20210730 13:52:54.270" endtime="20210730 13:52:54.291"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:54.292" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:54.292" endtime="20210730 13:52:54.292"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:54.292" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:54.292" endtime="20210730 13:52:54.292"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:54.293" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:54.293" endtime="20210730 13:52:54.293"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:54.293" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:54.293" endtime="20210730 13:52:54.293"/>
</kw>
<msg timestamp="20210730 13:52:54.293" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:54.292" endtime="20210730 13:52:54.293"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:54.299" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:54.294" endtime="20210730 13:52:54.301"/>
</kw>
<status status="PASS" starttime="20210730 13:52:54.291" endtime="20210730 13:52:54.301"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:54.303" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:54.302" endtime="20210730 13:52:54.306"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:55.807" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:54.307" endtime="20210730 13:52:55.807"/>
</kw>
<status status="PASS" starttime="20210730 13:52:54.302" endtime="20210730 13:52:55.808"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:55.809" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:55.808" endtime="20210730 13:52:55.809"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:55.809" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:55.809" endtime="20210730 13:52:55.809"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:55.810" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:55.809" endtime="20210730 13:52:55.810"/>
</kw>
<msg timestamp="20210730 13:52:55.810" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:55.808" endtime="20210730 13:52:55.810"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:55.810" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:55.810" endtime="20210730 13:52:55.811"/>
</kw>
<status status="PASS" starttime="20210730 13:52:55.808" endtime="20210730 13:52:55.811"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:55.812" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:55.812" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:55.811" endtime="20210730 13:52:55.812"/>
</kw>
<status status="PASS" starttime="20210730 13:52:55.811" endtime="20210730 13:52:55.812"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:55.813" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:55.813" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:55.812" endtime="20210730 13:52:55.813"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:55.813" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:55.813" endtime="20210730 13:52:55.813"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:55.814" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:55.813" endtime="20210730 13:52:55.814"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:55.814" endtime="20210730 13:52:55.814"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:55.815" endtime="20210730 13:52:55.815"/>
</kw>
<status status="PASS" starttime="20210730 13:52:55.813" endtime="20210730 13:52:55.815"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:55.816" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:55.815" endtime="20210730 13:52:55.816"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:55.816" endtime="20210730 13:52:55.817"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:55.817" endtime="20210730 13:52:55.817"/>
</kw>
<status status="PASS" starttime="20210730 13:52:55.815" endtime="20210730 13:52:55.817"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:55.818" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:55.818" endtime="20210730 13:52:55.818"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:55.818" endtime="20210730 13:52:55.819"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:55.819" endtime="20210730 13:52:55.819"/>
</kw>
<status status="PASS" starttime="20210730 13:52:55.817" endtime="20210730 13:52:55.819"/>
</iter>
<status status="PASS" starttime="20210730 13:52:55.813" endtime="20210730 13:52:55.819"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:55.819" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:55.819" endtime="20210730 13:52:55.819"/>
</kw>
<status status="PASS" starttime="20210730 13:52:55.812" endtime="20210730 13:52:55.819"/>
</kw>
<status status="PASS" starttime="20210730 13:52:54.270" endtime="20210730 13:52:55.820"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=${EMPTY}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:55.821" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:55.821" endtime="20210730 13:52:55.821"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:55.822" level="INFO">${payload} = {'password': ''}</msg>
<status status="PASS" starttime="20210730 13:52:55.821" endtime="20210730 13:52:55.822"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:55.830" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:55.830" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:55.822" endtime="20210730 13:52:55.830"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:55.831" endtime="20210730 13:52:55.831"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:55.831" endtime="20210730 13:52:55.831"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:55.822" endtime="20210730 13:52:55.831"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:55.822" endtime="20210730 13:52:55.831"/>
</for>
<status status="FAIL" starttime="20210730 13:52:55.820" endtime="20210730 13:52:55.831"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:55.820" endtime="20210730 13:52:55.831"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=${EMPTY}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:55.833" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:55.832" endtime="20210730 13:52:55.833"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:55.833" level="INFO">${payload} = {'password': ''}</msg>
<status status="PASS" starttime="20210730 13:52:55.833" endtime="20210730 13:52:55.833"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:55.837" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:55.837" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:55.833" endtime="20210730 13:52:55.837"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:55.837" endtime="20210730 13:52:55.837"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:55.838" endtime="20210730 13:52:55.838"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:55.833" endtime="20210730 13:52:55.838"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:55.833" endtime="20210730 13:52:55.838"/>
</for>
<status status="FAIL" starttime="20210730 13:52:55.831" endtime="20210730 13:52:55.838"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:55.831" endtime="20210730 13:52:55.838"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=${EMPTY}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:55.840" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:55.839" endtime="20210730 13:52:55.840"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:55.840" level="INFO">${payload} = {'password': ''}</msg>
<status status="PASS" starttime="20210730 13:52:55.840" endtime="20210730 13:52:55.840"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:55.845" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:55.845" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:55.840" endtime="20210730 13:52:55.845"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:55.845" endtime="20210730 13:52:55.845"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:55.845" endtime="20210730 13:52:55.845"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:55.840" endtime="20210730 13:52:55.845"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:55.840" endtime="20210730 13:52:55.845"/>
</for>
<status status="FAIL" starttime="20210730 13:52:55.838" endtime="20210730 13:52:55.846"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:55.838" endtime="20210730 13:52:55.846"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:55.820" endtime="20210730 13:52:55.846"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:55.853" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:55.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:55.862" level="INFO">${pids} = 14479
14486
14491</msg>
<status status="PASS" starttime="20210730 13:52:55.847" endtime="20210730 13:52:55.862"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:55.863" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:55.863" endtime="20210730 13:52:55.863"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:55.864" level="INFO">${pids} = ['14479', '14486', '14491']</msg>
<status status="PASS" starttime="20210730 13:52:55.863" endtime="20210730 13:52:55.864"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14479</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:55.867" level="INFO">Running command 'kill 14479 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:55.864" endtime="20210730 13:52:55.868"/>
</kw>
<status status="PASS" starttime="20210730 13:52:55.864" endtime="20210730 13:52:55.868"/>
</iter>
<iter>
<var name="${pid}">14486</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:55.871" level="INFO">Running command 'kill 14486 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:55.868" endtime="20210730 13:52:55.871"/>
</kw>
<status status="PASS" starttime="20210730 13:52:55.868" endtime="20210730 13:52:55.871"/>
</iter>
<iter>
<var name="${pid}">14491</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:55.876" level="INFO">Running command 'kill 14491 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:55.872" endtime="20210730 13:52:55.876"/>
</kw>
<status status="PASS" starttime="20210730 13:52:55.872" endtime="20210730 13:52:55.876"/>
</iter>
<status status="PASS" starttime="20210730 13:52:55.864" endtime="20210730 13:52:55.876"/>
</for>
<status status="PASS" starttime="20210730 13:52:55.863" endtime="20210730 13:52:55.876"/>
</branch>
<status status="PASS" starttime="20210730 13:52:55.863" endtime="20210730 13:52:55.876"/>
</if>
<status status="PASS" starttime="20210730 13:52:55.846" endtime="20210730 13:52:55.876"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": ''
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:54.269" endtime="20210730 13:52:55.877">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t45" name="With Each Valid Token, Updating Password Of Each System User With abcdefg Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:55.884" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:55.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:55.893" level="INFO">${pids} = 14520</msg>
<status status="PASS" starttime="20210730 13:52:55.879" endtime="20210730 13:52:55.893"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:55.894" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:55.894" endtime="20210730 13:52:55.894"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:55.895" level="INFO">${pids} = ['14520']</msg>
<status status="PASS" starttime="20210730 13:52:55.895" endtime="20210730 13:52:55.895"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14520</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:55.898" level="INFO">Running command 'kill 14520 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:55.895" endtime="20210730 13:52:55.899"/>
</kw>
<status status="PASS" starttime="20210730 13:52:55.895" endtime="20210730 13:52:55.899"/>
</iter>
<status status="PASS" starttime="20210730 13:52:55.895" endtime="20210730 13:52:55.899"/>
</for>
<status status="PASS" starttime="20210730 13:52:55.895" endtime="20210730 13:52:55.899"/>
</branch>
<status status="PASS" starttime="20210730 13:52:55.894" endtime="20210730 13:52:55.899"/>
</if>
<status status="PASS" starttime="20210730 13:52:55.879" endtime="20210730 13:52:55.899"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:55.900" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:55.900" endtime="20210730 13:52:55.900"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:55.901" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:55.900" endtime="20210730 13:52:55.901"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:55.901" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:55.901" endtime="20210730 13:52:55.901"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:55.901" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:55.901" endtime="20210730 13:52:55.901"/>
</kw>
<msg timestamp="20210730 13:52:55.902" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:55.900" endtime="20210730 13:52:55.902"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:55.905" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:55.902" endtime="20210730 13:52:55.907"/>
</kw>
<status status="PASS" starttime="20210730 13:52:55.899" endtime="20210730 13:52:55.907"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:55.908" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:55.908" endtime="20210730 13:52:55.919"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:57.420" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:55.919" endtime="20210730 13:52:57.420"/>
</kw>
<status status="PASS" starttime="20210730 13:52:55.907" endtime="20210730 13:52:57.420"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:57.422" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:57.422" endtime="20210730 13:52:57.422"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:57.422" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:57.422" endtime="20210730 13:52:57.422"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:57.423" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:57.422" endtime="20210730 13:52:57.423"/>
</kw>
<msg timestamp="20210730 13:52:57.423" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:57.421" endtime="20210730 13:52:57.423"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:57.424" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:57.423" endtime="20210730 13:52:57.424"/>
</kw>
<status status="PASS" starttime="20210730 13:52:57.421" endtime="20210730 13:52:57.424"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:57.425" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:57.425" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:57.425" endtime="20210730 13:52:57.425"/>
</kw>
<status status="PASS" starttime="20210730 13:52:57.424" endtime="20210730 13:52:57.425"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:57.426" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:57.427" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:57.426" endtime="20210730 13:52:57.427"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:57.427" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:57.427" endtime="20210730 13:52:57.427"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:57.428" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:57.427" endtime="20210730 13:52:57.428"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:57.428" endtime="20210730 13:52:57.429"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:57.429" endtime="20210730 13:52:57.429"/>
</kw>
<status status="PASS" starttime="20210730 13:52:57.427" endtime="20210730 13:52:57.429"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:57.429" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:57.429" endtime="20210730 13:52:57.429"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:57.429" endtime="20210730 13:52:57.430"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:57.430" endtime="20210730 13:52:57.430"/>
</kw>
<status status="PASS" starttime="20210730 13:52:57.429" endtime="20210730 13:52:57.430"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:57.431" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:57.431" endtime="20210730 13:52:57.431"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:57.431" endtime="20210730 13:52:57.432"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:57.432" endtime="20210730 13:52:57.432"/>
</kw>
<status status="PASS" starttime="20210730 13:52:57.430" endtime="20210730 13:52:57.432"/>
</iter>
<status status="PASS" starttime="20210730 13:52:57.427" endtime="20210730 13:52:57.432"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:57.433" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:57.432" endtime="20210730 13:52:57.433"/>
</kw>
<status status="PASS" starttime="20210730 13:52:57.426" endtime="20210730 13:52:57.433"/>
</kw>
<status status="PASS" starttime="20210730 13:52:55.878" endtime="20210730 13:52:57.433"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdefg</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:57.434" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:57.434" endtime="20210730 13:52:57.434"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:57.434" level="INFO">${payload} = {'password': 'abcdefg'}</msg>
<status status="PASS" starttime="20210730 13:52:57.434" endtime="20210730 13:52:57.434"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:57.443" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:57.444" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:57.435" endtime="20210730 13:52:57.444"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:57.444" endtime="20210730 13:52:57.444"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:57.444" endtime="20210730 13:52:57.444"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:57.435" endtime="20210730 13:52:57.444"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:57.434" endtime="20210730 13:52:57.444"/>
</for>
<status status="FAIL" starttime="20210730 13:52:57.433" endtime="20210730 13:52:57.444"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:57.433" endtime="20210730 13:52:57.444"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdefg</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:57.446" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:57.445" endtime="20210730 13:52:57.446"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:57.446" level="INFO">${payload} = {'password': 'abcdefg'}</msg>
<status status="PASS" starttime="20210730 13:52:57.446" endtime="20210730 13:52:57.446"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:57.450" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:57.451" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:57.446" endtime="20210730 13:52:57.451"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:57.451" endtime="20210730 13:52:57.451"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:57.451" endtime="20210730 13:52:57.451"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:57.446" endtime="20210730 13:52:57.451"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:57.446" endtime="20210730 13:52:57.451"/>
</for>
<status status="FAIL" starttime="20210730 13:52:57.445" endtime="20210730 13:52:57.451"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:57.445" endtime="20210730 13:52:57.451"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdefg</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:57.452" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:57.452" endtime="20210730 13:52:57.452"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:57.453" level="INFO">${payload} = {'password': 'abcdefg'}</msg>
<status status="PASS" starttime="20210730 13:52:57.453" endtime="20210730 13:52:57.453"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:57.458" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:57.458" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:57.453" endtime="20210730 13:52:57.458"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:57.458" endtime="20210730 13:52:57.459"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:57.459" endtime="20210730 13:52:57.459"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:57.453" endtime="20210730 13:52:57.459"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:57.453" endtime="20210730 13:52:57.459"/>
</for>
<status status="FAIL" starttime="20210730 13:52:57.452" endtime="20210730 13:52:57.459"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:57.452" endtime="20210730 13:52:57.459"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:57.433" endtime="20210730 13:52:57.459"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:57.464" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:57.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:57.474" level="INFO">${pids} = 14543
14550
14563</msg>
<status status="PASS" starttime="20210730 13:52:57.460" endtime="20210730 13:52:57.474"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:57.475" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:57.475" endtime="20210730 13:52:57.475"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:57.476" level="INFO">${pids} = ['14543', '14550', '14563']</msg>
<status status="PASS" starttime="20210730 13:52:57.476" endtime="20210730 13:52:57.476"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14543</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:57.479" level="INFO">Running command 'kill 14543 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:57.477" endtime="20210730 13:52:57.480"/>
</kw>
<status status="PASS" starttime="20210730 13:52:57.476" endtime="20210730 13:52:57.480"/>
</iter>
<iter>
<var name="${pid}">14550</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:57.483" level="INFO">Running command 'kill 14550 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:57.480" endtime="20210730 13:52:57.484"/>
</kw>
<status status="PASS" starttime="20210730 13:52:57.480" endtime="20210730 13:52:57.484"/>
</iter>
<iter>
<var name="${pid}">14563</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:57.488" level="INFO">Running command 'kill 14563 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:57.485" endtime="20210730 13:52:57.488"/>
</kw>
<status status="PASS" starttime="20210730 13:52:57.484" endtime="20210730 13:52:57.489"/>
</iter>
<status status="PASS" starttime="20210730 13:52:57.476" endtime="20210730 13:52:57.489"/>
</for>
<status status="PASS" starttime="20210730 13:52:57.476" endtime="20210730 13:52:57.489"/>
</branch>
<status status="PASS" starttime="20210730 13:52:57.476" endtime="20210730 13:52:57.489"/>
</if>
<status status="PASS" starttime="20210730 13:52:57.459" endtime="20210730 13:52:57.489"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcdefg'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:55.877" endtime="20210730 13:52:57.489">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t46" name="With Each Valid Token, Updating Password Of Each System User With abcdefgh Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:57.495" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:57.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:57.506" level="INFO">${pids} = 14592</msg>
<status status="PASS" starttime="20210730 13:52:57.492" endtime="20210730 13:52:57.506"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:57.507" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:57.506" endtime="20210730 13:52:57.507"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:57.507" level="INFO">${pids} = ['14592']</msg>
<status status="PASS" starttime="20210730 13:52:57.507" endtime="20210730 13:52:57.507"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14592</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:57.511" level="INFO">Running command 'kill 14592 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:57.508" endtime="20210730 13:52:57.512"/>
</kw>
<status status="PASS" starttime="20210730 13:52:57.508" endtime="20210730 13:52:57.512"/>
</iter>
<status status="PASS" starttime="20210730 13:52:57.508" endtime="20210730 13:52:57.512"/>
</for>
<status status="PASS" starttime="20210730 13:52:57.507" endtime="20210730 13:52:57.512"/>
</branch>
<status status="PASS" starttime="20210730 13:52:57.507" endtime="20210730 13:52:57.512"/>
</if>
<status status="PASS" starttime="20210730 13:52:57.491" endtime="20210730 13:52:57.512"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:57.514" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:57.513" endtime="20210730 13:52:57.514"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:57.514" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:57.514" endtime="20210730 13:52:57.514"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:57.514" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:57.514" endtime="20210730 13:52:57.515"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:57.515" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:57.515" endtime="20210730 13:52:57.515"/>
</kw>
<msg timestamp="20210730 13:52:57.515" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:57.514" endtime="20210730 13:52:57.515"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:57.519" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:57.515" endtime="20210730 13:52:57.520"/>
</kw>
<status status="PASS" starttime="20210730 13:52:57.513" endtime="20210730 13:52:57.520"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:57.522" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:57.521" endtime="20210730 13:52:57.528"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:52:59.031" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:57.528" endtime="20210730 13:52:59.032"/>
</kw>
<status status="PASS" starttime="20210730 13:52:57.521" endtime="20210730 13:52:59.033"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:59.037" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:59.036" endtime="20210730 13:52:59.037"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:59.037" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:59.037" endtime="20210730 13:52:59.037"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:59.037" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:59.037" endtime="20210730 13:52:59.037"/>
</kw>
<msg timestamp="20210730 13:52:59.038" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:59.036" endtime="20210730 13:52:59.038"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:52:59.038" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:52:59.038" endtime="20210730 13:52:59.039"/>
</kw>
<status status="PASS" starttime="20210730 13:52:59.034" endtime="20210730 13:52:59.039"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:52:59.039" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:52:59.039" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:52:59.039" endtime="20210730 13:52:59.040"/>
</kw>
<status status="PASS" starttime="20210730 13:52:59.039" endtime="20210730 13:52:59.040"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:52:59.040" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:52:59.041" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:52:59.040" endtime="20210730 13:52:59.041"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:52:59.041" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:52:59.041" endtime="20210730 13:52:59.041"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:59.042" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:59.042" endtime="20210730 13:52:59.043"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:59.043" endtime="20210730 13:52:59.043"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:59.043" endtime="20210730 13:52:59.044"/>
</kw>
<status status="PASS" starttime="20210730 13:52:59.042" endtime="20210730 13:52:59.044"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:59.044" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:59.044" endtime="20210730 13:52:59.044"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:59.044" endtime="20210730 13:52:59.045"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:59.045" endtime="20210730 13:52:59.045"/>
</kw>
<status status="PASS" starttime="20210730 13:52:59.044" endtime="20210730 13:52:59.045"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:59.046" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:52:59.045" endtime="20210730 13:52:59.046"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:52:59.046" endtime="20210730 13:52:59.046"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:52:59.046" endtime="20210730 13:52:59.047"/>
</kw>
<status status="PASS" starttime="20210730 13:52:59.045" endtime="20210730 13:52:59.047"/>
</iter>
<status status="PASS" starttime="20210730 13:52:59.041" endtime="20210730 13:52:59.047"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:52:59.047" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:52:59.047" endtime="20210730 13:52:59.047"/>
</kw>
<status status="PASS" starttime="20210730 13:52:59.040" endtime="20210730 13:52:59.047"/>
</kw>
<status status="PASS" starttime="20210730 13:52:57.491" endtime="20210730 13:52:59.047"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdefgh</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:59.049" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:52:59.049" endtime="20210730 13:52:59.049"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:59.050" level="INFO">${payload} = {'password': 'abcdefgh'}</msg>
<status status="PASS" starttime="20210730 13:52:59.050" endtime="20210730 13:52:59.050"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:59.059" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:59.059" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:59.050" endtime="20210730 13:52:59.059"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:59.060" endtime="20210730 13:52:59.060"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:59.060" endtime="20210730 13:52:59.060"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:59.050" endtime="20210730 13:52:59.060"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:59.050" endtime="20210730 13:52:59.060"/>
</for>
<status status="FAIL" starttime="20210730 13:52:59.048" endtime="20210730 13:52:59.060"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:59.048" endtime="20210730 13:52:59.060"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdefgh</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:59.061" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:52:59.061" endtime="20210730 13:52:59.061"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:59.062" level="INFO">${payload} = {'password': 'abcdefgh'}</msg>
<status status="PASS" starttime="20210730 13:52:59.062" endtime="20210730 13:52:59.062"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:59.066" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:59.066" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:59.062" endtime="20210730 13:52:59.066"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:59.066" endtime="20210730 13:52:59.067"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:59.067" endtime="20210730 13:52:59.067"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:59.062" endtime="20210730 13:52:59.067"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:59.062" endtime="20210730 13:52:59.067"/>
</for>
<status status="FAIL" starttime="20210730 13:52:59.060" endtime="20210730 13:52:59.067"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:59.060" endtime="20210730 13:52:59.067"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdefgh</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:59.068" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:52:59.068" endtime="20210730 13:52:59.068"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:52:59.068" level="INFO">${payload} = {'password': 'abcdefgh'}</msg>
<status status="PASS" starttime="20210730 13:52:59.068" endtime="20210730 13:52:59.068"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:52:59.073" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:52:59.073" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:52:59.069" endtime="20210730 13:52:59.073"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:52:59.073" endtime="20210730 13:52:59.073"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:52:59.073" endtime="20210730 13:52:59.073"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:59.069" endtime="20210730 13:52:59.073"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:59.068" endtime="20210730 13:52:59.073"/>
</for>
<status status="FAIL" starttime="20210730 13:52:59.067" endtime="20210730 13:52:59.074"/>
</kw>
<status status="FAIL" starttime="20210730 13:52:59.067" endtime="20210730 13:52:59.074"/>
</iter>
<status status="FAIL" starttime="20210730 13:52:59.048" endtime="20210730 13:52:59.074"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:59.079" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:59.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:59.090" level="INFO">${pids} = 14615
14622
14626</msg>
<status status="PASS" starttime="20210730 13:52:59.075" endtime="20210730 13:52:59.090"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:59.091" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:59.090" endtime="20210730 13:52:59.091"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:59.092" level="INFO">${pids} = ['14615', '14622', '14626']</msg>
<status status="PASS" starttime="20210730 13:52:59.091" endtime="20210730 13:52:59.092"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14615</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:59.095" level="INFO">Running command 'kill 14615 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:59.092" endtime="20210730 13:52:59.095"/>
</kw>
<status status="PASS" starttime="20210730 13:52:59.092" endtime="20210730 13:52:59.096"/>
</iter>
<iter>
<var name="${pid}">14622</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:59.098" level="INFO">Running command 'kill 14622 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:59.096" endtime="20210730 13:52:59.100"/>
</kw>
<status status="PASS" starttime="20210730 13:52:59.096" endtime="20210730 13:52:59.100"/>
</iter>
<iter>
<var name="${pid}">14626</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:59.104" level="INFO">Running command 'kill 14626 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:59.101" endtime="20210730 13:52:59.104"/>
</kw>
<status status="PASS" starttime="20210730 13:52:59.100" endtime="20210730 13:52:59.104"/>
</iter>
<status status="PASS" starttime="20210730 13:52:59.092" endtime="20210730 13:52:59.104"/>
</for>
<status status="PASS" starttime="20210730 13:52:59.091" endtime="20210730 13:52:59.104"/>
</branch>
<status status="PASS" starttime="20210730 13:52:59.091" endtime="20210730 13:52:59.104"/>
</if>
<status status="PASS" starttime="20210730 13:52:59.074" endtime="20210730 13:52:59.105"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcdefgh'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:57.490" endtime="20210730 13:52:59.105">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t47" name="With Each Valid Token, Updating Password Of Each System User With abcdefghjklmnprstoöuüvyz Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:52:59.111" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:52:59.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:52:59.120" level="INFO">${pids} = 14655</msg>
<status status="PASS" starttime="20210730 13:52:59.108" endtime="20210730 13:52:59.120"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:59.121" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:52:59.121" endtime="20210730 13:52:59.121"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:52:59.123" level="INFO">${pids} = ['14655']</msg>
<status status="PASS" starttime="20210730 13:52:59.122" endtime="20210730 13:52:59.123"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14655</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:59.127" level="INFO">Running command 'kill 14655 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:59.123" endtime="20210730 13:52:59.127"/>
</kw>
<status status="PASS" starttime="20210730 13:52:59.123" endtime="20210730 13:52:59.128"/>
</iter>
<status status="PASS" starttime="20210730 13:52:59.123" endtime="20210730 13:52:59.128"/>
</for>
<status status="PASS" starttime="20210730 13:52:59.122" endtime="20210730 13:52:59.128"/>
</branch>
<status status="PASS" starttime="20210730 13:52:59.122" endtime="20210730 13:52:59.128"/>
</if>
<status status="PASS" starttime="20210730 13:52:59.107" endtime="20210730 13:52:59.128"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:59.129" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:59.129" endtime="20210730 13:52:59.129"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:59.130" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:52:59.129" endtime="20210730 13:52:59.130"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:52:59.130" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:52:59.130" endtime="20210730 13:52:59.130"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:52:59.130" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:59.130" endtime="20210730 13:52:59.130"/>
</kw>
<msg timestamp="20210730 13:52:59.131" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:52:59.129" endtime="20210730 13:52:59.131"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:52:59.134" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:52:59.131" endtime="20210730 13:52:59.135"/>
</kw>
<status status="PASS" starttime="20210730 13:52:59.128" endtime="20210730 13:52:59.136"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:52:59.137" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:52:59.136" endtime="20210730 13:52:59.144"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:00.645" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:52:59.144" endtime="20210730 13:53:00.645"/>
</kw>
<status status="PASS" starttime="20210730 13:52:59.136" endtime="20210730 13:53:00.645"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:00.646" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:00.646" endtime="20210730 13:53:00.646"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:00.647" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:00.647" endtime="20210730 13:53:00.647"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:00.647" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:00.647" endtime="20210730 13:53:00.647"/>
</kw>
<msg timestamp="20210730 13:53:00.647" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:00.646" endtime="20210730 13:53:00.647"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:00.648" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:00.647" endtime="20210730 13:53:00.648"/>
</kw>
<status status="PASS" starttime="20210730 13:53:00.646" endtime="20210730 13:53:00.649"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:00.649" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:00.650" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:00.649" endtime="20210730 13:53:00.650"/>
</kw>
<status status="PASS" starttime="20210730 13:53:00.649" endtime="20210730 13:53:00.650"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:00.651" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:00.651" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:00.650" endtime="20210730 13:53:00.651"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:00.651" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:00.651" endtime="20210730 13:53:00.651"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:00.652" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:00.652" endtime="20210730 13:53:00.652"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:00.652" endtime="20210730 13:53:00.653"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:00.653" endtime="20210730 13:53:00.653"/>
</kw>
<status status="PASS" starttime="20210730 13:53:00.652" endtime="20210730 13:53:00.653"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:00.654" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:00.654" endtime="20210730 13:53:00.654"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:00.654" endtime="20210730 13:53:00.655"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:00.655" endtime="20210730 13:53:00.655"/>
</kw>
<status status="PASS" starttime="20210730 13:53:00.653" endtime="20210730 13:53:00.655"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:00.655" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:00.655" endtime="20210730 13:53:00.655"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:00.655" endtime="20210730 13:53:00.656"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:00.656" endtime="20210730 13:53:00.657"/>
</kw>
<status status="PASS" starttime="20210730 13:53:00.655" endtime="20210730 13:53:00.657"/>
</iter>
<status status="PASS" starttime="20210730 13:53:00.651" endtime="20210730 13:53:00.657"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:00.657" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:00.657" endtime="20210730 13:53:00.657"/>
</kw>
<status status="PASS" starttime="20210730 13:53:00.650" endtime="20210730 13:53:00.657"/>
</kw>
<status status="PASS" starttime="20210730 13:52:59.107" endtime="20210730 13:53:00.658"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdefghjklmnprstoöuüvyz</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:00.659" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:00.658" endtime="20210730 13:53:00.659"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:00.659" level="INFO">${payload} = {'password': 'abcdefghjklmnprstoöuüvyz'}</msg>
<status status="PASS" starttime="20210730 13:53:00.659" endtime="20210730 13:53:00.659"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:00.668" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:00.669" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:00.660" endtime="20210730 13:53:00.669"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:00.669" endtime="20210730 13:53:00.669"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:00.669" endtime="20210730 13:53:00.669"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:00.659" endtime="20210730 13:53:00.669"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:00.659" endtime="20210730 13:53:00.669"/>
</for>
<status status="FAIL" starttime="20210730 13:53:00.658" endtime="20210730 13:53:00.670"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:00.658" endtime="20210730 13:53:00.670"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdefghjklmnprstoöuüvyz</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:00.671" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:00.670" endtime="20210730 13:53:00.671"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:00.671" level="INFO">${payload} = {'password': 'abcdefghjklmnprstoöuüvyz'}</msg>
<status status="PASS" starttime="20210730 13:53:00.671" endtime="20210730 13:53:00.671"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:00.676" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:00.676" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:00.671" endtime="20210730 13:53:00.676"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:00.676" endtime="20210730 13:53:00.676"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:00.676" endtime="20210730 13:53:00.676"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:00.671" endtime="20210730 13:53:00.676"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:00.671" endtime="20210730 13:53:00.676"/>
</for>
<status status="FAIL" starttime="20210730 13:53:00.670" endtime="20210730 13:53:00.677"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:00.670" endtime="20210730 13:53:00.677"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdefghjklmnprstoöuüvyz</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:00.678" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:00.677" endtime="20210730 13:53:00.678"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:00.678" level="INFO">${payload} = {'password': 'abcdefghjklmnprstoöuüvyz'}</msg>
<status status="PASS" starttime="20210730 13:53:00.678" endtime="20210730 13:53:00.678"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:00.682" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:00.682" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:00.678" endtime="20210730 13:53:00.682"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:00.682" endtime="20210730 13:53:00.682"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:00.682" endtime="20210730 13:53:00.683"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:00.678" endtime="20210730 13:53:00.683"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:00.678" endtime="20210730 13:53:00.683"/>
</for>
<status status="FAIL" starttime="20210730 13:53:00.677" endtime="20210730 13:53:00.683"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:00.677" endtime="20210730 13:53:00.683"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:00.658" endtime="20210730 13:53:00.683"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:00.689" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:00.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:00.700" level="INFO">${pids} = 14678
14685
14690</msg>
<status status="PASS" starttime="20210730 13:53:00.684" endtime="20210730 13:53:00.700"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:00.701" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:00.700" endtime="20210730 13:53:00.701"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:00.702" level="INFO">${pids} = ['14678', '14685', '14690']</msg>
<status status="PASS" starttime="20210730 13:53:00.701" endtime="20210730 13:53:00.702"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14678</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:00.705" level="INFO">Running command 'kill 14678 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:00.702" endtime="20210730 13:53:00.705"/>
</kw>
<status status="PASS" starttime="20210730 13:53:00.702" endtime="20210730 13:53:00.705"/>
</iter>
<iter>
<var name="${pid}">14685</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:00.709" level="INFO">Running command 'kill 14685 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:00.706" endtime="20210730 13:53:00.709"/>
</kw>
<status status="PASS" starttime="20210730 13:53:00.706" endtime="20210730 13:53:00.709"/>
</iter>
<iter>
<var name="${pid}">14690</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:00.713" level="INFO">Running command 'kill 14690 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:00.710" endtime="20210730 13:53:00.714"/>
</kw>
<status status="PASS" starttime="20210730 13:53:00.709" endtime="20210730 13:53:00.714"/>
</iter>
<status status="PASS" starttime="20210730 13:53:00.702" endtime="20210730 13:53:00.714"/>
</for>
<status status="PASS" starttime="20210730 13:53:00.701" endtime="20210730 13:53:00.714"/>
</branch>
<status status="PASS" starttime="20210730 13:53:00.701" endtime="20210730 13:53:00.714"/>
</if>
<status status="PASS" starttime="20210730 13:53:00.683" endtime="20210730 13:53:00.714"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcdefghjklmnprstoöuüvyz'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:52:59.106" endtime="20210730 13:53:00.714">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t48" name="With Each Valid Token, Updating Password Of Each System User With ABCDEFG Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:00.724" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:00.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:00.733" level="INFO">${pids} = 14719</msg>
<status status="PASS" starttime="20210730 13:53:00.717" endtime="20210730 13:53:00.733"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:00.734" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:00.734" endtime="20210730 13:53:00.734"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:00.735" level="INFO">${pids} = ['14719']</msg>
<status status="PASS" starttime="20210730 13:53:00.734" endtime="20210730 13:53:00.735"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14719</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:00.738" level="INFO">Running command 'kill 14719 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:00.735" endtime="20210730 13:53:00.739"/>
</kw>
<status status="PASS" starttime="20210730 13:53:00.735" endtime="20210730 13:53:00.739"/>
</iter>
<status status="PASS" starttime="20210730 13:53:00.735" endtime="20210730 13:53:00.739"/>
</for>
<status status="PASS" starttime="20210730 13:53:00.734" endtime="20210730 13:53:00.739"/>
</branch>
<status status="PASS" starttime="20210730 13:53:00.734" endtime="20210730 13:53:00.739"/>
</if>
<status status="PASS" starttime="20210730 13:53:00.717" endtime="20210730 13:53:00.739"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:00.741" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:00.740" endtime="20210730 13:53:00.741"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:00.741" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:00.741" endtime="20210730 13:53:00.741"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:00.742" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:00.741" endtime="20210730 13:53:00.742"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:00.742" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:00.742" endtime="20210730 13:53:00.742"/>
</kw>
<msg timestamp="20210730 13:53:00.742" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:00.741" endtime="20210730 13:53:00.742"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:00.746" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:00.743" endtime="20210730 13:53:00.750"/>
</kw>
<status status="PASS" starttime="20210730 13:53:00.740" endtime="20210730 13:53:00.750"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:00.752" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:00.751" endtime="20210730 13:53:00.758"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:02.262" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:00.759" endtime="20210730 13:53:02.262"/>
</kw>
<status status="PASS" starttime="20210730 13:53:00.751" endtime="20210730 13:53:02.263"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:02.264" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:02.263" endtime="20210730 13:53:02.264"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:02.264" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:02.264" endtime="20210730 13:53:02.264"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:02.264" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:02.264" endtime="20210730 13:53:02.264"/>
</kw>
<msg timestamp="20210730 13:53:02.265" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:02.263" endtime="20210730 13:53:02.265"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:02.265" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:02.265" endtime="20210730 13:53:02.266"/>
</kw>
<status status="PASS" starttime="20210730 13:53:02.263" endtime="20210730 13:53:02.266"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:02.266" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:02.266" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:02.266" endtime="20210730 13:53:02.267"/>
</kw>
<status status="PASS" starttime="20210730 13:53:02.266" endtime="20210730 13:53:02.267"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:02.267" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:02.268" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:02.267" endtime="20210730 13:53:02.268"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:02.268" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:02.268" endtime="20210730 13:53:02.268"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:02.269" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:02.268" endtime="20210730 13:53:02.269"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:02.269" endtime="20210730 13:53:02.270"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:02.270" endtime="20210730 13:53:02.270"/>
</kw>
<status status="PASS" starttime="20210730 13:53:02.268" endtime="20210730 13:53:02.270"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:02.270" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:02.270" endtime="20210730 13:53:02.270"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:02.271" endtime="20210730 13:53:02.272"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:02.272" endtime="20210730 13:53:02.273"/>
</kw>
<status status="PASS" starttime="20210730 13:53:02.270" endtime="20210730 13:53:02.273"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:02.273" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:02.273" endtime="20210730 13:53:02.273"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:02.273" endtime="20210730 13:53:02.274"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:02.275" endtime="20210730 13:53:02.275"/>
</kw>
<status status="PASS" starttime="20210730 13:53:02.273" endtime="20210730 13:53:02.275"/>
</iter>
<status status="PASS" starttime="20210730 13:53:02.268" endtime="20210730 13:53:02.275"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:02.275" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:02.275" endtime="20210730 13:53:02.275"/>
</kw>
<status status="PASS" starttime="20210730 13:53:02.267" endtime="20210730 13:53:02.276"/>
</kw>
<status status="PASS" starttime="20210730 13:53:00.717" endtime="20210730 13:53:02.276"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCDEFG</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:02.277" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:02.277" endtime="20210730 13:53:02.277"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:02.278" level="INFO">${payload} = {'password': 'ABCDEFG'}</msg>
<status status="PASS" starttime="20210730 13:53:02.278" endtime="20210730 13:53:02.278"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:02.288" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:02.288" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:02.278" endtime="20210730 13:53:02.288"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:02.288" endtime="20210730 13:53:02.288"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:02.288" endtime="20210730 13:53:02.288"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:02.278" endtime="20210730 13:53:02.288"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:02.278" endtime="20210730 13:53:02.288"/>
</for>
<status status="FAIL" starttime="20210730 13:53:02.276" endtime="20210730 13:53:02.289"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:02.276" endtime="20210730 13:53:02.289"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCDEFG</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:02.291" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:02.290" endtime="20210730 13:53:02.291"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:02.291" level="INFO">${payload} = {'password': 'ABCDEFG'}</msg>
<status status="PASS" starttime="20210730 13:53:02.291" endtime="20210730 13:53:02.291"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:02.296" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:02.296" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:02.292" endtime="20210730 13:53:02.296"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:02.296" endtime="20210730 13:53:02.296"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:02.297" endtime="20210730 13:53:02.297"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:02.292" endtime="20210730 13:53:02.297"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:02.291" endtime="20210730 13:53:02.297"/>
</for>
<status status="FAIL" starttime="20210730 13:53:02.289" endtime="20210730 13:53:02.297"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:02.289" endtime="20210730 13:53:02.297"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCDEFG</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:02.298" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:02.297" endtime="20210730 13:53:02.298"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:02.298" level="INFO">${payload} = {'password': 'ABCDEFG'}</msg>
<status status="PASS" starttime="20210730 13:53:02.298" endtime="20210730 13:53:02.298"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:02.302" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:02.302" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:02.299" endtime="20210730 13:53:02.302"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:02.302" endtime="20210730 13:53:02.303"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:02.303" endtime="20210730 13:53:02.303"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:02.298" endtime="20210730 13:53:02.303"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:02.298" endtime="20210730 13:53:02.303"/>
</for>
<status status="FAIL" starttime="20210730 13:53:02.297" endtime="20210730 13:53:02.303"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:02.297" endtime="20210730 13:53:02.303"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:02.276" endtime="20210730 13:53:02.303"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:02.308" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:02.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:02.318" level="INFO">${pids} = 14742
14749
14755</msg>
<status status="PASS" starttime="20210730 13:53:02.304" endtime="20210730 13:53:02.318"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:02.319" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:02.318" endtime="20210730 13:53:02.319"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:02.320" level="INFO">${pids} = ['14742', '14749', '14755']</msg>
<status status="PASS" starttime="20210730 13:53:02.319" endtime="20210730 13:53:02.320"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14742</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:02.324" level="INFO">Running command 'kill 14742 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:02.320" endtime="20210730 13:53:02.324"/>
</kw>
<status status="PASS" starttime="20210730 13:53:02.320" endtime="20210730 13:53:02.324"/>
</iter>
<iter>
<var name="${pid}">14749</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:02.328" level="INFO">Running command 'kill 14749 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:02.325" endtime="20210730 13:53:02.328"/>
</kw>
<status status="PASS" starttime="20210730 13:53:02.324" endtime="20210730 13:53:02.328"/>
</iter>
<iter>
<var name="${pid}">14755</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:02.331" level="INFO">Running command 'kill 14755 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:02.329" endtime="20210730 13:53:02.332"/>
</kw>
<status status="PASS" starttime="20210730 13:53:02.328" endtime="20210730 13:53:02.332"/>
</iter>
<status status="PASS" starttime="20210730 13:53:02.320" endtime="20210730 13:53:02.332"/>
</for>
<status status="PASS" starttime="20210730 13:53:02.319" endtime="20210730 13:53:02.332"/>
</branch>
<status status="PASS" starttime="20210730 13:53:02.319" endtime="20210730 13:53:02.332"/>
</if>
<status status="PASS" starttime="20210730 13:53:02.303" endtime="20210730 13:53:02.332"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCDEFG'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:00.715" endtime="20210730 13:53:02.333">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t49" name="With Each Valid Token, Updating Password Of Each System User With ABCDEFGH Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:02.339" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:02.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:02.351" level="INFO">${pids} = 14784</msg>
<status status="PASS" starttime="20210730 13:53:02.336" endtime="20210730 13:53:02.351"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:02.352" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:02.351" endtime="20210730 13:53:02.352"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:02.353" level="INFO">${pids} = ['14784']</msg>
<status status="PASS" starttime="20210730 13:53:02.352" endtime="20210730 13:53:02.353"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14784</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:02.357" level="INFO">Running command 'kill 14784 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:02.353" endtime="20210730 13:53:02.357"/>
</kw>
<status status="PASS" starttime="20210730 13:53:02.353" endtime="20210730 13:53:02.357"/>
</iter>
<status status="PASS" starttime="20210730 13:53:02.353" endtime="20210730 13:53:02.357"/>
</for>
<status status="PASS" starttime="20210730 13:53:02.352" endtime="20210730 13:53:02.357"/>
</branch>
<status status="PASS" starttime="20210730 13:53:02.352" endtime="20210730 13:53:02.358"/>
</if>
<status status="PASS" starttime="20210730 13:53:02.335" endtime="20210730 13:53:02.358"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:02.359" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:02.359" endtime="20210730 13:53:02.359"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:02.359" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:02.359" endtime="20210730 13:53:02.360"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:02.360" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:02.360" endtime="20210730 13:53:02.360"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:02.360" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:02.360" endtime="20210730 13:53:02.360"/>
</kw>
<msg timestamp="20210730 13:53:02.361" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:02.359" endtime="20210730 13:53:02.361"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:02.367" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:02.361" endtime="20210730 13:53:02.374"/>
</kw>
<status status="PASS" starttime="20210730 13:53:02.358" endtime="20210730 13:53:02.375"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:02.376" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:02.375" endtime="20210730 13:53:02.379"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:03.883" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:02.380" endtime="20210730 13:53:03.883"/>
</kw>
<status status="PASS" starttime="20210730 13:53:02.375" endtime="20210730 13:53:03.883"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:03.884" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:03.884" endtime="20210730 13:53:03.884"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:03.885" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:03.885" endtime="20210730 13:53:03.885"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:03.886" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:03.885" endtime="20210730 13:53:03.886"/>
</kw>
<msg timestamp="20210730 13:53:03.886" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:03.884" endtime="20210730 13:53:03.886"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:03.886" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:03.886" endtime="20210730 13:53:03.887"/>
</kw>
<status status="PASS" starttime="20210730 13:53:03.883" endtime="20210730 13:53:03.887"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:03.887" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:03.887" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:03.887" endtime="20210730 13:53:03.887"/>
</kw>
<status status="PASS" starttime="20210730 13:53:03.887" endtime="20210730 13:53:03.887"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:03.888" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:03.888" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:03.888" endtime="20210730 13:53:03.888"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:03.888" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:03.888" endtime="20210730 13:53:03.888"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:03.889" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:03.889" endtime="20210730 13:53:03.889"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:03.889" endtime="20210730 13:53:03.890"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:03.891" endtime="20210730 13:53:03.891"/>
</kw>
<status status="PASS" starttime="20210730 13:53:03.889" endtime="20210730 13:53:03.891"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:03.891" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:03.891" endtime="20210730 13:53:03.891"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:03.892" endtime="20210730 13:53:03.892"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:03.892" endtime="20210730 13:53:03.893"/>
</kw>
<status status="PASS" starttime="20210730 13:53:03.891" endtime="20210730 13:53:03.893"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:03.893" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:03.893" endtime="20210730 13:53:03.893"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:03.893" endtime="20210730 13:53:03.894"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:03.894" endtime="20210730 13:53:03.894"/>
</kw>
<status status="PASS" starttime="20210730 13:53:03.893" endtime="20210730 13:53:03.894"/>
</iter>
<status status="PASS" starttime="20210730 13:53:03.888" endtime="20210730 13:53:03.894"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:03.895" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:03.894" endtime="20210730 13:53:03.895"/>
</kw>
<status status="PASS" starttime="20210730 13:53:03.888" endtime="20210730 13:53:03.895"/>
</kw>
<status status="PASS" starttime="20210730 13:53:02.335" endtime="20210730 13:53:03.895"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCDEFGH</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:03.896" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:03.896" endtime="20210730 13:53:03.896"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:03.897" level="INFO">${payload} = {'password': 'ABCDEFGH'}</msg>
<status status="PASS" starttime="20210730 13:53:03.896" endtime="20210730 13:53:03.897"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:03.905" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:03.905" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:03.897" endtime="20210730 13:53:03.905"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:03.906" endtime="20210730 13:53:03.906"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:03.906" endtime="20210730 13:53:03.906"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:03.897" endtime="20210730 13:53:03.906"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:03.897" endtime="20210730 13:53:03.906"/>
</for>
<status status="FAIL" starttime="20210730 13:53:03.895" endtime="20210730 13:53:03.906"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:03.895" endtime="20210730 13:53:03.906"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCDEFGH</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:03.907" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:03.907" endtime="20210730 13:53:03.907"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:03.907" level="INFO">${payload} = {'password': 'ABCDEFGH'}</msg>
<status status="PASS" starttime="20210730 13:53:03.907" endtime="20210730 13:53:03.907"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:03.912" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:03.912" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:03.908" endtime="20210730 13:53:03.912"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:03.912" endtime="20210730 13:53:03.912"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:03.912" endtime="20210730 13:53:03.912"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:03.908" endtime="20210730 13:53:03.912"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:03.908" endtime="20210730 13:53:03.912"/>
</for>
<status status="FAIL" starttime="20210730 13:53:03.906" endtime="20210730 13:53:03.912"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:03.906" endtime="20210730 13:53:03.912"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCDEFGH</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:03.914" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:03.913" endtime="20210730 13:53:03.914"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:03.914" level="INFO">${payload} = {'password': 'ABCDEFGH'}</msg>
<status status="PASS" starttime="20210730 13:53:03.914" endtime="20210730 13:53:03.914"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:03.918" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:03.918" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:03.914" endtime="20210730 13:53:03.918"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:03.919" endtime="20210730 13:53:03.919"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:03.919" endtime="20210730 13:53:03.919"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:03.914" endtime="20210730 13:53:03.919"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:03.914" endtime="20210730 13:53:03.919"/>
</for>
<status status="FAIL" starttime="20210730 13:53:03.913" endtime="20210730 13:53:03.919"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:03.912" endtime="20210730 13:53:03.919"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:03.895" endtime="20210730 13:53:03.919"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:03.924" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:03.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:03.936" level="INFO">${pids} = 14807
14814
14820</msg>
<status status="PASS" starttime="20210730 13:53:03.920" endtime="20210730 13:53:03.936"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:03.936" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:03.936" endtime="20210730 13:53:03.936"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:03.937" level="INFO">${pids} = ['14807', '14814', '14820']</msg>
<status status="PASS" starttime="20210730 13:53:03.937" endtime="20210730 13:53:03.937"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14807</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:03.941" level="INFO">Running command 'kill 14807 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:03.937" endtime="20210730 13:53:03.942"/>
</kw>
<status status="PASS" starttime="20210730 13:53:03.937" endtime="20210730 13:53:03.942"/>
</iter>
<iter>
<var name="${pid}">14814</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:03.946" level="INFO">Running command 'kill 14814 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:03.943" endtime="20210730 13:53:03.946"/>
</kw>
<status status="PASS" starttime="20210730 13:53:03.943" endtime="20210730 13:53:03.946"/>
</iter>
<iter>
<var name="${pid}">14820</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:03.950" level="INFO">Running command 'kill 14820 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:03.947" endtime="20210730 13:53:03.951"/>
</kw>
<status status="PASS" starttime="20210730 13:53:03.947" endtime="20210730 13:53:03.951"/>
</iter>
<status status="PASS" starttime="20210730 13:53:03.937" endtime="20210730 13:53:03.951"/>
</for>
<status status="PASS" starttime="20210730 13:53:03.937" endtime="20210730 13:53:03.951"/>
</branch>
<status status="PASS" starttime="20210730 13:53:03.937" endtime="20210730 13:53:03.951"/>
</if>
<status status="PASS" starttime="20210730 13:53:03.919" endtime="20210730 13:53:03.952"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCDEFGH'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:02.334" endtime="20210730 13:53:03.952">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t50" name="With Each Valid Token, Updating Password Of Each System User With ABCDEFGHJKLMNPRSTOÖUÜVYZ Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:03.962" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:03.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:03.971" level="INFO">${pids} = 14849</msg>
<status status="PASS" starttime="20210730 13:53:03.954" endtime="20210730 13:53:03.971"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:03.972" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:03.971" endtime="20210730 13:53:03.972"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:03.973" level="INFO">${pids} = ['14849']</msg>
<status status="PASS" starttime="20210730 13:53:03.972" endtime="20210730 13:53:03.973"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14849</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:03.987" level="INFO">Running command 'kill 14849 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:03.973" endtime="20210730 13:53:03.988"/>
</kw>
<status status="PASS" starttime="20210730 13:53:03.973" endtime="20210730 13:53:03.988"/>
</iter>
<status status="PASS" starttime="20210730 13:53:03.973" endtime="20210730 13:53:03.988"/>
</for>
<status status="PASS" starttime="20210730 13:53:03.972" endtime="20210730 13:53:03.988"/>
</branch>
<status status="PASS" starttime="20210730 13:53:03.972" endtime="20210730 13:53:03.988"/>
</if>
<status status="PASS" starttime="20210730 13:53:03.954" endtime="20210730 13:53:03.988"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:03.990" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:03.989" endtime="20210730 13:53:03.990"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:03.991" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:03.990" endtime="20210730 13:53:03.991"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:03.992" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:03.991" endtime="20210730 13:53:03.992"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:03.993" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:03.992" endtime="20210730 13:53:03.993"/>
</kw>
<msg timestamp="20210730 13:53:03.994" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:03.990" endtime="20210730 13:53:03.994"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:03.999" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:03.994" endtime="20210730 13:53:04.000"/>
</kw>
<status status="PASS" starttime="20210730 13:53:03.989" endtime="20210730 13:53:04.001"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:04.002" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:04.002" endtime="20210730 13:53:04.006"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:05.526" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:04.007" endtime="20210730 13:53:05.526"/>
</kw>
<status status="PASS" starttime="20210730 13:53:04.001" endtime="20210730 13:53:05.527"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:05.528" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:05.527" endtime="20210730 13:53:05.528"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:05.528" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:05.528" endtime="20210730 13:53:05.528"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:05.528" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:05.528" endtime="20210730 13:53:05.528"/>
</kw>
<msg timestamp="20210730 13:53:05.528" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:05.527" endtime="20210730 13:53:05.529"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:05.529" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:05.529" endtime="20210730 13:53:05.529"/>
</kw>
<status status="PASS" starttime="20210730 13:53:05.527" endtime="20210730 13:53:05.529"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:05.530" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:05.530" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:05.530" endtime="20210730 13:53:05.530"/>
</kw>
<status status="PASS" starttime="20210730 13:53:05.530" endtime="20210730 13:53:05.530"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:05.531" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:05.531" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:05.531" endtime="20210730 13:53:05.531"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:05.531" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:05.531" endtime="20210730 13:53:05.531"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:05.532" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:05.532" endtime="20210730 13:53:05.532"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:05.532" endtime="20210730 13:53:05.533"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:05.533" endtime="20210730 13:53:05.533"/>
</kw>
<status status="PASS" starttime="20210730 13:53:05.532" endtime="20210730 13:53:05.533"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:05.534" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:05.533" endtime="20210730 13:53:05.534"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:05.534" endtime="20210730 13:53:05.534"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:05.535" endtime="20210730 13:53:05.535"/>
</kw>
<status status="PASS" starttime="20210730 13:53:05.533" endtime="20210730 13:53:05.535"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:05.535" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:05.535" endtime="20210730 13:53:05.535"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:05.535" endtime="20210730 13:53:05.536"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:05.536" endtime="20210730 13:53:05.536"/>
</kw>
<status status="PASS" starttime="20210730 13:53:05.535" endtime="20210730 13:53:05.536"/>
</iter>
<status status="PASS" starttime="20210730 13:53:05.531" endtime="20210730 13:53:05.536"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:05.537" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:05.537" endtime="20210730 13:53:05.537"/>
</kw>
<status status="PASS" starttime="20210730 13:53:05.530" endtime="20210730 13:53:05.537"/>
</kw>
<status status="PASS" starttime="20210730 13:53:03.953" endtime="20210730 13:53:05.537"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCDEFGHJKLMNPRSTOÖUÜVYZ</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:05.539" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:05.538" endtime="20210730 13:53:05.539"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:05.539" level="INFO">${payload} = {'password': 'ABCDEFGHJKLMNPRSTOÖUÜVYZ'}</msg>
<status status="PASS" starttime="20210730 13:53:05.539" endtime="20210730 13:53:05.539"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:05.549" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:05.550" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:05.539" endtime="20210730 13:53:05.550"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:05.550" endtime="20210730 13:53:05.551"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:05.551" endtime="20210730 13:53:05.551"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:05.539" endtime="20210730 13:53:05.551"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:05.539" endtime="20210730 13:53:05.551"/>
</for>
<status status="FAIL" starttime="20210730 13:53:05.538" endtime="20210730 13:53:05.551"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:05.538" endtime="20210730 13:53:05.551"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCDEFGHJKLMNPRSTOÖUÜVYZ</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:05.553" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:05.553" endtime="20210730 13:53:05.553"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:05.554" level="INFO">${payload} = {'password': 'ABCDEFGHJKLMNPRSTOÖUÜVYZ'}</msg>
<status status="PASS" starttime="20210730 13:53:05.554" endtime="20210730 13:53:05.554"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:05.559" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:05.560" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:05.554" endtime="20210730 13:53:05.560"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:05.560" endtime="20210730 13:53:05.560"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:05.560" endtime="20210730 13:53:05.560"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:05.554" endtime="20210730 13:53:05.560"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:05.554" endtime="20210730 13:53:05.560"/>
</for>
<status status="FAIL" starttime="20210730 13:53:05.552" endtime="20210730 13:53:05.561"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:05.552" endtime="20210730 13:53:05.561"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCDEFGHJKLMNPRSTOÖUÜVYZ</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:05.562" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:05.562" endtime="20210730 13:53:05.562"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:05.563" level="INFO">${payload} = {'password': 'ABCDEFGHJKLMNPRSTOÖUÜVYZ'}</msg>
<status status="PASS" starttime="20210730 13:53:05.562" endtime="20210730 13:53:05.563"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:05.567" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:05.567" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:05.563" endtime="20210730 13:53:05.567"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:05.568" endtime="20210730 13:53:05.568"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:05.568" endtime="20210730 13:53:05.568"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:05.563" endtime="20210730 13:53:05.568"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:05.563" endtime="20210730 13:53:05.568"/>
</for>
<status status="FAIL" starttime="20210730 13:53:05.561" endtime="20210730 13:53:05.568"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:05.561" endtime="20210730 13:53:05.568"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:05.537" endtime="20210730 13:53:05.568"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:05.574" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:05.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:05.584" level="INFO">${pids} = 14872
14879
14884</msg>
<status status="PASS" starttime="20210730 13:53:05.569" endtime="20210730 13:53:05.584"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:05.585" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:05.584" endtime="20210730 13:53:05.585"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:05.586" level="INFO">${pids} = ['14872', '14879', '14884']</msg>
<status status="PASS" starttime="20210730 13:53:05.585" endtime="20210730 13:53:05.586"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14872</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:05.589" level="INFO">Running command 'kill 14872 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:05.586" endtime="20210730 13:53:05.589"/>
</kw>
<status status="PASS" starttime="20210730 13:53:05.586" endtime="20210730 13:53:05.589"/>
</iter>
<iter>
<var name="${pid}">14879</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:05.594" level="INFO">Running command 'kill 14879 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:05.590" endtime="20210730 13:53:05.594"/>
</kw>
<status status="PASS" starttime="20210730 13:53:05.590" endtime="20210730 13:53:05.594"/>
</iter>
<iter>
<var name="${pid}">14884</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:05.601" level="INFO">Running command 'kill 14884 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:05.595" endtime="20210730 13:53:05.602"/>
</kw>
<status status="PASS" starttime="20210730 13:53:05.594" endtime="20210730 13:53:05.602"/>
</iter>
<status status="PASS" starttime="20210730 13:53:05.586" endtime="20210730 13:53:05.602"/>
</for>
<status status="PASS" starttime="20210730 13:53:05.585" endtime="20210730 13:53:05.602"/>
</branch>
<status status="PASS" starttime="20210730 13:53:05.585" endtime="20210730 13:53:05.602"/>
</if>
<status status="PASS" starttime="20210730 13:53:05.568" endtime="20210730 13:53:05.602"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCDEFGHJKLMNPRSTOÖUÜVYZ'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:03.952" endtime="20210730 13:53:05.603">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t51" name="With Each Valid Token, Updating Password Of Each System User With 0123456 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:05.609" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:05.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:05.619" level="INFO">${pids} = 14913</msg>
<status status="PASS" starttime="20210730 13:53:05.606" endtime="20210730 13:53:05.619"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:05.620" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:05.619" endtime="20210730 13:53:05.620"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:05.620" level="INFO">${pids} = ['14913']</msg>
<status status="PASS" starttime="20210730 13:53:05.620" endtime="20210730 13:53:05.620"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14913</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:05.624" level="INFO">Running command 'kill 14913 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:05.621" endtime="20210730 13:53:05.625"/>
</kw>
<status status="PASS" starttime="20210730 13:53:05.621" endtime="20210730 13:53:05.625"/>
</iter>
<status status="PASS" starttime="20210730 13:53:05.620" endtime="20210730 13:53:05.625"/>
</for>
<status status="PASS" starttime="20210730 13:53:05.620" endtime="20210730 13:53:05.625"/>
</branch>
<status status="PASS" starttime="20210730 13:53:05.620" endtime="20210730 13:53:05.625"/>
</if>
<status status="PASS" starttime="20210730 13:53:05.605" endtime="20210730 13:53:05.625"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:05.626" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:05.626" endtime="20210730 13:53:05.626"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:05.627" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:05.627" endtime="20210730 13:53:05.627"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:05.628" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:05.628" endtime="20210730 13:53:05.628"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:05.628" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:05.628" endtime="20210730 13:53:05.628"/>
</kw>
<msg timestamp="20210730 13:53:05.629" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:05.627" endtime="20210730 13:53:05.629"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:05.634" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:05.629" endtime="20210730 13:53:05.636"/>
</kw>
<status status="PASS" starttime="20210730 13:53:05.626" endtime="20210730 13:53:05.636"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:05.638" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:05.637" endtime="20210730 13:53:05.642"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:07.148" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:05.642" endtime="20210730 13:53:07.149"/>
</kw>
<status status="PASS" starttime="20210730 13:53:05.637" endtime="20210730 13:53:07.149"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:07.151" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:07.150" endtime="20210730 13:53:07.151"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:07.152" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:07.151" endtime="20210730 13:53:07.152"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:07.152" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:07.152" endtime="20210730 13:53:07.152"/>
</kw>
<msg timestamp="20210730 13:53:07.152" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:07.150" endtime="20210730 13:53:07.152"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:07.153" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:07.152" endtime="20210730 13:53:07.153"/>
</kw>
<status status="PASS" starttime="20210730 13:53:07.149" endtime="20210730 13:53:07.153"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:07.154" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:07.154" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:07.154" endtime="20210730 13:53:07.154"/>
</kw>
<status status="PASS" starttime="20210730 13:53:07.153" endtime="20210730 13:53:07.154"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:07.155" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:07.155" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:07.154" endtime="20210730 13:53:07.155"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:07.155" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:07.155" endtime="20210730 13:53:07.155"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:07.156" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:07.155" endtime="20210730 13:53:07.156"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:07.156" endtime="20210730 13:53:07.157"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:07.157" endtime="20210730 13:53:07.157"/>
</kw>
<status status="PASS" starttime="20210730 13:53:07.155" endtime="20210730 13:53:07.157"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:07.158" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:07.157" endtime="20210730 13:53:07.158"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:07.158" endtime="20210730 13:53:07.159"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:07.159" endtime="20210730 13:53:07.159"/>
</kw>
<status status="PASS" starttime="20210730 13:53:07.157" endtime="20210730 13:53:07.159"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:07.159" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:07.159" endtime="20210730 13:53:07.159"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:07.159" endtime="20210730 13:53:07.160"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:07.160" endtime="20210730 13:53:07.160"/>
</kw>
<status status="PASS" starttime="20210730 13:53:07.159" endtime="20210730 13:53:07.160"/>
</iter>
<status status="PASS" starttime="20210730 13:53:07.155" endtime="20210730 13:53:07.160"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:07.161" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:07.161" endtime="20210730 13:53:07.161"/>
</kw>
<status status="PASS" starttime="20210730 13:53:07.154" endtime="20210730 13:53:07.161"/>
</kw>
<status status="PASS" starttime="20210730 13:53:05.605" endtime="20210730 13:53:07.161"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=0123456</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:07.162" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:07.162" endtime="20210730 13:53:07.162"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:07.163" level="INFO">${payload} = {'password': '0123456'}</msg>
<status status="PASS" starttime="20210730 13:53:07.162" endtime="20210730 13:53:07.163"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:07.172" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:07.172" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:07.163" endtime="20210730 13:53:07.172"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:07.172" endtime="20210730 13:53:07.172"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:07.173" endtime="20210730 13:53:07.173"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:07.163" endtime="20210730 13:53:07.173"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:07.163" endtime="20210730 13:53:07.173"/>
</for>
<status status="FAIL" starttime="20210730 13:53:07.162" endtime="20210730 13:53:07.173"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:07.161" endtime="20210730 13:53:07.173"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=0123456</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:07.175" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:07.174" endtime="20210730 13:53:07.175"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:07.175" level="INFO">${payload} = {'password': '0123456'}</msg>
<status status="PASS" starttime="20210730 13:53:07.175" endtime="20210730 13:53:07.175"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:07.179" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:07.179" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:07.175" endtime="20210730 13:53:07.179"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:07.179" endtime="20210730 13:53:07.179"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:07.180" endtime="20210730 13:53:07.180"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:07.175" endtime="20210730 13:53:07.180"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:07.175" endtime="20210730 13:53:07.180"/>
</for>
<status status="FAIL" starttime="20210730 13:53:07.173" endtime="20210730 13:53:07.180"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:07.173" endtime="20210730 13:53:07.180"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=0123456</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:07.181" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:07.180" endtime="20210730 13:53:07.181"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:07.181" level="INFO">${payload} = {'password': '0123456'}</msg>
<status status="PASS" starttime="20210730 13:53:07.181" endtime="20210730 13:53:07.181"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:07.185" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:07.186" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:07.182" endtime="20210730 13:53:07.186"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:07.186" endtime="20210730 13:53:07.186"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:07.186" endtime="20210730 13:53:07.186"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:07.182" endtime="20210730 13:53:07.186"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:07.181" endtime="20210730 13:53:07.186"/>
</for>
<status status="FAIL" starttime="20210730 13:53:07.180" endtime="20210730 13:53:07.186"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:07.180" endtime="20210730 13:53:07.186"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:07.161" endtime="20210730 13:53:07.186"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:07.191" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:07.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:07.201" level="INFO">${pids} = 14936
14943
14947</msg>
<status status="PASS" starttime="20210730 13:53:07.187" endtime="20210730 13:53:07.201"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:07.202" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:07.202" endtime="20210730 13:53:07.202"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:07.203" level="INFO">${pids} = ['14936', '14943', '14947']</msg>
<status status="PASS" starttime="20210730 13:53:07.202" endtime="20210730 13:53:07.203"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14936</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:07.206" level="INFO">Running command 'kill 14936 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:07.203" endtime="20210730 13:53:07.207"/>
</kw>
<status status="PASS" starttime="20210730 13:53:07.203" endtime="20210730 13:53:07.207"/>
</iter>
<iter>
<var name="${pid}">14943</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:07.210" level="INFO">Running command 'kill 14943 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:07.207" endtime="20210730 13:53:07.210"/>
</kw>
<status status="PASS" starttime="20210730 13:53:07.207" endtime="20210730 13:53:07.210"/>
</iter>
<iter>
<var name="${pid}">14947</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:07.214" level="INFO">Running command 'kill 14947 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:07.211" endtime="20210730 13:53:07.214"/>
</kw>
<status status="PASS" starttime="20210730 13:53:07.211" endtime="20210730 13:53:07.214"/>
</iter>
<status status="PASS" starttime="20210730 13:53:07.203" endtime="20210730 13:53:07.214"/>
</for>
<status status="PASS" starttime="20210730 13:53:07.202" endtime="20210730 13:53:07.215"/>
</branch>
<status status="PASS" starttime="20210730 13:53:07.202" endtime="20210730 13:53:07.215"/>
</if>
<status status="PASS" starttime="20210730 13:53:07.187" endtime="20210730 13:53:07.215"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": '0123456'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:05.604" endtime="20210730 13:53:07.215">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t52" name="With Each Valid Token, Updating Password Of Each System User With 01234567 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:07.227" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:07.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:07.240" level="INFO">${pids} = 14976</msg>
<status status="PASS" starttime="20210730 13:53:07.218" endtime="20210730 13:53:07.240"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:07.240" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:07.240" endtime="20210730 13:53:07.240"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:07.241" level="INFO">${pids} = ['14976']</msg>
<status status="PASS" starttime="20210730 13:53:07.241" endtime="20210730 13:53:07.241"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14976</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:07.258" level="INFO">Running command 'kill 14976 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:07.243" endtime="20210730 13:53:07.258"/>
</kw>
<status status="PASS" starttime="20210730 13:53:07.242" endtime="20210730 13:53:07.258"/>
</iter>
<status status="PASS" starttime="20210730 13:53:07.241" endtime="20210730 13:53:07.259"/>
</for>
<status status="PASS" starttime="20210730 13:53:07.241" endtime="20210730 13:53:07.259"/>
</branch>
<status status="PASS" starttime="20210730 13:53:07.241" endtime="20210730 13:53:07.259"/>
</if>
<status status="PASS" starttime="20210730 13:53:07.217" endtime="20210730 13:53:07.259"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:07.261" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:07.260" endtime="20210730 13:53:07.261"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:07.261" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:07.261" endtime="20210730 13:53:07.261"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:07.262" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:07.261" endtime="20210730 13:53:07.262"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:07.262" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:07.262" endtime="20210730 13:53:07.262"/>
</kw>
<msg timestamp="20210730 13:53:07.262" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:07.261" endtime="20210730 13:53:07.262"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:07.265" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:07.262" endtime="20210730 13:53:07.267"/>
</kw>
<status status="PASS" starttime="20210730 13:53:07.260" endtime="20210730 13:53:07.267"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:07.268" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:07.268" endtime="20210730 13:53:07.272"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:08.774" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:07.273" endtime="20210730 13:53:08.775"/>
</kw>
<status status="PASS" starttime="20210730 13:53:07.267" endtime="20210730 13:53:08.775"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:08.776" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:08.776" endtime="20210730 13:53:08.776"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:08.777" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:08.776" endtime="20210730 13:53:08.777"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:08.777" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:08.777" endtime="20210730 13:53:08.777"/>
</kw>
<msg timestamp="20210730 13:53:08.777" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:08.776" endtime="20210730 13:53:08.777"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:08.778" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:08.777" endtime="20210730 13:53:08.778"/>
</kw>
<status status="PASS" starttime="20210730 13:53:08.775" endtime="20210730 13:53:08.778"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:08.779" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:08.779" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:08.778" endtime="20210730 13:53:08.779"/>
</kw>
<status status="PASS" starttime="20210730 13:53:08.778" endtime="20210730 13:53:08.779"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:08.780" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:08.780" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:08.779" endtime="20210730 13:53:08.780"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:08.780" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:08.780" endtime="20210730 13:53:08.780"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:08.781" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:08.780" endtime="20210730 13:53:08.781"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:08.781" endtime="20210730 13:53:08.782"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:08.782" endtime="20210730 13:53:08.783"/>
</kw>
<status status="PASS" starttime="20210730 13:53:08.780" endtime="20210730 13:53:08.783"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:08.783" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:08.783" endtime="20210730 13:53:08.783"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:08.784" endtime="20210730 13:53:08.784"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:08.784" endtime="20210730 13:53:08.785"/>
</kw>
<status status="PASS" starttime="20210730 13:53:08.783" endtime="20210730 13:53:08.785"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:08.785" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:08.785" endtime="20210730 13:53:08.785"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:08.785" endtime="20210730 13:53:08.786"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:08.786" endtime="20210730 13:53:08.786"/>
</kw>
<status status="PASS" starttime="20210730 13:53:08.785" endtime="20210730 13:53:08.786"/>
</iter>
<status status="PASS" starttime="20210730 13:53:08.780" endtime="20210730 13:53:08.786"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:08.787" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:08.786" endtime="20210730 13:53:08.787"/>
</kw>
<status status="PASS" starttime="20210730 13:53:08.779" endtime="20210730 13:53:08.787"/>
</kw>
<status status="PASS" starttime="20210730 13:53:07.217" endtime="20210730 13:53:08.787"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=01234567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:08.788" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:08.788" endtime="20210730 13:53:08.788"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:08.789" level="INFO">${payload} = {'password': '01234567'}</msg>
<status status="PASS" starttime="20210730 13:53:08.788" endtime="20210730 13:53:08.789"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:08.799" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:08.799" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:08.789" endtime="20210730 13:53:08.799"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:08.800" endtime="20210730 13:53:08.800"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:08.800" endtime="20210730 13:53:08.800"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:08.789" endtime="20210730 13:53:08.800"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:08.789" endtime="20210730 13:53:08.800"/>
</for>
<status status="FAIL" starttime="20210730 13:53:08.787" endtime="20210730 13:53:08.800"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:08.787" endtime="20210730 13:53:08.800"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=01234567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:08.801" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:08.801" endtime="20210730 13:53:08.801"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:08.801" level="INFO">${payload} = {'password': '01234567'}</msg>
<status status="PASS" starttime="20210730 13:53:08.801" endtime="20210730 13:53:08.801"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:08.806" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:08.806" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:08.802" endtime="20210730 13:53:08.806"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:08.806" endtime="20210730 13:53:08.806"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:08.806" endtime="20210730 13:53:08.806"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:08.802" endtime="20210730 13:53:08.806"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:08.802" endtime="20210730 13:53:08.806"/>
</for>
<status status="FAIL" starttime="20210730 13:53:08.800" endtime="20210730 13:53:08.806"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:08.800" endtime="20210730 13:53:08.806"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=01234567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:08.807" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:08.807" endtime="20210730 13:53:08.807"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:08.808" level="INFO">${payload} = {'password': '01234567'}</msg>
<status status="PASS" starttime="20210730 13:53:08.807" endtime="20210730 13:53:08.808"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:08.812" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:08.812" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:08.808" endtime="20210730 13:53:08.812"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:08.812" endtime="20210730 13:53:08.812"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:08.812" endtime="20210730 13:53:08.812"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:08.808" endtime="20210730 13:53:08.812"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:08.808" endtime="20210730 13:53:08.812"/>
</for>
<status status="FAIL" starttime="20210730 13:53:08.807" endtime="20210730 13:53:08.812"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:08.806" endtime="20210730 13:53:08.812"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:08.787" endtime="20210730 13:53:08.812"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:08.818" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:08.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:08.829" level="INFO">${pids} = 14999
15006
15010</msg>
<status status="PASS" starttime="20210730 13:53:08.813" endtime="20210730 13:53:08.829"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:08.830" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:08.829" endtime="20210730 13:53:08.830"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:08.830" level="INFO">${pids} = ['14999', '15006', '15010']</msg>
<status status="PASS" starttime="20210730 13:53:08.830" endtime="20210730 13:53:08.830"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14999</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:08.834" level="INFO">Running command 'kill 14999 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:08.831" endtime="20210730 13:53:08.834"/>
</kw>
<status status="PASS" starttime="20210730 13:53:08.831" endtime="20210730 13:53:08.834"/>
</iter>
<iter>
<var name="${pid}">15006</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:08.837" level="INFO">Running command 'kill 15006 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:08.835" endtime="20210730 13:53:08.839"/>
</kw>
<status status="PASS" starttime="20210730 13:53:08.834" endtime="20210730 13:53:08.839"/>
</iter>
<iter>
<var name="${pid}">15010</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:08.843" level="INFO">Running command 'kill 15010 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:08.840" endtime="20210730 13:53:08.844"/>
</kw>
<status status="PASS" starttime="20210730 13:53:08.839" endtime="20210730 13:53:08.844"/>
</iter>
<status status="PASS" starttime="20210730 13:53:08.830" endtime="20210730 13:53:08.844"/>
</for>
<status status="PASS" starttime="20210730 13:53:08.830" endtime="20210730 13:53:08.844"/>
</branch>
<status status="PASS" starttime="20210730 13:53:08.830" endtime="20210730 13:53:08.844"/>
</if>
<status status="PASS" starttime="20210730 13:53:08.813" endtime="20210730 13:53:08.844"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": '01234567'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:07.216" endtime="20210730 13:53:08.844">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t53" name="With Each Valid Token, Updating Password Of Each System User With 01234567890123456789 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:08.853" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:08.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:08.863" level="INFO">${pids} = 15039</msg>
<status status="PASS" starttime="20210730 13:53:08.846" endtime="20210730 13:53:08.863"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:08.864" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:08.863" endtime="20210730 13:53:08.864"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:08.864" level="INFO">${pids} = ['15039']</msg>
<status status="PASS" starttime="20210730 13:53:08.864" endtime="20210730 13:53:08.864"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15039</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:08.868" level="INFO">Running command 'kill 15039 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:08.865" endtime="20210730 13:53:08.868"/>
</kw>
<status status="PASS" starttime="20210730 13:53:08.865" endtime="20210730 13:53:08.868"/>
</iter>
<status status="PASS" starttime="20210730 13:53:08.864" endtime="20210730 13:53:08.868"/>
</for>
<status status="PASS" starttime="20210730 13:53:08.864" endtime="20210730 13:53:08.868"/>
</branch>
<status status="PASS" starttime="20210730 13:53:08.864" endtime="20210730 13:53:08.868"/>
</if>
<status status="PASS" starttime="20210730 13:53:08.846" endtime="20210730 13:53:08.869"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:08.870" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:08.869" endtime="20210730 13:53:08.870"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:08.870" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:08.870" endtime="20210730 13:53:08.870"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:08.871" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:08.870" endtime="20210730 13:53:08.871"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:08.871" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:08.871" endtime="20210730 13:53:08.871"/>
</kw>
<msg timestamp="20210730 13:53:08.871" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:08.870" endtime="20210730 13:53:08.871"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:08.875" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:08.871" endtime="20210730 13:53:08.878"/>
</kw>
<status status="PASS" starttime="20210730 13:53:08.869" endtime="20210730 13:53:08.878"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:08.879" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:08.879" endtime="20210730 13:53:08.885"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:10.387" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:08.885" endtime="20210730 13:53:10.387"/>
</kw>
<status status="PASS" starttime="20210730 13:53:08.878" endtime="20210730 13:53:10.387"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:10.389" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:10.388" endtime="20210730 13:53:10.389"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:10.389" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:10.389" endtime="20210730 13:53:10.389"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:10.389" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:10.389" endtime="20210730 13:53:10.390"/>
</kw>
<msg timestamp="20210730 13:53:10.390" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:10.388" endtime="20210730 13:53:10.390"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:10.391" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:10.390" endtime="20210730 13:53:10.391"/>
</kw>
<status status="PASS" starttime="20210730 13:53:10.388" endtime="20210730 13:53:10.392"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:10.392" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:10.392" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:10.392" endtime="20210730 13:53:10.393"/>
</kw>
<status status="PASS" starttime="20210730 13:53:10.392" endtime="20210730 13:53:10.393"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:10.393" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:10.393" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:10.393" endtime="20210730 13:53:10.394"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:10.394" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:10.394" endtime="20210730 13:53:10.394"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:10.395" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:10.394" endtime="20210730 13:53:10.395"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:10.395" endtime="20210730 13:53:10.396"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:10.396" endtime="20210730 13:53:10.396"/>
</kw>
<status status="PASS" starttime="20210730 13:53:10.394" endtime="20210730 13:53:10.396"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:10.397" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:10.397" endtime="20210730 13:53:10.397"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:10.397" endtime="20210730 13:53:10.398"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:10.398" endtime="20210730 13:53:10.398"/>
</kw>
<status status="PASS" starttime="20210730 13:53:10.396" endtime="20210730 13:53:10.398"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:10.398" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:10.398" endtime="20210730 13:53:10.398"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:10.399" endtime="20210730 13:53:10.399"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:10.399" endtime="20210730 13:53:10.401"/>
</kw>
<status status="PASS" starttime="20210730 13:53:10.398" endtime="20210730 13:53:10.401"/>
</iter>
<status status="PASS" starttime="20210730 13:53:10.394" endtime="20210730 13:53:10.401"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:10.402" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:10.401" endtime="20210730 13:53:10.402"/>
</kw>
<status status="PASS" starttime="20210730 13:53:10.393" endtime="20210730 13:53:10.402"/>
</kw>
<status status="PASS" starttime="20210730 13:53:08.846" endtime="20210730 13:53:10.402"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=01234567890123456789</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:10.403" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:10.403" endtime="20210730 13:53:10.403"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:10.404" level="INFO">${payload} = {'password': '01234567890123456789'}</msg>
<status status="PASS" starttime="20210730 13:53:10.403" endtime="20210730 13:53:10.404"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:10.412" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:10.413" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:10.404" endtime="20210730 13:53:10.413"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:10.413" endtime="20210730 13:53:10.413"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:10.413" endtime="20210730 13:53:10.413"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:10.404" endtime="20210730 13:53:10.413"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:10.404" endtime="20210730 13:53:10.414"/>
</for>
<status status="FAIL" starttime="20210730 13:53:10.403" endtime="20210730 13:53:10.414"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:10.402" endtime="20210730 13:53:10.414"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=01234567890123456789</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:10.415" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:10.415" endtime="20210730 13:53:10.415"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:10.416" level="INFO">${payload} = {'password': '01234567890123456789'}</msg>
<status status="PASS" starttime="20210730 13:53:10.415" endtime="20210730 13:53:10.416"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:10.421" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:10.421" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:10.416" endtime="20210730 13:53:10.421"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:10.421" endtime="20210730 13:53:10.421"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:10.421" endtime="20210730 13:53:10.421"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:10.416" endtime="20210730 13:53:10.422"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:10.416" endtime="20210730 13:53:10.422"/>
</for>
<status status="FAIL" starttime="20210730 13:53:10.414" endtime="20210730 13:53:10.422"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:10.414" endtime="20210730 13:53:10.422"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=01234567890123456789</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:10.423" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:10.423" endtime="20210730 13:53:10.423"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:10.424" level="INFO">${payload} = {'password': '01234567890123456789'}</msg>
<status status="PASS" starttime="20210730 13:53:10.423" endtime="20210730 13:53:10.424"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:10.428" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:10.428" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:10.424" endtime="20210730 13:53:10.428"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:10.428" endtime="20210730 13:53:10.428"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:10.429" endtime="20210730 13:53:10.429"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:10.424" endtime="20210730 13:53:10.429"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:10.424" endtime="20210730 13:53:10.429"/>
</for>
<status status="FAIL" starttime="20210730 13:53:10.422" endtime="20210730 13:53:10.429"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:10.422" endtime="20210730 13:53:10.429"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:10.402" endtime="20210730 13:53:10.429"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:10.434" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:10.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:10.444" level="INFO">${pids} = 15062
15069
15074</msg>
<status status="PASS" starttime="20210730 13:53:10.430" endtime="20210730 13:53:10.444"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:10.445" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:10.444" endtime="20210730 13:53:10.445"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:10.446" level="INFO">${pids} = ['15062', '15069', '15074']</msg>
<status status="PASS" starttime="20210730 13:53:10.445" endtime="20210730 13:53:10.446"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15062</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:10.470" level="INFO">Running command 'kill 15062 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:10.467" endtime="20210730 13:53:10.471"/>
</kw>
<status status="PASS" starttime="20210730 13:53:10.446" endtime="20210730 13:53:10.471"/>
</iter>
<iter>
<var name="${pid}">15069</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:10.475" level="INFO">Running command 'kill 15069 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:10.471" endtime="20210730 13:53:10.476"/>
</kw>
<status status="PASS" starttime="20210730 13:53:10.471" endtime="20210730 13:53:10.476"/>
</iter>
<iter>
<var name="${pid}">15074</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:10.479" level="INFO">Running command 'kill 15074 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:10.476" endtime="20210730 13:53:10.480"/>
</kw>
<status status="PASS" starttime="20210730 13:53:10.476" endtime="20210730 13:53:10.480"/>
</iter>
<status status="PASS" starttime="20210730 13:53:10.446" endtime="20210730 13:53:10.480"/>
</for>
<status status="PASS" starttime="20210730 13:53:10.445" endtime="20210730 13:53:10.480"/>
</branch>
<status status="PASS" starttime="20210730 13:53:10.445" endtime="20210730 13:53:10.480"/>
</if>
<status status="PASS" starttime="20210730 13:53:10.429" endtime="20210730 13:53:10.480"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": '01234567890123456789'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:08.845" endtime="20210730 13:53:10.480">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t54" name="With Each Valid Token, Updating Password Of Each System User With !?.?!.! Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:10.486" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:10.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:10.498" level="INFO">${pids} = 15103</msg>
<status status="PASS" starttime="20210730 13:53:10.483" endtime="20210730 13:53:10.498"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:10.499" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:10.499" endtime="20210730 13:53:10.499"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:10.500" level="INFO">${pids} = ['15103']</msg>
<status status="PASS" starttime="20210730 13:53:10.500" endtime="20210730 13:53:10.500"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15103</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:10.503" level="INFO">Running command 'kill 15103 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:10.500" endtime="20210730 13:53:10.504"/>
</kw>
<status status="PASS" starttime="20210730 13:53:10.500" endtime="20210730 13:53:10.504"/>
</iter>
<status status="PASS" starttime="20210730 13:53:10.500" endtime="20210730 13:53:10.504"/>
</for>
<status status="PASS" starttime="20210730 13:53:10.499" endtime="20210730 13:53:10.504"/>
</branch>
<status status="PASS" starttime="20210730 13:53:10.499" endtime="20210730 13:53:10.504"/>
</if>
<status status="PASS" starttime="20210730 13:53:10.483" endtime="20210730 13:53:10.504"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:10.505" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:10.505" endtime="20210730 13:53:10.505"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:10.506" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:10.506" endtime="20210730 13:53:10.506"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:10.506" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:10.506" endtime="20210730 13:53:10.506"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:10.507" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:10.506" endtime="20210730 13:53:10.507"/>
</kw>
<msg timestamp="20210730 13:53:10.507" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:10.505" endtime="20210730 13:53:10.507"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:10.512" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:10.507" endtime="20210730 13:53:10.514"/>
</kw>
<status status="PASS" starttime="20210730 13:53:10.504" endtime="20210730 13:53:10.514"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:10.525" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:10.524" endtime="20210730 13:53:10.533"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:12.034" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:10.533" endtime="20210730 13:53:12.034"/>
</kw>
<status status="PASS" starttime="20210730 13:53:10.523" endtime="20210730 13:53:12.034"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:12.036" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:12.035" endtime="20210730 13:53:12.036"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:12.036" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:12.036" endtime="20210730 13:53:12.036"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:12.036" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:12.036" endtime="20210730 13:53:12.036"/>
</kw>
<msg timestamp="20210730 13:53:12.037" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:12.035" endtime="20210730 13:53:12.037"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:12.037" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:12.037" endtime="20210730 13:53:12.037"/>
</kw>
<status status="PASS" starttime="20210730 13:53:12.035" endtime="20210730 13:53:12.038"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:12.038" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:12.038" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:12.038" endtime="20210730 13:53:12.038"/>
</kw>
<status status="PASS" starttime="20210730 13:53:12.038" endtime="20210730 13:53:12.038"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:12.039" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:12.039" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:12.039" endtime="20210730 13:53:12.039"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:12.039" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:12.039" endtime="20210730 13:53:12.039"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:12.040" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:12.040" endtime="20210730 13:53:12.040"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:12.040" endtime="20210730 13:53:12.041"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:12.042" endtime="20210730 13:53:12.042"/>
</kw>
<status status="PASS" starttime="20210730 13:53:12.040" endtime="20210730 13:53:12.042"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:12.042" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:12.042" endtime="20210730 13:53:12.042"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:12.043" endtime="20210730 13:53:12.043"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:12.043" endtime="20210730 13:53:12.043"/>
</kw>
<status status="PASS" starttime="20210730 13:53:12.042" endtime="20210730 13:53:12.044"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:12.044" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:12.044" endtime="20210730 13:53:12.044"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:12.044" endtime="20210730 13:53:12.045"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:12.045" endtime="20210730 13:53:12.045"/>
</kw>
<status status="PASS" starttime="20210730 13:53:12.044" endtime="20210730 13:53:12.045"/>
</iter>
<status status="PASS" starttime="20210730 13:53:12.039" endtime="20210730 13:53:12.045"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:12.046" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:12.045" endtime="20210730 13:53:12.046"/>
</kw>
<status status="PASS" starttime="20210730 13:53:12.038" endtime="20210730 13:53:12.046"/>
</kw>
<status status="PASS" starttime="20210730 13:53:10.483" endtime="20210730 13:53:12.046"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=!?.?!.!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:12.047" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:12.047" endtime="20210730 13:53:12.047"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:12.048" level="INFO">${payload} = {'password': '!?.?!.!'}</msg>
<status status="PASS" starttime="20210730 13:53:12.047" endtime="20210730 13:53:12.048"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:12.057" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:12.058" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:12.048" endtime="20210730 13:53:12.058"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:12.058" endtime="20210730 13:53:12.058"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:12.058" endtime="20210730 13:53:12.058"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:12.048" endtime="20210730 13:53:12.058"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:12.048" endtime="20210730 13:53:12.059"/>
</for>
<status status="FAIL" starttime="20210730 13:53:12.046" endtime="20210730 13:53:12.059"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:12.046" endtime="20210730 13:53:12.059"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=!?.?!.!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:12.060" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:12.060" endtime="20210730 13:53:12.060"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:12.060" level="INFO">${payload} = {'password': '!?.?!.!'}</msg>
<status status="PASS" starttime="20210730 13:53:12.060" endtime="20210730 13:53:12.060"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:12.065" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:12.065" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:12.061" endtime="20210730 13:53:12.065"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:12.065" endtime="20210730 13:53:12.066"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:12.066" endtime="20210730 13:53:12.066"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:12.060" endtime="20210730 13:53:12.066"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:12.060" endtime="20210730 13:53:12.066"/>
</for>
<status status="FAIL" starttime="20210730 13:53:12.059" endtime="20210730 13:53:12.066"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:12.059" endtime="20210730 13:53:12.066"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=!?.?!.!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:12.067" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:12.067" endtime="20210730 13:53:12.067"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:12.067" level="INFO">${payload} = {'password': '!?.?!.!'}</msg>
<status status="PASS" starttime="20210730 13:53:12.067" endtime="20210730 13:53:12.067"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:12.071" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:12.071" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:12.068" endtime="20210730 13:53:12.071"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:12.071" endtime="20210730 13:53:12.071"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:12.072" endtime="20210730 13:53:12.072"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:12.067" endtime="20210730 13:53:12.072"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:12.067" endtime="20210730 13:53:12.072"/>
</for>
<status status="FAIL" starttime="20210730 13:53:12.066" endtime="20210730 13:53:12.072"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:12.066" endtime="20210730 13:53:12.072"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:12.046" endtime="20210730 13:53:12.072"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:12.076" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:12.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:12.087" level="INFO">${pids} = 15126
15133
15137</msg>
<status status="PASS" starttime="20210730 13:53:12.073" endtime="20210730 13:53:12.087"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:12.088" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:12.087" endtime="20210730 13:53:12.088"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:12.088" level="INFO">${pids} = ['15126', '15133', '15137']</msg>
<status status="PASS" starttime="20210730 13:53:12.088" endtime="20210730 13:53:12.088"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15126</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:12.093" level="INFO">Running command 'kill 15126 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:12.089" endtime="20210730 13:53:12.093"/>
</kw>
<status status="PASS" starttime="20210730 13:53:12.089" endtime="20210730 13:53:12.094"/>
</iter>
<iter>
<var name="${pid}">15133</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:12.097" level="INFO">Running command 'kill 15133 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:12.094" endtime="20210730 13:53:12.097"/>
</kw>
<status status="PASS" starttime="20210730 13:53:12.094" endtime="20210730 13:53:12.097"/>
</iter>
<iter>
<var name="${pid}">15137</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:12.101" level="INFO">Running command 'kill 15137 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:12.098" endtime="20210730 13:53:12.101"/>
</kw>
<status status="PASS" starttime="20210730 13:53:12.097" endtime="20210730 13:53:12.102"/>
</iter>
<status status="PASS" starttime="20210730 13:53:12.089" endtime="20210730 13:53:12.102"/>
</for>
<status status="PASS" starttime="20210730 13:53:12.088" endtime="20210730 13:53:12.102"/>
</branch>
<status status="PASS" starttime="20210730 13:53:12.088" endtime="20210730 13:53:12.102"/>
</if>
<status status="PASS" starttime="20210730 13:53:12.073" endtime="20210730 13:53:12.102"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": '!?.?!.!'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:10.481" endtime="20210730 13:53:12.102">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t55" name="With Each Valid Token, Updating Password Of Each System User With !?.?!.!? Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:12.109" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:12.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:12.119" level="INFO">${pids} = 15166</msg>
<status status="PASS" starttime="20210730 13:53:12.104" endtime="20210730 13:53:12.119"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:12.120" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:12.120" endtime="20210730 13:53:12.120"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:12.121" level="INFO">${pids} = ['15166']</msg>
<status status="PASS" starttime="20210730 13:53:12.120" endtime="20210730 13:53:12.121"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15166</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:12.125" level="INFO">Running command 'kill 15166 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:12.121" endtime="20210730 13:53:12.125"/>
</kw>
<status status="PASS" starttime="20210730 13:53:12.121" endtime="20210730 13:53:12.125"/>
</iter>
<status status="PASS" starttime="20210730 13:53:12.121" endtime="20210730 13:53:12.125"/>
</for>
<status status="PASS" starttime="20210730 13:53:12.120" endtime="20210730 13:53:12.126"/>
</branch>
<status status="PASS" starttime="20210730 13:53:12.120" endtime="20210730 13:53:12.126"/>
</if>
<status status="PASS" starttime="20210730 13:53:12.104" endtime="20210730 13:53:12.126"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:12.127" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:12.127" endtime="20210730 13:53:12.127"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:12.128" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:12.127" endtime="20210730 13:53:12.128"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:12.128" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:12.128" endtime="20210730 13:53:12.128"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:12.128" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:12.128" endtime="20210730 13:53:12.128"/>
</kw>
<msg timestamp="20210730 13:53:12.128" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:12.127" endtime="20210730 13:53:12.129"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:12.131" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:12.129" endtime="20210730 13:53:12.133"/>
</kw>
<status status="PASS" starttime="20210730 13:53:12.126" endtime="20210730 13:53:12.133"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:12.134" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:12.134" endtime="20210730 13:53:12.144"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:13.649" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:12.145" endtime="20210730 13:53:13.650"/>
</kw>
<status status="PASS" starttime="20210730 13:53:12.133" endtime="20210730 13:53:13.650"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:13.652" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:13.651" endtime="20210730 13:53:13.652"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:13.652" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:13.652" endtime="20210730 13:53:13.652"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:13.653" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:13.652" endtime="20210730 13:53:13.653"/>
</kw>
<msg timestamp="20210730 13:53:13.653" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:13.651" endtime="20210730 13:53:13.653"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:13.654" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:13.653" endtime="20210730 13:53:13.654"/>
</kw>
<status status="PASS" starttime="20210730 13:53:13.650" endtime="20210730 13:53:13.654"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:13.655" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:13.655" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:13.655" endtime="20210730 13:53:13.655"/>
</kw>
<status status="PASS" starttime="20210730 13:53:13.654" endtime="20210730 13:53:13.655"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:13.656" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:13.656" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:13.655" endtime="20210730 13:53:13.656"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:13.656" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:13.656" endtime="20210730 13:53:13.656"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:13.657" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:13.656" endtime="20210730 13:53:13.657"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:13.657" endtime="20210730 13:53:13.658"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:13.658" endtime="20210730 13:53:13.658"/>
</kw>
<status status="PASS" starttime="20210730 13:53:13.656" endtime="20210730 13:53:13.658"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:13.658" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:13.658" endtime="20210730 13:53:13.658"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:13.659" endtime="20210730 13:53:13.660"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:13.660" endtime="20210730 13:53:13.660"/>
</kw>
<status status="PASS" starttime="20210730 13:53:13.658" endtime="20210730 13:53:13.660"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:13.660" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:13.660" endtime="20210730 13:53:13.660"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:13.660" endtime="20210730 13:53:13.661"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:13.661" endtime="20210730 13:53:13.661"/>
</kw>
<status status="PASS" starttime="20210730 13:53:13.660" endtime="20210730 13:53:13.662"/>
</iter>
<status status="PASS" starttime="20210730 13:53:13.656" endtime="20210730 13:53:13.662"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:13.662" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:13.662" endtime="20210730 13:53:13.662"/>
</kw>
<status status="PASS" starttime="20210730 13:53:13.655" endtime="20210730 13:53:13.662"/>
</kw>
<status status="PASS" starttime="20210730 13:53:12.103" endtime="20210730 13:53:13.662"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=!?.?!.!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:13.663" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:13.663" endtime="20210730 13:53:13.663"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:13.664" level="INFO">${payload} = {'password': '!?.?!.!?'}</msg>
<status status="PASS" starttime="20210730 13:53:13.664" endtime="20210730 13:53:13.664"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:13.673" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:13.673" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:13.664" endtime="20210730 13:53:13.673"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:13.674" endtime="20210730 13:53:13.674"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:13.674" endtime="20210730 13:53:13.674"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:13.664" endtime="20210730 13:53:13.674"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:13.664" endtime="20210730 13:53:13.674"/>
</for>
<status status="FAIL" starttime="20210730 13:53:13.663" endtime="20210730 13:53:13.674"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:13.663" endtime="20210730 13:53:13.674"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=!?.?!.!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:13.675" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:13.675" endtime="20210730 13:53:13.675"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:13.676" level="INFO">${payload} = {'password': '!?.?!.!?'}</msg>
<status status="PASS" starttime="20210730 13:53:13.676" endtime="20210730 13:53:13.676"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:13.680" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:13.680" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:13.676" endtime="20210730 13:53:13.680"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:13.681" endtime="20210730 13:53:13.681"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:13.681" endtime="20210730 13:53:13.681"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:13.676" endtime="20210730 13:53:13.681"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:13.676" endtime="20210730 13:53:13.681"/>
</for>
<status status="FAIL" starttime="20210730 13:53:13.674" endtime="20210730 13:53:13.681"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:13.674" endtime="20210730 13:53:13.681"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=!?.?!.!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:13.682" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:13.682" endtime="20210730 13:53:13.682"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:13.683" level="INFO">${payload} = {'password': '!?.?!.!?'}</msg>
<status status="PASS" starttime="20210730 13:53:13.682" endtime="20210730 13:53:13.683"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:13.687" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:13.687" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:13.683" endtime="20210730 13:53:13.687"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:13.688" endtime="20210730 13:53:13.688"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:13.688" endtime="20210730 13:53:13.688"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:13.683" endtime="20210730 13:53:13.688"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:13.683" endtime="20210730 13:53:13.688"/>
</for>
<status status="FAIL" starttime="20210730 13:53:13.681" endtime="20210730 13:53:13.688"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:13.681" endtime="20210730 13:53:13.688"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:13.662" endtime="20210730 13:53:13.688"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:13.694" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:13.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:13.705" level="INFO">${pids} = 15189
15196
15200</msg>
<status status="PASS" starttime="20210730 13:53:13.689" endtime="20210730 13:53:13.705"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:13.706" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:13.705" endtime="20210730 13:53:13.706"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:13.707" level="INFO">${pids} = ['15189', '15196', '15200']</msg>
<status status="PASS" starttime="20210730 13:53:13.706" endtime="20210730 13:53:13.707"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15189</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:13.711" level="INFO">Running command 'kill 15189 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:13.707" endtime="20210730 13:53:13.711"/>
</kw>
<status status="PASS" starttime="20210730 13:53:13.707" endtime="20210730 13:53:13.711"/>
</iter>
<iter>
<var name="${pid}">15196</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:13.716" level="INFO">Running command 'kill 15196 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:13.712" endtime="20210730 13:53:13.716"/>
</kw>
<status status="PASS" starttime="20210730 13:53:13.711" endtime="20210730 13:53:13.716"/>
</iter>
<iter>
<var name="${pid}">15200</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:13.723" level="INFO">Running command 'kill 15200 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:13.717" endtime="20210730 13:53:13.724"/>
</kw>
<status status="PASS" starttime="20210730 13:53:13.716" endtime="20210730 13:53:13.724"/>
</iter>
<status status="PASS" starttime="20210730 13:53:13.707" endtime="20210730 13:53:13.724"/>
</for>
<status status="PASS" starttime="20210730 13:53:13.706" endtime="20210730 13:53:13.724"/>
</branch>
<status status="PASS" starttime="20210730 13:53:13.706" endtime="20210730 13:53:13.724"/>
</if>
<status status="PASS" starttime="20210730 13:53:13.689" endtime="20210730 13:53:13.724"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": '!?.?!.!?'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:12.103" endtime="20210730 13:53:13.725">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t56" name="With Each Valid Token, Updating Password Of Each System User With !?.?!.!?!?.?!.!?!.!. Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:13.730" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:13.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:13.741" level="INFO">${pids} = 15229</msg>
<status status="PASS" starttime="20210730 13:53:13.727" endtime="20210730 13:53:13.741"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:13.742" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:13.741" endtime="20210730 13:53:13.742"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:13.742" level="INFO">${pids} = ['15229']</msg>
<status status="PASS" starttime="20210730 13:53:13.742" endtime="20210730 13:53:13.743"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15229</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:13.746" level="INFO">Running command 'kill 15229 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:13.743" endtime="20210730 13:53:13.746"/>
</kw>
<status status="PASS" starttime="20210730 13:53:13.743" endtime="20210730 13:53:13.746"/>
</iter>
<status status="PASS" starttime="20210730 13:53:13.743" endtime="20210730 13:53:13.746"/>
</for>
<status status="PASS" starttime="20210730 13:53:13.742" endtime="20210730 13:53:13.746"/>
</branch>
<status status="PASS" starttime="20210730 13:53:13.742" endtime="20210730 13:53:13.746"/>
</if>
<status status="PASS" starttime="20210730 13:53:13.727" endtime="20210730 13:53:13.746"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:13.747" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:13.747" endtime="20210730 13:53:13.747"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:13.748" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:13.748" endtime="20210730 13:53:13.748"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:13.748" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:13.748" endtime="20210730 13:53:13.748"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:13.749" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:13.749" endtime="20210730 13:53:13.749"/>
</kw>
<msg timestamp="20210730 13:53:13.749" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:13.747" endtime="20210730 13:53:13.749"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:13.759" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:13.749" endtime="20210730 13:53:13.761"/>
</kw>
<status status="PASS" starttime="20210730 13:53:13.747" endtime="20210730 13:53:13.761"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:13.763" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:13.762" endtime="20210730 13:53:13.766"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:15.268" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:13.767" endtime="20210730 13:53:15.268"/>
</kw>
<status status="PASS" starttime="20210730 13:53:13.762" endtime="20210730 13:53:15.268"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:15.269" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:15.269" endtime="20210730 13:53:15.269"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:15.270" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:15.270" endtime="20210730 13:53:15.270"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:15.270" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:15.270" endtime="20210730 13:53:15.270"/>
</kw>
<msg timestamp="20210730 13:53:15.270" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:15.269" endtime="20210730 13:53:15.270"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:15.271" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:15.270" endtime="20210730 13:53:15.271"/>
</kw>
<status status="PASS" starttime="20210730 13:53:15.268" endtime="20210730 13:53:15.271"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:15.272" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:15.272" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:15.272" endtime="20210730 13:53:15.273"/>
</kw>
<status status="PASS" starttime="20210730 13:53:15.271" endtime="20210730 13:53:15.273"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:15.274" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:15.274" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:15.273" endtime="20210730 13:53:15.274"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:15.274" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:15.274" endtime="20210730 13:53:15.274"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:15.275" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:15.274" endtime="20210730 13:53:15.275"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:15.275" endtime="20210730 13:53:15.275"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:15.276" endtime="20210730 13:53:15.276"/>
</kw>
<status status="PASS" starttime="20210730 13:53:15.274" endtime="20210730 13:53:15.276"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:15.276" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:15.276" endtime="20210730 13:53:15.276"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:15.276" endtime="20210730 13:53:15.277"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:15.277" endtime="20210730 13:53:15.277"/>
</kw>
<status status="PASS" starttime="20210730 13:53:15.276" endtime="20210730 13:53:15.277"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:15.278" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:15.277" endtime="20210730 13:53:15.278"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:15.278" endtime="20210730 13:53:15.278"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:15.279" endtime="20210730 13:53:15.279"/>
</kw>
<status status="PASS" starttime="20210730 13:53:15.277" endtime="20210730 13:53:15.279"/>
</iter>
<status status="PASS" starttime="20210730 13:53:15.274" endtime="20210730 13:53:15.279"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:15.279" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:15.279" endtime="20210730 13:53:15.279"/>
</kw>
<status status="PASS" starttime="20210730 13:53:15.273" endtime="20210730 13:53:15.279"/>
</kw>
<status status="PASS" starttime="20210730 13:53:13.726" endtime="20210730 13:53:15.279"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=!?.?!.!?!?.?!.!?!.!.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:15.281" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:15.280" endtime="20210730 13:53:15.281"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:15.281" level="INFO">${payload} = {'password': '!?.?!.!?!?.?!.!?!.!.'}</msg>
<status status="PASS" starttime="20210730 13:53:15.281" endtime="20210730 13:53:15.281"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:15.291" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:15.292" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:15.281" endtime="20210730 13:53:15.292"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:15.292" endtime="20210730 13:53:15.292"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:15.292" endtime="20210730 13:53:15.292"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:15.281" endtime="20210730 13:53:15.292"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:15.281" endtime="20210730 13:53:15.293"/>
</for>
<status status="FAIL" starttime="20210730 13:53:15.280" endtime="20210730 13:53:15.293"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:15.280" endtime="20210730 13:53:15.293"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=!?.?!.!?!?.?!.!?!.!.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:15.294" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:15.294" endtime="20210730 13:53:15.294"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:15.295" level="INFO">${payload} = {'password': '!?.?!.!?!?.?!.!?!.!.'}</msg>
<status status="PASS" starttime="20210730 13:53:15.294" endtime="20210730 13:53:15.295"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:15.299" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:15.299" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:15.295" endtime="20210730 13:53:15.299"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:15.299" endtime="20210730 13:53:15.299"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:15.299" endtime="20210730 13:53:15.299"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:15.295" endtime="20210730 13:53:15.299"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:15.295" endtime="20210730 13:53:15.299"/>
</for>
<status status="FAIL" starttime="20210730 13:53:15.293" endtime="20210730 13:53:15.299"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:15.293" endtime="20210730 13:53:15.299"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=!?.?!.!?!?.?!.!?!.!.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:15.300" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:15.300" endtime="20210730 13:53:15.300"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:15.301" level="INFO">${payload} = {'password': '!?.?!.!?!?.?!.!?!.!.'}</msg>
<status status="PASS" starttime="20210730 13:53:15.300" endtime="20210730 13:53:15.301"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:15.305" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:15.305" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:15.301" endtime="20210730 13:53:15.305"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:15.305" endtime="20210730 13:53:15.305"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:15.305" endtime="20210730 13:53:15.305"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:15.301" endtime="20210730 13:53:15.306"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:15.301" endtime="20210730 13:53:15.306"/>
</for>
<status status="FAIL" starttime="20210730 13:53:15.300" endtime="20210730 13:53:15.306"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:15.299" endtime="20210730 13:53:15.306"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:15.280" endtime="20210730 13:53:15.306"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:15.311" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:15.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:15.320" level="INFO">${pids} = 15252
15259
15264</msg>
<status status="PASS" starttime="20210730 13:53:15.307" endtime="20210730 13:53:15.320"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:15.321" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:15.320" endtime="20210730 13:53:15.321"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:15.322" level="INFO">${pids} = ['15252', '15259', '15264']</msg>
<status status="PASS" starttime="20210730 13:53:15.321" endtime="20210730 13:53:15.322"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15252</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:15.326" level="INFO">Running command 'kill 15252 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:15.323" endtime="20210730 13:53:15.327"/>
</kw>
<status status="PASS" starttime="20210730 13:53:15.322" endtime="20210730 13:53:15.327"/>
</iter>
<iter>
<var name="${pid}">15259</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:15.329" level="INFO">Running command 'kill 15259 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:15.327" endtime="20210730 13:53:15.330"/>
</kw>
<status status="PASS" starttime="20210730 13:53:15.327" endtime="20210730 13:53:15.330"/>
</iter>
<iter>
<var name="${pid}">15264</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:15.334" level="INFO">Running command 'kill 15264 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:15.330" endtime="20210730 13:53:15.334"/>
</kw>
<status status="PASS" starttime="20210730 13:53:15.330" endtime="20210730 13:53:15.334"/>
</iter>
<status status="PASS" starttime="20210730 13:53:15.322" endtime="20210730 13:53:15.334"/>
</for>
<status status="PASS" starttime="20210730 13:53:15.321" endtime="20210730 13:53:15.334"/>
</branch>
<status status="PASS" starttime="20210730 13:53:15.321" endtime="20210730 13:53:15.334"/>
</if>
<status status="PASS" starttime="20210730 13:53:15.306" endtime="20210730 13:53:15.335"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": '!?.?!.!?!?.?!.!?!.!.'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:13.726" endtime="20210730 13:53:15.335">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t57" name="With Each Valid Token, Updating Password Of Each System User With abcdABC Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:15.341" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:15.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:15.352" level="INFO">${pids} = 15293</msg>
<status status="PASS" starttime="20210730 13:53:15.337" endtime="20210730 13:53:15.352"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:15.353" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:15.353" endtime="20210730 13:53:15.353"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:15.354" level="INFO">${pids} = ['15293']</msg>
<status status="PASS" starttime="20210730 13:53:15.353" endtime="20210730 13:53:15.354"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15293</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:15.359" level="INFO">Running command 'kill 15293 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:15.354" endtime="20210730 13:53:15.360"/>
</kw>
<status status="PASS" starttime="20210730 13:53:15.354" endtime="20210730 13:53:15.360"/>
</iter>
<status status="PASS" starttime="20210730 13:53:15.354" endtime="20210730 13:53:15.360"/>
</for>
<status status="PASS" starttime="20210730 13:53:15.353" endtime="20210730 13:53:15.360"/>
</branch>
<status status="PASS" starttime="20210730 13:53:15.353" endtime="20210730 13:53:15.360"/>
</if>
<status status="PASS" starttime="20210730 13:53:15.336" endtime="20210730 13:53:15.361"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:15.362" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:15.361" endtime="20210730 13:53:15.362"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:15.362" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:15.362" endtime="20210730 13:53:15.362"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:15.363" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:15.363" endtime="20210730 13:53:15.363"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:15.363" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:15.363" endtime="20210730 13:53:15.363"/>
</kw>
<msg timestamp="20210730 13:53:15.363" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:15.362" endtime="20210730 13:53:15.363"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:15.374" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:15.363" endtime="20210730 13:53:15.376"/>
</kw>
<status status="PASS" starttime="20210730 13:53:15.361" endtime="20210730 13:53:15.376"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:15.377" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:15.377" endtime="20210730 13:53:15.381"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:16.886" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:15.382" endtime="20210730 13:53:16.886"/>
</kw>
<status status="PASS" starttime="20210730 13:53:15.377" endtime="20210730 13:53:16.887"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:16.888" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:16.888" endtime="20210730 13:53:16.888"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:16.888" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:16.888" endtime="20210730 13:53:16.888"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:16.889" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:16.888" endtime="20210730 13:53:16.889"/>
</kw>
<msg timestamp="20210730 13:53:16.889" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:16.887" endtime="20210730 13:53:16.889"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:16.890" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:16.889" endtime="20210730 13:53:16.890"/>
</kw>
<status status="PASS" starttime="20210730 13:53:16.887" endtime="20210730 13:53:16.890"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:16.891" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:16.891" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:16.891" endtime="20210730 13:53:16.892"/>
</kw>
<status status="PASS" starttime="20210730 13:53:16.891" endtime="20210730 13:53:16.892"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:16.893" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:16.893" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:16.892" endtime="20210730 13:53:16.893"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:16.893" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:16.893" endtime="20210730 13:53:16.893"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:16.894" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:16.894" endtime="20210730 13:53:16.894"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:16.894" endtime="20210730 13:53:16.895"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:16.895" endtime="20210730 13:53:16.895"/>
</kw>
<status status="PASS" starttime="20210730 13:53:16.894" endtime="20210730 13:53:16.895"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:16.895" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:16.895" endtime="20210730 13:53:16.895"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:16.896" endtime="20210730 13:53:16.896"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:16.896" endtime="20210730 13:53:16.897"/>
</kw>
<status status="PASS" starttime="20210730 13:53:16.895" endtime="20210730 13:53:16.897"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:16.897" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:16.897" endtime="20210730 13:53:16.897"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:16.897" endtime="20210730 13:53:16.898"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:16.898" endtime="20210730 13:53:16.898"/>
</kw>
<status status="PASS" starttime="20210730 13:53:16.897" endtime="20210730 13:53:16.898"/>
</iter>
<status status="PASS" starttime="20210730 13:53:16.893" endtime="20210730 13:53:16.898"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:16.899" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:16.898" endtime="20210730 13:53:16.899"/>
</kw>
<status status="PASS" starttime="20210730 13:53:16.892" endtime="20210730 13:53:16.899"/>
</kw>
<status status="PASS" starttime="20210730 13:53:15.336" endtime="20210730 13:53:16.899"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdABC</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:16.900" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:16.900" endtime="20210730 13:53:16.900"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:16.901" level="INFO">${payload} = {'password': 'abcdABC'}</msg>
<status status="PASS" starttime="20210730 13:53:16.900" endtime="20210730 13:53:16.901"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:16.912" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:16.912" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:16.901" endtime="20210730 13:53:16.912"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:16.912" endtime="20210730 13:53:16.912"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:16.913" endtime="20210730 13:53:16.913"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:16.901" endtime="20210730 13:53:16.913"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:16.901" endtime="20210730 13:53:16.913"/>
</for>
<status status="FAIL" starttime="20210730 13:53:16.899" endtime="20210730 13:53:16.913"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:16.899" endtime="20210730 13:53:16.913"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdABC</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:16.914" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:16.914" endtime="20210730 13:53:16.914"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:16.914" level="INFO">${payload} = {'password': 'abcdABC'}</msg>
<status status="PASS" starttime="20210730 13:53:16.914" endtime="20210730 13:53:16.914"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:16.918" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:16.919" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:16.914" endtime="20210730 13:53:16.919"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:16.919" endtime="20210730 13:53:16.919"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:16.919" endtime="20210730 13:53:16.919"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:16.914" endtime="20210730 13:53:16.919"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:16.914" endtime="20210730 13:53:16.919"/>
</for>
<status status="FAIL" starttime="20210730 13:53:16.913" endtime="20210730 13:53:16.919"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:16.913" endtime="20210730 13:53:16.919"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdABC</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:16.920" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:16.920" endtime="20210730 13:53:16.920"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:16.921" level="INFO">${payload} = {'password': 'abcdABC'}</msg>
<status status="PASS" starttime="20210730 13:53:16.921" endtime="20210730 13:53:16.921"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:16.926" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:16.926" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:16.921" endtime="20210730 13:53:16.926"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:16.926" endtime="20210730 13:53:16.927"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:16.927" endtime="20210730 13:53:16.927"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:16.921" endtime="20210730 13:53:16.927"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:16.921" endtime="20210730 13:53:16.927"/>
</for>
<status status="FAIL" starttime="20210730 13:53:16.920" endtime="20210730 13:53:16.927"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:16.919" endtime="20210730 13:53:16.927"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:16.899" endtime="20210730 13:53:16.927"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:16.932" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:16.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:16.941" level="INFO">${pids} = 15316
15323
15327</msg>
<status status="PASS" starttime="20210730 13:53:16.928" endtime="20210730 13:53:16.941"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:16.943" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:16.942" endtime="20210730 13:53:16.943"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:16.943" level="INFO">${pids} = ['15316', '15323', '15327']</msg>
<status status="PASS" starttime="20210730 13:53:16.943" endtime="20210730 13:53:16.943"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15316</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:16.947" level="INFO">Running command 'kill 15316 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:16.944" endtime="20210730 13:53:16.947"/>
</kw>
<status status="PASS" starttime="20210730 13:53:16.944" endtime="20210730 13:53:16.947"/>
</iter>
<iter>
<var name="${pid}">15323</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:16.951" level="INFO">Running command 'kill 15323 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:16.948" endtime="20210730 13:53:16.952"/>
</kw>
<status status="PASS" starttime="20210730 13:53:16.947" endtime="20210730 13:53:16.952"/>
</iter>
<iter>
<var name="${pid}">15327</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:16.956" level="INFO">Running command 'kill 15327 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:16.953" endtime="20210730 13:53:16.957"/>
</kw>
<status status="PASS" starttime="20210730 13:53:16.952" endtime="20210730 13:53:16.957"/>
</iter>
<status status="PASS" starttime="20210730 13:53:16.943" endtime="20210730 13:53:16.957"/>
</for>
<status status="PASS" starttime="20210730 13:53:16.943" endtime="20210730 13:53:16.957"/>
</branch>
<status status="PASS" starttime="20210730 13:53:16.943" endtime="20210730 13:53:16.957"/>
</if>
<status status="PASS" starttime="20210730 13:53:16.928" endtime="20210730 13:53:16.958"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcdABC'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:15.335" endtime="20210730 13:53:16.958">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t58" name="With Each Valid Token, Updating Password Of Each System User With abcdABCD Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:16.964" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:16.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:16.974" level="INFO">${pids} = 15356</msg>
<status status="PASS" starttime="20210730 13:53:16.960" endtime="20210730 13:53:16.974"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:16.975" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:16.975" endtime="20210730 13:53:16.975"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:16.976" level="INFO">${pids} = ['15356']</msg>
<status status="PASS" starttime="20210730 13:53:16.976" endtime="20210730 13:53:16.976"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15356</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:16.980" level="INFO">Running command 'kill 15356 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:16.976" endtime="20210730 13:53:16.981"/>
</kw>
<status status="PASS" starttime="20210730 13:53:16.976" endtime="20210730 13:53:16.981"/>
</iter>
<status status="PASS" starttime="20210730 13:53:16.976" endtime="20210730 13:53:16.981"/>
</for>
<status status="PASS" starttime="20210730 13:53:16.976" endtime="20210730 13:53:16.981"/>
</branch>
<status status="PASS" starttime="20210730 13:53:16.975" endtime="20210730 13:53:16.981"/>
</if>
<status status="PASS" starttime="20210730 13:53:16.960" endtime="20210730 13:53:16.981"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:16.983" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:16.982" endtime="20210730 13:53:16.983"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:16.984" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:16.983" endtime="20210730 13:53:16.984"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:16.984" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:16.984" endtime="20210730 13:53:16.984"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:16.985" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:16.984" endtime="20210730 13:53:16.985"/>
</kw>
<msg timestamp="20210730 13:53:16.985" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:16.983" endtime="20210730 13:53:16.985"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:16.989" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:16.985" endtime="20210730 13:53:16.991"/>
</kw>
<status status="PASS" starttime="20210730 13:53:16.982" endtime="20210730 13:53:16.992"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:16.994" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:16.993" endtime="20210730 13:53:16.998"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:18.499" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:16.999" endtime="20210730 13:53:18.500"/>
</kw>
<status status="PASS" starttime="20210730 13:53:16.993" endtime="20210730 13:53:18.500"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:18.502" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:18.501" endtime="20210730 13:53:18.502"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:18.502" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:18.502" endtime="20210730 13:53:18.502"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:18.503" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:18.502" endtime="20210730 13:53:18.503"/>
</kw>
<msg timestamp="20210730 13:53:18.503" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:18.500" endtime="20210730 13:53:18.503"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:18.503" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:18.503" endtime="20210730 13:53:18.504"/>
</kw>
<status status="PASS" starttime="20210730 13:53:18.500" endtime="20210730 13:53:18.504"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:18.504" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:18.504" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:18.504" endtime="20210730 13:53:18.504"/>
</kw>
<status status="PASS" starttime="20210730 13:53:18.504" endtime="20210730 13:53:18.504"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:18.505" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:18.505" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:18.505" endtime="20210730 13:53:18.505"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:18.505" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:18.505" endtime="20210730 13:53:18.505"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:18.506" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:18.506" endtime="20210730 13:53:18.506"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:18.506" endtime="20210730 13:53:18.507"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:18.507" endtime="20210730 13:53:18.507"/>
</kw>
<status status="PASS" starttime="20210730 13:53:18.506" endtime="20210730 13:53:18.507"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:18.508" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:18.507" endtime="20210730 13:53:18.508"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:18.508" endtime="20210730 13:53:18.508"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:18.509" endtime="20210730 13:53:18.509"/>
</kw>
<status status="PASS" starttime="20210730 13:53:18.507" endtime="20210730 13:53:18.509"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:18.509" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:18.509" endtime="20210730 13:53:18.509"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:18.509" endtime="20210730 13:53:18.510"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:18.510" endtime="20210730 13:53:18.510"/>
</kw>
<status status="PASS" starttime="20210730 13:53:18.509" endtime="20210730 13:53:18.510"/>
</iter>
<status status="PASS" starttime="20210730 13:53:18.505" endtime="20210730 13:53:18.510"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:18.511" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:18.511" endtime="20210730 13:53:18.511"/>
</kw>
<status status="PASS" starttime="20210730 13:53:18.505" endtime="20210730 13:53:18.511"/>
</kw>
<status status="PASS" starttime="20210730 13:53:16.960" endtime="20210730 13:53:18.511"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdABCD</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:18.513" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:18.512" endtime="20210730 13:53:18.513"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:18.513" level="INFO">${payload} = {'password': 'abcdABCD'}</msg>
<status status="PASS" starttime="20210730 13:53:18.513" endtime="20210730 13:53:18.513"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:18.523" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:18.523" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:18.513" endtime="20210730 13:53:18.524"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:18.524" endtime="20210730 13:53:18.524"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:18.524" endtime="20210730 13:53:18.524"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:18.513" endtime="20210730 13:53:18.524"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:18.513" endtime="20210730 13:53:18.524"/>
</for>
<status status="FAIL" starttime="20210730 13:53:18.512" endtime="20210730 13:53:18.524"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:18.512" endtime="20210730 13:53:18.524"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdABCD</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:18.526" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:18.525" endtime="20210730 13:53:18.526"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:18.526" level="INFO">${payload} = {'password': 'abcdABCD'}</msg>
<status status="PASS" starttime="20210730 13:53:18.526" endtime="20210730 13:53:18.526"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:18.530" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:18.531" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:18.527" endtime="20210730 13:53:18.531"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:18.531" endtime="20210730 13:53:18.531"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:18.531" endtime="20210730 13:53:18.531"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:18.526" endtime="20210730 13:53:18.531"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:18.526" endtime="20210730 13:53:18.531"/>
</for>
<status status="FAIL" starttime="20210730 13:53:18.525" endtime="20210730 13:53:18.531"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:18.525" endtime="20210730 13:53:18.531"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdABCD</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:18.532" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:18.532" endtime="20210730 13:53:18.532"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:18.533" level="INFO">${payload} = {'password': 'abcdABCD'}</msg>
<status status="PASS" starttime="20210730 13:53:18.533" endtime="20210730 13:53:18.533"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:18.537" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:18.537" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:18.533" endtime="20210730 13:53:18.537"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:18.537" endtime="20210730 13:53:18.537"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:18.537" endtime="20210730 13:53:18.537"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:18.533" endtime="20210730 13:53:18.537"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:18.533" endtime="20210730 13:53:18.537"/>
</for>
<status status="FAIL" starttime="20210730 13:53:18.532" endtime="20210730 13:53:18.537"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:18.532" endtime="20210730 13:53:18.538"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:18.512" endtime="20210730 13:53:18.538"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:18.543" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:18.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:18.553" level="INFO">${pids} = 15379
15386
15390</msg>
<status status="PASS" starttime="20210730 13:53:18.538" endtime="20210730 13:53:18.553"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:18.554" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:18.554" endtime="20210730 13:53:18.554"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:18.555" level="INFO">${pids} = ['15379', '15386', '15390']</msg>
<status status="PASS" starttime="20210730 13:53:18.555" endtime="20210730 13:53:18.555"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15379</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:18.560" level="INFO">Running command 'kill 15379 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:18.556" endtime="20210730 13:53:18.561"/>
</kw>
<status status="PASS" starttime="20210730 13:53:18.555" endtime="20210730 13:53:18.561"/>
</iter>
<iter>
<var name="${pid}">15386</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:18.564" level="INFO">Running command 'kill 15386 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:18.562" endtime="20210730 13:53:18.565"/>
</kw>
<status status="PASS" starttime="20210730 13:53:18.561" endtime="20210730 13:53:18.565"/>
</iter>
<iter>
<var name="${pid}">15390</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:18.570" level="INFO">Running command 'kill 15390 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:18.566" endtime="20210730 13:53:18.570"/>
</kw>
<status status="PASS" starttime="20210730 13:53:18.565" endtime="20210730 13:53:18.570"/>
</iter>
<status status="PASS" starttime="20210730 13:53:18.555" endtime="20210730 13:53:18.570"/>
</for>
<status status="PASS" starttime="20210730 13:53:18.555" endtime="20210730 13:53:18.570"/>
</branch>
<status status="PASS" starttime="20210730 13:53:18.554" endtime="20210730 13:53:18.570"/>
</if>
<status status="PASS" starttime="20210730 13:53:18.538" endtime="20210730 13:53:18.571"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcdABCD'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:16.959" endtime="20210730 13:53:18.571">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t59" name="With Each Valid Token, Updating Password Of Each System User With abcdABCDefgjklmnprstoö Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:18.578" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:18.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:18.588" level="INFO">${pids} = 15419</msg>
<status status="PASS" starttime="20210730 13:53:18.573" endtime="20210730 13:53:18.588"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:18.589" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:18.589" endtime="20210730 13:53:18.589"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:18.590" level="INFO">${pids} = ['15419']</msg>
<status status="PASS" starttime="20210730 13:53:18.590" endtime="20210730 13:53:18.590"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15419</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:18.594" level="INFO">Running command 'kill 15419 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:18.591" endtime="20210730 13:53:18.595"/>
</kw>
<status status="PASS" starttime="20210730 13:53:18.591" endtime="20210730 13:53:18.595"/>
</iter>
<status status="PASS" starttime="20210730 13:53:18.590" endtime="20210730 13:53:18.595"/>
</for>
<status status="PASS" starttime="20210730 13:53:18.590" endtime="20210730 13:53:18.595"/>
</branch>
<status status="PASS" starttime="20210730 13:53:18.589" endtime="20210730 13:53:18.595"/>
</if>
<status status="PASS" starttime="20210730 13:53:18.573" endtime="20210730 13:53:18.595"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:18.596" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:18.596" endtime="20210730 13:53:18.596"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:18.598" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:18.597" endtime="20210730 13:53:18.598"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:18.599" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:18.599" endtime="20210730 13:53:18.599"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:18.599" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:18.599" endtime="20210730 13:53:18.599"/>
</kw>
<msg timestamp="20210730 13:53:18.599" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:18.596" endtime="20210730 13:53:18.599"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:18.606" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:18.600" endtime="20210730 13:53:18.607"/>
</kw>
<status status="PASS" starttime="20210730 13:53:18.595" endtime="20210730 13:53:18.608"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:18.609" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:18.608" endtime="20210730 13:53:18.613"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:20.115" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:18.614" endtime="20210730 13:53:20.115"/>
</kw>
<status status="PASS" starttime="20210730 13:53:18.608" endtime="20210730 13:53:20.115"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:20.116" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:20.116" endtime="20210730 13:53:20.116"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:20.117" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:20.116" endtime="20210730 13:53:20.117"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:20.117" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:20.117" endtime="20210730 13:53:20.117"/>
</kw>
<msg timestamp="20210730 13:53:20.118" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:20.116" endtime="20210730 13:53:20.118"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:20.118" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:20.118" endtime="20210730 13:53:20.119"/>
</kw>
<status status="PASS" starttime="20210730 13:53:20.115" endtime="20210730 13:53:20.119"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:20.120" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:20.120" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:20.119" endtime="20210730 13:53:20.120"/>
</kw>
<status status="PASS" starttime="20210730 13:53:20.119" endtime="20210730 13:53:20.120"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:20.120" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:20.121" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:20.120" endtime="20210730 13:53:20.121"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:20.121" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:20.121" endtime="20210730 13:53:20.121"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:20.122" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:20.121" endtime="20210730 13:53:20.122"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:20.122" endtime="20210730 13:53:20.122"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:20.122" endtime="20210730 13:53:20.123"/>
</kw>
<status status="PASS" starttime="20210730 13:53:20.121" endtime="20210730 13:53:20.123"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:20.123" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:20.123" endtime="20210730 13:53:20.123"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:20.123" endtime="20210730 13:53:20.124"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:20.125" endtime="20210730 13:53:20.125"/>
</kw>
<status status="PASS" starttime="20210730 13:53:20.123" endtime="20210730 13:53:20.125"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:20.125" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:20.125" endtime="20210730 13:53:20.126"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:20.126" endtime="20210730 13:53:20.126"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:20.126" endtime="20210730 13:53:20.127"/>
</kw>
<status status="PASS" starttime="20210730 13:53:20.125" endtime="20210730 13:53:20.127"/>
</iter>
<status status="PASS" starttime="20210730 13:53:20.121" endtime="20210730 13:53:20.127"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:20.127" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:20.127" endtime="20210730 13:53:20.127"/>
</kw>
<status status="PASS" starttime="20210730 13:53:20.120" endtime="20210730 13:53:20.127"/>
</kw>
<status status="PASS" starttime="20210730 13:53:18.572" endtime="20210730 13:53:20.127"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdABCDefgjklmnprstoö</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:20.128" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:20.128" endtime="20210730 13:53:20.128"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:20.129" level="INFO">${payload} = {'password': 'abcdABCDefgjklmnprstoö'}</msg>
<status status="PASS" starttime="20210730 13:53:20.129" endtime="20210730 13:53:20.129"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:20.137" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:20.138" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:20.129" endtime="20210730 13:53:20.138"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:20.138" endtime="20210730 13:53:20.138"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:20.138" endtime="20210730 13:53:20.138"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:20.129" endtime="20210730 13:53:20.138"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:20.129" endtime="20210730 13:53:20.138"/>
</for>
<status status="FAIL" starttime="20210730 13:53:20.128" endtime="20210730 13:53:20.138"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:20.128" endtime="20210730 13:53:20.138"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdABCDefgjklmnprstoö</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:20.140" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:20.139" endtime="20210730 13:53:20.140"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:20.141" level="INFO">${payload} = {'password': 'abcdABCDefgjklmnprstoö'}</msg>
<status status="PASS" starttime="20210730 13:53:20.140" endtime="20210730 13:53:20.141"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:20.145" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:20.145" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:20.141" endtime="20210730 13:53:20.145"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:20.145" endtime="20210730 13:53:20.145"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:20.145" endtime="20210730 13:53:20.146"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:20.141" endtime="20210730 13:53:20.146"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:20.141" endtime="20210730 13:53:20.146"/>
</for>
<status status="FAIL" starttime="20210730 13:53:20.139" endtime="20210730 13:53:20.146"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:20.139" endtime="20210730 13:53:20.146"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdABCDefgjklmnprstoö</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:20.147" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:20.146" endtime="20210730 13:53:20.147"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:20.147" level="INFO">${payload} = {'password': 'abcdABCDefgjklmnprstoö'}</msg>
<status status="PASS" starttime="20210730 13:53:20.147" endtime="20210730 13:53:20.147"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:20.153" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:20.153" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:20.147" endtime="20210730 13:53:20.153"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:20.153" endtime="20210730 13:53:20.153"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:20.153" endtime="20210730 13:53:20.153"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:20.147" endtime="20210730 13:53:20.153"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:20.147" endtime="20210730 13:53:20.154"/>
</for>
<status status="FAIL" starttime="20210730 13:53:20.146" endtime="20210730 13:53:20.154"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:20.146" endtime="20210730 13:53:20.154"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:20.127" endtime="20210730 13:53:20.154"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:20.160" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:20.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:20.170" level="INFO">${pids} = 15442
15449
15454</msg>
<status status="PASS" starttime="20210730 13:53:20.155" endtime="20210730 13:53:20.170"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:20.170" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:20.170" endtime="20210730 13:53:20.171"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:20.171" level="INFO">${pids} = ['15442', '15449', '15454']</msg>
<status status="PASS" starttime="20210730 13:53:20.171" endtime="20210730 13:53:20.171"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15442</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:20.175" level="INFO">Running command 'kill 15442 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:20.172" endtime="20210730 13:53:20.176"/>
</kw>
<status status="PASS" starttime="20210730 13:53:20.171" endtime="20210730 13:53:20.176"/>
</iter>
<iter>
<var name="${pid}">15449</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:20.180" level="INFO">Running command 'kill 15449 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:20.177" endtime="20210730 13:53:20.182"/>
</kw>
<status status="PASS" starttime="20210730 13:53:20.176" endtime="20210730 13:53:20.182"/>
</iter>
<iter>
<var name="${pid}">15454</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:20.186" level="INFO">Running command 'kill 15454 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:20.182" endtime="20210730 13:53:20.187"/>
</kw>
<status status="PASS" starttime="20210730 13:53:20.182" endtime="20210730 13:53:20.187"/>
</iter>
<status status="PASS" starttime="20210730 13:53:20.171" endtime="20210730 13:53:20.187"/>
</for>
<status status="PASS" starttime="20210730 13:53:20.171" endtime="20210730 13:53:20.187"/>
</branch>
<status status="PASS" starttime="20210730 13:53:20.171" endtime="20210730 13:53:20.187"/>
</if>
<status status="PASS" starttime="20210730 13:53:20.154" endtime="20210730 13:53:20.188"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcdABCDefgjklmnprstoö'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:18.571" endtime="20210730 13:53:20.188">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t60" name="With Each Valid Token, Updating Password Of Each System User With abcd012 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:20.194" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:20.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:20.203" level="INFO">${pids} = 15483</msg>
<status status="PASS" starttime="20210730 13:53:20.190" endtime="20210730 13:53:20.203"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:20.204" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:20.203" endtime="20210730 13:53:20.204"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:20.205" level="INFO">${pids} = ['15483']</msg>
<status status="PASS" starttime="20210730 13:53:20.204" endtime="20210730 13:53:20.205"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15483</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:20.209" level="INFO">Running command 'kill 15483 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:20.205" endtime="20210730 13:53:20.209"/>
</kw>
<status status="PASS" starttime="20210730 13:53:20.205" endtime="20210730 13:53:20.209"/>
</iter>
<status status="PASS" starttime="20210730 13:53:20.205" endtime="20210730 13:53:20.210"/>
</for>
<status status="PASS" starttime="20210730 13:53:20.204" endtime="20210730 13:53:20.210"/>
</branch>
<status status="PASS" starttime="20210730 13:53:20.204" endtime="20210730 13:53:20.210"/>
</if>
<status status="PASS" starttime="20210730 13:53:20.190" endtime="20210730 13:53:20.210"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:20.211" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:20.211" endtime="20210730 13:53:20.211"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:20.212" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:20.212" endtime="20210730 13:53:20.212"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:20.212" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:20.212" endtime="20210730 13:53:20.212"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:20.213" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:20.212" endtime="20210730 13:53:20.213"/>
</kw>
<msg timestamp="20210730 13:53:20.213" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:20.211" endtime="20210730 13:53:20.213"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:20.219" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:20.213" endtime="20210730 13:53:20.221"/>
</kw>
<status status="PASS" starttime="20210730 13:53:20.210" endtime="20210730 13:53:20.221"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:20.223" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:20.222" endtime="20210730 13:53:20.228"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:21.729" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:20.229" endtime="20210730 13:53:21.730"/>
</kw>
<status status="PASS" starttime="20210730 13:53:20.221" endtime="20210730 13:53:21.730"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:21.731" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:21.731" endtime="20210730 13:53:21.731"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:21.731" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:21.731" endtime="20210730 13:53:21.732"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:21.732" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:21.732" endtime="20210730 13:53:21.732"/>
</kw>
<msg timestamp="20210730 13:53:21.732" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:21.731" endtime="20210730 13:53:21.732"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:21.733" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:21.732" endtime="20210730 13:53:21.733"/>
</kw>
<status status="PASS" starttime="20210730 13:53:21.730" endtime="20210730 13:53:21.733"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:21.734" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:21.734" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:21.733" endtime="20210730 13:53:21.734"/>
</kw>
<status status="PASS" starttime="20210730 13:53:21.733" endtime="20210730 13:53:21.734"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:21.734" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:21.735" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:21.734" endtime="20210730 13:53:21.735"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:21.735" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:21.735" endtime="20210730 13:53:21.735"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:21.735" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:21.735" endtime="20210730 13:53:21.735"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:21.736" endtime="20210730 13:53:21.736"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:21.736" endtime="20210730 13:53:21.737"/>
</kw>
<status status="PASS" starttime="20210730 13:53:21.735" endtime="20210730 13:53:21.737"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:21.737" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:21.737" endtime="20210730 13:53:21.737"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:21.737" endtime="20210730 13:53:21.738"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:21.738" endtime="20210730 13:53:21.738"/>
</kw>
<status status="PASS" starttime="20210730 13:53:21.737" endtime="20210730 13:53:21.738"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:21.738" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:21.738" endtime="20210730 13:53:21.738"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:21.739" endtime="20210730 13:53:21.739"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:21.739" endtime="20210730 13:53:21.740"/>
</kw>
<status status="PASS" starttime="20210730 13:53:21.738" endtime="20210730 13:53:21.740"/>
</iter>
<status status="PASS" starttime="20210730 13:53:21.735" endtime="20210730 13:53:21.740"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:21.740" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:21.740" endtime="20210730 13:53:21.740"/>
</kw>
<status status="PASS" starttime="20210730 13:53:21.734" endtime="20210730 13:53:21.740"/>
</kw>
<status status="PASS" starttime="20210730 13:53:20.189" endtime="20210730 13:53:21.740"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd012</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:21.741" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:21.741" endtime="20210730 13:53:21.741"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:21.742" level="INFO">${payload} = {'password': 'abcd012'}</msg>
<status status="PASS" starttime="20210730 13:53:21.742" endtime="20210730 13:53:21.742"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:21.752" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:21.753" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:21.742" endtime="20210730 13:53:21.753"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:21.753" endtime="20210730 13:53:21.753"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:21.753" endtime="20210730 13:53:21.753"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:21.742" endtime="20210730 13:53:21.753"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:21.742" endtime="20210730 13:53:21.754"/>
</for>
<status status="FAIL" starttime="20210730 13:53:21.741" endtime="20210730 13:53:21.754"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:21.741" endtime="20210730 13:53:21.754"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd012</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:21.755" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:21.754" endtime="20210730 13:53:21.755"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:21.755" level="INFO">${payload} = {'password': 'abcd012'}</msg>
<status status="PASS" starttime="20210730 13:53:21.755" endtime="20210730 13:53:21.756"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:21.760" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:21.761" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:21.756" endtime="20210730 13:53:21.761"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:21.761" endtime="20210730 13:53:21.761"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:21.761" endtime="20210730 13:53:21.761"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:21.756" endtime="20210730 13:53:21.761"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:21.756" endtime="20210730 13:53:21.761"/>
</for>
<status status="FAIL" starttime="20210730 13:53:21.754" endtime="20210730 13:53:21.761"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:21.754" endtime="20210730 13:53:21.761"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd012</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:21.762" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:21.762" endtime="20210730 13:53:21.762"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:21.763" level="INFO">${payload} = {'password': 'abcd012'}</msg>
<status status="PASS" starttime="20210730 13:53:21.763" endtime="20210730 13:53:21.763"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:21.767" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:21.767" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:21.763" endtime="20210730 13:53:21.767"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:21.767" endtime="20210730 13:53:21.767"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:21.767" endtime="20210730 13:53:21.767"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:21.763" endtime="20210730 13:53:21.767"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:21.763" endtime="20210730 13:53:21.767"/>
</for>
<status status="FAIL" starttime="20210730 13:53:21.761" endtime="20210730 13:53:21.767"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:21.761" endtime="20210730 13:53:21.767"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:21.740" endtime="20210730 13:53:21.767"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:21.772" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:21.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:21.782" level="INFO">${pids} = 15506
15513
15517</msg>
<status status="PASS" starttime="20210730 13:53:21.768" endtime="20210730 13:53:21.782"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:21.783" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:21.782" endtime="20210730 13:53:21.783"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:21.783" level="INFO">${pids} = ['15506', '15513', '15517']</msg>
<status status="PASS" starttime="20210730 13:53:21.783" endtime="20210730 13:53:21.783"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15506</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:21.787" level="INFO">Running command 'kill 15506 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:21.784" endtime="20210730 13:53:21.787"/>
</kw>
<status status="PASS" starttime="20210730 13:53:21.783" endtime="20210730 13:53:21.787"/>
</iter>
<iter>
<var name="${pid}">15513</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:21.791" level="INFO">Running command 'kill 15513 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:21.787" endtime="20210730 13:53:21.793"/>
</kw>
<status status="PASS" starttime="20210730 13:53:21.787" endtime="20210730 13:53:21.793"/>
</iter>
<iter>
<var name="${pid}">15517</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:21.797" level="INFO">Running command 'kill 15517 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:21.794" endtime="20210730 13:53:21.797"/>
</kw>
<status status="PASS" starttime="20210730 13:53:21.793" endtime="20210730 13:53:21.797"/>
</iter>
<status status="PASS" starttime="20210730 13:53:21.783" endtime="20210730 13:53:21.797"/>
</for>
<status status="PASS" starttime="20210730 13:53:21.783" endtime="20210730 13:53:21.797"/>
</branch>
<status status="PASS" starttime="20210730 13:53:21.783" endtime="20210730 13:53:21.797"/>
</if>
<status status="PASS" starttime="20210730 13:53:21.768" endtime="20210730 13:53:21.797"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcd012'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:20.188" endtime="20210730 13:53:21.798">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t61" name="With Each Valid Token, Updating Password Of Each System User With abcd0123 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:21.804" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:21.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:21.814" level="INFO">${pids} = 15546</msg>
<status status="PASS" starttime="20210730 13:53:21.800" endtime="20210730 13:53:21.814"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:21.814" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:21.814" endtime="20210730 13:53:21.814"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:21.815" level="INFO">${pids} = ['15546']</msg>
<status status="PASS" starttime="20210730 13:53:21.815" endtime="20210730 13:53:21.815"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15546</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:21.819" level="INFO">Running command 'kill 15546 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:21.815" endtime="20210730 13:53:21.820"/>
</kw>
<status status="PASS" starttime="20210730 13:53:21.815" endtime="20210730 13:53:21.820"/>
</iter>
<status status="PASS" starttime="20210730 13:53:21.815" endtime="20210730 13:53:21.820"/>
</for>
<status status="PASS" starttime="20210730 13:53:21.815" endtime="20210730 13:53:21.820"/>
</branch>
<status status="PASS" starttime="20210730 13:53:21.815" endtime="20210730 13:53:21.820"/>
</if>
<status status="PASS" starttime="20210730 13:53:21.799" endtime="20210730 13:53:21.820"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:21.821" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:21.821" endtime="20210730 13:53:21.821"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:21.822" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:21.822" endtime="20210730 13:53:21.822"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:21.823" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:21.822" endtime="20210730 13:53:21.823"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:21.823" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:21.823" endtime="20210730 13:53:21.823"/>
</kw>
<msg timestamp="20210730 13:53:21.823" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:21.821" endtime="20210730 13:53:21.823"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:21.827" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:21.824" endtime="20210730 13:53:21.828"/>
</kw>
<status status="PASS" starttime="20210730 13:53:21.820" endtime="20210730 13:53:21.829"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:21.830" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:21.830" endtime="20210730 13:53:21.837"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:23.341" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:21.837" endtime="20210730 13:53:23.341"/>
</kw>
<status status="PASS" starttime="20210730 13:53:21.829" endtime="20210730 13:53:23.341"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:23.342" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:23.342" endtime="20210730 13:53:23.342"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:23.343" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:23.343" endtime="20210730 13:53:23.343"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:23.343" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:23.343" endtime="20210730 13:53:23.343"/>
</kw>
<msg timestamp="20210730 13:53:23.343" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:23.342" endtime="20210730 13:53:23.343"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:23.344" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:23.344" endtime="20210730 13:53:23.344"/>
</kw>
<status status="PASS" starttime="20210730 13:53:23.341" endtime="20210730 13:53:23.345"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:23.345" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:23.345" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:23.345" endtime="20210730 13:53:23.346"/>
</kw>
<status status="PASS" starttime="20210730 13:53:23.345" endtime="20210730 13:53:23.346"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:23.346" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:23.347" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:23.346" endtime="20210730 13:53:23.347"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:23.347" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:23.347" endtime="20210730 13:53:23.347"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:23.348" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:23.347" endtime="20210730 13:53:23.348"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:23.348" endtime="20210730 13:53:23.349"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:23.349" endtime="20210730 13:53:23.349"/>
</kw>
<status status="PASS" starttime="20210730 13:53:23.347" endtime="20210730 13:53:23.349"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:23.350" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:23.350" endtime="20210730 13:53:23.350"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:23.350" endtime="20210730 13:53:23.352"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:23.353" endtime="20210730 13:53:23.353"/>
</kw>
<status status="PASS" starttime="20210730 13:53:23.349" endtime="20210730 13:53:23.353"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:23.354" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:23.354" endtime="20210730 13:53:23.354"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:23.354" endtime="20210730 13:53:23.355"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:23.355" endtime="20210730 13:53:23.355"/>
</kw>
<status status="PASS" starttime="20210730 13:53:23.354" endtime="20210730 13:53:23.355"/>
</iter>
<status status="PASS" starttime="20210730 13:53:23.347" endtime="20210730 13:53:23.355"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:23.356" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:23.356" endtime="20210730 13:53:23.356"/>
</kw>
<status status="PASS" starttime="20210730 13:53:23.346" endtime="20210730 13:53:23.356"/>
</kw>
<status status="PASS" starttime="20210730 13:53:21.799" endtime="20210730 13:53:23.356"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd0123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:23.358" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:23.357" endtime="20210730 13:53:23.358"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:23.358" level="INFO">${payload} = {'password': 'abcd0123'}</msg>
<status status="PASS" starttime="20210730 13:53:23.358" endtime="20210730 13:53:23.358"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:23.367" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:23.367" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:23.359" endtime="20210730 13:53:23.367"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:23.367" endtime="20210730 13:53:23.367"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:23.367" endtime="20210730 13:53:23.367"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:23.358" endtime="20210730 13:53:23.367"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:23.358" endtime="20210730 13:53:23.368"/>
</for>
<status status="FAIL" starttime="20210730 13:53:23.357" endtime="20210730 13:53:23.368"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:23.356" endtime="20210730 13:53:23.368"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd0123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:23.369" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:23.369" endtime="20210730 13:53:23.369"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:23.370" level="INFO">${payload} = {'password': 'abcd0123'}</msg>
<status status="PASS" starttime="20210730 13:53:23.369" endtime="20210730 13:53:23.370"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:23.374" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:23.374" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:23.370" endtime="20210730 13:53:23.374"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:23.375" endtime="20210730 13:53:23.375"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:23.375" endtime="20210730 13:53:23.375"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:23.370" endtime="20210730 13:53:23.375"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:23.370" endtime="20210730 13:53:23.375"/>
</for>
<status status="FAIL" starttime="20210730 13:53:23.368" endtime="20210730 13:53:23.375"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:23.368" endtime="20210730 13:53:23.375"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd0123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:23.376" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:23.376" endtime="20210730 13:53:23.376"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:23.376" level="INFO">${payload} = {'password': 'abcd0123'}</msg>
<status status="PASS" starttime="20210730 13:53:23.376" endtime="20210730 13:53:23.376"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:23.380" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:23.381" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:23.377" endtime="20210730 13:53:23.381"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:23.381" endtime="20210730 13:53:23.381"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:23.381" endtime="20210730 13:53:23.381"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:23.377" endtime="20210730 13:53:23.381"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:23.376" endtime="20210730 13:53:23.381"/>
</for>
<status status="FAIL" starttime="20210730 13:53:23.375" endtime="20210730 13:53:23.381"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:23.375" endtime="20210730 13:53:23.381"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:23.356" endtime="20210730 13:53:23.381"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:23.386" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:23.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:23.397" level="INFO">${pids} = 15569
15576
15583</msg>
<status status="PASS" starttime="20210730 13:53:23.382" endtime="20210730 13:53:23.398"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:23.398" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:23.398" endtime="20210730 13:53:23.398"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:23.399" level="INFO">${pids} = ['15569', '15576', '15583']</msg>
<status status="PASS" starttime="20210730 13:53:23.399" endtime="20210730 13:53:23.399"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15569</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:23.403" level="INFO">Running command 'kill 15569 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:23.399" endtime="20210730 13:53:23.404"/>
</kw>
<status status="PASS" starttime="20210730 13:53:23.399" endtime="20210730 13:53:23.404"/>
</iter>
<iter>
<var name="${pid}">15576</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:23.407" level="INFO">Running command 'kill 15576 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:23.404" endtime="20210730 13:53:23.408"/>
</kw>
<status status="PASS" starttime="20210730 13:53:23.404" endtime="20210730 13:53:23.408"/>
</iter>
<iter>
<var name="${pid}">15583</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:23.411" level="INFO">Running command 'kill 15583 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:23.408" endtime="20210730 13:53:23.412"/>
</kw>
<status status="PASS" starttime="20210730 13:53:23.408" endtime="20210730 13:53:23.412"/>
</iter>
<status status="PASS" starttime="20210730 13:53:23.399" endtime="20210730 13:53:23.412"/>
</for>
<status status="PASS" starttime="20210730 13:53:23.399" endtime="20210730 13:53:23.412"/>
</branch>
<status status="PASS" starttime="20210730 13:53:23.399" endtime="20210730 13:53:23.412"/>
</if>
<status status="PASS" starttime="20210730 13:53:23.382" endtime="20210730 13:53:23.412"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcd0123'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:21.798" endtime="20210730 13:53:23.412">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t62" name="With Each Valid Token, Updating Password Of Each System User With abcd0123456789defghjk4 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:23.422" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:23.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:23.435" level="INFO">${pids} = 15612</msg>
<status status="PASS" starttime="20210730 13:53:23.414" endtime="20210730 13:53:23.435"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:23.436" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:23.435" endtime="20210730 13:53:23.436"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:23.437" level="INFO">${pids} = ['15612']</msg>
<status status="PASS" starttime="20210730 13:53:23.436" endtime="20210730 13:53:23.437"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15612</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:23.449" level="INFO">Running command 'kill 15612 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:23.437" endtime="20210730 13:53:23.449"/>
</kw>
<status status="PASS" starttime="20210730 13:53:23.437" endtime="20210730 13:53:23.450"/>
</iter>
<status status="PASS" starttime="20210730 13:53:23.437" endtime="20210730 13:53:23.450"/>
</for>
<status status="PASS" starttime="20210730 13:53:23.436" endtime="20210730 13:53:23.450"/>
</branch>
<status status="PASS" starttime="20210730 13:53:23.436" endtime="20210730 13:53:23.450"/>
</if>
<status status="PASS" starttime="20210730 13:53:23.414" endtime="20210730 13:53:23.451"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:23.453" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:23.452" endtime="20210730 13:53:23.453"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:23.453" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:23.453" endtime="20210730 13:53:23.453"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:23.454" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:23.454" endtime="20210730 13:53:23.454"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:23.454" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:23.454" endtime="20210730 13:53:23.454"/>
</kw>
<msg timestamp="20210730 13:53:23.455" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:23.453" endtime="20210730 13:53:23.455"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:23.459" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:23.455" endtime="20210730 13:53:23.461"/>
</kw>
<status status="PASS" starttime="20210730 13:53:23.451" endtime="20210730 13:53:23.461"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:23.462" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:23.462" endtime="20210730 13:53:23.466"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:24.968" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:23.467" endtime="20210730 13:53:24.968"/>
</kw>
<status status="PASS" starttime="20210730 13:53:23.461" endtime="20210730 13:53:24.968"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:24.969" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:24.969" endtime="20210730 13:53:24.969"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:24.969" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:24.969" endtime="20210730 13:53:24.970"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:24.970" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:24.970" endtime="20210730 13:53:24.970"/>
</kw>
<msg timestamp="20210730 13:53:24.970" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:24.969" endtime="20210730 13:53:24.970"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:24.971" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:24.970" endtime="20210730 13:53:24.971"/>
</kw>
<status status="PASS" starttime="20210730 13:53:24.968" endtime="20210730 13:53:24.971"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:24.972" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:24.972" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:24.971" endtime="20210730 13:53:24.972"/>
</kw>
<status status="PASS" starttime="20210730 13:53:24.971" endtime="20210730 13:53:24.972"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:24.972" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:24.973" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:24.972" endtime="20210730 13:53:24.973"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:24.973" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:24.973" endtime="20210730 13:53:24.973"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:24.974" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:24.973" endtime="20210730 13:53:24.974"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:24.974" endtime="20210730 13:53:24.975"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:24.975" endtime="20210730 13:53:24.975"/>
</kw>
<status status="PASS" starttime="20210730 13:53:24.973" endtime="20210730 13:53:24.975"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:24.975" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:24.975" endtime="20210730 13:53:24.975"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:24.975" endtime="20210730 13:53:24.976"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:24.976" endtime="20210730 13:53:24.976"/>
</kw>
<status status="PASS" starttime="20210730 13:53:24.975" endtime="20210730 13:53:24.976"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:24.977" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:24.977" endtime="20210730 13:53:24.977"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:24.977" endtime="20210730 13:53:24.978"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:24.978" endtime="20210730 13:53:24.978"/>
</kw>
<status status="PASS" starttime="20210730 13:53:24.976" endtime="20210730 13:53:24.978"/>
</iter>
<status status="PASS" starttime="20210730 13:53:24.973" endtime="20210730 13:53:24.978"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:24.978" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:24.978" endtime="20210730 13:53:24.978"/>
</kw>
<status status="PASS" starttime="20210730 13:53:24.972" endtime="20210730 13:53:24.978"/>
</kw>
<status status="PASS" starttime="20210730 13:53:23.414" endtime="20210730 13:53:24.979"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd0123456789defghjk4</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:24.980" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:24.979" endtime="20210730 13:53:24.980"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:24.980" level="INFO">${payload} = {'password': 'abcd0123456789defghjk4'}</msg>
<status status="PASS" starttime="20210730 13:53:24.980" endtime="20210730 13:53:24.980"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:24.989" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:24.990" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:24.980" endtime="20210730 13:53:24.990"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:24.990" endtime="20210730 13:53:24.990"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:24.990" endtime="20210730 13:53:24.990"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:24.980" endtime="20210730 13:53:24.990"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:24.980" endtime="20210730 13:53:24.990"/>
</for>
<status status="FAIL" starttime="20210730 13:53:24.979" endtime="20210730 13:53:24.990"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:24.979" endtime="20210730 13:53:24.991"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd0123456789defghjk4</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:24.992" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:24.992" endtime="20210730 13:53:24.992"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:24.993" level="INFO">${payload} = {'password': 'abcd0123456789defghjk4'}</msg>
<status status="PASS" starttime="20210730 13:53:24.992" endtime="20210730 13:53:24.993"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:24.997" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:24.997" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:24.993" endtime="20210730 13:53:24.997"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:24.997" endtime="20210730 13:53:24.997"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:24.997" endtime="20210730 13:53:24.997"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:24.993" endtime="20210730 13:53:24.997"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:24.993" endtime="20210730 13:53:24.997"/>
</for>
<status status="FAIL" starttime="20210730 13:53:24.991" endtime="20210730 13:53:24.998"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:24.991" endtime="20210730 13:53:24.998"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd0123456789defghjk4</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:24.999" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:24.998" endtime="20210730 13:53:24.999"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:24.999" level="INFO">${payload} = {'password': 'abcd0123456789defghjk4'}</msg>
<status status="PASS" starttime="20210730 13:53:24.999" endtime="20210730 13:53:24.999"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:25.003" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:25.003" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:24.999" endtime="20210730 13:53:25.003"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:25.003" endtime="20210730 13:53:25.003"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:25.003" endtime="20210730 13:53:25.003"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:24.999" endtime="20210730 13:53:25.003"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:24.999" endtime="20210730 13:53:25.003"/>
</for>
<status status="FAIL" starttime="20210730 13:53:24.998" endtime="20210730 13:53:25.004"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:24.998" endtime="20210730 13:53:25.004"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:24.979" endtime="20210730 13:53:25.004"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:25.010" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:25.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:25.020" level="INFO">${pids} = 15635
15642
15647</msg>
<status status="PASS" starttime="20210730 13:53:25.004" endtime="20210730 13:53:25.020"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:25.021" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:25.021" endtime="20210730 13:53:25.021"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:25.022" level="INFO">${pids} = ['15635', '15642', '15647']</msg>
<status status="PASS" starttime="20210730 13:53:25.022" endtime="20210730 13:53:25.022"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15635</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:25.026" level="INFO">Running command 'kill 15635 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:25.023" endtime="20210730 13:53:25.027"/>
</kw>
<status status="PASS" starttime="20210730 13:53:25.022" endtime="20210730 13:53:25.027"/>
</iter>
<iter>
<var name="${pid}">15642</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:25.030" level="INFO">Running command 'kill 15642 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:25.027" endtime="20210730 13:53:25.030"/>
</kw>
<status status="PASS" starttime="20210730 13:53:25.027" endtime="20210730 13:53:25.030"/>
</iter>
<iter>
<var name="${pid}">15647</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:25.035" level="INFO">Running command 'kill 15647 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:25.031" endtime="20210730 13:53:25.035"/>
</kw>
<status status="PASS" starttime="20210730 13:53:25.031" endtime="20210730 13:53:25.035"/>
</iter>
<status status="PASS" starttime="20210730 13:53:25.022" endtime="20210730 13:53:25.035"/>
</for>
<status status="PASS" starttime="20210730 13:53:25.022" endtime="20210730 13:53:25.035"/>
</branch>
<status status="PASS" starttime="20210730 13:53:25.021" endtime="20210730 13:53:25.035"/>
</if>
<status status="PASS" starttime="20210730 13:53:25.004" endtime="20210730 13:53:25.035"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcd0123456789defghjk4'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:23.413" endtime="20210730 13:53:25.035">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t63" name="With Each Valid Token, Updating Password Of Each System User With abcd!?. Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:25.044" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:25.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:25.055" level="INFO">${pids} = 15676</msg>
<status status="PASS" starttime="20210730 13:53:25.038" endtime="20210730 13:53:25.055"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:25.056" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:25.055" endtime="20210730 13:53:25.056"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:25.057" level="INFO">${pids} = ['15676']</msg>
<status status="PASS" starttime="20210730 13:53:25.056" endtime="20210730 13:53:25.057"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15676</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:25.060" level="INFO">Running command 'kill 15676 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:25.057" endtime="20210730 13:53:25.061"/>
</kw>
<status status="PASS" starttime="20210730 13:53:25.057" endtime="20210730 13:53:25.061"/>
</iter>
<status status="PASS" starttime="20210730 13:53:25.057" endtime="20210730 13:53:25.061"/>
</for>
<status status="PASS" starttime="20210730 13:53:25.056" endtime="20210730 13:53:25.061"/>
</branch>
<status status="PASS" starttime="20210730 13:53:25.056" endtime="20210730 13:53:25.061"/>
</if>
<status status="PASS" starttime="20210730 13:53:25.037" endtime="20210730 13:53:25.061"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:25.062" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:25.062" endtime="20210730 13:53:25.062"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:25.063" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:25.063" endtime="20210730 13:53:25.063"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:25.063" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:25.063" endtime="20210730 13:53:25.063"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:25.064" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:25.063" endtime="20210730 13:53:25.064"/>
</kw>
<msg timestamp="20210730 13:53:25.064" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:25.063" endtime="20210730 13:53:25.064"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:25.067" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:25.064" endtime="20210730 13:53:25.069"/>
</kw>
<status status="PASS" starttime="20210730 13:53:25.062" endtime="20210730 13:53:25.069"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:25.071" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:25.070" endtime="20210730 13:53:25.077"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:26.582" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:25.078" endtime="20210730 13:53:26.583"/>
</kw>
<status status="PASS" starttime="20210730 13:53:25.070" endtime="20210730 13:53:26.583"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:26.585" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:26.585" endtime="20210730 13:53:26.585"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:26.585" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:26.585" endtime="20210730 13:53:26.585"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:26.586" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:26.585" endtime="20210730 13:53:26.586"/>
</kw>
<msg timestamp="20210730 13:53:26.586" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:26.584" endtime="20210730 13:53:26.586"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:26.586" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:26.586" endtime="20210730 13:53:26.587"/>
</kw>
<status status="PASS" starttime="20210730 13:53:26.584" endtime="20210730 13:53:26.587"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:26.587" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:26.587" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:26.587" endtime="20210730 13:53:26.588"/>
</kw>
<status status="PASS" starttime="20210730 13:53:26.587" endtime="20210730 13:53:26.588"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:26.588" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:26.588" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:26.588" endtime="20210730 13:53:26.588"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:26.588" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:26.588" endtime="20210730 13:53:26.589"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:26.589" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:26.589" endtime="20210730 13:53:26.589"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:26.589" endtime="20210730 13:53:26.590"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:26.590" endtime="20210730 13:53:26.591"/>
</kw>
<status status="PASS" starttime="20210730 13:53:26.589" endtime="20210730 13:53:26.591"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:26.591" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:26.591" endtime="20210730 13:53:26.591"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:26.592" endtime="20210730 13:53:26.592"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:26.593" endtime="20210730 13:53:26.593"/>
</kw>
<status status="PASS" starttime="20210730 13:53:26.591" endtime="20210730 13:53:26.593"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:26.593" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:26.593" endtime="20210730 13:53:26.593"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:26.593" endtime="20210730 13:53:26.594"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:26.594" endtime="20210730 13:53:26.594"/>
</kw>
<status status="PASS" starttime="20210730 13:53:26.593" endtime="20210730 13:53:26.594"/>
</iter>
<status status="PASS" starttime="20210730 13:53:26.589" endtime="20210730 13:53:26.594"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:26.595" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:26.594" endtime="20210730 13:53:26.595"/>
</kw>
<status status="PASS" starttime="20210730 13:53:26.588" endtime="20210730 13:53:26.595"/>
</kw>
<status status="PASS" starttime="20210730 13:53:25.037" endtime="20210730 13:53:26.595"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:26.596" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:26.596" endtime="20210730 13:53:26.597"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:26.597" level="INFO">${payload} = {'password': 'abcd!?.'}</msg>
<status status="PASS" starttime="20210730 13:53:26.597" endtime="20210730 13:53:26.597"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:26.606" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:26.607" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:26.597" endtime="20210730 13:53:26.607"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:26.607" endtime="20210730 13:53:26.607"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:26.607" endtime="20210730 13:53:26.607"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:26.597" endtime="20210730 13:53:26.607"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:26.597" endtime="20210730 13:53:26.607"/>
</for>
<status status="FAIL" starttime="20210730 13:53:26.595" endtime="20210730 13:53:26.607"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:26.595" endtime="20210730 13:53:26.607"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:26.608" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:26.608" endtime="20210730 13:53:26.608"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:26.609" level="INFO">${payload} = {'password': 'abcd!?.'}</msg>
<status status="PASS" starttime="20210730 13:53:26.608" endtime="20210730 13:53:26.609"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:26.613" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:26.613" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:26.609" endtime="20210730 13:53:26.613"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:26.613" endtime="20210730 13:53:26.613"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:26.613" endtime="20210730 13:53:26.613"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:26.609" endtime="20210730 13:53:26.613"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:26.609" endtime="20210730 13:53:26.613"/>
</for>
<status status="FAIL" starttime="20210730 13:53:26.607" endtime="20210730 13:53:26.614"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:26.607" endtime="20210730 13:53:26.614"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:26.615" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:26.614" endtime="20210730 13:53:26.615"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:26.615" level="INFO">${payload} = {'password': 'abcd!?.'}</msg>
<status status="PASS" starttime="20210730 13:53:26.615" endtime="20210730 13:53:26.615"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:26.620" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:26.620" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:26.616" endtime="20210730 13:53:26.620"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:26.620" endtime="20210730 13:53:26.620"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:26.620" endtime="20210730 13:53:26.620"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:26.616" endtime="20210730 13:53:26.620"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:26.615" endtime="20210730 13:53:26.620"/>
</for>
<status status="FAIL" starttime="20210730 13:53:26.614" endtime="20210730 13:53:26.620"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:26.614" endtime="20210730 13:53:26.621"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:26.595" endtime="20210730 13:53:26.621"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:26.626" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:26.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:26.636" level="INFO">${pids} = 15699
15706
15710</msg>
<status status="PASS" starttime="20210730 13:53:26.621" endtime="20210730 13:53:26.636"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:26.637" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:26.636" endtime="20210730 13:53:26.637"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:26.637" level="INFO">${pids} = ['15699', '15706', '15710']</msg>
<status status="PASS" starttime="20210730 13:53:26.637" endtime="20210730 13:53:26.637"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15699</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:26.641" level="INFO">Running command 'kill 15699 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:26.638" endtime="20210730 13:53:26.642"/>
</kw>
<status status="PASS" starttime="20210730 13:53:26.638" endtime="20210730 13:53:26.642"/>
</iter>
<iter>
<var name="${pid}">15706</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:26.645" level="INFO">Running command 'kill 15706 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:26.642" endtime="20210730 13:53:26.645"/>
</kw>
<status status="PASS" starttime="20210730 13:53:26.642" endtime="20210730 13:53:26.646"/>
</iter>
<iter>
<var name="${pid}">15710</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:26.649" level="INFO">Running command 'kill 15710 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:26.646" endtime="20210730 13:53:26.650"/>
</kw>
<status status="PASS" starttime="20210730 13:53:26.646" endtime="20210730 13:53:26.650"/>
</iter>
<status status="PASS" starttime="20210730 13:53:26.638" endtime="20210730 13:53:26.650"/>
</for>
<status status="PASS" starttime="20210730 13:53:26.637" endtime="20210730 13:53:26.650"/>
</branch>
<status status="PASS" starttime="20210730 13:53:26.637" endtime="20210730 13:53:26.650"/>
</if>
<status status="PASS" starttime="20210730 13:53:26.621" endtime="20210730 13:53:26.651"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcd!?.'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:25.036" endtime="20210730 13:53:26.651">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t64" name="With Each Valid Token, Updating Password Of Each System User With abcd!?.! Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:26.658" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:26.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:26.669" level="INFO">${pids} = 15739</msg>
<status status="PASS" starttime="20210730 13:53:26.654" endtime="20210730 13:53:26.669"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:26.670" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:26.670" endtime="20210730 13:53:26.670"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:26.671" level="INFO">${pids} = ['15739']</msg>
<status status="PASS" starttime="20210730 13:53:26.671" endtime="20210730 13:53:26.671"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15739</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:26.675" level="INFO">Running command 'kill 15739 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:26.671" endtime="20210730 13:53:26.675"/>
</kw>
<status status="PASS" starttime="20210730 13:53:26.671" endtime="20210730 13:53:26.676"/>
</iter>
<status status="PASS" starttime="20210730 13:53:26.671" endtime="20210730 13:53:26.676"/>
</for>
<status status="PASS" starttime="20210730 13:53:26.671" endtime="20210730 13:53:26.676"/>
</branch>
<status status="PASS" starttime="20210730 13:53:26.671" endtime="20210730 13:53:26.676"/>
</if>
<status status="PASS" starttime="20210730 13:53:26.653" endtime="20210730 13:53:26.676"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:26.677" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:26.677" endtime="20210730 13:53:26.677"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:26.678" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:26.677" endtime="20210730 13:53:26.678"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:26.678" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:26.678" endtime="20210730 13:53:26.678"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:26.678" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:26.678" endtime="20210730 13:53:26.678"/>
</kw>
<msg timestamp="20210730 13:53:26.679" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:26.677" endtime="20210730 13:53:26.679"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:26.682" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:26.679" endtime="20210730 13:53:26.684"/>
</kw>
<status status="PASS" starttime="20210730 13:53:26.676" endtime="20210730 13:53:26.684"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:26.686" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:26.685" endtime="20210730 13:53:26.694"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:28.199" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:26.694" endtime="20210730 13:53:28.200"/>
</kw>
<status status="PASS" starttime="20210730 13:53:26.685" endtime="20210730 13:53:28.201"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:28.205" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:28.204" endtime="20210730 13:53:28.205"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:28.205" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:28.205" endtime="20210730 13:53:28.205"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:28.206" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:28.205" endtime="20210730 13:53:28.206"/>
</kw>
<msg timestamp="20210730 13:53:28.206" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:28.204" endtime="20210730 13:53:28.206"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:28.206" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:28.206" endtime="20210730 13:53:28.207"/>
</kw>
<status status="PASS" starttime="20210730 13:53:28.202" endtime="20210730 13:53:28.207"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:28.207" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:28.207" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:28.207" endtime="20210730 13:53:28.208"/>
</kw>
<status status="PASS" starttime="20210730 13:53:28.207" endtime="20210730 13:53:28.208"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:28.208" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:28.208" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:28.208" endtime="20210730 13:53:28.208"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:28.209" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:28.209" endtime="20210730 13:53:28.209"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:28.209" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:28.209" endtime="20210730 13:53:28.209"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:28.209" endtime="20210730 13:53:28.211"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:28.211" endtime="20210730 13:53:28.211"/>
</kw>
<status status="PASS" starttime="20210730 13:53:28.209" endtime="20210730 13:53:28.211"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:28.211" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:28.211" endtime="20210730 13:53:28.211"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:28.211" endtime="20210730 13:53:28.212"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:28.212" endtime="20210730 13:53:28.213"/>
</kw>
<status status="PASS" starttime="20210730 13:53:28.211" endtime="20210730 13:53:28.213"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:28.213" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:28.213" endtime="20210730 13:53:28.213"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:28.213" endtime="20210730 13:53:28.214"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:28.214" endtime="20210730 13:53:28.214"/>
</kw>
<status status="PASS" starttime="20210730 13:53:28.213" endtime="20210730 13:53:28.214"/>
</iter>
<status status="PASS" starttime="20210730 13:53:28.209" endtime="20210730 13:53:28.214"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:28.215" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:28.214" endtime="20210730 13:53:28.215"/>
</kw>
<status status="PASS" starttime="20210730 13:53:28.208" endtime="20210730 13:53:28.215"/>
</kw>
<status status="PASS" starttime="20210730 13:53:26.653" endtime="20210730 13:53:28.215"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd!?.!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:28.216" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:28.216" endtime="20210730 13:53:28.216"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:28.216" level="INFO">${payload} = {'password': 'abcd!?.!'}</msg>
<status status="PASS" starttime="20210730 13:53:28.216" endtime="20210730 13:53:28.216"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:28.226" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:28.227" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:28.217" endtime="20210730 13:53:28.227"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:28.227" endtime="20210730 13:53:28.227"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:28.227" endtime="20210730 13:53:28.227"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:28.217" endtime="20210730 13:53:28.227"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:28.216" endtime="20210730 13:53:28.227"/>
</for>
<status status="FAIL" starttime="20210730 13:53:28.215" endtime="20210730 13:53:28.227"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:28.215" endtime="20210730 13:53:28.227"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd!?.!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:28.228" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:28.228" endtime="20210730 13:53:28.228"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:28.229" level="INFO">${payload} = {'password': 'abcd!?.!'}</msg>
<status status="PASS" starttime="20210730 13:53:28.228" endtime="20210730 13:53:28.229"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:28.233" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:28.233" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:28.229" endtime="20210730 13:53:28.233"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:28.233" endtime="20210730 13:53:28.233"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:28.233" endtime="20210730 13:53:28.234"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:28.229" endtime="20210730 13:53:28.234"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:28.229" endtime="20210730 13:53:28.234"/>
</for>
<status status="FAIL" starttime="20210730 13:53:28.227" endtime="20210730 13:53:28.234"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:28.227" endtime="20210730 13:53:28.234"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd!?.!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:28.235" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:28.234" endtime="20210730 13:53:28.235"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:28.235" level="INFO">${payload} = {'password': 'abcd!?.!'}</msg>
<status status="PASS" starttime="20210730 13:53:28.235" endtime="20210730 13:53:28.235"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:28.241" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:28.241" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:28.235" endtime="20210730 13:53:28.241"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:28.242" endtime="20210730 13:53:28.242"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:28.242" endtime="20210730 13:53:28.242"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:28.235" endtime="20210730 13:53:28.242"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:28.235" endtime="20210730 13:53:28.242"/>
</for>
<status status="FAIL" starttime="20210730 13:53:28.234" endtime="20210730 13:53:28.242"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:28.234" endtime="20210730 13:53:28.242"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:28.215" endtime="20210730 13:53:28.242"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:28.247" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:28.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:28.258" level="INFO">${pids} = 15762
15769
15773</msg>
<status status="PASS" starttime="20210730 13:53:28.243" endtime="20210730 13:53:28.258"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:28.259" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:28.258" endtime="20210730 13:53:28.259"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:28.259" level="INFO">${pids} = ['15762', '15769', '15773']</msg>
<status status="PASS" starttime="20210730 13:53:28.259" endtime="20210730 13:53:28.260"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15762</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:28.263" level="INFO">Running command 'kill 15762 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:28.260" endtime="20210730 13:53:28.263"/>
</kw>
<status status="PASS" starttime="20210730 13:53:28.260" endtime="20210730 13:53:28.263"/>
</iter>
<iter>
<var name="${pid}">15769</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:28.266" level="INFO">Running command 'kill 15769 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:28.264" endtime="20210730 13:53:28.268"/>
</kw>
<status status="PASS" starttime="20210730 13:53:28.264" endtime="20210730 13:53:28.268"/>
</iter>
<iter>
<var name="${pid}">15773</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:28.271" level="INFO">Running command 'kill 15773 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:28.269" endtime="20210730 13:53:28.272"/>
</kw>
<status status="PASS" starttime="20210730 13:53:28.268" endtime="20210730 13:53:28.272"/>
</iter>
<status status="PASS" starttime="20210730 13:53:28.260" endtime="20210730 13:53:28.272"/>
</for>
<status status="PASS" starttime="20210730 13:53:28.259" endtime="20210730 13:53:28.272"/>
</branch>
<status status="PASS" starttime="20210730 13:53:28.259" endtime="20210730 13:53:28.272"/>
</if>
<status status="PASS" starttime="20210730 13:53:28.243" endtime="20210730 13:53:28.273"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcd!?.!'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:26.652" endtime="20210730 13:53:28.273">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t65" name="With Each Valid Token, Updating Password Of Each System User With abcd!?.!abcd!?.!abcd?? Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:28.280" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:28.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:28.291" level="INFO">${pids} = 15802</msg>
<status status="PASS" starttime="20210730 13:53:28.276" endtime="20210730 13:53:28.291"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:28.292" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:28.291" endtime="20210730 13:53:28.292"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:28.292" level="INFO">${pids} = ['15802']</msg>
<status status="PASS" starttime="20210730 13:53:28.292" endtime="20210730 13:53:28.293"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15802</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:28.296" level="INFO">Running command 'kill 15802 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:28.293" endtime="20210730 13:53:28.296"/>
</kw>
<status status="PASS" starttime="20210730 13:53:28.293" endtime="20210730 13:53:28.296"/>
</iter>
<status status="PASS" starttime="20210730 13:53:28.293" endtime="20210730 13:53:28.296"/>
</for>
<status status="PASS" starttime="20210730 13:53:28.292" endtime="20210730 13:53:28.296"/>
</branch>
<status status="PASS" starttime="20210730 13:53:28.292" endtime="20210730 13:53:28.296"/>
</if>
<status status="PASS" starttime="20210730 13:53:28.275" endtime="20210730 13:53:28.296"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:28.297" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:28.297" endtime="20210730 13:53:28.298"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:28.298" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:28.298" endtime="20210730 13:53:28.298"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:28.298" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:28.298" endtime="20210730 13:53:28.298"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:28.299" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:28.299" endtime="20210730 13:53:28.299"/>
</kw>
<msg timestamp="20210730 13:53:28.299" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:28.298" endtime="20210730 13:53:28.299"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:28.302" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:28.299" endtime="20210730 13:53:28.304"/>
</kw>
<status status="PASS" starttime="20210730 13:53:28.297" endtime="20210730 13:53:28.304"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:28.306" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:28.305" endtime="20210730 13:53:28.312"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:29.813" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:28.312" endtime="20210730 13:53:29.813"/>
</kw>
<status status="PASS" starttime="20210730 13:53:28.305" endtime="20210730 13:53:29.813"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:29.815" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:29.814" endtime="20210730 13:53:29.815"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:29.815" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:29.815" endtime="20210730 13:53:29.815"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:29.816" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:29.815" endtime="20210730 13:53:29.816"/>
</kw>
<msg timestamp="20210730 13:53:29.816" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:29.814" endtime="20210730 13:53:29.816"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:29.817" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:29.816" endtime="20210730 13:53:29.817"/>
</kw>
<status status="PASS" starttime="20210730 13:53:29.814" endtime="20210730 13:53:29.817"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:29.818" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:29.818" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:29.818" endtime="20210730 13:53:29.819"/>
</kw>
<status status="PASS" starttime="20210730 13:53:29.817" endtime="20210730 13:53:29.819"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:29.819" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:29.819" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:29.819" endtime="20210730 13:53:29.819"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:29.820" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:29.820" endtime="20210730 13:53:29.820"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:29.820" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:29.820" endtime="20210730 13:53:29.820"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:29.820" endtime="20210730 13:53:29.821"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:29.821" endtime="20210730 13:53:29.821"/>
</kw>
<status status="PASS" starttime="20210730 13:53:29.820" endtime="20210730 13:53:29.821"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:29.822" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:29.822" endtime="20210730 13:53:29.822"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:29.822" endtime="20210730 13:53:29.823"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:29.823" endtime="20210730 13:53:29.823"/>
</kw>
<status status="PASS" starttime="20210730 13:53:29.822" endtime="20210730 13:53:29.823"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:29.824" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:29.823" endtime="20210730 13:53:29.824"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:29.824" endtime="20210730 13:53:29.824"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:29.825" endtime="20210730 13:53:29.825"/>
</kw>
<status status="PASS" starttime="20210730 13:53:29.823" endtime="20210730 13:53:29.825"/>
</iter>
<status status="PASS" starttime="20210730 13:53:29.820" endtime="20210730 13:53:29.825"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:29.825" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:29.825" endtime="20210730 13:53:29.826"/>
</kw>
<status status="PASS" starttime="20210730 13:53:29.819" endtime="20210730 13:53:29.826"/>
</kw>
<status status="PASS" starttime="20210730 13:53:28.275" endtime="20210730 13:53:29.826"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd!?.!abcd!?.!abcd??</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:29.827" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:29.827" endtime="20210730 13:53:29.827"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:29.827" level="INFO">${payload} = {'password': 'abcd!?.!abcd!?.!abcd??'}</msg>
<status status="PASS" starttime="20210730 13:53:29.827" endtime="20210730 13:53:29.827"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:29.836" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:29.836" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:29.828" endtime="20210730 13:53:29.836"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:29.837" endtime="20210730 13:53:29.837"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:29.837" endtime="20210730 13:53:29.837"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:29.828" endtime="20210730 13:53:29.837"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:29.827" endtime="20210730 13:53:29.837"/>
</for>
<status status="FAIL" starttime="20210730 13:53:29.826" endtime="20210730 13:53:29.837"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:29.826" endtime="20210730 13:53:29.837"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd!?.!abcd!?.!abcd??</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:29.838" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:29.838" endtime="20210730 13:53:29.838"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:29.839" level="INFO">${payload} = {'password': 'abcd!?.!abcd!?.!abcd??'}</msg>
<status status="PASS" starttime="20210730 13:53:29.838" endtime="20210730 13:53:29.839"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:29.843" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:29.843" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:29.839" endtime="20210730 13:53:29.843"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:29.844" endtime="20210730 13:53:29.844"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:29.844" endtime="20210730 13:53:29.844"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:29.839" endtime="20210730 13:53:29.844"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:29.839" endtime="20210730 13:53:29.844"/>
</for>
<status status="FAIL" starttime="20210730 13:53:29.837" endtime="20210730 13:53:29.844"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:29.837" endtime="20210730 13:53:29.844"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd!?.!abcd!?.!abcd??</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:29.845" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:29.845" endtime="20210730 13:53:29.845"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:29.846" level="INFO">${payload} = {'password': 'abcd!?.!abcd!?.!abcd??'}</msg>
<status status="PASS" starttime="20210730 13:53:29.845" endtime="20210730 13:53:29.846"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:29.850" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:29.850" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:29.846" endtime="20210730 13:53:29.850"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:29.851" endtime="20210730 13:53:29.851"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:29.851" endtime="20210730 13:53:29.851"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:29.846" endtime="20210730 13:53:29.851"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:29.846" endtime="20210730 13:53:29.851"/>
</for>
<status status="FAIL" starttime="20210730 13:53:29.844" endtime="20210730 13:53:29.851"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:29.844" endtime="20210730 13:53:29.851"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:29.826" endtime="20210730 13:53:29.851"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:29.856" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:29.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:29.866" level="INFO">${pids} = 15825
15832
15837</msg>
<status status="PASS" starttime="20210730 13:53:29.852" endtime="20210730 13:53:29.866"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:29.867" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:29.866" endtime="20210730 13:53:29.867"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:29.868" level="INFO">${pids} = ['15825', '15832', '15837']</msg>
<status status="PASS" starttime="20210730 13:53:29.867" endtime="20210730 13:53:29.868"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15825</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:29.872" level="INFO">Running command 'kill 15825 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:29.868" endtime="20210730 13:53:29.873"/>
</kw>
<status status="PASS" starttime="20210730 13:53:29.868" endtime="20210730 13:53:29.873"/>
</iter>
<iter>
<var name="${pid}">15832</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:29.878" level="INFO">Running command 'kill 15832 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:29.874" endtime="20210730 13:53:29.879"/>
</kw>
<status status="PASS" starttime="20210730 13:53:29.873" endtime="20210730 13:53:29.880"/>
</iter>
<iter>
<var name="${pid}">15837</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:29.886" level="INFO">Running command 'kill 15837 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:29.880" endtime="20210730 13:53:29.887"/>
</kw>
<status status="PASS" starttime="20210730 13:53:29.880" endtime="20210730 13:53:29.887"/>
</iter>
<status status="PASS" starttime="20210730 13:53:29.868" endtime="20210730 13:53:29.887"/>
</for>
<status status="PASS" starttime="20210730 13:53:29.867" endtime="20210730 13:53:29.887"/>
</branch>
<status status="PASS" starttime="20210730 13:53:29.867" endtime="20210730 13:53:29.887"/>
</if>
<status status="PASS" starttime="20210730 13:53:29.851" endtime="20210730 13:53:29.887"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcd!?.!abcd!?.!abcd??'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:28.274" endtime="20210730 13:53:29.888">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t66" name="With Each Valid Token, Updating Password Of Each System User With ABCD012 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:29.893" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:29.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:29.903" level="INFO">${pids} = 15866</msg>
<status status="PASS" starttime="20210730 13:53:29.890" endtime="20210730 13:53:29.903"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:29.904" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:29.904" endtime="20210730 13:53:29.904"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:29.905" level="INFO">${pids} = ['15866']</msg>
<status status="PASS" starttime="20210730 13:53:29.905" endtime="20210730 13:53:29.905"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15866</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:29.909" level="INFO">Running command 'kill 15866 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:29.905" endtime="20210730 13:53:29.909"/>
</kw>
<status status="PASS" starttime="20210730 13:53:29.905" endtime="20210730 13:53:29.909"/>
</iter>
<status status="PASS" starttime="20210730 13:53:29.905" endtime="20210730 13:53:29.910"/>
</for>
<status status="PASS" starttime="20210730 13:53:29.904" endtime="20210730 13:53:29.910"/>
</branch>
<status status="PASS" starttime="20210730 13:53:29.904" endtime="20210730 13:53:29.910"/>
</if>
<status status="PASS" starttime="20210730 13:53:29.889" endtime="20210730 13:53:29.910"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:29.911" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:29.911" endtime="20210730 13:53:29.911"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:29.911" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:29.911" endtime="20210730 13:53:29.912"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:29.912" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:29.912" endtime="20210730 13:53:29.912"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:29.912" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:29.912" endtime="20210730 13:53:29.912"/>
</kw>
<msg timestamp="20210730 13:53:29.912" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:29.911" endtime="20210730 13:53:29.912"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:29.921" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:29.913" endtime="20210730 13:53:29.923"/>
</kw>
<status status="PASS" starttime="20210730 13:53:29.910" endtime="20210730 13:53:29.923"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:29.925" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:29.924" endtime="20210730 13:53:29.929"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:31.430" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:29.929" endtime="20210730 13:53:31.430"/>
</kw>
<status status="PASS" starttime="20210730 13:53:29.924" endtime="20210730 13:53:31.430"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:31.432" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:31.431" endtime="20210730 13:53:31.432"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:31.432" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:31.432" endtime="20210730 13:53:31.432"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:31.433" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:31.432" endtime="20210730 13:53:31.433"/>
</kw>
<msg timestamp="20210730 13:53:31.433" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:31.431" endtime="20210730 13:53:31.433"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:31.434" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:31.434" endtime="20210730 13:53:31.434"/>
</kw>
<status status="PASS" starttime="20210730 13:53:31.431" endtime="20210730 13:53:31.434"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:31.435" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:31.435" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:31.435" endtime="20210730 13:53:31.435"/>
</kw>
<status status="PASS" starttime="20210730 13:53:31.435" endtime="20210730 13:53:31.435"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:31.436" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:31.436" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:31.436" endtime="20210730 13:53:31.436"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:31.437" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:31.436" endtime="20210730 13:53:31.437"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:31.437" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:31.437" endtime="20210730 13:53:31.437"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:31.438" endtime="20210730 13:53:31.438"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:31.439" endtime="20210730 13:53:31.439"/>
</kw>
<status status="PASS" starttime="20210730 13:53:31.437" endtime="20210730 13:53:31.439"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:31.439" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:31.439" endtime="20210730 13:53:31.439"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:31.439" endtime="20210730 13:53:31.440"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:31.440" endtime="20210730 13:53:31.441"/>
</kw>
<status status="PASS" starttime="20210730 13:53:31.439" endtime="20210730 13:53:31.441"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:31.441" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:31.441" endtime="20210730 13:53:31.441"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:31.441" endtime="20210730 13:53:31.442"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:31.442" endtime="20210730 13:53:31.442"/>
</kw>
<status status="PASS" starttime="20210730 13:53:31.441" endtime="20210730 13:53:31.442"/>
</iter>
<status status="PASS" starttime="20210730 13:53:31.437" endtime="20210730 13:53:31.442"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:31.443" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:31.442" endtime="20210730 13:53:31.443"/>
</kw>
<status status="PASS" starttime="20210730 13:53:31.436" endtime="20210730 13:53:31.443"/>
</kw>
<status status="PASS" starttime="20210730 13:53:29.889" endtime="20210730 13:53:31.443"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD012</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:31.444" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:31.444" endtime="20210730 13:53:31.444"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:31.445" level="INFO">${payload} = {'password': 'ABCD012'}</msg>
<status status="PASS" starttime="20210730 13:53:31.444" endtime="20210730 13:53:31.445"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:31.455" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:31.455" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:31.445" endtime="20210730 13:53:31.455"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:31.455" endtime="20210730 13:53:31.455"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:31.455" endtime="20210730 13:53:31.455"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:31.445" endtime="20210730 13:53:31.456"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:31.445" endtime="20210730 13:53:31.456"/>
</for>
<status status="FAIL" starttime="20210730 13:53:31.443" endtime="20210730 13:53:31.456"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:31.443" endtime="20210730 13:53:31.456"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD012</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:31.459" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:31.459" endtime="20210730 13:53:31.460"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:31.460" level="INFO">${payload} = {'password': 'ABCD012'}</msg>
<status status="PASS" starttime="20210730 13:53:31.460" endtime="20210730 13:53:31.460"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:31.466" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:31.466" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:31.461" endtime="20210730 13:53:31.466"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:31.466" endtime="20210730 13:53:31.466"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:31.466" endtime="20210730 13:53:31.467"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:31.460" endtime="20210730 13:53:31.467"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:31.460" endtime="20210730 13:53:31.467"/>
</for>
<status status="FAIL" starttime="20210730 13:53:31.456" endtime="20210730 13:53:31.467"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:31.456" endtime="20210730 13:53:31.467"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD012</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:31.468" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:31.467" endtime="20210730 13:53:31.468"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:31.468" level="INFO">${payload} = {'password': 'ABCD012'}</msg>
<status status="PASS" starttime="20210730 13:53:31.468" endtime="20210730 13:53:31.468"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:31.476" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:31.476" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:31.469" endtime="20210730 13:53:31.476"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:31.476" endtime="20210730 13:53:31.476"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:31.476" endtime="20210730 13:53:31.476"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:31.469" endtime="20210730 13:53:31.476"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:31.468" endtime="20210730 13:53:31.476"/>
</for>
<status status="FAIL" starttime="20210730 13:53:31.467" endtime="20210730 13:53:31.477"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:31.467" endtime="20210730 13:53:31.477"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:31.443" endtime="20210730 13:53:31.477"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:31.481" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:31.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:31.492" level="INFO">${pids} = 15889
15896
15900</msg>
<status status="PASS" starttime="20210730 13:53:31.477" endtime="20210730 13:53:31.492"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:31.493" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:31.492" endtime="20210730 13:53:31.493"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:31.493" level="INFO">${pids} = ['15889', '15896', '15900']</msg>
<status status="PASS" starttime="20210730 13:53:31.493" endtime="20210730 13:53:31.493"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15889</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:31.498" level="INFO">Running command 'kill 15889 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:31.494" endtime="20210730 13:53:31.498"/>
</kw>
<status status="PASS" starttime="20210730 13:53:31.494" endtime="20210730 13:53:31.498"/>
</iter>
<iter>
<var name="${pid}">15896</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:31.505" level="INFO">Running command 'kill 15896 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:31.499" endtime="20210730 13:53:31.505"/>
</kw>
<status status="PASS" starttime="20210730 13:53:31.499" endtime="20210730 13:53:31.505"/>
</iter>
<iter>
<var name="${pid}">15900</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:31.509" level="INFO">Running command 'kill 15900 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:31.506" endtime="20210730 13:53:31.510"/>
</kw>
<status status="PASS" starttime="20210730 13:53:31.506" endtime="20210730 13:53:31.510"/>
</iter>
<status status="PASS" starttime="20210730 13:53:31.493" endtime="20210730 13:53:31.510"/>
</for>
<status status="PASS" starttime="20210730 13:53:31.493" endtime="20210730 13:53:31.510"/>
</branch>
<status status="PASS" starttime="20210730 13:53:31.493" endtime="20210730 13:53:31.510"/>
</if>
<status status="PASS" starttime="20210730 13:53:31.477" endtime="20210730 13:53:31.510"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCD012'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:29.888" endtime="20210730 13:53:31.510">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t67" name="With Each Valid Token, Updating Password Of Each System User With ABCD0123 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:31.515" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:31.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:31.526" level="INFO">${pids} = 15929</msg>
<status status="PASS" starttime="20210730 13:53:31.512" endtime="20210730 13:53:31.526"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:31.527" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:31.526" endtime="20210730 13:53:31.527"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:31.528" level="INFO">${pids} = ['15929']</msg>
<status status="PASS" starttime="20210730 13:53:31.527" endtime="20210730 13:53:31.528"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15929</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:31.531" level="INFO">Running command 'kill 15929 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:31.528" endtime="20210730 13:53:31.531"/>
</kw>
<status status="PASS" starttime="20210730 13:53:31.528" endtime="20210730 13:53:31.532"/>
</iter>
<status status="PASS" starttime="20210730 13:53:31.528" endtime="20210730 13:53:31.532"/>
</for>
<status status="PASS" starttime="20210730 13:53:31.527" endtime="20210730 13:53:31.532"/>
</branch>
<status status="PASS" starttime="20210730 13:53:31.527" endtime="20210730 13:53:31.532"/>
</if>
<status status="PASS" starttime="20210730 13:53:31.512" endtime="20210730 13:53:31.532"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:31.533" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:31.533" endtime="20210730 13:53:31.533"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:31.534" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:31.534" endtime="20210730 13:53:31.534"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:31.534" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:31.534" endtime="20210730 13:53:31.534"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:31.535" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:31.534" endtime="20210730 13:53:31.535"/>
</kw>
<msg timestamp="20210730 13:53:31.535" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:31.533" endtime="20210730 13:53:31.535"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:31.543" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:31.535" endtime="20210730 13:53:31.544"/>
</kw>
<status status="PASS" starttime="20210730 13:53:31.532" endtime="20210730 13:53:31.544"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:31.546" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:31.546" endtime="20210730 13:53:31.560"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:33.062" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:31.561" endtime="20210730 13:53:33.062"/>
</kw>
<status status="PASS" starttime="20210730 13:53:31.545" endtime="20210730 13:53:33.063"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:33.064" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:33.064" endtime="20210730 13:53:33.064"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:33.064" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:33.064" endtime="20210730 13:53:33.064"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:33.065" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:33.065" endtime="20210730 13:53:33.065"/>
</kw>
<msg timestamp="20210730 13:53:33.065" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:33.063" endtime="20210730 13:53:33.065"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:33.066" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:33.065" endtime="20210730 13:53:33.066"/>
</kw>
<status status="PASS" starttime="20210730 13:53:33.063" endtime="20210730 13:53:33.066"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:33.066" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:33.066" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:33.066" endtime="20210730 13:53:33.067"/>
</kw>
<status status="PASS" starttime="20210730 13:53:33.066" endtime="20210730 13:53:33.067"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:33.067" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:33.067" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:33.067" endtime="20210730 13:53:33.067"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:33.068" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:33.067" endtime="20210730 13:53:33.068"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:33.068" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:33.068" endtime="20210730 13:53:33.068"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:33.068" endtime="20210730 13:53:33.069"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:33.069" endtime="20210730 13:53:33.069"/>
</kw>
<status status="PASS" starttime="20210730 13:53:33.068" endtime="20210730 13:53:33.069"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:33.070" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:33.069" endtime="20210730 13:53:33.070"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:33.070" endtime="20210730 13:53:33.070"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:33.070" endtime="20210730 13:53:33.071"/>
</kw>
<status status="PASS" starttime="20210730 13:53:33.069" endtime="20210730 13:53:33.071"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:33.071" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:33.071" endtime="20210730 13:53:33.071"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:33.071" endtime="20210730 13:53:33.072"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:33.072" endtime="20210730 13:53:33.072"/>
</kw>
<status status="PASS" starttime="20210730 13:53:33.071" endtime="20210730 13:53:33.072"/>
</iter>
<status status="PASS" starttime="20210730 13:53:33.068" endtime="20210730 13:53:33.072"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:33.073" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:33.072" endtime="20210730 13:53:33.073"/>
</kw>
<status status="PASS" starttime="20210730 13:53:33.067" endtime="20210730 13:53:33.073"/>
</kw>
<status status="PASS" starttime="20210730 13:53:31.512" endtime="20210730 13:53:33.073"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD0123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:33.075" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:33.074" endtime="20210730 13:53:33.075"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:33.075" level="INFO">${payload} = {'password': 'ABCD0123'}</msg>
<status status="PASS" starttime="20210730 13:53:33.075" endtime="20210730 13:53:33.075"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:33.085" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:33.086" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:33.075" endtime="20210730 13:53:33.086"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:33.086" endtime="20210730 13:53:33.086"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:33.086" endtime="20210730 13:53:33.086"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:33.075" endtime="20210730 13:53:33.086"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:33.075" endtime="20210730 13:53:33.086"/>
</for>
<status status="FAIL" starttime="20210730 13:53:33.074" endtime="20210730 13:53:33.086"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:33.073" endtime="20210730 13:53:33.086"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD0123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:33.087" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:33.087" endtime="20210730 13:53:33.088"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:33.088" level="INFO">${payload} = {'password': 'ABCD0123'}</msg>
<status status="PASS" starttime="20210730 13:53:33.088" endtime="20210730 13:53:33.088"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:33.093" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:33.093" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:33.088" endtime="20210730 13:53:33.093"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:33.093" endtime="20210730 13:53:33.093"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:33.093" endtime="20210730 13:53:33.093"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:33.088" endtime="20210730 13:53:33.093"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:33.088" endtime="20210730 13:53:33.094"/>
</for>
<status status="FAIL" starttime="20210730 13:53:33.087" endtime="20210730 13:53:33.094"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:33.087" endtime="20210730 13:53:33.094"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD0123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:33.095" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:33.095" endtime="20210730 13:53:33.095"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:33.095" level="INFO">${payload} = {'password': 'ABCD0123'}</msg>
<status status="PASS" starttime="20210730 13:53:33.095" endtime="20210730 13:53:33.095"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:33.099" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:33.099" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:33.096" endtime="20210730 13:53:33.100"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:33.100" endtime="20210730 13:53:33.100"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:33.100" endtime="20210730 13:53:33.100"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:33.096" endtime="20210730 13:53:33.100"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:33.095" endtime="20210730 13:53:33.100"/>
</for>
<status status="FAIL" starttime="20210730 13:53:33.094" endtime="20210730 13:53:33.100"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:33.094" endtime="20210730 13:53:33.100"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:33.073" endtime="20210730 13:53:33.100"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:33.105" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:33.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:33.116" level="INFO">${pids} = 15952
15959
15963</msg>
<status status="PASS" starttime="20210730 13:53:33.101" endtime="20210730 13:53:33.116"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:33.117" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:33.116" endtime="20210730 13:53:33.117"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:33.118" level="INFO">${pids} = ['15952', '15959', '15963']</msg>
<status status="PASS" starttime="20210730 13:53:33.118" endtime="20210730 13:53:33.118"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15952</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:33.122" level="INFO">Running command 'kill 15952 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:33.119" endtime="20210730 13:53:33.122"/>
</kw>
<status status="PASS" starttime="20210730 13:53:33.118" endtime="20210730 13:53:33.122"/>
</iter>
<iter>
<var name="${pid}">15959</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:33.126" level="INFO">Running command 'kill 15959 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:33.123" endtime="20210730 13:53:33.127"/>
</kw>
<status status="PASS" starttime="20210730 13:53:33.122" endtime="20210730 13:53:33.127"/>
</iter>
<iter>
<var name="${pid}">15963</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:33.132" level="INFO">Running command 'kill 15963 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:33.127" endtime="20210730 13:53:33.132"/>
</kw>
<status status="PASS" starttime="20210730 13:53:33.127" endtime="20210730 13:53:33.132"/>
</iter>
<status status="PASS" starttime="20210730 13:53:33.118" endtime="20210730 13:53:33.132"/>
</for>
<status status="PASS" starttime="20210730 13:53:33.117" endtime="20210730 13:53:33.133"/>
</branch>
<status status="PASS" starttime="20210730 13:53:33.117" endtime="20210730 13:53:33.133"/>
</if>
<status status="PASS" starttime="20210730 13:53:33.101" endtime="20210730 13:53:33.133"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCD0123'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:31.511" endtime="20210730 13:53:33.133">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t68" name="With Each Valid Token, Updating Password Of Each System User With ABCD0123ABCD0123ABCD01 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:33.139" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:33.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:33.149" level="INFO">${pids} = 15992</msg>
<status status="PASS" starttime="20210730 13:53:33.135" endtime="20210730 13:53:33.149"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:33.150" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:33.150" endtime="20210730 13:53:33.150"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:33.152" level="INFO">${pids} = ['15992']</msg>
<status status="PASS" starttime="20210730 13:53:33.151" endtime="20210730 13:53:33.152"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15992</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:33.155" level="INFO">Running command 'kill 15992 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:33.152" endtime="20210730 13:53:33.156"/>
</kw>
<status status="PASS" starttime="20210730 13:53:33.152" endtime="20210730 13:53:33.156"/>
</iter>
<status status="PASS" starttime="20210730 13:53:33.152" endtime="20210730 13:53:33.156"/>
</for>
<status status="PASS" starttime="20210730 13:53:33.151" endtime="20210730 13:53:33.156"/>
</branch>
<status status="PASS" starttime="20210730 13:53:33.150" endtime="20210730 13:53:33.156"/>
</if>
<status status="PASS" starttime="20210730 13:53:33.135" endtime="20210730 13:53:33.156"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:33.158" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:33.157" endtime="20210730 13:53:33.158"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:33.159" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:33.158" endtime="20210730 13:53:33.159"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:33.159" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:33.159" endtime="20210730 13:53:33.159"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:33.159" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:33.159" endtime="20210730 13:53:33.159"/>
</kw>
<msg timestamp="20210730 13:53:33.160" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:33.158" endtime="20210730 13:53:33.160"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:33.163" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:33.160" endtime="20210730 13:53:33.166"/>
</kw>
<status status="PASS" starttime="20210730 13:53:33.157" endtime="20210730 13:53:33.166"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:33.167" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:33.167" endtime="20210730 13:53:33.174"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:34.677" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:33.174" endtime="20210730 13:53:34.677"/>
</kw>
<status status="PASS" starttime="20210730 13:53:33.166" endtime="20210730 13:53:34.677"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:34.679" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:34.678" endtime="20210730 13:53:34.679"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:34.679" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:34.679" endtime="20210730 13:53:34.679"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:34.679" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:34.679" endtime="20210730 13:53:34.679"/>
</kw>
<msg timestamp="20210730 13:53:34.680" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:34.678" endtime="20210730 13:53:34.680"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:34.680" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:34.680" endtime="20210730 13:53:34.680"/>
</kw>
<status status="PASS" starttime="20210730 13:53:34.678" endtime="20210730 13:53:34.680"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:34.681" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:34.681" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:34.681" endtime="20210730 13:53:34.681"/>
</kw>
<status status="PASS" starttime="20210730 13:53:34.681" endtime="20210730 13:53:34.681"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:34.682" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:34.682" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:34.682" endtime="20210730 13:53:34.682"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:34.682" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:34.682" endtime="20210730 13:53:34.682"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:34.683" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:34.683" endtime="20210730 13:53:34.683"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:34.683" endtime="20210730 13:53:34.684"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:34.685" endtime="20210730 13:53:34.685"/>
</kw>
<status status="PASS" starttime="20210730 13:53:34.683" endtime="20210730 13:53:34.685"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:34.685" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:34.685" endtime="20210730 13:53:34.685"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:34.686" endtime="20210730 13:53:34.686"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:34.686" endtime="20210730 13:53:34.687"/>
</kw>
<status status="PASS" starttime="20210730 13:53:34.685" endtime="20210730 13:53:34.687"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:34.687" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:34.687" endtime="20210730 13:53:34.687"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:34.687" endtime="20210730 13:53:34.688"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:34.688" endtime="20210730 13:53:34.688"/>
</kw>
<status status="PASS" starttime="20210730 13:53:34.687" endtime="20210730 13:53:34.688"/>
</iter>
<status status="PASS" starttime="20210730 13:53:34.682" endtime="20210730 13:53:34.688"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:34.689" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:34.688" endtime="20210730 13:53:34.689"/>
</kw>
<status status="PASS" starttime="20210730 13:53:34.681" endtime="20210730 13:53:34.689"/>
</kw>
<status status="PASS" starttime="20210730 13:53:33.135" endtime="20210730 13:53:34.689"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD0123ABCD0123ABCD01</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:34.690" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:34.690" endtime="20210730 13:53:34.690"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:34.690" level="INFO">${payload} = {'password': 'ABCD0123ABCD0123ABCD01'}</msg>
<status status="PASS" starttime="20210730 13:53:34.690" endtime="20210730 13:53:34.690"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:34.699" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:34.700" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:34.691" endtime="20210730 13:53:34.700"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:34.700" endtime="20210730 13:53:34.700"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:34.700" endtime="20210730 13:53:34.700"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:34.691" endtime="20210730 13:53:34.700"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:34.690" endtime="20210730 13:53:34.700"/>
</for>
<status status="FAIL" starttime="20210730 13:53:34.689" endtime="20210730 13:53:34.701"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:34.689" endtime="20210730 13:53:34.701"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD0123ABCD0123ABCD01</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:34.702" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:34.701" endtime="20210730 13:53:34.702"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:34.702" level="INFO">${payload} = {'password': 'ABCD0123ABCD0123ABCD01'}</msg>
<status status="PASS" starttime="20210730 13:53:34.702" endtime="20210730 13:53:34.702"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:34.707" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:34.707" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:34.703" endtime="20210730 13:53:34.707"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:34.707" endtime="20210730 13:53:34.708"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:34.708" endtime="20210730 13:53:34.708"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:34.702" endtime="20210730 13:53:34.708"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:34.702" endtime="20210730 13:53:34.708"/>
</for>
<status status="FAIL" starttime="20210730 13:53:34.701" endtime="20210730 13:53:34.708"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:34.701" endtime="20210730 13:53:34.708"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD0123ABCD0123ABCD01</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:34.709" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:34.709" endtime="20210730 13:53:34.709"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:34.709" level="INFO">${payload} = {'password': 'ABCD0123ABCD0123ABCD01'}</msg>
<status status="PASS" starttime="20210730 13:53:34.709" endtime="20210730 13:53:34.709"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:34.713" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:34.714" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:34.710" endtime="20210730 13:53:34.714"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:34.714" endtime="20210730 13:53:34.714"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:34.714" endtime="20210730 13:53:34.714"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:34.710" endtime="20210730 13:53:34.714"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:34.709" endtime="20210730 13:53:34.714"/>
</for>
<status status="FAIL" starttime="20210730 13:53:34.708" endtime="20210730 13:53:34.714"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:34.708" endtime="20210730 13:53:34.714"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:34.689" endtime="20210730 13:53:34.714"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:34.720" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:34.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:34.730" level="INFO">${pids} = 16015
16022
16026</msg>
<status status="PASS" starttime="20210730 13:53:34.715" endtime="20210730 13:53:34.730"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:34.731" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:34.730" endtime="20210730 13:53:34.731"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:34.731" level="INFO">${pids} = ['16015', '16022', '16026']</msg>
<status status="PASS" starttime="20210730 13:53:34.731" endtime="20210730 13:53:34.731"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16015</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:34.735" level="INFO">Running command 'kill 16015 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:34.732" endtime="20210730 13:53:34.736"/>
</kw>
<status status="PASS" starttime="20210730 13:53:34.732" endtime="20210730 13:53:34.736"/>
</iter>
<iter>
<var name="${pid}">16022</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:34.739" level="INFO">Running command 'kill 16022 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:34.737" endtime="20210730 13:53:34.739"/>
</kw>
<status status="PASS" starttime="20210730 13:53:34.736" endtime="20210730 13:53:34.739"/>
</iter>
<iter>
<var name="${pid}">16026</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:34.744" level="INFO">Running command 'kill 16026 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:34.740" endtime="20210730 13:53:34.744"/>
</kw>
<status status="PASS" starttime="20210730 13:53:34.739" endtime="20210730 13:53:34.744"/>
</iter>
<status status="PASS" starttime="20210730 13:53:34.732" endtime="20210730 13:53:34.744"/>
</for>
<status status="PASS" starttime="20210730 13:53:34.731" endtime="20210730 13:53:34.744"/>
</branch>
<status status="PASS" starttime="20210730 13:53:34.731" endtime="20210730 13:53:34.744"/>
</if>
<status status="PASS" starttime="20210730 13:53:34.715" endtime="20210730 13:53:34.744"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCD0123ABCD0123ABCD01'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:33.134" endtime="20210730 13:53:34.745">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t69" name="With Each Valid Token, Updating Password Of Each System User With ABCD!?. Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:34.751" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:34.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:34.762" level="INFO">${pids} = 16056</msg>
<status status="PASS" starttime="20210730 13:53:34.748" endtime="20210730 13:53:34.762"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:34.762" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:34.762" endtime="20210730 13:53:34.763"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:34.763" level="INFO">${pids} = ['16056']</msg>
<status status="PASS" starttime="20210730 13:53:34.763" endtime="20210730 13:53:34.763"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16056</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:34.768" level="INFO">Running command 'kill 16056 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:34.764" endtime="20210730 13:53:34.769"/>
</kw>
<status status="PASS" starttime="20210730 13:53:34.763" endtime="20210730 13:53:34.769"/>
</iter>
<status status="PASS" starttime="20210730 13:53:34.763" endtime="20210730 13:53:34.769"/>
</for>
<status status="PASS" starttime="20210730 13:53:34.763" endtime="20210730 13:53:34.769"/>
</branch>
<status status="PASS" starttime="20210730 13:53:34.763" endtime="20210730 13:53:34.769"/>
</if>
<status status="PASS" starttime="20210730 13:53:34.747" endtime="20210730 13:53:34.769"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:34.770" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:34.770" endtime="20210730 13:53:34.770"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:34.771" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:34.771" endtime="20210730 13:53:34.771"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:34.771" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:34.771" endtime="20210730 13:53:34.771"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:34.772" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:34.771" endtime="20210730 13:53:34.772"/>
</kw>
<msg timestamp="20210730 13:53:34.772" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:34.770" endtime="20210730 13:53:34.772"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:34.776" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:34.772" endtime="20210730 13:53:34.778"/>
</kw>
<status status="PASS" starttime="20210730 13:53:34.769" endtime="20210730 13:53:34.778"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:34.780" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:34.779" endtime="20210730 13:53:34.786"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:36.289" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:34.787" endtime="20210730 13:53:36.289"/>
</kw>
<status status="PASS" starttime="20210730 13:53:34.778" endtime="20210730 13:53:36.289"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:36.290" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:36.290" endtime="20210730 13:53:36.290"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:36.291" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:36.290" endtime="20210730 13:53:36.291"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:36.291" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:36.291" endtime="20210730 13:53:36.291"/>
</kw>
<msg timestamp="20210730 13:53:36.292" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:36.290" endtime="20210730 13:53:36.292"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:36.292" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:36.292" endtime="20210730 13:53:36.293"/>
</kw>
<status status="PASS" starttime="20210730 13:53:36.289" endtime="20210730 13:53:36.293"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:36.294" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:36.294" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:36.294" endtime="20210730 13:53:36.294"/>
</kw>
<status status="PASS" starttime="20210730 13:53:36.293" endtime="20210730 13:53:36.294"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:36.295" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:36.295" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:36.295" endtime="20210730 13:53:36.295"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:36.295" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:36.295" endtime="20210730 13:53:36.295"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:36.296" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:36.296" endtime="20210730 13:53:36.296"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:36.296" endtime="20210730 13:53:36.298"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:36.299" endtime="20210730 13:53:36.299"/>
</kw>
<status status="PASS" starttime="20210730 13:53:36.295" endtime="20210730 13:53:36.299"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:36.300" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:36.299" endtime="20210730 13:53:36.300"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:36.300" endtime="20210730 13:53:36.301"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:36.301" endtime="20210730 13:53:36.301"/>
</kw>
<status status="PASS" starttime="20210730 13:53:36.299" endtime="20210730 13:53:36.301"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:36.301" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:36.301" endtime="20210730 13:53:36.301"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:36.302" endtime="20210730 13:53:36.303"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:36.303" endtime="20210730 13:53:36.303"/>
</kw>
<status status="PASS" starttime="20210730 13:53:36.301" endtime="20210730 13:53:36.303"/>
</iter>
<status status="PASS" starttime="20210730 13:53:36.295" endtime="20210730 13:53:36.303"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:36.303" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:36.303" endtime="20210730 13:53:36.304"/>
</kw>
<status status="PASS" starttime="20210730 13:53:36.294" endtime="20210730 13:53:36.304"/>
</kw>
<status status="PASS" starttime="20210730 13:53:34.747" endtime="20210730 13:53:36.304"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:36.305" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:36.305" endtime="20210730 13:53:36.305"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:36.305" level="INFO">${payload} = {'password': 'ABCD!?.'}</msg>
<status status="PASS" starttime="20210730 13:53:36.305" endtime="20210730 13:53:36.305"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:36.315" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:36.315" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:36.306" endtime="20210730 13:53:36.315"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:36.315" endtime="20210730 13:53:36.315"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:36.315" endtime="20210730 13:53:36.316"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:36.306" endtime="20210730 13:53:36.316"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:36.305" endtime="20210730 13:53:36.316"/>
</for>
<status status="FAIL" starttime="20210730 13:53:36.304" endtime="20210730 13:53:36.316"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:36.304" endtime="20210730 13:53:36.316"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:36.317" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:36.316" endtime="20210730 13:53:36.317"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:36.318" level="INFO">${payload} = {'password': 'ABCD!?.'}</msg>
<status status="PASS" starttime="20210730 13:53:36.318" endtime="20210730 13:53:36.318"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:36.323" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:36.323" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:36.318" endtime="20210730 13:53:36.323"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:36.323" endtime="20210730 13:53:36.323"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:36.323" endtime="20210730 13:53:36.323"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:36.318" endtime="20210730 13:53:36.324"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:36.318" endtime="20210730 13:53:36.324"/>
</for>
<status status="FAIL" starttime="20210730 13:53:36.316" endtime="20210730 13:53:36.324"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:36.316" endtime="20210730 13:53:36.324"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:36.325" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:36.325" endtime="20210730 13:53:36.325"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:36.326" level="INFO">${payload} = {'password': 'ABCD!?.'}</msg>
<status status="PASS" starttime="20210730 13:53:36.325" endtime="20210730 13:53:36.326"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:36.330" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:36.330" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:36.326" endtime="20210730 13:53:36.330"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:36.330" endtime="20210730 13:53:36.330"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:36.330" endtime="20210730 13:53:36.330"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:36.326" endtime="20210730 13:53:36.330"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:36.326" endtime="20210730 13:53:36.330"/>
</for>
<status status="FAIL" starttime="20210730 13:53:36.324" endtime="20210730 13:53:36.331"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:36.324" endtime="20210730 13:53:36.331"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:36.304" endtime="20210730 13:53:36.331"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:36.335" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:36.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:36.346" level="INFO">${pids} = 16079
16086
16096</msg>
<status status="PASS" starttime="20210730 13:53:36.331" endtime="20210730 13:53:36.346"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:36.347" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:36.346" endtime="20210730 13:53:36.347"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:36.348" level="INFO">${pids} = ['16079', '16086', '16096']</msg>
<status status="PASS" starttime="20210730 13:53:36.347" endtime="20210730 13:53:36.348"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16079</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:36.351" level="INFO">Running command 'kill 16079 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:36.348" endtime="20210730 13:53:36.352"/>
</kw>
<status status="PASS" starttime="20210730 13:53:36.348" endtime="20210730 13:53:36.352"/>
</iter>
<iter>
<var name="${pid}">16086</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:36.356" level="INFO">Running command 'kill 16086 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:36.353" endtime="20210730 13:53:36.356"/>
</kw>
<status status="PASS" starttime="20210730 13:53:36.352" endtime="20210730 13:53:36.356"/>
</iter>
<iter>
<var name="${pid}">16096</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:36.375" level="INFO">Running command 'kill 16096 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:36.357" endtime="20210730 13:53:36.382"/>
</kw>
<status status="PASS" starttime="20210730 13:53:36.357" endtime="20210730 13:53:36.382"/>
</iter>
<status status="PASS" starttime="20210730 13:53:36.348" endtime="20210730 13:53:36.382"/>
</for>
<status status="PASS" starttime="20210730 13:53:36.347" endtime="20210730 13:53:36.382"/>
</branch>
<status status="PASS" starttime="20210730 13:53:36.347" endtime="20210730 13:53:36.382"/>
</if>
<status status="PASS" starttime="20210730 13:53:36.331" endtime="20210730 13:53:36.383"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCD!?.'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:34.746" endtime="20210730 13:53:36.383">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t70" name="With Each Valid Token, Updating Password Of Each System User With ABCD!?.. Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:36.389" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:36.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:36.400" level="INFO">${pids} = 16125</msg>
<status status="PASS" starttime="20210730 13:53:36.385" endtime="20210730 13:53:36.400"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:36.402" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:36.401" endtime="20210730 13:53:36.402"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:36.404" level="INFO">${pids} = ['16125']</msg>
<status status="PASS" starttime="20210730 13:53:36.403" endtime="20210730 13:53:36.404"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16125</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:36.409" level="INFO">Running command 'kill 16125 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:36.404" endtime="20210730 13:53:36.409"/>
</kw>
<status status="PASS" starttime="20210730 13:53:36.404" endtime="20210730 13:53:36.410"/>
</iter>
<status status="PASS" starttime="20210730 13:53:36.404" endtime="20210730 13:53:36.410"/>
</for>
<status status="PASS" starttime="20210730 13:53:36.402" endtime="20210730 13:53:36.410"/>
</branch>
<status status="PASS" starttime="20210730 13:53:36.402" endtime="20210730 13:53:36.410"/>
</if>
<status status="PASS" starttime="20210730 13:53:36.385" endtime="20210730 13:53:36.410"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:36.411" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:36.411" endtime="20210730 13:53:36.411"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:36.412" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:36.411" endtime="20210730 13:53:36.412"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:36.412" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:36.412" endtime="20210730 13:53:36.412"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:36.413" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:36.412" endtime="20210730 13:53:36.413"/>
</kw>
<msg timestamp="20210730 13:53:36.413" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:36.411" endtime="20210730 13:53:36.413"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:36.416" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:36.413" endtime="20210730 13:53:36.418"/>
</kw>
<status status="PASS" starttime="20210730 13:53:36.410" endtime="20210730 13:53:36.419"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:36.420" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:36.419" endtime="20210730 13:53:36.437"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:37.942" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:36.437" endtime="20210730 13:53:37.943"/>
</kw>
<status status="PASS" starttime="20210730 13:53:36.419" endtime="20210730 13:53:37.943"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:37.944" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:37.944" endtime="20210730 13:53:37.944"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:37.945" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:37.944" endtime="20210730 13:53:37.945"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:37.945" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:37.945" endtime="20210730 13:53:37.945"/>
</kw>
<msg timestamp="20210730 13:53:37.945" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:37.944" endtime="20210730 13:53:37.945"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:37.946" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:37.945" endtime="20210730 13:53:37.946"/>
</kw>
<status status="PASS" starttime="20210730 13:53:37.943" endtime="20210730 13:53:37.946"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:37.947" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:37.947" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:37.947" endtime="20210730 13:53:37.947"/>
</kw>
<status status="PASS" starttime="20210730 13:53:37.946" endtime="20210730 13:53:37.947"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:37.947" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:37.948" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:37.947" endtime="20210730 13:53:37.948"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:37.948" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:37.948" endtime="20210730 13:53:37.948"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:37.948" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:37.948" endtime="20210730 13:53:37.949"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:37.949" endtime="20210730 13:53:37.950"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:37.951" endtime="20210730 13:53:37.951"/>
</kw>
<status status="PASS" starttime="20210730 13:53:37.948" endtime="20210730 13:53:37.951"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:37.952" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:37.952" endtime="20210730 13:53:37.952"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:37.952" endtime="20210730 13:53:37.953"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:37.953" endtime="20210730 13:53:37.953"/>
</kw>
<status status="PASS" starttime="20210730 13:53:37.951" endtime="20210730 13:53:37.953"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:37.954" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:37.953" endtime="20210730 13:53:37.954"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:37.954" endtime="20210730 13:53:37.954"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:37.954" endtime="20210730 13:53:37.955"/>
</kw>
<status status="PASS" starttime="20210730 13:53:37.953" endtime="20210730 13:53:37.955"/>
</iter>
<status status="PASS" starttime="20210730 13:53:37.948" endtime="20210730 13:53:37.955"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:37.955" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:37.955" endtime="20210730 13:53:37.955"/>
</kw>
<status status="PASS" starttime="20210730 13:53:37.947" endtime="20210730 13:53:37.955"/>
</kw>
<status status="PASS" starttime="20210730 13:53:36.384" endtime="20210730 13:53:37.955"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD!?..</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:37.957" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:37.956" endtime="20210730 13:53:37.957"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:37.957" level="INFO">${payload} = {'password': 'ABCD!?..'}</msg>
<status status="PASS" starttime="20210730 13:53:37.957" endtime="20210730 13:53:37.957"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:37.968" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:37.968" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:37.958" endtime="20210730 13:53:37.968"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:37.968" endtime="20210730 13:53:37.968"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:37.968" endtime="20210730 13:53:37.968"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:37.957" endtime="20210730 13:53:37.968"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:37.957" endtime="20210730 13:53:37.968"/>
</for>
<status status="FAIL" starttime="20210730 13:53:37.956" endtime="20210730 13:53:37.969"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:37.956" endtime="20210730 13:53:37.969"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD!?..</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:37.970" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:37.969" endtime="20210730 13:53:37.970"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:37.970" level="INFO">${payload} = {'password': 'ABCD!?..'}</msg>
<status status="PASS" starttime="20210730 13:53:37.970" endtime="20210730 13:53:37.970"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:37.975" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:37.975" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:37.970" endtime="20210730 13:53:37.975"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:37.975" endtime="20210730 13:53:37.975"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:37.975" endtime="20210730 13:53:37.975"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:37.970" endtime="20210730 13:53:37.975"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:37.970" endtime="20210730 13:53:37.975"/>
</for>
<status status="FAIL" starttime="20210730 13:53:37.969" endtime="20210730 13:53:37.975"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:37.969" endtime="20210730 13:53:37.975"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD!?..</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:37.976" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:37.976" endtime="20210730 13:53:37.976"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:37.977" level="INFO">${payload} = {'password': 'ABCD!?..'}</msg>
<status status="PASS" starttime="20210730 13:53:37.977" endtime="20210730 13:53:37.977"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:37.981" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:37.981" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:37.977" endtime="20210730 13:53:37.981"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:37.981" endtime="20210730 13:53:37.981"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:37.981" endtime="20210730 13:53:37.981"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:37.977" endtime="20210730 13:53:37.981"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:37.977" endtime="20210730 13:53:37.982"/>
</for>
<status status="FAIL" starttime="20210730 13:53:37.976" endtime="20210730 13:53:37.982"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:37.976" endtime="20210730 13:53:37.982"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:37.956" endtime="20210730 13:53:37.982"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:37.987" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:37.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:37.998" level="INFO">${pids} = 16148
16155
16159</msg>
<status status="PASS" starttime="20210730 13:53:37.983" endtime="20210730 13:53:37.998"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:37.999" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:37.999" endtime="20210730 13:53:37.999"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:38.000" level="INFO">${pids} = ['16148', '16155', '16159']</msg>
<status status="PASS" starttime="20210730 13:53:38.000" endtime="20210730 13:53:38.000"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16148</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:38.004" level="INFO">Running command 'kill 16148 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:38.000" endtime="20210730 13:53:38.004"/>
</kw>
<status status="PASS" starttime="20210730 13:53:38.000" endtime="20210730 13:53:38.004"/>
</iter>
<iter>
<var name="${pid}">16155</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:38.008" level="INFO">Running command 'kill 16155 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:38.005" endtime="20210730 13:53:38.008"/>
</kw>
<status status="PASS" starttime="20210730 13:53:38.004" endtime="20210730 13:53:38.008"/>
</iter>
<iter>
<var name="${pid}">16159</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:38.012" level="INFO">Running command 'kill 16159 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:38.009" endtime="20210730 13:53:38.012"/>
</kw>
<status status="PASS" starttime="20210730 13:53:38.008" endtime="20210730 13:53:38.012"/>
</iter>
<status status="PASS" starttime="20210730 13:53:38.000" endtime="20210730 13:53:38.012"/>
</for>
<status status="PASS" starttime="20210730 13:53:37.999" endtime="20210730 13:53:38.013"/>
</branch>
<status status="PASS" starttime="20210730 13:53:37.999" endtime="20210730 13:53:38.013"/>
</if>
<status status="PASS" starttime="20210730 13:53:37.983" endtime="20210730 13:53:38.013"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCD!?..'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:36.383" endtime="20210730 13:53:38.014">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t71" name="With Each Valid Token, Updating Password Of Each System User With ABCD!?..ABCD!?..ABCD!? Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:38.021" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:38.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:38.031" level="INFO">${pids} = 16188</msg>
<status status="PASS" starttime="20210730 13:53:38.016" endtime="20210730 13:53:38.031"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:38.032" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:38.032" endtime="20210730 13:53:38.032"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:38.033" level="INFO">${pids} = ['16188']</msg>
<status status="PASS" starttime="20210730 13:53:38.033" endtime="20210730 13:53:38.033"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16188</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:38.036" level="INFO">Running command 'kill 16188 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:38.033" endtime="20210730 13:53:38.037"/>
</kw>
<status status="PASS" starttime="20210730 13:53:38.033" endtime="20210730 13:53:38.037"/>
</iter>
<status status="PASS" starttime="20210730 13:53:38.033" endtime="20210730 13:53:38.037"/>
</for>
<status status="PASS" starttime="20210730 13:53:38.032" endtime="20210730 13:53:38.037"/>
</branch>
<status status="PASS" starttime="20210730 13:53:38.032" endtime="20210730 13:53:38.037"/>
</if>
<status status="PASS" starttime="20210730 13:53:38.016" endtime="20210730 13:53:38.037"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:38.038" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:38.038" endtime="20210730 13:53:38.038"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:38.039" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:38.039" endtime="20210730 13:53:38.039"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:38.039" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:38.039" endtime="20210730 13:53:38.039"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:38.040" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:38.039" endtime="20210730 13:53:38.040"/>
</kw>
<msg timestamp="20210730 13:53:38.040" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:38.038" endtime="20210730 13:53:38.040"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:38.044" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:38.040" endtime="20210730 13:53:38.046"/>
</kw>
<status status="PASS" starttime="20210730 13:53:38.037" endtime="20210730 13:53:38.047"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:38.048" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:38.048" endtime="20210730 13:53:38.054"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:39.555" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:38.054" endtime="20210730 13:53:39.556"/>
</kw>
<status status="PASS" starttime="20210730 13:53:38.047" endtime="20210730 13:53:39.556"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:39.557" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:39.557" endtime="20210730 13:53:39.557"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:39.558" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:39.557" endtime="20210730 13:53:39.558"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:39.558" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:39.558" endtime="20210730 13:53:39.558"/>
</kw>
<msg timestamp="20210730 13:53:39.559" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:39.556" endtime="20210730 13:53:39.559"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:39.559" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:39.559" endtime="20210730 13:53:39.560"/>
</kw>
<status status="PASS" starttime="20210730 13:53:39.556" endtime="20210730 13:53:39.560"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:39.561" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:39.561" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:39.560" endtime="20210730 13:53:39.561"/>
</kw>
<status status="PASS" starttime="20210730 13:53:39.560" endtime="20210730 13:53:39.561"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:39.561" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:39.562" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:39.561" endtime="20210730 13:53:39.562"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:39.562" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:39.562" endtime="20210730 13:53:39.562"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:39.563" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:39.563" endtime="20210730 13:53:39.563"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:39.563" endtime="20210730 13:53:39.564"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:39.564" endtime="20210730 13:53:39.564"/>
</kw>
<status status="PASS" starttime="20210730 13:53:39.562" endtime="20210730 13:53:39.564"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:39.565" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:39.565" endtime="20210730 13:53:39.565"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:39.565" endtime="20210730 13:53:39.566"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:39.566" endtime="20210730 13:53:39.566"/>
</kw>
<status status="PASS" starttime="20210730 13:53:39.565" endtime="20210730 13:53:39.566"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:39.566" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:39.566" endtime="20210730 13:53:39.566"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:39.566" endtime="20210730 13:53:39.567"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:39.567" endtime="20210730 13:53:39.567"/>
</kw>
<status status="PASS" starttime="20210730 13:53:39.566" endtime="20210730 13:53:39.567"/>
</iter>
<status status="PASS" starttime="20210730 13:53:39.562" endtime="20210730 13:53:39.568"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:39.568" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:39.568" endtime="20210730 13:53:39.568"/>
</kw>
<status status="PASS" starttime="20210730 13:53:39.561" endtime="20210730 13:53:39.568"/>
</kw>
<status status="PASS" starttime="20210730 13:53:38.015" endtime="20210730 13:53:39.568"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD!?..ABCD!?..ABCD!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:39.569" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:39.569" endtime="20210730 13:53:39.569"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:39.570" level="INFO">${payload} = {'password': 'ABCD!?..ABCD!?..ABCD!?'}</msg>
<status status="PASS" starttime="20210730 13:53:39.570" endtime="20210730 13:53:39.570"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:39.580" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:39.580" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:39.570" endtime="20210730 13:53:39.580"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:39.580" endtime="20210730 13:53:39.580"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:39.580" endtime="20210730 13:53:39.580"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:39.570" endtime="20210730 13:53:39.580"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:39.570" endtime="20210730 13:53:39.580"/>
</for>
<status status="FAIL" starttime="20210730 13:53:39.569" endtime="20210730 13:53:39.581"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:39.568" endtime="20210730 13:53:39.581"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD!?..ABCD!?..ABCD!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:39.582" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:39.581" endtime="20210730 13:53:39.582"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:39.583" level="INFO">${payload} = {'password': 'ABCD!?..ABCD!?..ABCD!?'}</msg>
<status status="PASS" starttime="20210730 13:53:39.582" endtime="20210730 13:53:39.583"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:39.587" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:39.588" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:39.583" endtime="20210730 13:53:39.588"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:39.588" endtime="20210730 13:53:39.588"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:39.588" endtime="20210730 13:53:39.588"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:39.583" endtime="20210730 13:53:39.588"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:39.583" endtime="20210730 13:53:39.588"/>
</for>
<status status="FAIL" starttime="20210730 13:53:39.581" endtime="20210730 13:53:39.588"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:39.581" endtime="20210730 13:53:39.588"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD!?..ABCD!?..ABCD!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:39.589" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:39.589" endtime="20210730 13:53:39.589"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:39.590" level="INFO">${payload} = {'password': 'ABCD!?..ABCD!?..ABCD!?'}</msg>
<status status="PASS" starttime="20210730 13:53:39.589" endtime="20210730 13:53:39.590"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:39.594" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:39.595" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:39.590" endtime="20210730 13:53:39.595"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:39.595" endtime="20210730 13:53:39.595"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:39.595" endtime="20210730 13:53:39.595"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:39.590" endtime="20210730 13:53:39.595"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:39.590" endtime="20210730 13:53:39.595"/>
</for>
<status status="FAIL" starttime="20210730 13:53:39.588" endtime="20210730 13:53:39.595"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:39.588" endtime="20210730 13:53:39.595"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:39.568" endtime="20210730 13:53:39.596"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:39.600" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:39.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:39.611" level="INFO">${pids} = 16211
16218
16222</msg>
<status status="PASS" starttime="20210730 13:53:39.596" endtime="20210730 13:53:39.611"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:39.612" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:39.611" endtime="20210730 13:53:39.612"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:39.613" level="INFO">${pids} = ['16211', '16218', '16222']</msg>
<status status="PASS" starttime="20210730 13:53:39.612" endtime="20210730 13:53:39.613"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16211</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:39.616" level="INFO">Running command 'kill 16211 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:39.613" endtime="20210730 13:53:39.617"/>
</kw>
<status status="PASS" starttime="20210730 13:53:39.613" endtime="20210730 13:53:39.617"/>
</iter>
<iter>
<var name="${pid}">16218</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:39.621" level="INFO">Running command 'kill 16218 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:39.617" endtime="20210730 13:53:39.621"/>
</kw>
<status status="PASS" starttime="20210730 13:53:39.617" endtime="20210730 13:53:39.622"/>
</iter>
<iter>
<var name="${pid}">16222</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:39.627" level="INFO">Running command 'kill 16222 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:39.622" endtime="20210730 13:53:39.628"/>
</kw>
<status status="PASS" starttime="20210730 13:53:39.622" endtime="20210730 13:53:39.628"/>
</iter>
<status status="PASS" starttime="20210730 13:53:39.613" endtime="20210730 13:53:39.628"/>
</for>
<status status="PASS" starttime="20210730 13:53:39.612" endtime="20210730 13:53:39.628"/>
</branch>
<status status="PASS" starttime="20210730 13:53:39.612" endtime="20210730 13:53:39.628"/>
</if>
<status status="PASS" starttime="20210730 13:53:39.596" endtime="20210730 13:53:39.628"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCD!?..ABCD!?..ABCD!?'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:38.014" endtime="20210730 13:53:39.628">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t72" name="With Each Valid Token, Updating Password Of Each System User With 0123!?. Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:39.634" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:39.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:39.645" level="INFO">${pids} = 16251</msg>
<status status="PASS" starttime="20210730 13:53:39.630" endtime="20210730 13:53:39.645"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:39.646" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:39.646" endtime="20210730 13:53:39.646"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:39.647" level="INFO">${pids} = ['16251']</msg>
<status status="PASS" starttime="20210730 13:53:39.647" endtime="20210730 13:53:39.647"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16251</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:39.650" level="INFO">Running command 'kill 16251 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:39.647" endtime="20210730 13:53:39.651"/>
</kw>
<status status="PASS" starttime="20210730 13:53:39.647" endtime="20210730 13:53:39.651"/>
</iter>
<status status="PASS" starttime="20210730 13:53:39.647" endtime="20210730 13:53:39.651"/>
</for>
<status status="PASS" starttime="20210730 13:53:39.646" endtime="20210730 13:53:39.651"/>
</branch>
<status status="PASS" starttime="20210730 13:53:39.646" endtime="20210730 13:53:39.651"/>
</if>
<status status="PASS" starttime="20210730 13:53:39.630" endtime="20210730 13:53:39.652"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:39.653" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:39.653" endtime="20210730 13:53:39.653"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:39.654" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:39.654" endtime="20210730 13:53:39.654"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:39.654" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:39.654" endtime="20210730 13:53:39.654"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:39.655" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:39.654" endtime="20210730 13:53:39.655"/>
</kw>
<msg timestamp="20210730 13:53:39.655" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:39.653" endtime="20210730 13:53:39.655"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:39.660" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:39.655" endtime="20210730 13:53:39.664"/>
</kw>
<status status="PASS" starttime="20210730 13:53:39.652" endtime="20210730 13:53:39.664"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:39.666" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:39.665" endtime="20210730 13:53:39.670"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:41.172" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:39.670" endtime="20210730 13:53:41.172"/>
</kw>
<status status="PASS" starttime="20210730 13:53:39.665" endtime="20210730 13:53:41.173"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:41.174" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:41.174" endtime="20210730 13:53:41.174"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:41.174" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:41.174" endtime="20210730 13:53:41.174"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:41.175" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:41.174" endtime="20210730 13:53:41.175"/>
</kw>
<msg timestamp="20210730 13:53:41.175" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:41.173" endtime="20210730 13:53:41.175"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:41.175" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:41.175" endtime="20210730 13:53:41.176"/>
</kw>
<status status="PASS" starttime="20210730 13:53:41.173" endtime="20210730 13:53:41.176"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:41.176" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:41.176" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:41.176" endtime="20210730 13:53:41.176"/>
</kw>
<status status="PASS" starttime="20210730 13:53:41.176" endtime="20210730 13:53:41.177"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:41.177" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:41.178" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:41.177" endtime="20210730 13:53:41.178"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:41.178" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:41.178" endtime="20210730 13:53:41.178"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:41.179" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:41.178" endtime="20210730 13:53:41.179"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:41.179" endtime="20210730 13:53:41.180"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:41.180" endtime="20210730 13:53:41.180"/>
</kw>
<status status="PASS" starttime="20210730 13:53:41.178" endtime="20210730 13:53:41.180"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:41.180" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:41.180" endtime="20210730 13:53:41.180"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:41.180" endtime="20210730 13:53:41.181"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:41.181" endtime="20210730 13:53:41.181"/>
</kw>
<status status="PASS" starttime="20210730 13:53:41.180" endtime="20210730 13:53:41.181"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:41.182" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:41.182" endtime="20210730 13:53:41.182"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:41.182" endtime="20210730 13:53:41.183"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:41.183" endtime="20210730 13:53:41.183"/>
</kw>
<status status="PASS" starttime="20210730 13:53:41.182" endtime="20210730 13:53:41.183"/>
</iter>
<status status="PASS" starttime="20210730 13:53:41.178" endtime="20210730 13:53:41.183"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:41.184" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:41.183" endtime="20210730 13:53:41.184"/>
</kw>
<status status="PASS" starttime="20210730 13:53:41.177" endtime="20210730 13:53:41.184"/>
</kw>
<status status="PASS" starttime="20210730 13:53:39.630" endtime="20210730 13:53:41.184"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=0123!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:41.186" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:41.186" endtime="20210730 13:53:41.186"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:41.187" level="INFO">${payload} = {'password': '0123!?.'}</msg>
<status status="PASS" starttime="20210730 13:53:41.186" endtime="20210730 13:53:41.187"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:41.196" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:41.197" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:41.187" endtime="20210730 13:53:41.197"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:41.197" endtime="20210730 13:53:41.197"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:41.197" endtime="20210730 13:53:41.197"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:41.187" endtime="20210730 13:53:41.197"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:41.187" endtime="20210730 13:53:41.197"/>
</for>
<status status="FAIL" starttime="20210730 13:53:41.185" endtime="20210730 13:53:41.197"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:41.185" endtime="20210730 13:53:41.197"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=0123!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:41.198" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:41.198" endtime="20210730 13:53:41.199"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:41.199" level="INFO">${payload} = {'password': '0123!?.'}</msg>
<status status="PASS" starttime="20210730 13:53:41.199" endtime="20210730 13:53:41.199"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:41.203" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:41.203" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:41.199" endtime="20210730 13:53:41.203"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:41.203" endtime="20210730 13:53:41.203"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:41.203" endtime="20210730 13:53:41.203"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:41.199" endtime="20210730 13:53:41.203"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:41.199" endtime="20210730 13:53:41.204"/>
</for>
<status status="FAIL" starttime="20210730 13:53:41.198" endtime="20210730 13:53:41.204"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:41.198" endtime="20210730 13:53:41.204"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=0123!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:41.205" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:41.204" endtime="20210730 13:53:41.205"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:41.205" level="INFO">${payload} = {'password': '0123!?.'}</msg>
<status status="PASS" starttime="20210730 13:53:41.205" endtime="20210730 13:53:41.205"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:41.209" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:41.209" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:41.205" endtime="20210730 13:53:41.209"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:41.210" endtime="20210730 13:53:41.210"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:41.210" endtime="20210730 13:53:41.210"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:41.205" endtime="20210730 13:53:41.210"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:41.205" endtime="20210730 13:53:41.210"/>
</for>
<status status="FAIL" starttime="20210730 13:53:41.204" endtime="20210730 13:53:41.210"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:41.204" endtime="20210730 13:53:41.210"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:41.185" endtime="20210730 13:53:41.210"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:41.215" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:41.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:41.226" level="INFO">${pids} = 16274
16281
16286</msg>
<status status="PASS" starttime="20210730 13:53:41.211" endtime="20210730 13:53:41.226"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:41.227" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:41.226" endtime="20210730 13:53:41.227"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:41.228" level="INFO">${pids} = ['16274', '16281', '16286']</msg>
<status status="PASS" starttime="20210730 13:53:41.227" endtime="20210730 13:53:41.228"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16274</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:41.231" level="INFO">Running command 'kill 16274 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:41.228" endtime="20210730 13:53:41.232"/>
</kw>
<status status="PASS" starttime="20210730 13:53:41.228" endtime="20210730 13:53:41.232"/>
</iter>
<iter>
<var name="${pid}">16281</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:41.236" level="INFO">Running command 'kill 16281 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:41.232" endtime="20210730 13:53:41.237"/>
</kw>
<status status="PASS" starttime="20210730 13:53:41.232" endtime="20210730 13:53:41.237"/>
</iter>
<iter>
<var name="${pid}">16286</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:41.241" level="INFO">Running command 'kill 16286 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:41.237" endtime="20210730 13:53:41.242"/>
</kw>
<status status="PASS" starttime="20210730 13:53:41.237" endtime="20210730 13:53:41.242"/>
</iter>
<status status="PASS" starttime="20210730 13:53:41.228" endtime="20210730 13:53:41.242"/>
</for>
<status status="PASS" starttime="20210730 13:53:41.227" endtime="20210730 13:53:41.242"/>
</branch>
<status status="PASS" starttime="20210730 13:53:41.227" endtime="20210730 13:53:41.242"/>
</if>
<status status="PASS" starttime="20210730 13:53:41.211" endtime="20210730 13:53:41.242"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": '0123!?.'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:39.629" endtime="20210730 13:53:41.243">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t73" name="With Each Valid Token, Updating Password Of Each System User With 0123!?.0 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:41.249" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:41.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:41.259" level="INFO">${pids} = 16315</msg>
<status status="PASS" starttime="20210730 13:53:41.245" endtime="20210730 13:53:41.259"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:41.260" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:41.260" endtime="20210730 13:53:41.260"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:41.261" level="INFO">${pids} = ['16315']</msg>
<status status="PASS" starttime="20210730 13:53:41.260" endtime="20210730 13:53:41.261"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16315</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:41.265" level="INFO">Running command 'kill 16315 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:41.261" endtime="20210730 13:53:41.265"/>
</kw>
<status status="PASS" starttime="20210730 13:53:41.261" endtime="20210730 13:53:41.265"/>
</iter>
<status status="PASS" starttime="20210730 13:53:41.261" endtime="20210730 13:53:41.265"/>
</for>
<status status="PASS" starttime="20210730 13:53:41.260" endtime="20210730 13:53:41.265"/>
</branch>
<status status="PASS" starttime="20210730 13:53:41.260" endtime="20210730 13:53:41.265"/>
</if>
<status status="PASS" starttime="20210730 13:53:41.244" endtime="20210730 13:53:41.265"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:41.266" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:41.266" endtime="20210730 13:53:41.266"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:41.267" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:41.267" endtime="20210730 13:53:41.267"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:41.267" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:41.267" endtime="20210730 13:53:41.267"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:41.268" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:41.268" endtime="20210730 13:53:41.268"/>
</kw>
<msg timestamp="20210730 13:53:41.268" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:41.267" endtime="20210730 13:53:41.268"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:41.271" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:41.268" endtime="20210730 13:53:41.272"/>
</kw>
<status status="PASS" starttime="20210730 13:53:41.266" endtime="20210730 13:53:41.273"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:41.274" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:41.274" endtime="20210730 13:53:41.281"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:42.783" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:41.282" endtime="20210730 13:53:42.783"/>
</kw>
<status status="PASS" starttime="20210730 13:53:41.273" endtime="20210730 13:53:42.785"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:42.789" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:42.789" endtime="20210730 13:53:42.789"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:42.790" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:42.790" endtime="20210730 13:53:42.790"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:42.790" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:42.790" endtime="20210730 13:53:42.790"/>
</kw>
<msg timestamp="20210730 13:53:42.791" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:42.788" endtime="20210730 13:53:42.791"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:42.792" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:42.791" endtime="20210730 13:53:42.792"/>
</kw>
<status status="PASS" starttime="20210730 13:53:42.786" endtime="20210730 13:53:42.792"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:42.793" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:42.793" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:42.793" endtime="20210730 13:53:42.794"/>
</kw>
<status status="PASS" starttime="20210730 13:53:42.793" endtime="20210730 13:53:42.794"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:42.794" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:42.794" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:42.794" endtime="20210730 13:53:42.794"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:42.795" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:42.795" endtime="20210730 13:53:42.795"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:42.795" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:42.795" endtime="20210730 13:53:42.795"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:42.795" endtime="20210730 13:53:42.796"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:42.796" endtime="20210730 13:53:42.796"/>
</kw>
<status status="PASS" starttime="20210730 13:53:42.795" endtime="20210730 13:53:42.796"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:42.797" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:42.797" endtime="20210730 13:53:42.797"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:42.797" endtime="20210730 13:53:42.798"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:42.798" endtime="20210730 13:53:42.798"/>
</kw>
<status status="PASS" starttime="20210730 13:53:42.796" endtime="20210730 13:53:42.798"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:42.798" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:42.798" endtime="20210730 13:53:42.798"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:42.798" endtime="20210730 13:53:42.799"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:42.799" endtime="20210730 13:53:42.799"/>
</kw>
<status status="PASS" starttime="20210730 13:53:42.798" endtime="20210730 13:53:42.799"/>
</iter>
<status status="PASS" starttime="20210730 13:53:42.795" endtime="20210730 13:53:42.799"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:42.800" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:42.799" endtime="20210730 13:53:42.800"/>
</kw>
<status status="PASS" starttime="20210730 13:53:42.794" endtime="20210730 13:53:42.800"/>
</kw>
<status status="PASS" starttime="20210730 13:53:41.244" endtime="20210730 13:53:42.800"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=0123!?.0</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:42.801" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:42.801" endtime="20210730 13:53:42.801"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:42.802" level="INFO">${payload} = {'password': '0123!?.0'}</msg>
<status status="PASS" starttime="20210730 13:53:42.801" endtime="20210730 13:53:42.802"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:42.811" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:42.811" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:42.802" endtime="20210730 13:53:42.811"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:42.811" endtime="20210730 13:53:42.811"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:42.812" endtime="20210730 13:53:42.812"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:42.802" endtime="20210730 13:53:42.812"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:42.802" endtime="20210730 13:53:42.812"/>
</for>
<status status="FAIL" starttime="20210730 13:53:42.800" endtime="20210730 13:53:42.812"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:42.800" endtime="20210730 13:53:42.812"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=0123!?.0</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:42.814" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:42.813" endtime="20210730 13:53:42.814"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:42.814" level="INFO">${payload} = {'password': '0123!?.0'}</msg>
<status status="PASS" starttime="20210730 13:53:42.814" endtime="20210730 13:53:42.814"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:42.819" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:42.819" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:42.815" endtime="20210730 13:53:42.820"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:42.820" endtime="20210730 13:53:42.820"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:42.820" endtime="20210730 13:53:42.820"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:42.815" endtime="20210730 13:53:42.820"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:42.814" endtime="20210730 13:53:42.820"/>
</for>
<status status="FAIL" starttime="20210730 13:53:42.812" endtime="20210730 13:53:42.820"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:42.812" endtime="20210730 13:53:42.820"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=0123!?.0</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:42.821" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:42.821" endtime="20210730 13:53:42.821"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:42.822" level="INFO">${payload} = {'password': '0123!?.0'}</msg>
<status status="PASS" starttime="20210730 13:53:42.821" endtime="20210730 13:53:42.822"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:42.826" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:42.827" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:42.822" endtime="20210730 13:53:42.827"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:42.827" endtime="20210730 13:53:42.827"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:42.827" endtime="20210730 13:53:42.827"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:42.822" endtime="20210730 13:53:42.827"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:42.822" endtime="20210730 13:53:42.827"/>
</for>
<status status="FAIL" starttime="20210730 13:53:42.820" endtime="20210730 13:53:42.827"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:42.820" endtime="20210730 13:53:42.827"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:42.800" endtime="20210730 13:53:42.827"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:42.832" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:42.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:42.842" level="INFO">${pids} = 16338
16345
16352</msg>
<status status="PASS" starttime="20210730 13:53:42.828" endtime="20210730 13:53:42.842"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:42.843" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:42.842" endtime="20210730 13:53:42.843"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:42.843" level="INFO">${pids} = ['16338', '16345', '16352']</msg>
<status status="PASS" starttime="20210730 13:53:42.843" endtime="20210730 13:53:42.843"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16338</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:42.847" level="INFO">Running command 'kill 16338 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:42.844" endtime="20210730 13:53:42.847"/>
</kw>
<status status="PASS" starttime="20210730 13:53:42.843" endtime="20210730 13:53:42.847"/>
</iter>
<iter>
<var name="${pid}">16345</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:42.852" level="INFO">Running command 'kill 16345 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:42.848" endtime="20210730 13:53:42.854"/>
</kw>
<status status="PASS" starttime="20210730 13:53:42.848" endtime="20210730 13:53:42.854"/>
</iter>
<iter>
<var name="${pid}">16352</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:42.858" level="INFO">Running command 'kill 16352 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:42.855" endtime="20210730 13:53:42.859"/>
</kw>
<status status="PASS" starttime="20210730 13:53:42.854" endtime="20210730 13:53:42.859"/>
</iter>
<status status="PASS" starttime="20210730 13:53:42.843" endtime="20210730 13:53:42.859"/>
</for>
<status status="PASS" starttime="20210730 13:53:42.843" endtime="20210730 13:53:42.859"/>
</branch>
<status status="PASS" starttime="20210730 13:53:42.843" endtime="20210730 13:53:42.859"/>
</if>
<status status="PASS" starttime="20210730 13:53:42.828" endtime="20210730 13:53:42.860"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": '0123!?.0'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:41.243" endtime="20210730 13:53:42.860">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t74" name="With Each Valid Token, Updating Password Of Each System User With 0123!?.00123!?.00123!? Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:42.865" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:42.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:42.879" level="INFO">${pids} = 16381</msg>
<status status="PASS" starttime="20210730 13:53:42.862" endtime="20210730 13:53:42.879"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:42.879" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:42.879" endtime="20210730 13:53:42.879"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:42.880" level="INFO">${pids} = ['16381']</msg>
<status status="PASS" starttime="20210730 13:53:42.880" endtime="20210730 13:53:42.880"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16381</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:42.885" level="INFO">Running command 'kill 16381 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:42.880" endtime="20210730 13:53:42.885"/>
</kw>
<status status="PASS" starttime="20210730 13:53:42.880" endtime="20210730 13:53:42.885"/>
</iter>
<status status="PASS" starttime="20210730 13:53:42.880" endtime="20210730 13:53:42.885"/>
</for>
<status status="PASS" starttime="20210730 13:53:42.880" endtime="20210730 13:53:42.885"/>
</branch>
<status status="PASS" starttime="20210730 13:53:42.880" endtime="20210730 13:53:42.885"/>
</if>
<status status="PASS" starttime="20210730 13:53:42.861" endtime="20210730 13:53:42.886"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:42.887" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:42.886" endtime="20210730 13:53:42.887"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:42.887" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:42.887" endtime="20210730 13:53:42.887"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:42.888" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:42.887" endtime="20210730 13:53:42.888"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:42.888" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:42.888" endtime="20210730 13:53:42.888"/>
</kw>
<msg timestamp="20210730 13:53:42.888" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:42.887" endtime="20210730 13:53:42.888"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:42.893" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:42.888" endtime="20210730 13:53:42.896"/>
</kw>
<status status="PASS" starttime="20210730 13:53:42.886" endtime="20210730 13:53:42.896"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:42.897" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:42.897" endtime="20210730 13:53:42.901"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:44.407" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:42.902" endtime="20210730 13:53:44.407"/>
</kw>
<status status="PASS" starttime="20210730 13:53:42.896" endtime="20210730 13:53:44.407"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:44.409" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:44.408" endtime="20210730 13:53:44.409"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:44.409" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:44.409" endtime="20210730 13:53:44.409"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:44.410" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:44.409" endtime="20210730 13:53:44.410"/>
</kw>
<msg timestamp="20210730 13:53:44.410" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:44.408" endtime="20210730 13:53:44.410"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:44.410" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:44.410" endtime="20210730 13:53:44.411"/>
</kw>
<status status="PASS" starttime="20210730 13:53:44.408" endtime="20210730 13:53:44.411"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:44.411" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:44.411" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:44.411" endtime="20210730 13:53:44.412"/>
</kw>
<status status="PASS" starttime="20210730 13:53:44.411" endtime="20210730 13:53:44.412"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:44.413" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:44.413" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:44.412" endtime="20210730 13:53:44.413"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:44.414" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:44.413" endtime="20210730 13:53:44.414"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:44.414" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:44.414" endtime="20210730 13:53:44.414"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:44.414" endtime="20210730 13:53:44.415"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:44.415" endtime="20210730 13:53:44.416"/>
</kw>
<status status="PASS" starttime="20210730 13:53:44.414" endtime="20210730 13:53:44.416"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:44.416" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:44.416" endtime="20210730 13:53:44.416"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:44.416" endtime="20210730 13:53:44.417"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:44.417" endtime="20210730 13:53:44.418"/>
</kw>
<status status="PASS" starttime="20210730 13:53:44.416" endtime="20210730 13:53:44.418"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:44.418" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:44.418" endtime="20210730 13:53:44.418"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:44.418" endtime="20210730 13:53:44.419"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:44.419" endtime="20210730 13:53:44.419"/>
</kw>
<status status="PASS" starttime="20210730 13:53:44.418" endtime="20210730 13:53:44.419"/>
</iter>
<status status="PASS" starttime="20210730 13:53:44.414" endtime="20210730 13:53:44.419"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:44.420" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:44.419" endtime="20210730 13:53:44.420"/>
</kw>
<status status="PASS" starttime="20210730 13:53:44.412" endtime="20210730 13:53:44.420"/>
</kw>
<status status="PASS" starttime="20210730 13:53:42.861" endtime="20210730 13:53:44.420"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=0123!?.00123!?.00123!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:44.421" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:44.421" endtime="20210730 13:53:44.421"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:44.422" level="INFO">${payload} = {'password': '0123!?.00123!?.00123!?'}</msg>
<status status="PASS" starttime="20210730 13:53:44.421" endtime="20210730 13:53:44.422"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:44.431" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:44.431" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:44.422" endtime="20210730 13:53:44.432"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:44.432" endtime="20210730 13:53:44.432"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:44.432" endtime="20210730 13:53:44.432"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:44.422" endtime="20210730 13:53:44.432"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:44.422" endtime="20210730 13:53:44.432"/>
</for>
<status status="FAIL" starttime="20210730 13:53:44.420" endtime="20210730 13:53:44.432"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:44.420" endtime="20210730 13:53:44.432"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=0123!?.00123!?.00123!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:44.433" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:44.433" endtime="20210730 13:53:44.434"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:44.434" level="INFO">${payload} = {'password': '0123!?.00123!?.00123!?'}</msg>
<status status="PASS" starttime="20210730 13:53:44.434" endtime="20210730 13:53:44.434"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:44.438" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:44.439" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:44.434" endtime="20210730 13:53:44.439"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:44.439" endtime="20210730 13:53:44.439"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:44.439" endtime="20210730 13:53:44.439"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:44.434" endtime="20210730 13:53:44.439"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:44.434" endtime="20210730 13:53:44.439"/>
</for>
<status status="FAIL" starttime="20210730 13:53:44.433" endtime="20210730 13:53:44.439"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:44.433" endtime="20210730 13:53:44.439"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=0123!?.00123!?.00123!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:44.440" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:44.440" endtime="20210730 13:53:44.440"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:44.441" level="INFO">${payload} = {'password': '0123!?.00123!?.00123!?'}</msg>
<status status="PASS" starttime="20210730 13:53:44.440" endtime="20210730 13:53:44.441"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:44.445" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:44.445" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:44.441" endtime="20210730 13:53:44.445"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:44.445" endtime="20210730 13:53:44.446"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:44.446" endtime="20210730 13:53:44.446"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:44.441" endtime="20210730 13:53:44.446"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:44.441" endtime="20210730 13:53:44.446"/>
</for>
<status status="FAIL" starttime="20210730 13:53:44.439" endtime="20210730 13:53:44.446"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:44.439" endtime="20210730 13:53:44.446"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:44.420" endtime="20210730 13:53:44.446"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:44.452" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:44.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:44.463" level="INFO">${pids} = 16404
16411
16415</msg>
<status status="PASS" starttime="20210730 13:53:44.447" endtime="20210730 13:53:44.463"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:44.464" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:44.464" endtime="20210730 13:53:44.464"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:44.465" level="INFO">${pids} = ['16404', '16411', '16415']</msg>
<status status="PASS" starttime="20210730 13:53:44.464" endtime="20210730 13:53:44.465"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16404</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:44.468" level="INFO">Running command 'kill 16404 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:44.465" endtime="20210730 13:53:44.469"/>
</kw>
<status status="PASS" starttime="20210730 13:53:44.465" endtime="20210730 13:53:44.469"/>
</iter>
<iter>
<var name="${pid}">16411</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:44.472" level="INFO">Running command 'kill 16411 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:44.469" endtime="20210730 13:53:44.472"/>
</kw>
<status status="PASS" starttime="20210730 13:53:44.469" endtime="20210730 13:53:44.473"/>
</iter>
<iter>
<var name="${pid}">16415</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:44.477" level="INFO">Running command 'kill 16415 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:44.473" endtime="20210730 13:53:44.477"/>
</kw>
<status status="PASS" starttime="20210730 13:53:44.473" endtime="20210730 13:53:44.477"/>
</iter>
<status status="PASS" starttime="20210730 13:53:44.465" endtime="20210730 13:53:44.477"/>
</for>
<status status="PASS" starttime="20210730 13:53:44.464" endtime="20210730 13:53:44.477"/>
</branch>
<status status="PASS" starttime="20210730 13:53:44.464" endtime="20210730 13:53:44.477"/>
</if>
<status status="PASS" starttime="20210730 13:53:44.447" endtime="20210730 13:53:44.478"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": '0123!?.00123!?.00123!?'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:42.860" endtime="20210730 13:53:44.478">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t75" name="With Each Valid Token, Updating Password Of Each System User With abcdAB9 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:44.485" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:44.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:44.498" level="INFO">${pids} = 16444</msg>
<status status="PASS" starttime="20210730 13:53:44.480" endtime="20210730 13:53:44.498"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:44.499" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:44.498" endtime="20210730 13:53:44.499"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:44.499" level="INFO">${pids} = ['16444']</msg>
<status status="PASS" starttime="20210730 13:53:44.499" endtime="20210730 13:53:44.499"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16444</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:44.503" level="INFO">Running command 'kill 16444 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:44.500" endtime="20210730 13:53:44.503"/>
</kw>
<status status="PASS" starttime="20210730 13:53:44.499" endtime="20210730 13:53:44.503"/>
</iter>
<status status="PASS" starttime="20210730 13:53:44.499" endtime="20210730 13:53:44.503"/>
</for>
<status status="PASS" starttime="20210730 13:53:44.499" endtime="20210730 13:53:44.503"/>
</branch>
<status status="PASS" starttime="20210730 13:53:44.499" endtime="20210730 13:53:44.503"/>
</if>
<status status="PASS" starttime="20210730 13:53:44.480" endtime="20210730 13:53:44.503"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:44.505" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:44.504" endtime="20210730 13:53:44.505"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:44.505" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:44.505" endtime="20210730 13:53:44.505"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:44.506" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:44.506" endtime="20210730 13:53:44.506"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:44.506" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:44.506" endtime="20210730 13:53:44.506"/>
</kw>
<msg timestamp="20210730 13:53:44.506" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:44.505" endtime="20210730 13:53:44.506"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:44.514" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:44.507" endtime="20210730 13:53:44.515"/>
</kw>
<status status="PASS" starttime="20210730 13:53:44.504" endtime="20210730 13:53:44.515"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:44.517" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:44.516" endtime="20210730 13:53:44.522"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:46.024" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:44.522" endtime="20210730 13:53:46.024"/>
</kw>
<status status="PASS" starttime="20210730 13:53:44.516" endtime="20210730 13:53:46.025"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:46.026" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:46.026" endtime="20210730 13:53:46.026"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:46.027" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:46.026" endtime="20210730 13:53:46.027"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:46.027" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:46.027" endtime="20210730 13:53:46.027"/>
</kw>
<msg timestamp="20210730 13:53:46.027" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:46.025" endtime="20210730 13:53:46.027"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:46.028" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:46.027" endtime="20210730 13:53:46.028"/>
</kw>
<status status="PASS" starttime="20210730 13:53:46.025" endtime="20210730 13:53:46.028"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:46.029" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:46.029" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:46.028" endtime="20210730 13:53:46.029"/>
</kw>
<status status="PASS" starttime="20210730 13:53:46.028" endtime="20210730 13:53:46.029"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:46.029" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:46.030" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:46.029" endtime="20210730 13:53:46.030"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:46.030" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:46.030" endtime="20210730 13:53:46.030"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:46.031" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:46.031" endtime="20210730 13:53:46.031"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:46.031" endtime="20210730 13:53:46.032"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:46.032" endtime="20210730 13:53:46.032"/>
</kw>
<status status="PASS" starttime="20210730 13:53:46.030" endtime="20210730 13:53:46.032"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:46.033" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:46.032" endtime="20210730 13:53:46.033"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:46.033" endtime="20210730 13:53:46.033"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:46.033" endtime="20210730 13:53:46.034"/>
</kw>
<status status="PASS" starttime="20210730 13:53:46.032" endtime="20210730 13:53:46.034"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:46.034" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:46.034" endtime="20210730 13:53:46.034"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:46.034" endtime="20210730 13:53:46.035"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:46.035" endtime="20210730 13:53:46.035"/>
</kw>
<status status="PASS" starttime="20210730 13:53:46.034" endtime="20210730 13:53:46.035"/>
</iter>
<status status="PASS" starttime="20210730 13:53:46.030" endtime="20210730 13:53:46.035"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:46.036" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:46.035" endtime="20210730 13:53:46.036"/>
</kw>
<status status="PASS" starttime="20210730 13:53:46.029" endtime="20210730 13:53:46.036"/>
</kw>
<status status="PASS" starttime="20210730 13:53:44.479" endtime="20210730 13:53:46.036"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdAB9</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:46.037" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:46.037" endtime="20210730 13:53:46.037"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:46.038" level="INFO">${payload} = {'password': 'abcdAB9'}</msg>
<status status="PASS" starttime="20210730 13:53:46.037" endtime="20210730 13:53:46.038"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:46.046" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:46.047" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:46.038" endtime="20210730 13:53:46.047"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:46.047" endtime="20210730 13:53:46.047"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:46.047" endtime="20210730 13:53:46.047"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:46.038" endtime="20210730 13:53:46.047"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:46.038" endtime="20210730 13:53:46.047"/>
</for>
<status status="FAIL" starttime="20210730 13:53:46.036" endtime="20210730 13:53:46.047"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:46.036" endtime="20210730 13:53:46.048"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdAB9</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:46.049" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:46.048" endtime="20210730 13:53:46.049"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:46.049" level="INFO">${payload} = {'password': 'abcdAB9'}</msg>
<status status="PASS" starttime="20210730 13:53:46.049" endtime="20210730 13:53:46.049"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:46.054" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:46.054" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:46.049" endtime="20210730 13:53:46.054"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:46.054" endtime="20210730 13:53:46.054"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:46.054" endtime="20210730 13:53:46.054"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:46.049" endtime="20210730 13:53:46.054"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:46.049" endtime="20210730 13:53:46.054"/>
</for>
<status status="FAIL" starttime="20210730 13:53:46.048" endtime="20210730 13:53:46.054"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:46.048" endtime="20210730 13:53:46.055"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdAB9</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:46.056" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:46.055" endtime="20210730 13:53:46.056"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:46.056" level="INFO">${payload} = {'password': 'abcdAB9'}</msg>
<status status="PASS" starttime="20210730 13:53:46.056" endtime="20210730 13:53:46.056"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:46.061" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:46.061" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:46.056" endtime="20210730 13:53:46.061"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:46.061" endtime="20210730 13:53:46.061"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:46.061" endtime="20210730 13:53:46.061"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:46.056" endtime="20210730 13:53:46.061"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:46.056" endtime="20210730 13:53:46.061"/>
</for>
<status status="FAIL" starttime="20210730 13:53:46.055" endtime="20210730 13:53:46.061"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:46.055" endtime="20210730 13:53:46.062"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:46.036" endtime="20210730 13:53:46.062"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:46.067" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:46.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:46.077" level="INFO">${pids} = 16467
16474
16479</msg>
<status status="PASS" starttime="20210730 13:53:46.063" endtime="20210730 13:53:46.077"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:46.078" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:46.078" endtime="20210730 13:53:46.078"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:46.079" level="INFO">${pids} = ['16467', '16474', '16479']</msg>
<status status="PASS" starttime="20210730 13:53:46.079" endtime="20210730 13:53:46.079"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16467</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:46.083" level="INFO">Running command 'kill 16467 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:46.079" endtime="20210730 13:53:46.083"/>
</kw>
<status status="PASS" starttime="20210730 13:53:46.079" endtime="20210730 13:53:46.084"/>
</iter>
<iter>
<var name="${pid}">16474</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:46.088" level="INFO">Running command 'kill 16474 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:46.084" endtime="20210730 13:53:46.088"/>
</kw>
<status status="PASS" starttime="20210730 13:53:46.084" endtime="20210730 13:53:46.088"/>
</iter>
<iter>
<var name="${pid}">16479</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:46.093" level="INFO">Running command 'kill 16479 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:46.089" endtime="20210730 13:53:46.094"/>
</kw>
<status status="PASS" starttime="20210730 13:53:46.089" endtime="20210730 13:53:46.094"/>
</iter>
<status status="PASS" starttime="20210730 13:53:46.079" endtime="20210730 13:53:46.094"/>
</for>
<status status="PASS" starttime="20210730 13:53:46.079" endtime="20210730 13:53:46.094"/>
</branch>
<status status="PASS" starttime="20210730 13:53:46.078" endtime="20210730 13:53:46.094"/>
</if>
<status status="PASS" starttime="20210730 13:53:46.062" endtime="20210730 13:53:46.095"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcdAB9'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:44.478" endtime="20210730 13:53:46.095">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t76" name="With Each Valid Token, Updating Password Of Each System User With abcdAB90 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:46.101" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:46.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:46.111" level="INFO">${pids} = 16508</msg>
<status status="PASS" starttime="20210730 13:53:46.097" endtime="20210730 13:53:46.111"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:46.112" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:46.111" endtime="20210730 13:53:46.112"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:46.113" level="INFO">${pids} = ['16508']</msg>
<status status="PASS" starttime="20210730 13:53:46.112" endtime="20210730 13:53:46.113"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16508</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:46.116" level="INFO">Running command 'kill 16508 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:46.113" endtime="20210730 13:53:46.116"/>
</kw>
<status status="PASS" starttime="20210730 13:53:46.113" endtime="20210730 13:53:46.116"/>
</iter>
<status status="PASS" starttime="20210730 13:53:46.113" endtime="20210730 13:53:46.116"/>
</for>
<status status="PASS" starttime="20210730 13:53:46.112" endtime="20210730 13:53:46.117"/>
</branch>
<status status="PASS" starttime="20210730 13:53:46.112" endtime="20210730 13:53:46.117"/>
</if>
<status status="PASS" starttime="20210730 13:53:46.097" endtime="20210730 13:53:46.117"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:46.118" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:46.118" endtime="20210730 13:53:46.118"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:46.119" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:46.119" endtime="20210730 13:53:46.119"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:46.119" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:46.119" endtime="20210730 13:53:46.119"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:46.120" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:46.119" endtime="20210730 13:53:46.120"/>
</kw>
<msg timestamp="20210730 13:53:46.120" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:46.118" endtime="20210730 13:53:46.120"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:46.123" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:46.120" endtime="20210730 13:53:46.125"/>
</kw>
<status status="PASS" starttime="20210730 13:53:46.117" endtime="20210730 13:53:46.125"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:46.127" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:46.127" endtime="20210730 13:53:46.134"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:47.637" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:46.135" endtime="20210730 13:53:47.637"/>
</kw>
<status status="PASS" starttime="20210730 13:53:46.126" endtime="20210730 13:53:47.638"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:47.642" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:47.641" endtime="20210730 13:53:47.642"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:47.642" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:47.642" endtime="20210730 13:53:47.642"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:47.643" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:47.642" endtime="20210730 13:53:47.643"/>
</kw>
<msg timestamp="20210730 13:53:47.643" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:47.641" endtime="20210730 13:53:47.643"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:47.643" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:47.643" endtime="20210730 13:53:47.644"/>
</kw>
<status status="PASS" starttime="20210730 13:53:47.639" endtime="20210730 13:53:47.644"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:47.644" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:47.644" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:47.644" endtime="20210730 13:53:47.645"/>
</kw>
<status status="PASS" starttime="20210730 13:53:47.644" endtime="20210730 13:53:47.645"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:47.646" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:47.647" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:47.645" endtime="20210730 13:53:47.647"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:47.647" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:47.647" endtime="20210730 13:53:47.647"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:47.647" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:47.647" endtime="20210730 13:53:47.647"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:47.648" endtime="20210730 13:53:47.648"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:47.648" endtime="20210730 13:53:47.649"/>
</kw>
<status status="PASS" starttime="20210730 13:53:47.647" endtime="20210730 13:53:47.649"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:47.649" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:47.649" endtime="20210730 13:53:47.649"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:47.649" endtime="20210730 13:53:47.651"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:47.651" endtime="20210730 13:53:47.651"/>
</kw>
<status status="PASS" starttime="20210730 13:53:47.649" endtime="20210730 13:53:47.651"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:47.651" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:47.651" endtime="20210730 13:53:47.651"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:47.652" endtime="20210730 13:53:47.652"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:47.652" endtime="20210730 13:53:47.653"/>
</kw>
<status status="PASS" starttime="20210730 13:53:47.651" endtime="20210730 13:53:47.653"/>
</iter>
<status status="PASS" starttime="20210730 13:53:47.647" endtime="20210730 13:53:47.653"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:47.653" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:47.653" endtime="20210730 13:53:47.653"/>
</kw>
<status status="PASS" starttime="20210730 13:53:47.645" endtime="20210730 13:53:47.653"/>
</kw>
<status status="PASS" starttime="20210730 13:53:46.096" endtime="20210730 13:53:47.653"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdAB90</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:47.655" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:47.654" endtime="20210730 13:53:47.655"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:47.655" level="INFO">${payload} = {'password': 'abcdAB90'}</msg>
<status status="PASS" starttime="20210730 13:53:47.655" endtime="20210730 13:53:47.655"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:47.665" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:47.665" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:47.655" endtime="20210730 13:53:47.665"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:47.665" endtime="20210730 13:53:47.665"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:47.665" endtime="20210730 13:53:47.666"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:47.655" endtime="20210730 13:53:47.666"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:47.655" endtime="20210730 13:53:47.666"/>
</for>
<status status="FAIL" starttime="20210730 13:53:47.654" endtime="20210730 13:53:47.666"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:47.654" endtime="20210730 13:53:47.666"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdAB90</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:47.667" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:47.667" endtime="20210730 13:53:47.667"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:47.667" level="INFO">${payload} = {'password': 'abcdAB90'}</msg>
<status status="PASS" starttime="20210730 13:53:47.667" endtime="20210730 13:53:47.667"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:47.672" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:47.672" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:47.668" endtime="20210730 13:53:47.672"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:47.672" endtime="20210730 13:53:47.672"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:47.672" endtime="20210730 13:53:47.672"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:47.668" endtime="20210730 13:53:47.672"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:47.667" endtime="20210730 13:53:47.672"/>
</for>
<status status="FAIL" starttime="20210730 13:53:47.666" endtime="20210730 13:53:47.672"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:47.666" endtime="20210730 13:53:47.672"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdAB90</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:47.674" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:47.673" endtime="20210730 13:53:47.674"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:47.674" level="INFO">${payload} = {'password': 'abcdAB90'}</msg>
<status status="PASS" starttime="20210730 13:53:47.674" endtime="20210730 13:53:47.674"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:47.678" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:47.679" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:47.674" endtime="20210730 13:53:47.679"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:47.679" endtime="20210730 13:53:47.679"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:47.679" endtime="20210730 13:53:47.679"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:47.674" endtime="20210730 13:53:47.679"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:47.674" endtime="20210730 13:53:47.679"/>
</for>
<status status="FAIL" starttime="20210730 13:53:47.673" endtime="20210730 13:53:47.680"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:47.673" endtime="20210730 13:53:47.680"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:47.654" endtime="20210730 13:53:47.680"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:47.687" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:47.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:47.697" level="INFO">${pids} = 16531
16538
16543</msg>
<status status="PASS" starttime="20210730 13:53:47.681" endtime="20210730 13:53:47.697"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:47.698" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:47.698" endtime="20210730 13:53:47.698"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:47.699" level="INFO">${pids} = ['16531', '16538', '16543']</msg>
<status status="PASS" starttime="20210730 13:53:47.699" endtime="20210730 13:53:47.699"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16531</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:47.703" level="INFO">Running command 'kill 16531 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:47.699" endtime="20210730 13:53:47.703"/>
</kw>
<status status="PASS" starttime="20210730 13:53:47.699" endtime="20210730 13:53:47.703"/>
</iter>
<iter>
<var name="${pid}">16538</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:47.707" level="INFO">Running command 'kill 16538 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:47.704" endtime="20210730 13:53:47.707"/>
</kw>
<status status="PASS" starttime="20210730 13:53:47.703" endtime="20210730 13:53:47.707"/>
</iter>
<iter>
<var name="${pid}">16543</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:47.715" level="INFO">Running command 'kill 16543 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:47.709" endtime="20210730 13:53:47.715"/>
</kw>
<status status="PASS" starttime="20210730 13:53:47.709" endtime="20210730 13:53:47.715"/>
</iter>
<status status="PASS" starttime="20210730 13:53:47.699" endtime="20210730 13:53:47.715"/>
</for>
<status status="PASS" starttime="20210730 13:53:47.698" endtime="20210730 13:53:47.715"/>
</branch>
<status status="PASS" starttime="20210730 13:53:47.698" endtime="20210730 13:53:47.715"/>
</if>
<status status="PASS" starttime="20210730 13:53:47.680" endtime="20210730 13:53:47.716"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcdAB90'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:46.095" endtime="20210730 13:53:47.716">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t77" name="With Each Valid Token, Updating Password Of Each System User With abcdAB90abcdAB90abcdAB Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:47.723" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:47.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:47.733" level="INFO">${pids} = 16572</msg>
<status status="PASS" starttime="20210730 13:53:47.719" endtime="20210730 13:53:47.733"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:47.734" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:47.734" endtime="20210730 13:53:47.734"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:47.735" level="INFO">${pids} = ['16572']</msg>
<status status="PASS" starttime="20210730 13:53:47.735" endtime="20210730 13:53:47.735"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16572</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:47.738" level="INFO">Running command 'kill 16572 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:47.735" endtime="20210730 13:53:47.739"/>
</kw>
<status status="PASS" starttime="20210730 13:53:47.735" endtime="20210730 13:53:47.739"/>
</iter>
<status status="PASS" starttime="20210730 13:53:47.735" endtime="20210730 13:53:47.739"/>
</for>
<status status="PASS" starttime="20210730 13:53:47.734" endtime="20210730 13:53:47.739"/>
</branch>
<status status="PASS" starttime="20210730 13:53:47.734" endtime="20210730 13:53:47.739"/>
</if>
<status status="PASS" starttime="20210730 13:53:47.719" endtime="20210730 13:53:47.739"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:47.740" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:47.740" endtime="20210730 13:53:47.740"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:47.741" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:47.740" endtime="20210730 13:53:47.741"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:47.741" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:47.741" endtime="20210730 13:53:47.741"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:47.742" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:47.741" endtime="20210730 13:53:47.742"/>
</kw>
<msg timestamp="20210730 13:53:47.742" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:47.740" endtime="20210730 13:53:47.742"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:47.749" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:47.742" endtime="20210730 13:53:47.750"/>
</kw>
<status status="PASS" starttime="20210730 13:53:47.739" endtime="20210730 13:53:47.751"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:47.752" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:47.752" endtime="20210730 13:53:47.756"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:49.259" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:47.757" endtime="20210730 13:53:49.259"/>
</kw>
<status status="PASS" starttime="20210730 13:53:47.751" endtime="20210730 13:53:49.259"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:49.260" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:49.260" endtime="20210730 13:53:49.260"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:49.261" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:49.261" endtime="20210730 13:53:49.261"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:49.261" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:49.261" endtime="20210730 13:53:49.261"/>
</kw>
<msg timestamp="20210730 13:53:49.262" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:49.260" endtime="20210730 13:53:49.262"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:49.262" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:49.262" endtime="20210730 13:53:49.263"/>
</kw>
<status status="PASS" starttime="20210730 13:53:49.260" endtime="20210730 13:53:49.263"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:49.263" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:49.263" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:49.263" endtime="20210730 13:53:49.263"/>
</kw>
<status status="PASS" starttime="20210730 13:53:49.263" endtime="20210730 13:53:49.264"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:49.264" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:49.264" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:49.264" endtime="20210730 13:53:49.264"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:49.265" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:49.265" endtime="20210730 13:53:49.265"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:49.265" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:49.265" endtime="20210730 13:53:49.265"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:49.265" endtime="20210730 13:53:49.266"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:49.266" endtime="20210730 13:53:49.266"/>
</kw>
<status status="PASS" starttime="20210730 13:53:49.265" endtime="20210730 13:53:49.266"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:49.267" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:49.267" endtime="20210730 13:53:49.267"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:49.267" endtime="20210730 13:53:49.268"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:49.268" endtime="20210730 13:53:49.268"/>
</kw>
<status status="PASS" starttime="20210730 13:53:49.267" endtime="20210730 13:53:49.268"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:49.268" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:49.268" endtime="20210730 13:53:49.268"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:49.269" endtime="20210730 13:53:49.269"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:49.269" endtime="20210730 13:53:49.270"/>
</kw>
<status status="PASS" starttime="20210730 13:53:49.268" endtime="20210730 13:53:49.270"/>
</iter>
<status status="PASS" starttime="20210730 13:53:49.265" endtime="20210730 13:53:49.270"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:49.270" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:49.270" endtime="20210730 13:53:49.270"/>
</kw>
<status status="PASS" starttime="20210730 13:53:49.264" endtime="20210730 13:53:49.270"/>
</kw>
<status status="PASS" starttime="20210730 13:53:47.719" endtime="20210730 13:53:49.270"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdAB90abcdAB90abcdAB</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:49.272" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:49.271" endtime="20210730 13:53:49.272"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:49.272" level="INFO">${payload} = {'password': 'abcdAB90abcdAB90abcdAB'}</msg>
<status status="PASS" starttime="20210730 13:53:49.272" endtime="20210730 13:53:49.272"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:49.281" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:49.282" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:49.272" endtime="20210730 13:53:49.282"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:49.282" endtime="20210730 13:53:49.282"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:49.282" endtime="20210730 13:53:49.282"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:49.272" endtime="20210730 13:53:49.282"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:49.272" endtime="20210730 13:53:49.282"/>
</for>
<status status="FAIL" starttime="20210730 13:53:49.271" endtime="20210730 13:53:49.282"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:49.271" endtime="20210730 13:53:49.282"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdAB90abcdAB90abcdAB</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:49.284" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:49.283" endtime="20210730 13:53:49.284"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:49.284" level="INFO">${payload} = {'password': 'abcdAB90abcdAB90abcdAB'}</msg>
<status status="PASS" starttime="20210730 13:53:49.284" endtime="20210730 13:53:49.284"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:49.288" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:49.289" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:49.284" endtime="20210730 13:53:49.289"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:49.289" endtime="20210730 13:53:49.289"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:49.289" endtime="20210730 13:53:49.289"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:49.284" endtime="20210730 13:53:49.289"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:49.284" endtime="20210730 13:53:49.289"/>
</for>
<status status="FAIL" starttime="20210730 13:53:49.283" endtime="20210730 13:53:49.289"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:49.283" endtime="20210730 13:53:49.289"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdAB90abcdAB90abcdAB</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:49.290" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:49.290" endtime="20210730 13:53:49.290"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:49.291" level="INFO">${payload} = {'password': 'abcdAB90abcdAB90abcdAB'}</msg>
<status status="PASS" starttime="20210730 13:53:49.291" endtime="20210730 13:53:49.291"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:49.296" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:49.296" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:49.291" endtime="20210730 13:53:49.296"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:49.296" endtime="20210730 13:53:49.296"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:49.296" endtime="20210730 13:53:49.296"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:49.291" endtime="20210730 13:53:49.296"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:49.291" endtime="20210730 13:53:49.296"/>
</for>
<status status="FAIL" starttime="20210730 13:53:49.289" endtime="20210730 13:53:49.297"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:49.289" endtime="20210730 13:53:49.297"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:49.270" endtime="20210730 13:53:49.297"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:49.301" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:49.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:49.312" level="INFO">${pids} = 16595
16602
16606</msg>
<status status="PASS" starttime="20210730 13:53:49.298" endtime="20210730 13:53:49.312"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:49.313" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:49.312" endtime="20210730 13:53:49.313"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:49.313" level="INFO">${pids} = ['16595', '16602', '16606']</msg>
<status status="PASS" starttime="20210730 13:53:49.313" endtime="20210730 13:53:49.313"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16595</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:49.317" level="INFO">Running command 'kill 16595 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:49.314" endtime="20210730 13:53:49.317"/>
</kw>
<status status="PASS" starttime="20210730 13:53:49.314" endtime="20210730 13:53:49.317"/>
</iter>
<iter>
<var name="${pid}">16602</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:49.321" level="INFO">Running command 'kill 16602 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:49.318" endtime="20210730 13:53:49.322"/>
</kw>
<status status="PASS" starttime="20210730 13:53:49.318" endtime="20210730 13:53:49.322"/>
</iter>
<iter>
<var name="${pid}">16606</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:49.327" level="INFO">Running command 'kill 16606 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:49.322" endtime="20210730 13:53:49.327"/>
</kw>
<status status="PASS" starttime="20210730 13:53:49.322" endtime="20210730 13:53:49.327"/>
</iter>
<status status="PASS" starttime="20210730 13:53:49.313" endtime="20210730 13:53:49.327"/>
</for>
<status status="PASS" starttime="20210730 13:53:49.313" endtime="20210730 13:53:49.327"/>
</branch>
<status status="PASS" starttime="20210730 13:53:49.313" endtime="20210730 13:53:49.327"/>
</if>
<status status="PASS" starttime="20210730 13:53:49.297" endtime="20210730 13:53:49.328"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcdAB90abcdAB90abcdAB'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:47.718" endtime="20210730 13:53:49.328">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t78" name="With Each Valid Token, Updating Password Of Each System User With ABCabc! Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:49.335" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:49.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:49.344" level="INFO">${pids} = 16635</msg>
<status status="PASS" starttime="20210730 13:53:49.330" endtime="20210730 13:53:49.344"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:49.345" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:49.345" endtime="20210730 13:53:49.345"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:49.346" level="INFO">${pids} = ['16635']</msg>
<status status="PASS" starttime="20210730 13:53:49.346" endtime="20210730 13:53:49.346"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16635</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:49.349" level="INFO">Running command 'kill 16635 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:49.346" endtime="20210730 13:53:49.350"/>
</kw>
<status status="PASS" starttime="20210730 13:53:49.346" endtime="20210730 13:53:49.350"/>
</iter>
<status status="PASS" starttime="20210730 13:53:49.346" endtime="20210730 13:53:49.350"/>
</for>
<status status="PASS" starttime="20210730 13:53:49.345" endtime="20210730 13:53:49.350"/>
</branch>
<status status="PASS" starttime="20210730 13:53:49.345" endtime="20210730 13:53:49.350"/>
</if>
<status status="PASS" starttime="20210730 13:53:49.330" endtime="20210730 13:53:49.350"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:49.352" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:49.351" endtime="20210730 13:53:49.352"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:49.353" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:49.352" endtime="20210730 13:53:49.353"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:49.353" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:49.353" endtime="20210730 13:53:49.353"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:49.354" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:49.353" endtime="20210730 13:53:49.354"/>
</kw>
<msg timestamp="20210730 13:53:49.354" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:49.352" endtime="20210730 13:53:49.354"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:49.357" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:49.354" endtime="20210730 13:53:49.360"/>
</kw>
<status status="PASS" starttime="20210730 13:53:49.351" endtime="20210730 13:53:49.360"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:49.362" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:49.361" endtime="20210730 13:53:49.368"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:50.869" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:49.368" endtime="20210730 13:53:50.869"/>
</kw>
<status status="PASS" starttime="20210730 13:53:49.361" endtime="20210730 13:53:50.869"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:50.870" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:50.870" endtime="20210730 13:53:50.870"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:50.871" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:50.870" endtime="20210730 13:53:50.871"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:50.871" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:50.871" endtime="20210730 13:53:50.871"/>
</kw>
<msg timestamp="20210730 13:53:50.871" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:50.870" endtime="20210730 13:53:50.871"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:50.872" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:50.871" endtime="20210730 13:53:50.872"/>
</kw>
<status status="PASS" starttime="20210730 13:53:50.869" endtime="20210730 13:53:50.872"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:50.873" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:50.873" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:50.873" endtime="20210730 13:53:50.873"/>
</kw>
<status status="PASS" starttime="20210730 13:53:50.872" endtime="20210730 13:53:50.873"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:50.874" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:50.875" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:50.874" endtime="20210730 13:53:50.875"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:50.875" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:50.875" endtime="20210730 13:53:50.875"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:50.876" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:50.875" endtime="20210730 13:53:50.876"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:50.876" endtime="20210730 13:53:50.877"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:50.877" endtime="20210730 13:53:50.877"/>
</kw>
<status status="PASS" starttime="20210730 13:53:50.875" endtime="20210730 13:53:50.877"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:50.877" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:50.877" endtime="20210730 13:53:50.877"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:50.877" endtime="20210730 13:53:50.878"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:50.878" endtime="20210730 13:53:50.878"/>
</kw>
<status status="PASS" starttime="20210730 13:53:50.877" endtime="20210730 13:53:50.878"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:50.879" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:50.879" endtime="20210730 13:53:50.879"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:50.879" endtime="20210730 13:53:50.879"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:50.880" endtime="20210730 13:53:50.880"/>
</kw>
<status status="PASS" starttime="20210730 13:53:50.878" endtime="20210730 13:53:50.880"/>
</iter>
<status status="PASS" starttime="20210730 13:53:50.875" endtime="20210730 13:53:50.880"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:50.880" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:50.880" endtime="20210730 13:53:50.880"/>
</kw>
<status status="PASS" starttime="20210730 13:53:50.873" endtime="20210730 13:53:50.880"/>
</kw>
<status status="PASS" starttime="20210730 13:53:49.329" endtime="20210730 13:53:50.880"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCabc!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:50.882" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:50.881" endtime="20210730 13:53:50.882"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:50.882" level="INFO">${payload} = {'password': 'ABCabc!'}</msg>
<status status="PASS" starttime="20210730 13:53:50.882" endtime="20210730 13:53:50.882"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:50.891" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:50.891" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:50.882" endtime="20210730 13:53:50.891"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:50.891" endtime="20210730 13:53:50.891"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:50.892" endtime="20210730 13:53:50.892"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:50.882" endtime="20210730 13:53:50.892"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:50.882" endtime="20210730 13:53:50.892"/>
</for>
<status status="FAIL" starttime="20210730 13:53:50.881" endtime="20210730 13:53:50.892"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:50.881" endtime="20210730 13:53:50.892"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCabc!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:50.894" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:50.894" endtime="20210730 13:53:50.894"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:50.895" level="INFO">${payload} = {'password': 'ABCabc!'}</msg>
<status status="PASS" starttime="20210730 13:53:50.895" endtime="20210730 13:53:50.895"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:50.899" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:50.900" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:50.895" endtime="20210730 13:53:50.900"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:50.900" endtime="20210730 13:53:50.900"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:50.900" endtime="20210730 13:53:50.900"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:50.895" endtime="20210730 13:53:50.900"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:50.895" endtime="20210730 13:53:50.900"/>
</for>
<status status="FAIL" starttime="20210730 13:53:50.893" endtime="20210730 13:53:50.900"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:50.892" endtime="20210730 13:53:50.900"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCabc!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:50.902" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:50.901" endtime="20210730 13:53:50.902"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:50.902" level="INFO">${payload} = {'password': 'ABCabc!'}</msg>
<status status="PASS" starttime="20210730 13:53:50.902" endtime="20210730 13:53:50.902"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:50.906" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:50.906" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:50.902" endtime="20210730 13:53:50.906"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:50.906" endtime="20210730 13:53:50.906"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:50.906" endtime="20210730 13:53:50.907"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:50.902" endtime="20210730 13:53:50.907"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:50.902" endtime="20210730 13:53:50.907"/>
</for>
<status status="FAIL" starttime="20210730 13:53:50.901" endtime="20210730 13:53:50.907"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:50.901" endtime="20210730 13:53:50.907"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:50.881" endtime="20210730 13:53:50.907"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:50.913" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:50.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:50.924" level="INFO">${pids} = 16658
16665
16670</msg>
<status status="PASS" starttime="20210730 13:53:50.908" endtime="20210730 13:53:50.924"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:50.925" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:50.924" endtime="20210730 13:53:50.925"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:50.926" level="INFO">${pids} = ['16658', '16665', '16670']</msg>
<status status="PASS" starttime="20210730 13:53:50.925" endtime="20210730 13:53:50.926"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16658</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:50.929" level="INFO">Running command 'kill 16658 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:50.926" endtime="20210730 13:53:50.930"/>
</kw>
<status status="PASS" starttime="20210730 13:53:50.926" endtime="20210730 13:53:50.930"/>
</iter>
<iter>
<var name="${pid}">16665</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:50.933" level="INFO">Running command 'kill 16665 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:50.930" endtime="20210730 13:53:50.934"/>
</kw>
<status status="PASS" starttime="20210730 13:53:50.930" endtime="20210730 13:53:50.934"/>
</iter>
<iter>
<var name="${pid}">16670</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:50.940" level="INFO">Running command 'kill 16670 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:50.935" endtime="20210730 13:53:50.940"/>
</kw>
<status status="PASS" starttime="20210730 13:53:50.935" endtime="20210730 13:53:50.941"/>
</iter>
<status status="PASS" starttime="20210730 13:53:50.926" endtime="20210730 13:53:50.941"/>
</for>
<status status="PASS" starttime="20210730 13:53:50.925" endtime="20210730 13:53:50.941"/>
</branch>
<status status="PASS" starttime="20210730 13:53:50.925" endtime="20210730 13:53:50.941"/>
</if>
<status status="PASS" starttime="20210730 13:53:50.908" endtime="20210730 13:53:50.941"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCabc!'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:49.329" endtime="20210730 13:53:50.942">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t79" name="With Each Valid Token, Updating Password Of Each System User With ABCabc!? Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:50.947" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:50.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:50.958" level="INFO">${pids} = 16699</msg>
<status status="PASS" starttime="20210730 13:53:50.944" endtime="20210730 13:53:50.958"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:50.959" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:50.959" endtime="20210730 13:53:50.959"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:50.960" level="INFO">${pids} = ['16699']</msg>
<status status="PASS" starttime="20210730 13:53:50.960" endtime="20210730 13:53:50.960"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16699</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:50.964" level="INFO">Running command 'kill 16699 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:50.961" endtime="20210730 13:53:50.965"/>
</kw>
<status status="PASS" starttime="20210730 13:53:50.960" endtime="20210730 13:53:50.965"/>
</iter>
<status status="PASS" starttime="20210730 13:53:50.960" endtime="20210730 13:53:50.965"/>
</for>
<status status="PASS" starttime="20210730 13:53:50.960" endtime="20210730 13:53:50.965"/>
</branch>
<status status="PASS" starttime="20210730 13:53:50.960" endtime="20210730 13:53:50.965"/>
</if>
<status status="PASS" starttime="20210730 13:53:50.944" endtime="20210730 13:53:50.965"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:50.966" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:50.966" endtime="20210730 13:53:50.966"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:50.967" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:50.967" endtime="20210730 13:53:50.967"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:50.967" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:50.967" endtime="20210730 13:53:50.967"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:50.968" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:50.967" endtime="20210730 13:53:50.968"/>
</kw>
<msg timestamp="20210730 13:53:50.968" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:50.966" endtime="20210730 13:53:50.968"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:50.976" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:50.968" endtime="20210730 13:53:50.978"/>
</kw>
<status status="PASS" starttime="20210730 13:53:50.965" endtime="20210730 13:53:50.978"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:50.979" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:50.979" endtime="20210730 13:53:50.983"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:52.486" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:50.983" endtime="20210730 13:53:52.486"/>
</kw>
<status status="PASS" starttime="20210730 13:53:50.978" endtime="20210730 13:53:52.486"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:52.487" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:52.487" endtime="20210730 13:53:52.487"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:52.488" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:52.487" endtime="20210730 13:53:52.488"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:52.488" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:52.488" endtime="20210730 13:53:52.488"/>
</kw>
<msg timestamp="20210730 13:53:52.488" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:52.487" endtime="20210730 13:53:52.488"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:52.489" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:52.488" endtime="20210730 13:53:52.489"/>
</kw>
<status status="PASS" starttime="20210730 13:53:52.486" endtime="20210730 13:53:52.489"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:52.490" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:52.490" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:52.489" endtime="20210730 13:53:52.490"/>
</kw>
<status status="PASS" starttime="20210730 13:53:52.489" endtime="20210730 13:53:52.490"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:52.491" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:52.491" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:52.490" endtime="20210730 13:53:52.491"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:52.491" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:52.491" endtime="20210730 13:53:52.491"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:52.492" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:52.492" endtime="20210730 13:53:52.492"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:52.493" endtime="20210730 13:53:52.494"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:52.494" endtime="20210730 13:53:52.494"/>
</kw>
<status status="PASS" starttime="20210730 13:53:52.492" endtime="20210730 13:53:52.494"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:52.494" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:52.494" endtime="20210730 13:53:52.494"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:52.495" endtime="20210730 13:53:52.495"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:52.495" endtime="20210730 13:53:52.496"/>
</kw>
<status status="PASS" starttime="20210730 13:53:52.494" endtime="20210730 13:53:52.496"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:52.496" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:52.496" endtime="20210730 13:53:52.496"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:52.496" endtime="20210730 13:53:52.497"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:52.497" endtime="20210730 13:53:52.497"/>
</kw>
<status status="PASS" starttime="20210730 13:53:52.496" endtime="20210730 13:53:52.497"/>
</iter>
<status status="PASS" starttime="20210730 13:53:52.491" endtime="20210730 13:53:52.497"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:52.498" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:52.497" endtime="20210730 13:53:52.498"/>
</kw>
<status status="PASS" starttime="20210730 13:53:52.490" endtime="20210730 13:53:52.498"/>
</kw>
<status status="PASS" starttime="20210730 13:53:50.944" endtime="20210730 13:53:52.498"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCabc!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:52.499" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:52.499" endtime="20210730 13:53:52.499"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:52.500" level="INFO">${payload} = {'password': 'ABCabc!?'}</msg>
<status status="PASS" starttime="20210730 13:53:52.500" endtime="20210730 13:53:52.500"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:52.509" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:52.509" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:52.500" endtime="20210730 13:53:52.509"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:52.509" endtime="20210730 13:53:52.509"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:52.509" endtime="20210730 13:53:52.509"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:52.500" endtime="20210730 13:53:52.509"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:52.500" endtime="20210730 13:53:52.509"/>
</for>
<status status="FAIL" starttime="20210730 13:53:52.498" endtime="20210730 13:53:52.510"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:52.498" endtime="20210730 13:53:52.510"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCabc!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:52.511" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:52.510" endtime="20210730 13:53:52.511"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:52.511" level="INFO">${payload} = {'password': 'ABCabc!?'}</msg>
<status status="PASS" starttime="20210730 13:53:52.511" endtime="20210730 13:53:52.511"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:52.515" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:52.516" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:52.511" endtime="20210730 13:53:52.516"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:52.516" endtime="20210730 13:53:52.516"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:52.516" endtime="20210730 13:53:52.516"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:52.511" endtime="20210730 13:53:52.516"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:52.511" endtime="20210730 13:53:52.516"/>
</for>
<status status="FAIL" starttime="20210730 13:53:52.510" endtime="20210730 13:53:52.516"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:52.510" endtime="20210730 13:53:52.516"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCabc!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:52.520" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:52.519" endtime="20210730 13:53:52.520"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:52.521" level="INFO">${payload} = {'password': 'ABCabc!?'}</msg>
<status status="PASS" starttime="20210730 13:53:52.520" endtime="20210730 13:53:52.521"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:52.526" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:52.526" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:52.521" endtime="20210730 13:53:52.526"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:52.527" endtime="20210730 13:53:52.527"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:52.527" endtime="20210730 13:53:52.527"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:52.521" endtime="20210730 13:53:52.527"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:52.521" endtime="20210730 13:53:52.527"/>
</for>
<status status="FAIL" starttime="20210730 13:53:52.516" endtime="20210730 13:53:52.527"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:52.516" endtime="20210730 13:53:52.527"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:52.498" endtime="20210730 13:53:52.528"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:52.532" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:52.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:52.542" level="INFO">${pids} = 16722
16729
16733</msg>
<status status="PASS" starttime="20210730 13:53:52.529" endtime="20210730 13:53:52.542"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:52.543" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:52.543" endtime="20210730 13:53:52.543"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:52.544" level="INFO">${pids} = ['16722', '16729', '16733']</msg>
<status status="PASS" starttime="20210730 13:53:52.544" endtime="20210730 13:53:52.544"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16722</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:52.548" level="INFO">Running command 'kill 16722 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:52.544" endtime="20210730 13:53:52.548"/>
</kw>
<status status="PASS" starttime="20210730 13:53:52.544" endtime="20210730 13:53:52.548"/>
</iter>
<iter>
<var name="${pid}">16729</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:52.554" level="INFO">Running command 'kill 16729 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:52.549" endtime="20210730 13:53:52.555"/>
</kw>
<status status="PASS" starttime="20210730 13:53:52.548" endtime="20210730 13:53:52.555"/>
</iter>
<iter>
<var name="${pid}">16733</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:52.562" level="INFO">Running command 'kill 16733 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:52.556" endtime="20210730 13:53:52.563"/>
</kw>
<status status="PASS" starttime="20210730 13:53:52.556" endtime="20210730 13:53:52.563"/>
</iter>
<status status="PASS" starttime="20210730 13:53:52.544" endtime="20210730 13:53:52.563"/>
</for>
<status status="PASS" starttime="20210730 13:53:52.544" endtime="20210730 13:53:52.563"/>
</branch>
<status status="PASS" starttime="20210730 13:53:52.544" endtime="20210730 13:53:52.563"/>
</if>
<status status="PASS" starttime="20210730 13:53:52.528" endtime="20210730 13:53:52.563"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCabc!?'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:50.942" endtime="20210730 13:53:52.564">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t80" name="With Each Valid Token, Updating Password Of Each System User With ABCabc!?ABCabc!?ABCab. Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:52.569" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:52.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:52.579" level="INFO">${pids} = 16762</msg>
<status status="PASS" starttime="20210730 13:53:52.566" endtime="20210730 13:53:52.579"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:52.580" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:52.579" endtime="20210730 13:53:52.580"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:52.580" level="INFO">${pids} = ['16762']</msg>
<status status="PASS" starttime="20210730 13:53:52.580" endtime="20210730 13:53:52.580"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16762</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:52.585" level="INFO">Running command 'kill 16762 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:52.581" endtime="20210730 13:53:52.587"/>
</kw>
<status status="PASS" starttime="20210730 13:53:52.581" endtime="20210730 13:53:52.587"/>
</iter>
<status status="PASS" starttime="20210730 13:53:52.580" endtime="20210730 13:53:52.587"/>
</for>
<status status="PASS" starttime="20210730 13:53:52.580" endtime="20210730 13:53:52.587"/>
</branch>
<status status="PASS" starttime="20210730 13:53:52.580" endtime="20210730 13:53:52.587"/>
</if>
<status status="PASS" starttime="20210730 13:53:52.565" endtime="20210730 13:53:52.587"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:52.588" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:52.588" endtime="20210730 13:53:52.589"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:52.589" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:52.589" endtime="20210730 13:53:52.589"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:52.590" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:52.589" endtime="20210730 13:53:52.590"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:52.590" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:52.590" endtime="20210730 13:53:52.590"/>
</kw>
<msg timestamp="20210730 13:53:52.591" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:52.589" endtime="20210730 13:53:52.591"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:52.597" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:52.591" endtime="20210730 13:53:52.599"/>
</kw>
<status status="PASS" starttime="20210730 13:53:52.588" endtime="20210730 13:53:52.600"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:52.601" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:52.600" endtime="20210730 13:53:52.611"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:54.115" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:52.611" endtime="20210730 13:53:54.115"/>
</kw>
<status status="PASS" starttime="20210730 13:53:52.600" endtime="20210730 13:53:54.115"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:54.117" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:54.117" endtime="20210730 13:53:54.117"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:54.117" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:54.117" endtime="20210730 13:53:54.117"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:54.118" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:54.117" endtime="20210730 13:53:54.118"/>
</kw>
<msg timestamp="20210730 13:53:54.118" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:54.116" endtime="20210730 13:53:54.118"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:54.118" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:54.118" endtime="20210730 13:53:54.119"/>
</kw>
<status status="PASS" starttime="20210730 13:53:54.116" endtime="20210730 13:53:54.119"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:54.119" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:54.120" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:54.119" endtime="20210730 13:53:54.120"/>
</kw>
<status status="PASS" starttime="20210730 13:53:54.119" endtime="20210730 13:53:54.120"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:54.121" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:54.121" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:54.120" endtime="20210730 13:53:54.121"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:54.121" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:54.121" endtime="20210730 13:53:54.121"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:54.122" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:54.121" endtime="20210730 13:53:54.122"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:54.122" endtime="20210730 13:53:54.123"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:54.123" endtime="20210730 13:53:54.123"/>
</kw>
<status status="PASS" starttime="20210730 13:53:54.121" endtime="20210730 13:53:54.123"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:54.124" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:54.123" endtime="20210730 13:53:54.124"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:54.124" endtime="20210730 13:53:54.125"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:54.125" endtime="20210730 13:53:54.126"/>
</kw>
<status status="PASS" starttime="20210730 13:53:54.123" endtime="20210730 13:53:54.126"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:54.126" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:54.126" endtime="20210730 13:53:54.126"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:54.126" endtime="20210730 13:53:54.127"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:54.127" endtime="20210730 13:53:54.127"/>
</kw>
<status status="PASS" starttime="20210730 13:53:54.126" endtime="20210730 13:53:54.127"/>
</iter>
<status status="PASS" starttime="20210730 13:53:54.121" endtime="20210730 13:53:54.127"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:54.128" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:54.128" endtime="20210730 13:53:54.128"/>
</kw>
<status status="PASS" starttime="20210730 13:53:54.120" endtime="20210730 13:53:54.128"/>
</kw>
<status status="PASS" starttime="20210730 13:53:52.565" endtime="20210730 13:53:54.128"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCabc!?ABCabc!?ABCab.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:54.129" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:54.129" endtime="20210730 13:53:54.129"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:54.130" level="INFO">${payload} = {'password': 'ABCabc!?ABCabc!?ABCab.'}</msg>
<status status="PASS" starttime="20210730 13:53:54.129" endtime="20210730 13:53:54.130"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:54.138" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:54.139" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:54.130" endtime="20210730 13:53:54.139"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:54.139" endtime="20210730 13:53:54.139"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:54.139" endtime="20210730 13:53:54.139"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:54.130" endtime="20210730 13:53:54.139"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:54.130" endtime="20210730 13:53:54.139"/>
</for>
<status status="FAIL" starttime="20210730 13:53:54.129" endtime="20210730 13:53:54.139"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:54.128" endtime="20210730 13:53:54.139"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCabc!?ABCabc!?ABCab.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:54.141" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:54.140" endtime="20210730 13:53:54.141"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:54.141" level="INFO">${payload} = {'password': 'ABCabc!?ABCabc!?ABCab.'}</msg>
<status status="PASS" starttime="20210730 13:53:54.141" endtime="20210730 13:53:54.141"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:54.146" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:54.146" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:54.142" endtime="20210730 13:53:54.146"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:54.147" endtime="20210730 13:53:54.147"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:54.147" endtime="20210730 13:53:54.147"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:54.142" endtime="20210730 13:53:54.147"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:54.141" endtime="20210730 13:53:54.147"/>
</for>
<status status="FAIL" starttime="20210730 13:53:54.140" endtime="20210730 13:53:54.147"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:54.140" endtime="20210730 13:53:54.147"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCabc!?ABCabc!?ABCab.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:54.148" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:54.148" endtime="20210730 13:53:54.148"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:54.149" level="INFO">${payload} = {'password': 'ABCabc!?ABCabc!?ABCab.'}</msg>
<status status="PASS" starttime="20210730 13:53:54.148" endtime="20210730 13:53:54.149"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:54.153" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:54.153" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:54.149" endtime="20210730 13:53:54.153"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:54.153" endtime="20210730 13:53:54.153"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:54.153" endtime="20210730 13:53:54.153"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:54.149" endtime="20210730 13:53:54.154"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:54.149" endtime="20210730 13:53:54.154"/>
</for>
<status status="FAIL" starttime="20210730 13:53:54.147" endtime="20210730 13:53:54.154"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:54.147" endtime="20210730 13:53:54.154"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:54.128" endtime="20210730 13:53:54.154"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:54.159" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:54.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:54.169" level="INFO">${pids} = 16785
16792
16796</msg>
<status status="PASS" starttime="20210730 13:53:54.155" endtime="20210730 13:53:54.169"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:54.170" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:54.170" endtime="20210730 13:53:54.170"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:54.171" level="INFO">${pids} = ['16785', '16792', '16796']</msg>
<status status="PASS" starttime="20210730 13:53:54.171" endtime="20210730 13:53:54.171"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16785</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:54.176" level="INFO">Running command 'kill 16785 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:54.171" endtime="20210730 13:53:54.176"/>
</kw>
<status status="PASS" starttime="20210730 13:53:54.171" endtime="20210730 13:53:54.177"/>
</iter>
<iter>
<var name="${pid}">16792</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:54.180" level="INFO">Running command 'kill 16792 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:54.177" endtime="20210730 13:53:54.182"/>
</kw>
<status status="PASS" starttime="20210730 13:53:54.177" endtime="20210730 13:53:54.182"/>
</iter>
<iter>
<var name="${pid}">16796</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:54.187" level="INFO">Running command 'kill 16796 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:54.183" endtime="20210730 13:53:54.188"/>
</kw>
<status status="PASS" starttime="20210730 13:53:54.182" endtime="20210730 13:53:54.188"/>
</iter>
<status status="PASS" starttime="20210730 13:53:54.171" endtime="20210730 13:53:54.188"/>
</for>
<status status="PASS" starttime="20210730 13:53:54.171" endtime="20210730 13:53:54.188"/>
</branch>
<status status="PASS" starttime="20210730 13:53:54.171" endtime="20210730 13:53:54.188"/>
</if>
<status status="PASS" starttime="20210730 13:53:54.154" endtime="20210730 13:53:54.188"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCabc!?ABCabc!?ABCab.'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:52.564" endtime="20210730 13:53:54.188">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t81" name="With Each Valid Token, Updating Password Of Each System User With abc012. Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:54.195" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:54.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:54.205" level="INFO">${pids} = 16825</msg>
<status status="PASS" starttime="20210730 13:53:54.191" endtime="20210730 13:53:54.205"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:54.206" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:54.205" endtime="20210730 13:53:54.206"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:54.206" level="INFO">${pids} = ['16825']</msg>
<status status="PASS" starttime="20210730 13:53:54.206" endtime="20210730 13:53:54.206"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16825</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:54.210" level="INFO">Running command 'kill 16825 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:54.207" endtime="20210730 13:53:54.210"/>
</kw>
<status status="PASS" starttime="20210730 13:53:54.206" endtime="20210730 13:53:54.210"/>
</iter>
<status status="PASS" starttime="20210730 13:53:54.206" endtime="20210730 13:53:54.210"/>
</for>
<status status="PASS" starttime="20210730 13:53:54.206" endtime="20210730 13:53:54.210"/>
</branch>
<status status="PASS" starttime="20210730 13:53:54.206" endtime="20210730 13:53:54.211"/>
</if>
<status status="PASS" starttime="20210730 13:53:54.190" endtime="20210730 13:53:54.211"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:54.212" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:54.211" endtime="20210730 13:53:54.212"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:54.212" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:54.212" endtime="20210730 13:53:54.212"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:54.213" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:54.212" endtime="20210730 13:53:54.213"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:54.213" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:54.213" endtime="20210730 13:53:54.213"/>
</kw>
<msg timestamp="20210730 13:53:54.213" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:54.212" endtime="20210730 13:53:54.213"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:54.217" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:54.214" endtime="20210730 13:53:54.221"/>
</kw>
<status status="PASS" starttime="20210730 13:53:54.211" endtime="20210730 13:53:54.221"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:54.223" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:54.222" endtime="20210730 13:53:54.262"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:55.766" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:54.263" endtime="20210730 13:53:55.766"/>
</kw>
<status status="PASS" starttime="20210730 13:53:54.221" endtime="20210730 13:53:55.766"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:55.768" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:55.767" endtime="20210730 13:53:55.768"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:55.768" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:55.768" endtime="20210730 13:53:55.768"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:55.768" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:55.768" endtime="20210730 13:53:55.768"/>
</kw>
<msg timestamp="20210730 13:53:55.769" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:55.767" endtime="20210730 13:53:55.769"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:55.769" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:55.769" endtime="20210730 13:53:55.769"/>
</kw>
<status status="PASS" starttime="20210730 13:53:55.766" endtime="20210730 13:53:55.770"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:55.770" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:55.770" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:55.770" endtime="20210730 13:53:55.770"/>
</kw>
<status status="PASS" starttime="20210730 13:53:55.770" endtime="20210730 13:53:55.770"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:55.771" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:55.771" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:55.771" endtime="20210730 13:53:55.771"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:55.771" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:55.771" endtime="20210730 13:53:55.771"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:55.772" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:55.772" endtime="20210730 13:53:55.772"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:55.772" endtime="20210730 13:53:55.773"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:55.774" endtime="20210730 13:53:55.774"/>
</kw>
<status status="PASS" starttime="20210730 13:53:55.772" endtime="20210730 13:53:55.774"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:55.775" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:55.774" endtime="20210730 13:53:55.775"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:55.775" endtime="20210730 13:53:55.776"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:55.776" endtime="20210730 13:53:55.776"/>
</kw>
<status status="PASS" starttime="20210730 13:53:55.774" endtime="20210730 13:53:55.776"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:55.776" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:55.776" endtime="20210730 13:53:55.777"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:55.777" endtime="20210730 13:53:55.777"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:55.777" endtime="20210730 13:53:55.778"/>
</kw>
<status status="PASS" starttime="20210730 13:53:55.776" endtime="20210730 13:53:55.778"/>
</iter>
<status status="PASS" starttime="20210730 13:53:55.771" endtime="20210730 13:53:55.778"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:55.778" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:55.778" endtime="20210730 13:53:55.778"/>
</kw>
<status status="PASS" starttime="20210730 13:53:55.770" endtime="20210730 13:53:55.778"/>
</kw>
<status status="PASS" starttime="20210730 13:53:54.190" endtime="20210730 13:53:55.778"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc012.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:55.780" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:55.779" endtime="20210730 13:53:55.780"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:55.780" level="INFO">${payload} = {'password': 'abc012.'}</msg>
<status status="PASS" starttime="20210730 13:53:55.780" endtime="20210730 13:53:55.780"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:55.789" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:55.789" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:55.780" endtime="20210730 13:53:55.789"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:55.790" endtime="20210730 13:53:55.790"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:55.790" endtime="20210730 13:53:55.790"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:55.780" endtime="20210730 13:53:55.790"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:55.780" endtime="20210730 13:53:55.790"/>
</for>
<status status="FAIL" starttime="20210730 13:53:55.779" endtime="20210730 13:53:55.790"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:55.779" endtime="20210730 13:53:55.790"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc012.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:55.791" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:55.791" endtime="20210730 13:53:55.792"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:55.792" level="INFO">${payload} = {'password': 'abc012.'}</msg>
<status status="PASS" starttime="20210730 13:53:55.792" endtime="20210730 13:53:55.792"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:55.797" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:55.798" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:55.793" endtime="20210730 13:53:55.798"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:55.798" endtime="20210730 13:53:55.798"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:55.798" endtime="20210730 13:53:55.798"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:55.793" endtime="20210730 13:53:55.798"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:55.792" endtime="20210730 13:53:55.798"/>
</for>
<status status="FAIL" starttime="20210730 13:53:55.790" endtime="20210730 13:53:55.798"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:55.790" endtime="20210730 13:53:55.798"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc012.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:55.799" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:55.799" endtime="20210730 13:53:55.799"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:55.800" level="INFO">${payload} = {'password': 'abc012.'}</msg>
<status status="PASS" starttime="20210730 13:53:55.799" endtime="20210730 13:53:55.800"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:55.804" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:55.804" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:55.800" endtime="20210730 13:53:55.804"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:55.804" endtime="20210730 13:53:55.804"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:55.804" endtime="20210730 13:53:55.804"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:55.800" endtime="20210730 13:53:55.804"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:55.800" endtime="20210730 13:53:55.804"/>
</for>
<status status="FAIL" starttime="20210730 13:53:55.798" endtime="20210730 13:53:55.804"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:55.798" endtime="20210730 13:53:55.805"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:55.779" endtime="20210730 13:53:55.805"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:55.810" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:55.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:55.820" level="INFO">${pids} = 16848
16855
16860</msg>
<status status="PASS" starttime="20210730 13:53:55.806" endtime="20210730 13:53:55.820"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:55.821" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:55.820" endtime="20210730 13:53:55.821"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:55.822" level="INFO">${pids} = ['16848', '16855', '16860']</msg>
<status status="PASS" starttime="20210730 13:53:55.821" endtime="20210730 13:53:55.822"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16848</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:55.826" level="INFO">Running command 'kill 16848 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:55.822" endtime="20210730 13:53:55.826"/>
</kw>
<status status="PASS" starttime="20210730 13:53:55.822" endtime="20210730 13:53:55.826"/>
</iter>
<iter>
<var name="${pid}">16855</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:55.830" level="INFO">Running command 'kill 16855 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:55.827" endtime="20210730 13:53:55.831"/>
</kw>
<status status="PASS" starttime="20210730 13:53:55.827" endtime="20210730 13:53:55.831"/>
</iter>
<iter>
<var name="${pid}">16860</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:55.835" level="INFO">Running command 'kill 16860 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:55.832" endtime="20210730 13:53:55.836"/>
</kw>
<status status="PASS" starttime="20210730 13:53:55.832" endtime="20210730 13:53:55.836"/>
</iter>
<status status="PASS" starttime="20210730 13:53:55.822" endtime="20210730 13:53:55.836"/>
</for>
<status status="PASS" starttime="20210730 13:53:55.821" endtime="20210730 13:53:55.836"/>
</branch>
<status status="PASS" starttime="20210730 13:53:55.821" endtime="20210730 13:53:55.836"/>
</if>
<status status="PASS" starttime="20210730 13:53:55.805" endtime="20210730 13:53:55.836"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abc012.'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:54.189" endtime="20210730 13:53:55.836">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t82" name="With Each Valid Token, Updating Password Of Each System User With abc012!? Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:55.842" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:55.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:55.853" level="INFO">${pids} = 16889</msg>
<status status="PASS" starttime="20210730 13:53:55.838" endtime="20210730 13:53:55.853"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:55.854" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:55.853" endtime="20210730 13:53:55.854"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:55.855" level="INFO">${pids} = ['16889']</msg>
<status status="PASS" starttime="20210730 13:53:55.854" endtime="20210730 13:53:55.855"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16889</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:55.860" level="INFO">Running command 'kill 16889 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:55.855" endtime="20210730 13:53:55.860"/>
</kw>
<status status="PASS" starttime="20210730 13:53:55.855" endtime="20210730 13:53:55.860"/>
</iter>
<status status="PASS" starttime="20210730 13:53:55.855" endtime="20210730 13:53:55.861"/>
</for>
<status status="PASS" starttime="20210730 13:53:55.854" endtime="20210730 13:53:55.861"/>
</branch>
<status status="PASS" starttime="20210730 13:53:55.854" endtime="20210730 13:53:55.861"/>
</if>
<status status="PASS" starttime="20210730 13:53:55.838" endtime="20210730 13:53:55.861"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:55.862" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:55.862" endtime="20210730 13:53:55.862"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:55.863" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:55.863" endtime="20210730 13:53:55.863"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:55.863" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:55.863" endtime="20210730 13:53:55.863"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:55.864" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:55.864" endtime="20210730 13:53:55.864"/>
</kw>
<msg timestamp="20210730 13:53:55.864" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:55.862" endtime="20210730 13:53:55.864"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:55.869" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:55.864" endtime="20210730 13:53:55.872"/>
</kw>
<status status="PASS" starttime="20210730 13:53:55.861" endtime="20210730 13:53:55.873"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:55.874" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:55.874" endtime="20210730 13:53:55.879"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:57.381" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:55.880" endtime="20210730 13:53:57.381"/>
</kw>
<status status="PASS" starttime="20210730 13:53:55.873" endtime="20210730 13:53:57.382"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:57.383" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:57.383" endtime="20210730 13:53:57.383"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:57.384" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:57.383" endtime="20210730 13:53:57.384"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:57.384" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:57.384" endtime="20210730 13:53:57.385"/>
</kw>
<msg timestamp="20210730 13:53:57.385" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:57.382" endtime="20210730 13:53:57.385"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:57.386" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:57.385" endtime="20210730 13:53:57.387"/>
</kw>
<status status="PASS" starttime="20210730 13:53:57.382" endtime="20210730 13:53:57.387"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:57.387" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:57.387" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:57.387" endtime="20210730 13:53:57.388"/>
</kw>
<status status="PASS" starttime="20210730 13:53:57.387" endtime="20210730 13:53:57.388"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:57.389" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:57.389" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:57.388" endtime="20210730 13:53:57.389"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:57.389" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:57.389" endtime="20210730 13:53:57.389"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:57.390" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:57.390" endtime="20210730 13:53:57.390"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:57.390" endtime="20210730 13:53:57.391"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:57.391" endtime="20210730 13:53:57.391"/>
</kw>
<status status="PASS" starttime="20210730 13:53:57.389" endtime="20210730 13:53:57.391"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:57.392" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:57.392" endtime="20210730 13:53:57.392"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:57.392" endtime="20210730 13:53:57.394"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:57.394" endtime="20210730 13:53:57.394"/>
</kw>
<status status="PASS" starttime="20210730 13:53:57.391" endtime="20210730 13:53:57.394"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:57.395" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:57.395" endtime="20210730 13:53:57.395"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:57.395" endtime="20210730 13:53:57.396"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:57.396" endtime="20210730 13:53:57.396"/>
</kw>
<status status="PASS" starttime="20210730 13:53:57.394" endtime="20210730 13:53:57.396"/>
</iter>
<status status="PASS" starttime="20210730 13:53:57.389" endtime="20210730 13:53:57.396"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:57.396" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:57.396" endtime="20210730 13:53:57.396"/>
</kw>
<status status="PASS" starttime="20210730 13:53:57.388" endtime="20210730 13:53:57.397"/>
</kw>
<status status="PASS" starttime="20210730 13:53:55.838" endtime="20210730 13:53:57.397"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc012!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:57.398" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:57.398" endtime="20210730 13:53:57.398"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:57.399" level="INFO">${payload} = {'password': 'abc012!?'}</msg>
<status status="PASS" starttime="20210730 13:53:57.398" endtime="20210730 13:53:57.399"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:57.409" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:57.409" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:57.399" endtime="20210730 13:53:57.409"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:57.410" endtime="20210730 13:53:57.410"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:57.411" endtime="20210730 13:53:57.411"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:57.399" endtime="20210730 13:53:57.411"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:57.399" endtime="20210730 13:53:57.411"/>
</for>
<status status="FAIL" starttime="20210730 13:53:57.397" endtime="20210730 13:53:57.411"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:57.397" endtime="20210730 13:53:57.411"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc012!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:57.413" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:57.413" endtime="20210730 13:53:57.413"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:57.414" level="INFO">${payload} = {'password': 'abc012!?'}</msg>
<status status="PASS" starttime="20210730 13:53:57.413" endtime="20210730 13:53:57.414"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:57.418" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:57.419" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:57.414" endtime="20210730 13:53:57.419"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:57.419" endtime="20210730 13:53:57.419"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:57.419" endtime="20210730 13:53:57.419"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:57.414" endtime="20210730 13:53:57.419"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:57.414" endtime="20210730 13:53:57.419"/>
</for>
<status status="FAIL" starttime="20210730 13:53:57.411" endtime="20210730 13:53:57.419"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:57.411" endtime="20210730 13:53:57.419"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc012!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:57.420" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:57.420" endtime="20210730 13:53:57.420"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:57.421" level="INFO">${payload} = {'password': 'abc012!?'}</msg>
<status status="PASS" starttime="20210730 13:53:57.420" endtime="20210730 13:53:57.421"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:57.425" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:57.425" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:57.421" endtime="20210730 13:53:57.425"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:57.426" endtime="20210730 13:53:57.426"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:57.426" endtime="20210730 13:53:57.426"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:57.421" endtime="20210730 13:53:57.426"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:57.421" endtime="20210730 13:53:57.426"/>
</for>
<status status="FAIL" starttime="20210730 13:53:57.419" endtime="20210730 13:53:57.426"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:57.419" endtime="20210730 13:53:57.426"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:57.397" endtime="20210730 13:53:57.426"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:57.431" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:57.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:57.441" level="INFO">${pids} = 16912
16919
16930</msg>
<status status="PASS" starttime="20210730 13:53:57.428" endtime="20210730 13:53:57.441"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:57.442" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:57.442" endtime="20210730 13:53:57.442"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:57.443" level="INFO">${pids} = ['16912', '16919', '16930']</msg>
<status status="PASS" starttime="20210730 13:53:57.442" endtime="20210730 13:53:57.443"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16912</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:57.447" level="INFO">Running command 'kill 16912 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:57.443" endtime="20210730 13:53:57.447"/>
</kw>
<status status="PASS" starttime="20210730 13:53:57.443" endtime="20210730 13:53:57.447"/>
</iter>
<iter>
<var name="${pid}">16919</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:57.450" level="INFO">Running command 'kill 16919 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:57.448" endtime="20210730 13:53:57.451"/>
</kw>
<status status="PASS" starttime="20210730 13:53:57.447" endtime="20210730 13:53:57.451"/>
</iter>
<iter>
<var name="${pid}">16930</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:57.459" level="INFO">Running command 'kill 16930 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:57.452" endtime="20210730 13:53:57.460"/>
</kw>
<status status="PASS" starttime="20210730 13:53:57.451" endtime="20210730 13:53:57.460"/>
</iter>
<status status="PASS" starttime="20210730 13:53:57.443" endtime="20210730 13:53:57.460"/>
</for>
<status status="PASS" starttime="20210730 13:53:57.442" endtime="20210730 13:53:57.460"/>
</branch>
<status status="PASS" starttime="20210730 13:53:57.442" endtime="20210730 13:53:57.460"/>
</if>
<status status="PASS" starttime="20210730 13:53:57.427" endtime="20210730 13:53:57.461"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abc012!?'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:55.837" endtime="20210730 13:53:57.461">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t83" name="With Each Valid Token, Updating Password Of Each System User With abc012!?abc012!?abc012 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:57.467" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:57.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:57.476" level="INFO">${pids} = 16959</msg>
<status status="PASS" starttime="20210730 13:53:57.463" endtime="20210730 13:53:57.476"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:57.477" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:57.477" endtime="20210730 13:53:57.477"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:57.478" level="INFO">${pids} = ['16959']</msg>
<status status="PASS" starttime="20210730 13:53:57.478" endtime="20210730 13:53:57.478"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16959</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:57.481" level="INFO">Running command 'kill 16959 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:57.478" endtime="20210730 13:53:57.482"/>
</kw>
<status status="PASS" starttime="20210730 13:53:57.478" endtime="20210730 13:53:57.482"/>
</iter>
<status status="PASS" starttime="20210730 13:53:57.478" endtime="20210730 13:53:57.482"/>
</for>
<status status="PASS" starttime="20210730 13:53:57.477" endtime="20210730 13:53:57.482"/>
</branch>
<status status="PASS" starttime="20210730 13:53:57.477" endtime="20210730 13:53:57.482"/>
</if>
<status status="PASS" starttime="20210730 13:53:57.463" endtime="20210730 13:53:57.482"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:57.484" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:57.483" endtime="20210730 13:53:57.484"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:57.484" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:57.484" endtime="20210730 13:53:57.484"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:57.485" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:57.484" endtime="20210730 13:53:57.485"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:57.486" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:57.485" endtime="20210730 13:53:57.486"/>
</kw>
<msg timestamp="20210730 13:53:57.486" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:57.484" endtime="20210730 13:53:57.486"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:57.490" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:57.486" endtime="20210730 13:53:57.493"/>
</kw>
<status status="PASS" starttime="20210730 13:53:57.483" endtime="20210730 13:53:57.493"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:57.495" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:57.494" endtime="20210730 13:53:57.499"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:53:59.000" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:57.499" endtime="20210730 13:53:59.000"/>
</kw>
<status status="PASS" starttime="20210730 13:53:57.494" endtime="20210730 13:53:59.001"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:59.002" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:59.001" endtime="20210730 13:53:59.002"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:59.002" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:59.002" endtime="20210730 13:53:59.002"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:59.003" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:59.002" endtime="20210730 13:53:59.003"/>
</kw>
<msg timestamp="20210730 13:53:59.003" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:59.001" endtime="20210730 13:53:59.003"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:53:59.004" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:53:59.003" endtime="20210730 13:53:59.004"/>
</kw>
<status status="PASS" starttime="20210730 13:53:59.001" endtime="20210730 13:53:59.004"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:53:59.004" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:53:59.005" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:53:59.004" endtime="20210730 13:53:59.005"/>
</kw>
<status status="PASS" starttime="20210730 13:53:59.004" endtime="20210730 13:53:59.005"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:53:59.006" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:53:59.006" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:53:59.005" endtime="20210730 13:53:59.006"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:53:59.006" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:53:59.006" endtime="20210730 13:53:59.006"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:59.007" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:59.006" endtime="20210730 13:53:59.007"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:59.007" endtime="20210730 13:53:59.007"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:59.008" endtime="20210730 13:53:59.008"/>
</kw>
<status status="PASS" starttime="20210730 13:53:59.006" endtime="20210730 13:53:59.008"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:59.008" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:59.008" endtime="20210730 13:53:59.008"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:59.008" endtime="20210730 13:53:59.009"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:59.009" endtime="20210730 13:53:59.009"/>
</kw>
<status status="PASS" starttime="20210730 13:53:59.008" endtime="20210730 13:53:59.009"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:59.010" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:53:59.010" endtime="20210730 13:53:59.010"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:53:59.010" endtime="20210730 13:53:59.011"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:53:59.011" endtime="20210730 13:53:59.011"/>
</kw>
<status status="PASS" starttime="20210730 13:53:59.010" endtime="20210730 13:53:59.011"/>
</iter>
<status status="PASS" starttime="20210730 13:53:59.006" endtime="20210730 13:53:59.011"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:53:59.012" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:53:59.011" endtime="20210730 13:53:59.012"/>
</kw>
<status status="PASS" starttime="20210730 13:53:59.005" endtime="20210730 13:53:59.012"/>
</kw>
<status status="PASS" starttime="20210730 13:53:57.462" endtime="20210730 13:53:59.012"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc012!?abc012!?abc012</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:59.013" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:53:59.013" endtime="20210730 13:53:59.013"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:59.014" level="INFO">${payload} = {'password': 'abc012!?abc012!?abc012'}</msg>
<status status="PASS" starttime="20210730 13:53:59.013" endtime="20210730 13:53:59.014"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:59.023" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:59.023" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:59.014" endtime="20210730 13:53:59.023"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:59.023" endtime="20210730 13:53:59.023"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:59.023" endtime="20210730 13:53:59.023"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:59.014" endtime="20210730 13:53:59.023"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:59.014" endtime="20210730 13:53:59.023"/>
</for>
<status status="FAIL" starttime="20210730 13:53:59.012" endtime="20210730 13:53:59.024"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:59.012" endtime="20210730 13:53:59.024"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc012!?abc012!?abc012</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:59.025" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:53:59.025" endtime="20210730 13:53:59.025"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:59.026" level="INFO">${payload} = {'password': 'abc012!?abc012!?abc012'}</msg>
<status status="PASS" starttime="20210730 13:53:59.025" endtime="20210730 13:53:59.026"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:59.030" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:59.031" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:59.026" endtime="20210730 13:53:59.031"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:59.031" endtime="20210730 13:53:59.031"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:59.031" endtime="20210730 13:53:59.031"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:59.026" endtime="20210730 13:53:59.031"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:59.026" endtime="20210730 13:53:59.031"/>
</for>
<status status="FAIL" starttime="20210730 13:53:59.024" endtime="20210730 13:53:59.031"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:59.024" endtime="20210730 13:53:59.031"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc012!?abc012!?abc012</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:59.032" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:53:59.032" endtime="20210730 13:53:59.032"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:53:59.033" level="INFO">${payload} = {'password': 'abc012!?abc012!?abc012'}</msg>
<status status="PASS" starttime="20210730 13:53:59.032" endtime="20210730 13:53:59.033"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:53:59.037" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:53:59.037" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:53:59.033" endtime="20210730 13:53:59.037"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:53:59.037" endtime="20210730 13:53:59.037"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:53:59.037" endtime="20210730 13:53:59.037"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:59.033" endtime="20210730 13:53:59.037"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:59.033" endtime="20210730 13:53:59.037"/>
</for>
<status status="FAIL" starttime="20210730 13:53:59.031" endtime="20210730 13:53:59.038"/>
</kw>
<status status="FAIL" starttime="20210730 13:53:59.031" endtime="20210730 13:53:59.038"/>
</iter>
<status status="FAIL" starttime="20210730 13:53:59.012" endtime="20210730 13:53:59.038"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:59.043" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:59.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:59.054" level="INFO">${pids} = 16982
16989
16993</msg>
<status status="PASS" starttime="20210730 13:53:59.039" endtime="20210730 13:53:59.054"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:59.055" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:59.055" endtime="20210730 13:53:59.055"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:59.056" level="INFO">${pids} = ['16982', '16989', '16993']</msg>
<status status="PASS" starttime="20210730 13:53:59.056" endtime="20210730 13:53:59.056"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16982</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:59.061" level="INFO">Running command 'kill 16982 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:59.056" endtime="20210730 13:53:59.062"/>
</kw>
<status status="PASS" starttime="20210730 13:53:59.056" endtime="20210730 13:53:59.062"/>
</iter>
<iter>
<var name="${pid}">16989</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:59.066" level="INFO">Running command 'kill 16989 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:59.062" endtime="20210730 13:53:59.066"/>
</kw>
<status status="PASS" starttime="20210730 13:53:59.062" endtime="20210730 13:53:59.066"/>
</iter>
<iter>
<var name="${pid}">16993</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:59.071" level="INFO">Running command 'kill 16993 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:59.067" endtime="20210730 13:53:59.071"/>
</kw>
<status status="PASS" starttime="20210730 13:53:59.066" endtime="20210730 13:53:59.072"/>
</iter>
<status status="PASS" starttime="20210730 13:53:59.056" endtime="20210730 13:53:59.072"/>
</for>
<status status="PASS" starttime="20210730 13:53:59.055" endtime="20210730 13:53:59.072"/>
</branch>
<status status="PASS" starttime="20210730 13:53:59.055" endtime="20210730 13:53:59.072"/>
</if>
<status status="PASS" starttime="20210730 13:53:59.038" endtime="20210730 13:53:59.072"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abc012!?abc012!?abc012'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:57.461" endtime="20210730 13:53:59.072">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t84" name="With Each Valid Token, Updating Password Of Each System User With abc!?.Z Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:53:59.078" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:53:59.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:53:59.088" level="INFO">${pids} = 17022</msg>
<status status="PASS" starttime="20210730 13:53:59.074" endtime="20210730 13:53:59.088"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:59.089" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:53:59.088" endtime="20210730 13:53:59.089"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:53:59.090" level="INFO">${pids} = ['17022']</msg>
<status status="PASS" starttime="20210730 13:53:59.090" endtime="20210730 13:53:59.090"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17022</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:59.094" level="INFO">Running command 'kill 17022 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:59.090" endtime="20210730 13:53:59.095"/>
</kw>
<status status="PASS" starttime="20210730 13:53:59.090" endtime="20210730 13:53:59.095"/>
</iter>
<status status="PASS" starttime="20210730 13:53:59.090" endtime="20210730 13:53:59.095"/>
</for>
<status status="PASS" starttime="20210730 13:53:59.089" endtime="20210730 13:53:59.095"/>
</branch>
<status status="PASS" starttime="20210730 13:53:59.089" endtime="20210730 13:53:59.095"/>
</if>
<status status="PASS" starttime="20210730 13:53:59.074" endtime="20210730 13:53:59.095"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:59.096" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:59.096" endtime="20210730 13:53:59.097"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:59.097" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:53:59.097" endtime="20210730 13:53:59.097"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:53:59.098" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:53:59.097" endtime="20210730 13:53:59.098"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:53:59.098" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:59.098" endtime="20210730 13:53:59.098"/>
</kw>
<msg timestamp="20210730 13:53:59.098" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:53:59.097" endtime="20210730 13:53:59.098"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:53:59.102" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:53:59.098" endtime="20210730 13:53:59.104"/>
</kw>
<status status="PASS" starttime="20210730 13:53:59.096" endtime="20210730 13:53:59.105"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:53:59.106" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:53:59.106" endtime="20210730 13:53:59.111"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:54:00.612" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:53:59.111" endtime="20210730 13:54:00.613"/>
</kw>
<status status="PASS" starttime="20210730 13:53:59.105" endtime="20210730 13:54:00.613"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:00.614" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:00.614" endtime="20210730 13:54:00.614"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:00.614" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:00.614" endtime="20210730 13:54:00.614"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:00.615" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:00.614" endtime="20210730 13:54:00.615"/>
</kw>
<msg timestamp="20210730 13:54:00.615" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:00.613" endtime="20210730 13:54:00.615"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:54:00.615" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:54:00.615" endtime="20210730 13:54:00.616"/>
</kw>
<status status="PASS" starttime="20210730 13:54:00.613" endtime="20210730 13:54:00.616"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:54:00.616" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:54:00.616" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:54:00.616" endtime="20210730 13:54:00.617"/>
</kw>
<status status="PASS" starttime="20210730 13:54:00.616" endtime="20210730 13:54:00.617"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:54:00.618" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:54:00.618" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:54:00.617" endtime="20210730 13:54:00.618"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:54:00.618" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:54:00.618" endtime="20210730 13:54:00.618"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:00.619" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:00.619" endtime="20210730 13:54:00.619"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:00.619" endtime="20210730 13:54:00.620"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:00.620" endtime="20210730 13:54:00.621"/>
</kw>
<status status="PASS" starttime="20210730 13:54:00.619" endtime="20210730 13:54:00.621"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:00.621" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:00.621" endtime="20210730 13:54:00.621"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:00.621" endtime="20210730 13:54:00.622"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:00.622" endtime="20210730 13:54:00.623"/>
</kw>
<status status="PASS" starttime="20210730 13:54:00.621" endtime="20210730 13:54:00.623"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:00.623" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:00.623" endtime="20210730 13:54:00.623"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:00.623" endtime="20210730 13:54:00.624"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:00.625" endtime="20210730 13:54:00.625"/>
</kw>
<status status="PASS" starttime="20210730 13:54:00.623" endtime="20210730 13:54:00.625"/>
</iter>
<status status="PASS" starttime="20210730 13:54:00.618" endtime="20210730 13:54:00.625"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:54:00.626" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:54:00.625" endtime="20210730 13:54:00.626"/>
</kw>
<status status="PASS" starttime="20210730 13:54:00.617" endtime="20210730 13:54:00.626"/>
</kw>
<status status="PASS" starttime="20210730 13:53:59.073" endtime="20210730 13:54:00.626"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.Z</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:00.628" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:54:00.627" endtime="20210730 13:54:00.628"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:00.628" level="INFO">${payload} = {'password': 'abc!?.Z'}</msg>
<status status="PASS" starttime="20210730 13:54:00.628" endtime="20210730 13:54:00.628"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:00.640" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:00.640" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:00.629" endtime="20210730 13:54:00.640"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:00.640" endtime="20210730 13:54:00.640"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:00.640" endtime="20210730 13:54:00.640"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:00.628" endtime="20210730 13:54:00.640"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:00.628" endtime="20210730 13:54:00.640"/>
</for>
<status status="FAIL" starttime="20210730 13:54:00.627" endtime="20210730 13:54:00.640"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:00.626" endtime="20210730 13:54:00.640"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.Z</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:00.642" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:54:00.641" endtime="20210730 13:54:00.642"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:00.642" level="INFO">${payload} = {'password': 'abc!?.Z'}</msg>
<status status="PASS" starttime="20210730 13:54:00.642" endtime="20210730 13:54:00.642"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:00.646" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:00.647" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:00.643" endtime="20210730 13:54:00.647"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:00.647" endtime="20210730 13:54:00.647"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:00.647" endtime="20210730 13:54:00.647"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:00.642" endtime="20210730 13:54:00.647"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:00.642" endtime="20210730 13:54:00.647"/>
</for>
<status status="FAIL" starttime="20210730 13:54:00.641" endtime="20210730 13:54:00.647"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:00.641" endtime="20210730 13:54:00.647"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.Z</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:00.648" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:54:00.648" endtime="20210730 13:54:00.648"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:00.649" level="INFO">${payload} = {'password': 'abc!?.Z'}</msg>
<status status="PASS" starttime="20210730 13:54:00.648" endtime="20210730 13:54:00.649"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:00.654" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:00.654" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:00.649" endtime="20210730 13:54:00.654"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:00.655" endtime="20210730 13:54:00.655"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:00.655" endtime="20210730 13:54:00.655"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:00.649" endtime="20210730 13:54:00.655"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:00.649" endtime="20210730 13:54:00.656"/>
</for>
<status status="FAIL" starttime="20210730 13:54:00.647" endtime="20210730 13:54:00.656"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:00.647" endtime="20210730 13:54:00.656"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:00.626" endtime="20210730 13:54:00.656"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:00.661" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:00.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:00.671" level="INFO">${pids} = 17045
17052
17058</msg>
<status status="PASS" starttime="20210730 13:54:00.658" endtime="20210730 13:54:00.671"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:00.672" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:00.672" endtime="20210730 13:54:00.672"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:00.673" level="INFO">${pids} = ['17045', '17052', '17058']</msg>
<status status="PASS" starttime="20210730 13:54:00.673" endtime="20210730 13:54:00.673"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17045</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:00.678" level="INFO">Running command 'kill 17045 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:00.674" endtime="20210730 13:54:00.678"/>
</kw>
<status status="PASS" starttime="20210730 13:54:00.673" endtime="20210730 13:54:00.678"/>
</iter>
<iter>
<var name="${pid}">17052</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:00.682" level="INFO">Running command 'kill 17052 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:00.679" endtime="20210730 13:54:00.683"/>
</kw>
<status status="PASS" starttime="20210730 13:54:00.678" endtime="20210730 13:54:00.683"/>
</iter>
<iter>
<var name="${pid}">17058</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:00.691" level="INFO">Running command 'kill 17058 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:00.685" endtime="20210730 13:54:00.692"/>
</kw>
<status status="PASS" starttime="20210730 13:54:00.684" endtime="20210730 13:54:00.692"/>
</iter>
<status status="PASS" starttime="20210730 13:54:00.673" endtime="20210730 13:54:00.692"/>
</for>
<status status="PASS" starttime="20210730 13:54:00.673" endtime="20210730 13:54:00.692"/>
</branch>
<status status="PASS" starttime="20210730 13:54:00.672" endtime="20210730 13:54:00.692"/>
</if>
<status status="PASS" starttime="20210730 13:54:00.657" endtime="20210730 13:54:00.693"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abc!?.Z'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:53:59.073" endtime="20210730 13:54:00.693">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t85" name="With Each Valid Token, Updating Password Of Each System User With abc!?.ZA Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:00.698" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:00.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:00.708" level="INFO">${pids} = 17087</msg>
<status status="PASS" starttime="20210730 13:54:00.696" endtime="20210730 13:54:00.708"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:00.709" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:00.708" endtime="20210730 13:54:00.709"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:00.710" level="INFO">${pids} = ['17087']</msg>
<status status="PASS" starttime="20210730 13:54:00.709" endtime="20210730 13:54:00.710"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17087</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:00.713" level="INFO">Running command 'kill 17087 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:00.710" endtime="20210730 13:54:00.714"/>
</kw>
<status status="PASS" starttime="20210730 13:54:00.710" endtime="20210730 13:54:00.714"/>
</iter>
<status status="PASS" starttime="20210730 13:54:00.710" endtime="20210730 13:54:00.714"/>
</for>
<status status="PASS" starttime="20210730 13:54:00.709" endtime="20210730 13:54:00.714"/>
</branch>
<status status="PASS" starttime="20210730 13:54:00.709" endtime="20210730 13:54:00.714"/>
</if>
<status status="PASS" starttime="20210730 13:54:00.695" endtime="20210730 13:54:00.714"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:00.719" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:00.718" endtime="20210730 13:54:00.719"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:00.720" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:00.719" endtime="20210730 13:54:00.720"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:00.720" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:00.720" endtime="20210730 13:54:00.720"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:00.720" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:00.720" endtime="20210730 13:54:00.721"/>
</kw>
<msg timestamp="20210730 13:54:00.721" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:00.719" endtime="20210730 13:54:00.721"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:00.725" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:00.721" endtime="20210730 13:54:00.727"/>
</kw>
<status status="PASS" starttime="20210730 13:54:00.715" endtime="20210730 13:54:00.727"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:54:00.729" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:54:00.728" endtime="20210730 13:54:00.737"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:54:02.238" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:54:00.737" endtime="20210730 13:54:02.238"/>
</kw>
<status status="PASS" starttime="20210730 13:54:00.728" endtime="20210730 13:54:02.238"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:02.240" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:02.239" endtime="20210730 13:54:02.240"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:02.240" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:02.240" endtime="20210730 13:54:02.240"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:02.240" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:02.240" endtime="20210730 13:54:02.240"/>
</kw>
<msg timestamp="20210730 13:54:02.241" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:02.239" endtime="20210730 13:54:02.241"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:54:02.241" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:54:02.241" endtime="20210730 13:54:02.242"/>
</kw>
<status status="PASS" starttime="20210730 13:54:02.239" endtime="20210730 13:54:02.242"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:54:02.243" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:54:02.243" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:54:02.242" endtime="20210730 13:54:02.243"/>
</kw>
<status status="PASS" starttime="20210730 13:54:02.242" endtime="20210730 13:54:02.243"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:54:02.244" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:54:02.244" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:54:02.243" endtime="20210730 13:54:02.244"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:54:02.244" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:54:02.244" endtime="20210730 13:54:02.244"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:02.245" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:02.245" endtime="20210730 13:54:02.245"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:02.245" endtime="20210730 13:54:02.246"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:02.246" endtime="20210730 13:54:02.246"/>
</kw>
<status status="PASS" starttime="20210730 13:54:02.244" endtime="20210730 13:54:02.246"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:02.247" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:02.246" endtime="20210730 13:54:02.247"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:02.247" endtime="20210730 13:54:02.248"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:02.248" endtime="20210730 13:54:02.248"/>
</kw>
<status status="PASS" starttime="20210730 13:54:02.246" endtime="20210730 13:54:02.248"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:02.248" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:02.248" endtime="20210730 13:54:02.248"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:02.248" endtime="20210730 13:54:02.249"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:02.249" endtime="20210730 13:54:02.249"/>
</kw>
<status status="PASS" starttime="20210730 13:54:02.248" endtime="20210730 13:54:02.249"/>
</iter>
<status status="PASS" starttime="20210730 13:54:02.244" endtime="20210730 13:54:02.249"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:54:02.250" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:54:02.249" endtime="20210730 13:54:02.250"/>
</kw>
<status status="PASS" starttime="20210730 13:54:02.243" endtime="20210730 13:54:02.250"/>
</kw>
<status status="PASS" starttime="20210730 13:54:00.695" endtime="20210730 13:54:02.250"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.ZA</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:02.252" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:54:02.252" endtime="20210730 13:54:02.252"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:02.252" level="INFO">${payload} = {'password': 'abc!?.ZA'}</msg>
<status status="PASS" starttime="20210730 13:54:02.252" endtime="20210730 13:54:02.252"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:02.262" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:02.263" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:02.253" endtime="20210730 13:54:02.263"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:02.263" endtime="20210730 13:54:02.263"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:02.263" endtime="20210730 13:54:02.263"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:02.253" endtime="20210730 13:54:02.263"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:02.253" endtime="20210730 13:54:02.263"/>
</for>
<status status="FAIL" starttime="20210730 13:54:02.251" endtime="20210730 13:54:02.263"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:02.251" endtime="20210730 13:54:02.263"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.ZA</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:02.264" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:54:02.264" endtime="20210730 13:54:02.264"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:02.265" level="INFO">${payload} = {'password': 'abc!?.ZA'}</msg>
<status status="PASS" starttime="20210730 13:54:02.265" endtime="20210730 13:54:02.265"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:02.269" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:02.269" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:02.265" endtime="20210730 13:54:02.269"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:02.269" endtime="20210730 13:54:02.270"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:02.270" endtime="20210730 13:54:02.270"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:02.265" endtime="20210730 13:54:02.270"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:02.265" endtime="20210730 13:54:02.270"/>
</for>
<status status="FAIL" starttime="20210730 13:54:02.264" endtime="20210730 13:54:02.270"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:02.264" endtime="20210730 13:54:02.270"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.ZA</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:02.271" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:54:02.271" endtime="20210730 13:54:02.271"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:02.271" level="INFO">${payload} = {'password': 'abc!?.ZA'}</msg>
<status status="PASS" starttime="20210730 13:54:02.271" endtime="20210730 13:54:02.271"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:02.276" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:02.276" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:02.272" endtime="20210730 13:54:02.276"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:02.277" endtime="20210730 13:54:02.277"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:02.277" endtime="20210730 13:54:02.277"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:02.272" endtime="20210730 13:54:02.277"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:02.271" endtime="20210730 13:54:02.277"/>
</for>
<status status="FAIL" starttime="20210730 13:54:02.270" endtime="20210730 13:54:02.277"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:02.270" endtime="20210730 13:54:02.277"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:02.251" endtime="20210730 13:54:02.277"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:02.282" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:02.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:02.294" level="INFO">${pids} = 17110
17117
17124</msg>
<status status="PASS" starttime="20210730 13:54:02.278" endtime="20210730 13:54:02.294"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:02.295" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:02.294" endtime="20210730 13:54:02.295"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:02.295" level="INFO">${pids} = ['17110', '17117', '17124']</msg>
<status status="PASS" starttime="20210730 13:54:02.295" endtime="20210730 13:54:02.296"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17110</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:02.299" level="INFO">Running command 'kill 17110 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:02.296" endtime="20210730 13:54:02.299"/>
</kw>
<status status="PASS" starttime="20210730 13:54:02.296" endtime="20210730 13:54:02.299"/>
</iter>
<iter>
<var name="${pid}">17117</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:02.302" level="INFO">Running command 'kill 17117 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:02.300" endtime="20210730 13:54:02.304"/>
</kw>
<status status="PASS" starttime="20210730 13:54:02.299" endtime="20210730 13:54:02.304"/>
</iter>
<iter>
<var name="${pid}">17124</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:02.307" level="INFO">Running command 'kill 17124 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:02.305" endtime="20210730 13:54:02.308"/>
</kw>
<status status="PASS" starttime="20210730 13:54:02.304" endtime="20210730 13:54:02.308"/>
</iter>
<status status="PASS" starttime="20210730 13:54:02.296" endtime="20210730 13:54:02.309"/>
</for>
<status status="PASS" starttime="20210730 13:54:02.295" endtime="20210730 13:54:02.309"/>
</branch>
<status status="PASS" starttime="20210730 13:54:02.295" endtime="20210730 13:54:02.309"/>
</if>
<status status="PASS" starttime="20210730 13:54:02.278" endtime="20210730 13:54:02.309"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abc!?.ZA'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:54:00.694" endtime="20210730 13:54:02.309">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t86" name="With Each Valid Token, Updating Password Of Each System User With abc!?.ZAabc!?.ZAabc!?. Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:02.316" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:02.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:02.326" level="INFO">${pids} = 17153</msg>
<status status="PASS" starttime="20210730 13:54:02.312" endtime="20210730 13:54:02.326"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:02.327" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:02.327" endtime="20210730 13:54:02.327"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:02.328" level="INFO">${pids} = ['17153']</msg>
<status status="PASS" starttime="20210730 13:54:02.328" endtime="20210730 13:54:02.328"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17153</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:02.331" level="INFO">Running command 'kill 17153 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:02.328" endtime="20210730 13:54:02.332"/>
</kw>
<status status="PASS" starttime="20210730 13:54:02.328" endtime="20210730 13:54:02.332"/>
</iter>
<status status="PASS" starttime="20210730 13:54:02.328" endtime="20210730 13:54:02.332"/>
</for>
<status status="PASS" starttime="20210730 13:54:02.328" endtime="20210730 13:54:02.332"/>
</branch>
<status status="PASS" starttime="20210730 13:54:02.327" endtime="20210730 13:54:02.332"/>
</if>
<status status="PASS" starttime="20210730 13:54:02.311" endtime="20210730 13:54:02.332"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:02.334" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:02.333" endtime="20210730 13:54:02.334"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:02.334" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:02.334" endtime="20210730 13:54:02.334"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:02.335" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:02.334" endtime="20210730 13:54:02.335"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:02.335" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:02.335" endtime="20210730 13:54:02.335"/>
</kw>
<msg timestamp="20210730 13:54:02.335" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:02.334" endtime="20210730 13:54:02.335"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:02.339" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:02.335" endtime="20210730 13:54:02.342"/>
</kw>
<status status="PASS" starttime="20210730 13:54:02.333" endtime="20210730 13:54:02.343"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:54:02.345" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:54:02.344" endtime="20210730 13:54:02.350"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:54:03.852" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:54:02.350" endtime="20210730 13:54:03.852"/>
</kw>
<status status="PASS" starttime="20210730 13:54:02.343" endtime="20210730 13:54:03.852"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:03.854" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:03.853" endtime="20210730 13:54:03.854"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:03.854" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:03.854" endtime="20210730 13:54:03.854"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:03.854" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:03.854" endtime="20210730 13:54:03.854"/>
</kw>
<msg timestamp="20210730 13:54:03.855" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:03.853" endtime="20210730 13:54:03.855"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:54:03.855" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:54:03.855" endtime="20210730 13:54:03.855"/>
</kw>
<status status="PASS" starttime="20210730 13:54:03.853" endtime="20210730 13:54:03.855"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:54:03.856" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:54:03.856" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:54:03.856" endtime="20210730 13:54:03.856"/>
</kw>
<status status="PASS" starttime="20210730 13:54:03.856" endtime="20210730 13:54:03.856"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:54:03.857" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:54:03.857" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:54:03.857" endtime="20210730 13:54:03.857"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:54:03.857" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:54:03.857" endtime="20210730 13:54:03.857"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:03.858" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:03.858" endtime="20210730 13:54:03.858"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:03.858" endtime="20210730 13:54:03.859"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:03.859" endtime="20210730 13:54:03.860"/>
</kw>
<status status="PASS" starttime="20210730 13:54:03.858" endtime="20210730 13:54:03.860"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:03.860" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:03.860" endtime="20210730 13:54:03.860"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:03.860" endtime="20210730 13:54:03.862"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:03.862" endtime="20210730 13:54:03.862"/>
</kw>
<status status="PASS" starttime="20210730 13:54:03.860" endtime="20210730 13:54:03.862"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:03.862" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:03.862" endtime="20210730 13:54:03.862"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:03.862" endtime="20210730 13:54:03.863"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:03.863" endtime="20210730 13:54:03.864"/>
</kw>
<status status="PASS" starttime="20210730 13:54:03.862" endtime="20210730 13:54:03.864"/>
</iter>
<status status="PASS" starttime="20210730 13:54:03.857" endtime="20210730 13:54:03.864"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:54:03.864" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:54:03.864" endtime="20210730 13:54:03.864"/>
</kw>
<status status="PASS" starttime="20210730 13:54:03.856" endtime="20210730 13:54:03.864"/>
</kw>
<status status="PASS" starttime="20210730 13:54:02.311" endtime="20210730 13:54:03.864"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.ZAabc!?.ZAabc!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:03.866" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:54:03.865" endtime="20210730 13:54:03.866"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:03.866" level="INFO">${payload} = {'password': 'abc!?.ZAabc!?.ZAabc!?.'}</msg>
<status status="PASS" starttime="20210730 13:54:03.866" endtime="20210730 13:54:03.866"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:03.875" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:03.876" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:03.866" endtime="20210730 13:54:03.876"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:03.876" endtime="20210730 13:54:03.876"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:03.876" endtime="20210730 13:54:03.876"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:03.866" endtime="20210730 13:54:03.876"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:03.866" endtime="20210730 13:54:03.876"/>
</for>
<status status="FAIL" starttime="20210730 13:54:03.865" endtime="20210730 13:54:03.876"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:03.865" endtime="20210730 13:54:03.876"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.ZAabc!?.ZAabc!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:03.878" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:54:03.877" endtime="20210730 13:54:03.878"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:03.878" level="INFO">${payload} = {'password': 'abc!?.ZAabc!?.ZAabc!?.'}</msg>
<status status="PASS" starttime="20210730 13:54:03.878" endtime="20210730 13:54:03.878"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:03.883" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:03.883" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:03.879" endtime="20210730 13:54:03.883"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:03.883" endtime="20210730 13:54:03.883"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:03.883" endtime="20210730 13:54:03.883"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:03.878" endtime="20210730 13:54:03.883"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:03.878" endtime="20210730 13:54:03.883"/>
</for>
<status status="FAIL" starttime="20210730 13:54:03.877" endtime="20210730 13:54:03.883"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:03.877" endtime="20210730 13:54:03.884"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.ZAabc!?.ZAabc!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:03.885" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:54:03.884" endtime="20210730 13:54:03.885"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:03.885" level="INFO">${payload} = {'password': 'abc!?.ZAabc!?.ZAabc!?.'}</msg>
<status status="PASS" starttime="20210730 13:54:03.885" endtime="20210730 13:54:03.885"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:03.889" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:03.890" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:03.885" endtime="20210730 13:54:03.890"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:03.890" endtime="20210730 13:54:03.890"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:03.890" endtime="20210730 13:54:03.890"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:03.885" endtime="20210730 13:54:03.890"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:03.885" endtime="20210730 13:54:03.890"/>
</for>
<status status="FAIL" starttime="20210730 13:54:03.884" endtime="20210730 13:54:03.890"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:03.884" endtime="20210730 13:54:03.890"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:03.865" endtime="20210730 13:54:03.890"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:03.896" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:03.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:03.906" level="INFO">${pids} = 17176
17183
17189</msg>
<status status="PASS" starttime="20210730 13:54:03.891" endtime="20210730 13:54:03.906"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:03.907" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:03.907" endtime="20210730 13:54:03.907"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:03.908" level="INFO">${pids} = ['17176', '17183', '17189']</msg>
<status status="PASS" starttime="20210730 13:54:03.908" endtime="20210730 13:54:03.908"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17176</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:03.912" level="INFO">Running command 'kill 17176 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:03.909" endtime="20210730 13:54:03.912"/>
</kw>
<status status="PASS" starttime="20210730 13:54:03.909" endtime="20210730 13:54:03.912"/>
</iter>
<iter>
<var name="${pid}">17183</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:03.918" level="INFO">Running command 'kill 17183 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:03.913" endtime="20210730 13:54:03.922"/>
</kw>
<status status="PASS" starttime="20210730 13:54:03.913" endtime="20210730 13:54:03.922"/>
</iter>
<iter>
<var name="${pid}">17189</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:03.928" level="INFO">Running command 'kill 17189 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:03.923" endtime="20210730 13:54:03.929"/>
</kw>
<status status="PASS" starttime="20210730 13:54:03.922" endtime="20210730 13:54:03.929"/>
</iter>
<status status="PASS" starttime="20210730 13:54:03.908" endtime="20210730 13:54:03.929"/>
</for>
<status status="PASS" starttime="20210730 13:54:03.908" endtime="20210730 13:54:03.929"/>
</branch>
<status status="PASS" starttime="20210730 13:54:03.907" endtime="20210730 13:54:03.929"/>
</if>
<status status="PASS" starttime="20210730 13:54:03.891" endtime="20210730 13:54:03.929"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abc!?.ZAabc!?.ZAabc!?.'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:54:02.310" endtime="20210730 13:54:03.930">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t87" name="With Each Valid Token, Updating Password Of Each System User With abc!?.6 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:03.935" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:03.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:03.945" level="INFO">${pids} = 17218</msg>
<status status="PASS" starttime="20210730 13:54:03.931" endtime="20210730 13:54:03.945"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:03.946" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:03.945" endtime="20210730 13:54:03.946"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:03.946" level="INFO">${pids} = ['17218']</msg>
<status status="PASS" starttime="20210730 13:54:03.946" endtime="20210730 13:54:03.946"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17218</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:03.950" level="INFO">Running command 'kill 17218 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:03.947" endtime="20210730 13:54:03.951"/>
</kw>
<status status="PASS" starttime="20210730 13:54:03.947" endtime="20210730 13:54:03.951"/>
</iter>
<status status="PASS" starttime="20210730 13:54:03.946" endtime="20210730 13:54:03.951"/>
</for>
<status status="PASS" starttime="20210730 13:54:03.946" endtime="20210730 13:54:03.951"/>
</branch>
<status status="PASS" starttime="20210730 13:54:03.946" endtime="20210730 13:54:03.951"/>
</if>
<status status="PASS" starttime="20210730 13:54:03.931" endtime="20210730 13:54:03.951"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:03.952" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:03.952" endtime="20210730 13:54:03.952"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:03.953" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:03.953" endtime="20210730 13:54:03.953"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:03.954" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:03.953" endtime="20210730 13:54:03.954"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:03.954" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:03.954" endtime="20210730 13:54:03.954"/>
</kw>
<msg timestamp="20210730 13:54:03.954" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:03.952" endtime="20210730 13:54:03.954"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:03.961" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:03.955" endtime="20210730 13:54:03.963"/>
</kw>
<status status="PASS" starttime="20210730 13:54:03.951" endtime="20210730 13:54:03.963"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:54:03.964" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:54:03.964" endtime="20210730 13:54:03.969"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:54:05.470" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:54:03.970" endtime="20210730 13:54:05.471"/>
</kw>
<status status="PASS" starttime="20210730 13:54:03.964" endtime="20210730 13:54:05.471"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:05.472" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:05.472" endtime="20210730 13:54:05.472"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:05.472" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:05.472" endtime="20210730 13:54:05.472"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:05.473" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:05.473" endtime="20210730 13:54:05.473"/>
</kw>
<msg timestamp="20210730 13:54:05.474" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:05.471" endtime="20210730 13:54:05.474"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:54:05.474" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:54:05.474" endtime="20210730 13:54:05.475"/>
</kw>
<status status="PASS" starttime="20210730 13:54:05.471" endtime="20210730 13:54:05.475"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:54:05.476" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:54:05.476" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:54:05.475" endtime="20210730 13:54:05.476"/>
</kw>
<status status="PASS" starttime="20210730 13:54:05.475" endtime="20210730 13:54:05.476"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:54:05.477" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:54:05.477" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:54:05.476" endtime="20210730 13:54:05.477"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:54:05.477" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:54:05.477" endtime="20210730 13:54:05.477"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:05.478" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:05.477" endtime="20210730 13:54:05.478"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:05.478" endtime="20210730 13:54:05.478"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:05.479" endtime="20210730 13:54:05.479"/>
</kw>
<status status="PASS" starttime="20210730 13:54:05.477" endtime="20210730 13:54:05.479"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:05.479" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:05.479" endtime="20210730 13:54:05.479"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:05.479" endtime="20210730 13:54:05.480"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:05.480" endtime="20210730 13:54:05.480"/>
</kw>
<status status="PASS" starttime="20210730 13:54:05.479" endtime="20210730 13:54:05.480"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:05.481" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:05.480" endtime="20210730 13:54:05.481"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:05.481" endtime="20210730 13:54:05.481"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:05.481" endtime="20210730 13:54:05.482"/>
</kw>
<status status="PASS" starttime="20210730 13:54:05.480" endtime="20210730 13:54:05.482"/>
</iter>
<status status="PASS" starttime="20210730 13:54:05.477" endtime="20210730 13:54:05.482"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:54:05.482" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:54:05.482" endtime="20210730 13:54:05.482"/>
</kw>
<status status="PASS" starttime="20210730 13:54:05.476" endtime="20210730 13:54:05.482"/>
</kw>
<status status="PASS" starttime="20210730 13:54:03.931" endtime="20210730 13:54:05.482"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.6</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:05.484" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:54:05.483" endtime="20210730 13:54:05.484"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:05.484" level="INFO">${payload} = {'password': 'abc!?.6'}</msg>
<status status="PASS" starttime="20210730 13:54:05.484" endtime="20210730 13:54:05.484"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:05.494" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:05.494" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:05.485" endtime="20210730 13:54:05.494"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:05.494" endtime="20210730 13:54:05.494"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:05.494" endtime="20210730 13:54:05.494"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:05.484" endtime="20210730 13:54:05.494"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:05.484" endtime="20210730 13:54:05.494"/>
</for>
<status status="FAIL" starttime="20210730 13:54:05.483" endtime="20210730 13:54:05.495"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:05.483" endtime="20210730 13:54:05.495"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.6</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:05.496" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:54:05.495" endtime="20210730 13:54:05.496"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:05.496" level="INFO">${payload} = {'password': 'abc!?.6'}</msg>
<status status="PASS" starttime="20210730 13:54:05.496" endtime="20210730 13:54:05.496"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:05.500" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:05.500" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:05.496" endtime="20210730 13:54:05.500"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:05.500" endtime="20210730 13:54:05.500"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:05.501" endtime="20210730 13:54:05.501"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:05.496" endtime="20210730 13:54:05.501"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:05.496" endtime="20210730 13:54:05.501"/>
</for>
<status status="FAIL" starttime="20210730 13:54:05.495" endtime="20210730 13:54:05.501"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:05.495" endtime="20210730 13:54:05.501"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.6</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:05.502" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:54:05.502" endtime="20210730 13:54:05.502"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:05.502" level="INFO">${payload} = {'password': 'abc!?.6'}</msg>
<status status="PASS" starttime="20210730 13:54:05.502" endtime="20210730 13:54:05.502"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:05.506" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:05.507" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:05.503" endtime="20210730 13:54:05.507"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:05.507" endtime="20210730 13:54:05.507"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:05.507" endtime="20210730 13:54:05.507"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:05.502" endtime="20210730 13:54:05.507"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:05.502" endtime="20210730 13:54:05.507"/>
</for>
<status status="FAIL" starttime="20210730 13:54:05.501" endtime="20210730 13:54:05.507"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:05.501" endtime="20210730 13:54:05.507"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:05.483" endtime="20210730 13:54:05.507"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:05.514" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:05.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:05.523" level="INFO">${pids} = 17241
17248
17253</msg>
<status status="PASS" starttime="20210730 13:54:05.508" endtime="20210730 13:54:05.524"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:05.524" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:05.524" endtime="20210730 13:54:05.525"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:05.526" level="INFO">${pids} = ['17241', '17248', '17253']</msg>
<status status="PASS" starttime="20210730 13:54:05.525" endtime="20210730 13:54:05.526"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17241</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:05.530" level="INFO">Running command 'kill 17241 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:05.526" endtime="20210730 13:54:05.530"/>
</kw>
<status status="PASS" starttime="20210730 13:54:05.526" endtime="20210730 13:54:05.530"/>
</iter>
<iter>
<var name="${pid}">17248</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:05.533" level="INFO">Running command 'kill 17248 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:05.531" endtime="20210730 13:54:05.535"/>
</kw>
<status status="PASS" starttime="20210730 13:54:05.530" endtime="20210730 13:54:05.535"/>
</iter>
<iter>
<var name="${pid}">17253</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:05.539" level="INFO">Running command 'kill 17253 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:05.536" endtime="20210730 13:54:05.539"/>
</kw>
<status status="PASS" starttime="20210730 13:54:05.536" endtime="20210730 13:54:05.539"/>
</iter>
<status status="PASS" starttime="20210730 13:54:05.526" endtime="20210730 13:54:05.539"/>
</for>
<status status="PASS" starttime="20210730 13:54:05.525" endtime="20210730 13:54:05.539"/>
</branch>
<status status="PASS" starttime="20210730 13:54:05.525" endtime="20210730 13:54:05.539"/>
</if>
<status status="PASS" starttime="20210730 13:54:05.508" endtime="20210730 13:54:05.540"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abc!?.6'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:54:03.930" endtime="20210730 13:54:05.540">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t88" name="With Each Valid Token, Updating Password Of Each System User With abc!?.67 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:05.545" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:05.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:05.559" level="INFO">${pids} = 17282</msg>
<status status="PASS" starttime="20210730 13:54:05.542" endtime="20210730 13:54:05.559"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:05.561" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:05.560" endtime="20210730 13:54:05.561"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:05.562" level="INFO">${pids} = ['17282']</msg>
<status status="PASS" starttime="20210730 13:54:05.562" endtime="20210730 13:54:05.562"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17282</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:05.567" level="INFO">Running command 'kill 17282 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:05.563" endtime="20210730 13:54:05.567"/>
</kw>
<status status="PASS" starttime="20210730 13:54:05.563" endtime="20210730 13:54:05.567"/>
</iter>
<status status="PASS" starttime="20210730 13:54:05.562" endtime="20210730 13:54:05.567"/>
</for>
<status status="PASS" starttime="20210730 13:54:05.561" endtime="20210730 13:54:05.567"/>
</branch>
<status status="PASS" starttime="20210730 13:54:05.561" endtime="20210730 13:54:05.567"/>
</if>
<status status="PASS" starttime="20210730 13:54:05.541" endtime="20210730 13:54:05.568"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:05.569" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:05.569" endtime="20210730 13:54:05.569"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:05.570" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:05.569" endtime="20210730 13:54:05.570"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:05.570" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:05.570" endtime="20210730 13:54:05.570"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:05.571" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:05.570" endtime="20210730 13:54:05.571"/>
</kw>
<msg timestamp="20210730 13:54:05.571" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:05.569" endtime="20210730 13:54:05.571"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:05.575" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:05.571" endtime="20210730 13:54:05.588"/>
</kw>
<status status="PASS" starttime="20210730 13:54:05.568" endtime="20210730 13:54:05.588"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:54:05.590" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:54:05.589" endtime="20210730 13:54:05.602"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:54:07.106" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:54:05.603" endtime="20210730 13:54:07.106"/>
</kw>
<status status="PASS" starttime="20210730 13:54:05.589" endtime="20210730 13:54:07.106"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:07.107" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:07.107" endtime="20210730 13:54:07.107"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:07.107" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:07.107" endtime="20210730 13:54:07.107"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:07.108" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:07.107" endtime="20210730 13:54:07.108"/>
</kw>
<msg timestamp="20210730 13:54:07.108" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:07.106" endtime="20210730 13:54:07.108"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:54:07.109" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:54:07.108" endtime="20210730 13:54:07.109"/>
</kw>
<status status="PASS" starttime="20210730 13:54:07.106" endtime="20210730 13:54:07.109"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:54:07.110" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:54:07.110" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:54:07.110" endtime="20210730 13:54:07.110"/>
</kw>
<status status="PASS" starttime="20210730 13:54:07.109" endtime="20210730 13:54:07.110"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:54:07.111" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:54:07.111" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:54:07.110" endtime="20210730 13:54:07.111"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:54:07.111" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:54:07.111" endtime="20210730 13:54:07.111"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:07.112" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:07.112" endtime="20210730 13:54:07.112"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:07.112" endtime="20210730 13:54:07.113"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:07.113" endtime="20210730 13:54:07.113"/>
</kw>
<status status="PASS" starttime="20210730 13:54:07.112" endtime="20210730 13:54:07.113"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:07.114" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:07.114" endtime="20210730 13:54:07.114"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:07.114" endtime="20210730 13:54:07.115"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:07.115" endtime="20210730 13:54:07.115"/>
</kw>
<status status="PASS" starttime="20210730 13:54:07.113" endtime="20210730 13:54:07.115"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:07.115" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:07.115" endtime="20210730 13:54:07.115"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:07.115" endtime="20210730 13:54:07.116"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:07.116" endtime="20210730 13:54:07.116"/>
</kw>
<status status="PASS" starttime="20210730 13:54:07.115" endtime="20210730 13:54:07.117"/>
</iter>
<status status="PASS" starttime="20210730 13:54:07.111" endtime="20210730 13:54:07.117"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:54:07.117" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:54:07.117" endtime="20210730 13:54:07.117"/>
</kw>
<status status="PASS" starttime="20210730 13:54:07.110" endtime="20210730 13:54:07.118"/>
</kw>
<status status="PASS" starttime="20210730 13:54:05.541" endtime="20210730 13:54:07.118"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.67</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:07.119" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:54:07.118" endtime="20210730 13:54:07.119"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:07.119" level="INFO">${payload} = {'password': 'abc!?.67'}</msg>
<status status="PASS" starttime="20210730 13:54:07.119" endtime="20210730 13:54:07.119"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:07.129" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:07.129" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:07.120" endtime="20210730 13:54:07.129"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:07.129" endtime="20210730 13:54:07.129"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:07.129" endtime="20210730 13:54:07.129"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:07.119" endtime="20210730 13:54:07.129"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:07.119" endtime="20210730 13:54:07.130"/>
</for>
<status status="FAIL" starttime="20210730 13:54:07.118" endtime="20210730 13:54:07.130"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:07.118" endtime="20210730 13:54:07.130"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.67</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:07.131" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:54:07.131" endtime="20210730 13:54:07.131"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:07.131" level="INFO">${payload} = {'password': 'abc!?.67'}</msg>
<status status="PASS" starttime="20210730 13:54:07.131" endtime="20210730 13:54:07.131"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:07.135" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:07.136" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:07.132" endtime="20210730 13:54:07.136"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:07.136" endtime="20210730 13:54:07.136"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:07.136" endtime="20210730 13:54:07.136"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:07.131" endtime="20210730 13:54:07.136"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:07.131" endtime="20210730 13:54:07.136"/>
</for>
<status status="FAIL" starttime="20210730 13:54:07.130" endtime="20210730 13:54:07.136"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:07.130" endtime="20210730 13:54:07.136"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.67</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:07.137" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:54:07.137" endtime="20210730 13:54:07.137"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:07.138" level="INFO">${payload} = {'password': 'abc!?.67'}</msg>
<status status="PASS" starttime="20210730 13:54:07.137" endtime="20210730 13:54:07.138"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:07.141" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:07.141" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:07.138" endtime="20210730 13:54:07.141"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:07.142" endtime="20210730 13:54:07.142"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:07.142" endtime="20210730 13:54:07.142"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:07.138" endtime="20210730 13:54:07.142"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:07.138" endtime="20210730 13:54:07.142"/>
</for>
<status status="FAIL" starttime="20210730 13:54:07.136" endtime="20210730 13:54:07.142"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:07.136" endtime="20210730 13:54:07.142"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:07.118" endtime="20210730 13:54:07.142"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:07.146" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:07.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:07.159" level="INFO">${pids} = 17305
17312
17316</msg>
<status status="PASS" starttime="20210730 13:54:07.143" endtime="20210730 13:54:07.159"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:07.160" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:07.159" endtime="20210730 13:54:07.160"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:07.161" level="INFO">${pids} = ['17305', '17312', '17316']</msg>
<status status="PASS" starttime="20210730 13:54:07.160" endtime="20210730 13:54:07.161"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17305</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:07.164" level="INFO">Running command 'kill 17305 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:07.161" endtime="20210730 13:54:07.165"/>
</kw>
<status status="PASS" starttime="20210730 13:54:07.161" endtime="20210730 13:54:07.165"/>
</iter>
<iter>
<var name="${pid}">17312</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:07.168" level="INFO">Running command 'kill 17312 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:07.165" endtime="20210730 13:54:07.168"/>
</kw>
<status status="PASS" starttime="20210730 13:54:07.165" endtime="20210730 13:54:07.168"/>
</iter>
<iter>
<var name="${pid}">17316</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:07.171" level="INFO">Running command 'kill 17316 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:07.169" endtime="20210730 13:54:07.172"/>
</kw>
<status status="PASS" starttime="20210730 13:54:07.168" endtime="20210730 13:54:07.172"/>
</iter>
<status status="PASS" starttime="20210730 13:54:07.161" endtime="20210730 13:54:07.172"/>
</for>
<status status="PASS" starttime="20210730 13:54:07.160" endtime="20210730 13:54:07.172"/>
</branch>
<status status="PASS" starttime="20210730 13:54:07.160" endtime="20210730 13:54:07.172"/>
</if>
<status status="PASS" starttime="20210730 13:54:07.142" endtime="20210730 13:54:07.172"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abc!?.67'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:54:05.540" endtime="20210730 13:54:07.172">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t89" name="With Each Valid Token, Updating Password Of Each System User With abc!?.67abc!?.67abc!?. Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:07.183" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:07.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:07.195" level="INFO">${pids} = 17345</msg>
<status status="PASS" starttime="20210730 13:54:07.175" endtime="20210730 13:54:07.195"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:07.196" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:07.196" endtime="20210730 13:54:07.196"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:07.203" level="INFO">${pids} = ['17345']</msg>
<status status="PASS" starttime="20210730 13:54:07.202" endtime="20210730 13:54:07.203"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17345</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:07.211" level="INFO">Running command 'kill 17345 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:07.203" endtime="20210730 13:54:07.211"/>
</kw>
<status status="PASS" starttime="20210730 13:54:07.203" endtime="20210730 13:54:07.211"/>
</iter>
<status status="PASS" starttime="20210730 13:54:07.203" endtime="20210730 13:54:07.211"/>
</for>
<status status="PASS" starttime="20210730 13:54:07.202" endtime="20210730 13:54:07.212"/>
</branch>
<status status="PASS" starttime="20210730 13:54:07.196" endtime="20210730 13:54:07.212"/>
</if>
<status status="PASS" starttime="20210730 13:54:07.175" endtime="20210730 13:54:07.212"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:07.214" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:07.213" endtime="20210730 13:54:07.214"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:07.214" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:07.214" endtime="20210730 13:54:07.214"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:07.215" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:07.214" endtime="20210730 13:54:07.215"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:07.215" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:07.215" endtime="20210730 13:54:07.215"/>
</kw>
<msg timestamp="20210730 13:54:07.215" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:07.214" endtime="20210730 13:54:07.215"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:07.219" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:07.215" endtime="20210730 13:54:07.220"/>
</kw>
<status status="PASS" starttime="20210730 13:54:07.212" endtime="20210730 13:54:07.221"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:54:07.222" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:54:07.222" endtime="20210730 13:54:07.230"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:54:08.732" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:54:07.231" endtime="20210730 13:54:08.732"/>
</kw>
<status status="PASS" starttime="20210730 13:54:07.221" endtime="20210730 13:54:08.732"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:08.734" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:08.734" endtime="20210730 13:54:08.734"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:08.734" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:08.734" endtime="20210730 13:54:08.734"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:08.735" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:08.734" endtime="20210730 13:54:08.735"/>
</kw>
<msg timestamp="20210730 13:54:08.735" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:08.733" endtime="20210730 13:54:08.735"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:54:08.735" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:54:08.735" endtime="20210730 13:54:08.736"/>
</kw>
<status status="PASS" starttime="20210730 13:54:08.733" endtime="20210730 13:54:08.736"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:54:08.736" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:54:08.736" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:54:08.736" endtime="20210730 13:54:08.736"/>
</kw>
<status status="PASS" starttime="20210730 13:54:08.736" endtime="20210730 13:54:08.737"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:54:08.737" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:54:08.737" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:54:08.737" endtime="20210730 13:54:08.737"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:54:08.738" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:54:08.738" endtime="20210730 13:54:08.738"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:08.738" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:08.738" endtime="20210730 13:54:08.738"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:08.738" endtime="20210730 13:54:08.739"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:08.739" endtime="20210730 13:54:08.739"/>
</kw>
<status status="PASS" starttime="20210730 13:54:08.738" endtime="20210730 13:54:08.739"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:08.740" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:08.740" endtime="20210730 13:54:08.740"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:08.740" endtime="20210730 13:54:08.740"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:08.741" endtime="20210730 13:54:08.741"/>
</kw>
<status status="PASS" starttime="20210730 13:54:08.739" endtime="20210730 13:54:08.741"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:08.741" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:08.741" endtime="20210730 13:54:08.741"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:08.741" endtime="20210730 13:54:08.742"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:08.742" endtime="20210730 13:54:08.742"/>
</kw>
<status status="PASS" starttime="20210730 13:54:08.741" endtime="20210730 13:54:08.743"/>
</iter>
<status status="PASS" starttime="20210730 13:54:08.738" endtime="20210730 13:54:08.743"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:54:08.743" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:54:08.743" endtime="20210730 13:54:08.743"/>
</kw>
<status status="PASS" starttime="20210730 13:54:08.737" endtime="20210730 13:54:08.743"/>
</kw>
<status status="PASS" starttime="20210730 13:54:07.174" endtime="20210730 13:54:08.743"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.67abc!?.67abc!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:08.745" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:54:08.744" endtime="20210730 13:54:08.745"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:08.745" level="INFO">${payload} = {'password': 'abc!?.67abc!?.67abc!?.'}</msg>
<status status="PASS" starttime="20210730 13:54:08.745" endtime="20210730 13:54:08.745"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:08.756" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:08.756" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:08.745" endtime="20210730 13:54:08.757"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:08.757" endtime="20210730 13:54:08.757"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:08.757" endtime="20210730 13:54:08.757"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:08.745" endtime="20210730 13:54:08.757"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:08.745" endtime="20210730 13:54:08.757"/>
</for>
<status status="FAIL" starttime="20210730 13:54:08.744" endtime="20210730 13:54:08.757"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:08.744" endtime="20210730 13:54:08.757"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.67abc!?.67abc!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:08.759" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:54:08.758" endtime="20210730 13:54:08.759"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:08.759" level="INFO">${payload} = {'password': 'abc!?.67abc!?.67abc!?.'}</msg>
<status status="PASS" starttime="20210730 13:54:08.759" endtime="20210730 13:54:08.759"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:08.764" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:08.764" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:08.760" endtime="20210730 13:54:08.764"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:08.764" endtime="20210730 13:54:08.764"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:08.764" endtime="20210730 13:54:08.764"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:08.760" endtime="20210730 13:54:08.764"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:08.759" endtime="20210730 13:54:08.764"/>
</for>
<status status="FAIL" starttime="20210730 13:54:08.757" endtime="20210730 13:54:08.765"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:08.757" endtime="20210730 13:54:08.765"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.67abc!?.67abc!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:08.766" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:54:08.765" endtime="20210730 13:54:08.766"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:08.766" level="INFO">${payload} = {'password': 'abc!?.67abc!?.67abc!?.'}</msg>
<status status="PASS" starttime="20210730 13:54:08.766" endtime="20210730 13:54:08.766"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:08.770" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:08.770" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:08.766" endtime="20210730 13:54:08.770"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:08.770" endtime="20210730 13:54:08.770"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:08.770" endtime="20210730 13:54:08.770"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:08.766" endtime="20210730 13:54:08.770"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:08.766" endtime="20210730 13:54:08.770"/>
</for>
<status status="FAIL" starttime="20210730 13:54:08.765" endtime="20210730 13:54:08.770"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:08.765" endtime="20210730 13:54:08.770"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:08.743" endtime="20210730 13:54:08.771"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:08.778" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:08.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:08.788" level="INFO">${pids} = 17368
17375
17379</msg>
<status status="PASS" starttime="20210730 13:54:08.771" endtime="20210730 13:54:08.788"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:08.789" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:08.788" endtime="20210730 13:54:08.789"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:08.789" level="INFO">${pids} = ['17368', '17375', '17379']</msg>
<status status="PASS" starttime="20210730 13:54:08.789" endtime="20210730 13:54:08.789"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17368</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:08.794" level="INFO">Running command 'kill 17368 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:08.790" endtime="20210730 13:54:08.795"/>
</kw>
<status status="PASS" starttime="20210730 13:54:08.789" endtime="20210730 13:54:08.795"/>
</iter>
<iter>
<var name="${pid}">17375</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:08.799" level="INFO">Running command 'kill 17375 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:08.795" endtime="20210730 13:54:08.800"/>
</kw>
<status status="PASS" starttime="20210730 13:54:08.795" endtime="20210730 13:54:08.800"/>
</iter>
<iter>
<var name="${pid}">17379</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:08.804" level="INFO">Running command 'kill 17379 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:08.800" endtime="20210730 13:54:08.804"/>
</kw>
<status status="PASS" starttime="20210730 13:54:08.800" endtime="20210730 13:54:08.804"/>
</iter>
<status status="PASS" starttime="20210730 13:54:08.789" endtime="20210730 13:54:08.805"/>
</for>
<status status="PASS" starttime="20210730 13:54:08.789" endtime="20210730 13:54:08.805"/>
</branch>
<status status="PASS" starttime="20210730 13:54:08.789" endtime="20210730 13:54:08.805"/>
</if>
<status status="PASS" starttime="20210730 13:54:08.771" endtime="20210730 13:54:08.805"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abc!?.67abc!?.67abc!?.'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:54:07.173" endtime="20210730 13:54:08.805">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t90" name="With Each Valid Token, Updating Password Of Each System User With ABC456. Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:08.811" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:08.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:08.820" level="INFO">${pids} = 17408</msg>
<status status="PASS" starttime="20210730 13:54:08.807" endtime="20210730 13:54:08.820"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:08.821" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:08.821" endtime="20210730 13:54:08.821"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:08.822" level="INFO">${pids} = ['17408']</msg>
<status status="PASS" starttime="20210730 13:54:08.822" endtime="20210730 13:54:08.822"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17408</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:08.826" level="INFO">Running command 'kill 17408 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:08.823" endtime="20210730 13:54:08.827"/>
</kw>
<status status="PASS" starttime="20210730 13:54:08.822" endtime="20210730 13:54:08.827"/>
</iter>
<status status="PASS" starttime="20210730 13:54:08.822" endtime="20210730 13:54:08.827"/>
</for>
<status status="PASS" starttime="20210730 13:54:08.822" endtime="20210730 13:54:08.827"/>
</branch>
<status status="PASS" starttime="20210730 13:54:08.821" endtime="20210730 13:54:08.827"/>
</if>
<status status="PASS" starttime="20210730 13:54:08.807" endtime="20210730 13:54:08.827"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:08.828" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:08.828" endtime="20210730 13:54:08.829"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:08.829" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:08.829" endtime="20210730 13:54:08.829"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:08.830" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:08.829" endtime="20210730 13:54:08.830"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:08.830" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:08.830" endtime="20210730 13:54:08.830"/>
</kw>
<msg timestamp="20210730 13:54:08.830" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:08.829" endtime="20210730 13:54:08.830"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:08.836" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:08.830" endtime="20210730 13:54:08.838"/>
</kw>
<status status="PASS" starttime="20210730 13:54:08.828" endtime="20210730 13:54:08.838"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:54:08.840" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:54:08.839" endtime="20210730 13:54:08.844"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:54:10.345" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:54:08.844" endtime="20210730 13:54:10.345"/>
</kw>
<status status="PASS" starttime="20210730 13:54:08.839" endtime="20210730 13:54:10.345"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:10.346" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:10.346" endtime="20210730 13:54:10.347"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:10.347" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:10.347" endtime="20210730 13:54:10.347"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:10.347" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:10.347" endtime="20210730 13:54:10.347"/>
</kw>
<msg timestamp="20210730 13:54:10.347" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:10.346" endtime="20210730 13:54:10.347"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:54:10.348" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:54:10.347" endtime="20210730 13:54:10.348"/>
</kw>
<status status="PASS" starttime="20210730 13:54:10.346" endtime="20210730 13:54:10.348"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:54:10.349" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:54:10.349" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:54:10.349" endtime="20210730 13:54:10.349"/>
</kw>
<status status="PASS" starttime="20210730 13:54:10.348" endtime="20210730 13:54:10.349"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:54:10.350" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:54:10.350" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:54:10.349" endtime="20210730 13:54:10.350"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:54:10.351" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:54:10.350" endtime="20210730 13:54:10.351"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:10.352" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:10.351" endtime="20210730 13:54:10.352"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:10.352" endtime="20210730 13:54:10.353"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:10.353" endtime="20210730 13:54:10.354"/>
</kw>
<status status="PASS" starttime="20210730 13:54:10.351" endtime="20210730 13:54:10.354"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:10.354" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:10.354" endtime="20210730 13:54:10.354"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:10.354" endtime="20210730 13:54:10.355"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:10.355" endtime="20210730 13:54:10.355"/>
</kw>
<status status="PASS" starttime="20210730 13:54:10.354" endtime="20210730 13:54:10.355"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:10.355" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:10.355" endtime="20210730 13:54:10.355"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:10.356" endtime="20210730 13:54:10.356"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:10.356" endtime="20210730 13:54:10.357"/>
</kw>
<status status="PASS" starttime="20210730 13:54:10.355" endtime="20210730 13:54:10.357"/>
</iter>
<status status="PASS" starttime="20210730 13:54:10.351" endtime="20210730 13:54:10.357"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:54:10.357" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:54:10.357" endtime="20210730 13:54:10.357"/>
</kw>
<status status="PASS" starttime="20210730 13:54:10.349" endtime="20210730 13:54:10.357"/>
</kw>
<status status="PASS" starttime="20210730 13:54:08.806" endtime="20210730 13:54:10.357"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC456.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:10.359" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:54:10.358" endtime="20210730 13:54:10.359"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:10.359" level="INFO">${payload} = {'password': 'ABC456.'}</msg>
<status status="PASS" starttime="20210730 13:54:10.359" endtime="20210730 13:54:10.359"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:10.368" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:10.368" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:10.359" endtime="20210730 13:54:10.368"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:10.368" endtime="20210730 13:54:10.368"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:10.368" endtime="20210730 13:54:10.368"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:10.359" endtime="20210730 13:54:10.368"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:10.359" endtime="20210730 13:54:10.368"/>
</for>
<status status="FAIL" starttime="20210730 13:54:10.358" endtime="20210730 13:54:10.369"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:10.358" endtime="20210730 13:54:10.369"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC456.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:10.370" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:54:10.369" endtime="20210730 13:54:10.370"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:10.370" level="INFO">${payload} = {'password': 'ABC456.'}</msg>
<status status="PASS" starttime="20210730 13:54:10.370" endtime="20210730 13:54:10.370"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:10.374" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:10.375" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:10.371" endtime="20210730 13:54:10.375"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:10.375" endtime="20210730 13:54:10.375"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:10.375" endtime="20210730 13:54:10.375"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:10.370" endtime="20210730 13:54:10.375"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:10.370" endtime="20210730 13:54:10.375"/>
</for>
<status status="FAIL" starttime="20210730 13:54:10.369" endtime="20210730 13:54:10.375"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:10.369" endtime="20210730 13:54:10.375"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC456.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:10.376" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:54:10.376" endtime="20210730 13:54:10.376"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:10.377" level="INFO">${payload} = {'password': 'ABC456.'}</msg>
<status status="PASS" starttime="20210730 13:54:10.376" endtime="20210730 13:54:10.377"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:10.381" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:10.381" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:10.377" endtime="20210730 13:54:10.381"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:10.381" endtime="20210730 13:54:10.381"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:10.381" endtime="20210730 13:54:10.381"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:10.377" endtime="20210730 13:54:10.382"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:10.377" endtime="20210730 13:54:10.382"/>
</for>
<status status="FAIL" starttime="20210730 13:54:10.375" endtime="20210730 13:54:10.382"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:10.375" endtime="20210730 13:54:10.382"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:10.357" endtime="20210730 13:54:10.382"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:10.389" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:10.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:10.409" level="INFO">${pids} = 17431
17438
17443</msg>
<status status="PASS" starttime="20210730 13:54:10.383" endtime="20210730 13:54:10.409"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:10.410" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:10.409" endtime="20210730 13:54:10.410"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:10.411" level="INFO">${pids} = ['17431', '17438', '17443']</msg>
<status status="PASS" starttime="20210730 13:54:10.410" endtime="20210730 13:54:10.411"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17431</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:10.414" level="INFO">Running command 'kill 17431 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:10.411" endtime="20210730 13:54:10.415"/>
</kw>
<status status="PASS" starttime="20210730 13:54:10.411" endtime="20210730 13:54:10.415"/>
</iter>
<iter>
<var name="${pid}">17438</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:10.418" level="INFO">Running command 'kill 17438 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:10.415" endtime="20210730 13:54:10.419"/>
</kw>
<status status="PASS" starttime="20210730 13:54:10.415" endtime="20210730 13:54:10.419"/>
</iter>
<iter>
<var name="${pid}">17443</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:10.424" level="INFO">Running command 'kill 17443 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:10.420" endtime="20210730 13:54:10.424"/>
</kw>
<status status="PASS" starttime="20210730 13:54:10.419" endtime="20210730 13:54:10.424"/>
</iter>
<status status="PASS" starttime="20210730 13:54:10.411" endtime="20210730 13:54:10.424"/>
</for>
<status status="PASS" starttime="20210730 13:54:10.410" endtime="20210730 13:54:10.424"/>
</branch>
<status status="PASS" starttime="20210730 13:54:10.410" endtime="20210730 13:54:10.424"/>
</if>
<status status="PASS" starttime="20210730 13:54:10.382" endtime="20210730 13:54:10.425"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABC456.'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:54:08.806" endtime="20210730 13:54:10.425">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t91" name="With Each Valid Token, Updating Password Of Each System User With ABC456.? Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:10.431" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:10.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:10.441" level="INFO">${pids} = 17472</msg>
<status status="PASS" starttime="20210730 13:54:10.428" endtime="20210730 13:54:10.441"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:10.442" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:10.441" endtime="20210730 13:54:10.442"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:10.443" level="INFO">${pids} = ['17472']</msg>
<status status="PASS" starttime="20210730 13:54:10.443" endtime="20210730 13:54:10.443"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17472</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:10.448" level="INFO">Running command 'kill 17472 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:10.444" endtime="20210730 13:54:10.449"/>
</kw>
<status status="PASS" starttime="20210730 13:54:10.444" endtime="20210730 13:54:10.449"/>
</iter>
<status status="PASS" starttime="20210730 13:54:10.444" endtime="20210730 13:54:10.449"/>
</for>
<status status="PASS" starttime="20210730 13:54:10.442" endtime="20210730 13:54:10.449"/>
</branch>
<status status="PASS" starttime="20210730 13:54:10.442" endtime="20210730 13:54:10.449"/>
</if>
<status status="PASS" starttime="20210730 13:54:10.427" endtime="20210730 13:54:10.449"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:10.451" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:10.451" endtime="20210730 13:54:10.451"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:10.452" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:10.452" endtime="20210730 13:54:10.452"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:10.452" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:10.452" endtime="20210730 13:54:10.452"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:10.453" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:10.452" endtime="20210730 13:54:10.453"/>
</kw>
<msg timestamp="20210730 13:54:10.453" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:10.451" endtime="20210730 13:54:10.453"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:10.460" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:10.453" endtime="20210730 13:54:10.467"/>
</kw>
<status status="PASS" starttime="20210730 13:54:10.450" endtime="20210730 13:54:10.467"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:54:10.469" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:54:10.468" endtime="20210730 13:54:10.491"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:54:11.995" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:54:10.492" endtime="20210730 13:54:11.995"/>
</kw>
<status status="PASS" starttime="20210730 13:54:10.468" endtime="20210730 13:54:11.995"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:11.997" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:11.996" endtime="20210730 13:54:11.997"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:11.997" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:11.997" endtime="20210730 13:54:11.997"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:11.997" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:11.997" endtime="20210730 13:54:11.998"/>
</kw>
<msg timestamp="20210730 13:54:11.998" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:11.996" endtime="20210730 13:54:11.998"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:54:11.998" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:54:11.998" endtime="20210730 13:54:11.999"/>
</kw>
<status status="PASS" starttime="20210730 13:54:11.996" endtime="20210730 13:54:11.999"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:54:11.999" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:54:11.999" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:54:11.999" endtime="20210730 13:54:12.000"/>
</kw>
<status status="PASS" starttime="20210730 13:54:11.999" endtime="20210730 13:54:12.000"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:54:12.000" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:54:12.001" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:54:12.000" endtime="20210730 13:54:12.001"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:54:12.001" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:54:12.001" endtime="20210730 13:54:12.001"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:12.001" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:12.001" endtime="20210730 13:54:12.001"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:12.002" endtime="20210730 13:54:12.002"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:12.002" endtime="20210730 13:54:12.003"/>
</kw>
<status status="PASS" starttime="20210730 13:54:12.001" endtime="20210730 13:54:12.003"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:12.003" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:12.003" endtime="20210730 13:54:12.003"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:12.003" endtime="20210730 13:54:12.004"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:12.004" endtime="20210730 13:54:12.004"/>
</kw>
<status status="PASS" starttime="20210730 13:54:12.003" endtime="20210730 13:54:12.004"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:12.005" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:12.005" endtime="20210730 13:54:12.005"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:12.005" endtime="20210730 13:54:12.006"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:12.006" endtime="20210730 13:54:12.006"/>
</kw>
<status status="PASS" starttime="20210730 13:54:12.005" endtime="20210730 13:54:12.006"/>
</iter>
<status status="PASS" starttime="20210730 13:54:12.001" endtime="20210730 13:54:12.006"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:54:12.006" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:54:12.006" endtime="20210730 13:54:12.006"/>
</kw>
<status status="PASS" starttime="20210730 13:54:12.000" endtime="20210730 13:54:12.007"/>
</kw>
<status status="PASS" starttime="20210730 13:54:10.427" endtime="20210730 13:54:12.007"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC456.?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:12.008" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:54:12.008" endtime="20210730 13:54:12.008"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:12.008" level="INFO">${payload} = {'password': 'ABC456.?'}</msg>
<status status="PASS" starttime="20210730 13:54:12.008" endtime="20210730 13:54:12.008"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:12.021" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:12.022" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:12.009" endtime="20210730 13:54:12.022"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:12.022" endtime="20210730 13:54:12.022"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:12.022" endtime="20210730 13:54:12.022"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:12.009" endtime="20210730 13:54:12.022"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:12.008" endtime="20210730 13:54:12.022"/>
</for>
<status status="FAIL" starttime="20210730 13:54:12.007" endtime="20210730 13:54:12.022"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:12.007" endtime="20210730 13:54:12.022"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC456.?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:12.023" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:54:12.023" endtime="20210730 13:54:12.024"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:12.024" level="INFO">${payload} = {'password': 'ABC456.?'}</msg>
<status status="PASS" starttime="20210730 13:54:12.024" endtime="20210730 13:54:12.024"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:12.028" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:12.029" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:12.024" endtime="20210730 13:54:12.029"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:12.029" endtime="20210730 13:54:12.029"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:12.029" endtime="20210730 13:54:12.029"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:12.024" endtime="20210730 13:54:12.029"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:12.024" endtime="20210730 13:54:12.029"/>
</for>
<status status="FAIL" starttime="20210730 13:54:12.022" endtime="20210730 13:54:12.029"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:12.022" endtime="20210730 13:54:12.029"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC456.?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:12.031" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:54:12.030" endtime="20210730 13:54:12.031"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:12.031" level="INFO">${payload} = {'password': 'ABC456.?'}</msg>
<status status="PASS" starttime="20210730 13:54:12.031" endtime="20210730 13:54:12.031"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:12.036" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:12.036" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:12.031" endtime="20210730 13:54:12.036"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:12.037" endtime="20210730 13:54:12.037"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:12.037" endtime="20210730 13:54:12.037"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:12.031" endtime="20210730 13:54:12.037"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:12.031" endtime="20210730 13:54:12.037"/>
</for>
<status status="FAIL" starttime="20210730 13:54:12.030" endtime="20210730 13:54:12.037"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:12.030" endtime="20210730 13:54:12.038"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:12.007" endtime="20210730 13:54:12.039"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:12.044" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:12.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:12.054" level="INFO">${pids} = 17495
17502
17506</msg>
<status status="PASS" starttime="20210730 13:54:12.040" endtime="20210730 13:54:12.054"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:12.055" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:12.054" endtime="20210730 13:54:12.055"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:12.055" level="INFO">${pids} = ['17495', '17502', '17506']</msg>
<status status="PASS" starttime="20210730 13:54:12.055" endtime="20210730 13:54:12.055"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17495</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:12.059" level="INFO">Running command 'kill 17495 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:12.056" endtime="20210730 13:54:12.060"/>
</kw>
<status status="PASS" starttime="20210730 13:54:12.056" endtime="20210730 13:54:12.060"/>
</iter>
<iter>
<var name="${pid}">17502</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:12.064" level="INFO">Running command 'kill 17502 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:12.061" endtime="20210730 13:54:12.065"/>
</kw>
<status status="PASS" starttime="20210730 13:54:12.060" endtime="20210730 13:54:12.065"/>
</iter>
<iter>
<var name="${pid}">17506</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:12.070" level="INFO">Running command 'kill 17506 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:12.065" endtime="20210730 13:54:12.070"/>
</kw>
<status status="PASS" starttime="20210730 13:54:12.065" endtime="20210730 13:54:12.071"/>
</iter>
<status status="PASS" starttime="20210730 13:54:12.056" endtime="20210730 13:54:12.071"/>
</for>
<status status="PASS" starttime="20210730 13:54:12.055" endtime="20210730 13:54:12.071"/>
</branch>
<status status="PASS" starttime="20210730 13:54:12.055" endtime="20210730 13:54:12.071"/>
</if>
<status status="PASS" starttime="20210730 13:54:12.039" endtime="20210730 13:54:12.071"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABC456.?'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:54:10.426" endtime="20210730 13:54:12.071">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t92" name="With Each Valid Token, Updating Password Of Each System User With ABC456.?ABC456.?ABC456 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:12.076" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:12.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:12.087" level="INFO">${pids} = 17535</msg>
<status status="PASS" starttime="20210730 13:54:12.073" endtime="20210730 13:54:12.087"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:12.088" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:12.087" endtime="20210730 13:54:12.088"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:12.089" level="INFO">${pids} = ['17535']</msg>
<status status="PASS" starttime="20210730 13:54:12.088" endtime="20210730 13:54:12.089"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17535</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:12.093" level="INFO">Running command 'kill 17535 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:12.089" endtime="20210730 13:54:12.094"/>
</kw>
<status status="PASS" starttime="20210730 13:54:12.089" endtime="20210730 13:54:12.094"/>
</iter>
<status status="PASS" starttime="20210730 13:54:12.089" endtime="20210730 13:54:12.094"/>
</for>
<status status="PASS" starttime="20210730 13:54:12.088" endtime="20210730 13:54:12.094"/>
</branch>
<status status="PASS" starttime="20210730 13:54:12.088" endtime="20210730 13:54:12.094"/>
</if>
<status status="PASS" starttime="20210730 13:54:12.073" endtime="20210730 13:54:12.094"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:12.095" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:12.095" endtime="20210730 13:54:12.095"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:12.096" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:12.096" endtime="20210730 13:54:12.096"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:12.097" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:12.096" endtime="20210730 13:54:12.097"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:12.097" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:12.097" endtime="20210730 13:54:12.097"/>
</kw>
<msg timestamp="20210730 13:54:12.097" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:12.096" endtime="20210730 13:54:12.097"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:12.102" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:12.098" endtime="20210730 13:54:12.104"/>
</kw>
<status status="PASS" starttime="20210730 13:54:12.095" endtime="20210730 13:54:12.104"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:54:12.106" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:54:12.105" endtime="20210730 13:54:12.110"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:54:13.621" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:54:12.110" endtime="20210730 13:54:13.622"/>
</kw>
<status status="PASS" starttime="20210730 13:54:12.105" endtime="20210730 13:54:13.623"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:13.628" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:13.627" endtime="20210730 13:54:13.628"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:13.629" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:13.629" endtime="20210730 13:54:13.630"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:13.631" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:13.630" endtime="20210730 13:54:13.631"/>
</kw>
<msg timestamp="20210730 13:54:13.631" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:13.626" endtime="20210730 13:54:13.631"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:54:13.632" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:54:13.631" endtime="20210730 13:54:13.633"/>
</kw>
<status status="PASS" starttime="20210730 13:54:13.624" endtime="20210730 13:54:13.633"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:54:13.634" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:54:13.634" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:54:13.634" endtime="20210730 13:54:13.635"/>
</kw>
<status status="PASS" starttime="20210730 13:54:13.634" endtime="20210730 13:54:13.635"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:54:13.637" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:54:13.637" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:54:13.636" endtime="20210730 13:54:13.637"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:54:13.638" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:54:13.637" endtime="20210730 13:54:13.638"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:13.639" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:13.638" endtime="20210730 13:54:13.639"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:13.639" endtime="20210730 13:54:13.640"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:13.640" endtime="20210730 13:54:13.641"/>
</kw>
<status status="PASS" starttime="20210730 13:54:13.638" endtime="20210730 13:54:13.641"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:13.641" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:13.641" endtime="20210730 13:54:13.641"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:13.642" endtime="20210730 13:54:13.643"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:13.643" endtime="20210730 13:54:13.643"/>
</kw>
<status status="PASS" starttime="20210730 13:54:13.641" endtime="20210730 13:54:13.643"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:13.644" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:13.643" endtime="20210730 13:54:13.644"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:13.644" endtime="20210730 13:54:13.645"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:13.645" endtime="20210730 13:54:13.645"/>
</kw>
<status status="PASS" starttime="20210730 13:54:13.643" endtime="20210730 13:54:13.645"/>
</iter>
<status status="PASS" starttime="20210730 13:54:13.638" endtime="20210730 13:54:13.645"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:54:13.646" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:54:13.646" endtime="20210730 13:54:13.646"/>
</kw>
<status status="PASS" starttime="20210730 13:54:13.635" endtime="20210730 13:54:13.646"/>
</kw>
<status status="PASS" starttime="20210730 13:54:12.072" endtime="20210730 13:54:13.646"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC456.?ABC456.?ABC456</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:13.648" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:54:13.648" endtime="20210730 13:54:13.648"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:13.648" level="INFO">${payload} = {'password': 'ABC456.?ABC456.?ABC456'}</msg>
<status status="PASS" starttime="20210730 13:54:13.648" endtime="20210730 13:54:13.649"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:13.658" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:13.659" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:13.649" endtime="20210730 13:54:13.659"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:13.659" endtime="20210730 13:54:13.659"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:13.660" endtime="20210730 13:54:13.660"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:13.649" endtime="20210730 13:54:13.660"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:13.649" endtime="20210730 13:54:13.660"/>
</for>
<status status="FAIL" starttime="20210730 13:54:13.647" endtime="20210730 13:54:13.660"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:13.647" endtime="20210730 13:54:13.660"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC456.?ABC456.?ABC456</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:13.662" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:54:13.662" endtime="20210730 13:54:13.662"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:13.663" level="INFO">${payload} = {'password': 'ABC456.?ABC456.?ABC456'}</msg>
<status status="PASS" starttime="20210730 13:54:13.662" endtime="20210730 13:54:13.663"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:13.667" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:13.667" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:13.663" endtime="20210730 13:54:13.667"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:13.667" endtime="20210730 13:54:13.667"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:13.667" endtime="20210730 13:54:13.667"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:13.663" endtime="20210730 13:54:13.667"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:13.663" endtime="20210730 13:54:13.667"/>
</for>
<status status="FAIL" starttime="20210730 13:54:13.660" endtime="20210730 13:54:13.667"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:13.660" endtime="20210730 13:54:13.667"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC456.?ABC456.?ABC456</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:13.668" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:54:13.668" endtime="20210730 13:54:13.668"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:13.669" level="INFO">${payload} = {'password': 'ABC456.?ABC456.?ABC456'}</msg>
<status status="PASS" starttime="20210730 13:54:13.668" endtime="20210730 13:54:13.669"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:13.673" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:13.673" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:13.669" endtime="20210730 13:54:13.673"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:13.674" endtime="20210730 13:54:13.674"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:13.674" endtime="20210730 13:54:13.674"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:13.669" endtime="20210730 13:54:13.674"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:13.669" endtime="20210730 13:54:13.674"/>
</for>
<status status="FAIL" starttime="20210730 13:54:13.668" endtime="20210730 13:54:13.675"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:13.667" endtime="20210730 13:54:13.675"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:13.647" endtime="20210730 13:54:13.675"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:13.681" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:13.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:13.692" level="INFO">${pids} = 17558
17565
17569</msg>
<status status="PASS" starttime="20210730 13:54:13.677" endtime="20210730 13:54:13.692"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:13.693" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:13.692" endtime="20210730 13:54:13.693"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:13.694" level="INFO">${pids} = ['17558', '17565', '17569']</msg>
<status status="PASS" starttime="20210730 13:54:13.694" endtime="20210730 13:54:13.694"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17558</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:13.698" level="INFO">Running command 'kill 17558 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:13.695" endtime="20210730 13:54:13.699"/>
</kw>
<status status="PASS" starttime="20210730 13:54:13.695" endtime="20210730 13:54:13.699"/>
</iter>
<iter>
<var name="${pid}">17565</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:13.702" level="INFO">Running command 'kill 17565 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:13.699" endtime="20210730 13:54:13.702"/>
</kw>
<status status="PASS" starttime="20210730 13:54:13.699" endtime="20210730 13:54:13.702"/>
</iter>
<iter>
<var name="${pid}">17569</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:13.707" level="INFO">Running command 'kill 17569 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:13.703" endtime="20210730 13:54:13.708"/>
</kw>
<status status="PASS" starttime="20210730 13:54:13.703" endtime="20210730 13:54:13.708"/>
</iter>
<status status="PASS" starttime="20210730 13:54:13.694" endtime="20210730 13:54:13.708"/>
</for>
<status status="PASS" starttime="20210730 13:54:13.693" endtime="20210730 13:54:13.708"/>
</branch>
<status status="PASS" starttime="20210730 13:54:13.693" endtime="20210730 13:54:13.708"/>
</if>
<status status="PASS" starttime="20210730 13:54:13.675" endtime="20210730 13:54:13.708"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABC456.?ABC456.?ABC456'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:54:12.072" endtime="20210730 13:54:13.709">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t93" name="With Each Valid Token, Updating Password Of Each System User With ABC!?.0 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:13.714" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:13.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:13.725" level="INFO">${pids} = 17598</msg>
<status status="PASS" starttime="20210730 13:54:13.711" endtime="20210730 13:54:13.725"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:13.726" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:13.726" endtime="20210730 13:54:13.726"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:13.727" level="INFO">${pids} = ['17598']</msg>
<status status="PASS" starttime="20210730 13:54:13.727" endtime="20210730 13:54:13.727"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17598</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:13.731" level="INFO">Running command 'kill 17598 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:13.728" endtime="20210730 13:54:13.731"/>
</kw>
<status status="PASS" starttime="20210730 13:54:13.727" endtime="20210730 13:54:13.731"/>
</iter>
<status status="PASS" starttime="20210730 13:54:13.727" endtime="20210730 13:54:13.731"/>
</for>
<status status="PASS" starttime="20210730 13:54:13.727" endtime="20210730 13:54:13.731"/>
</branch>
<status status="PASS" starttime="20210730 13:54:13.726" endtime="20210730 13:54:13.731"/>
</if>
<status status="PASS" starttime="20210730 13:54:13.710" endtime="20210730 13:54:13.732"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:13.733" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:13.733" endtime="20210730 13:54:13.733"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:13.734" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:13.734" endtime="20210730 13:54:13.734"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:13.734" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:13.734" endtime="20210730 13:54:13.734"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:13.735" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:13.734" endtime="20210730 13:54:13.735"/>
</kw>
<msg timestamp="20210730 13:54:13.735" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:13.733" endtime="20210730 13:54:13.735"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:13.740" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:13.735" endtime="20210730 13:54:13.743"/>
</kw>
<status status="PASS" starttime="20210730 13:54:13.732" endtime="20210730 13:54:13.743"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:54:13.745" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:54:13.744" endtime="20210730 13:54:13.749"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:54:15.255" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:54:13.749" endtime="20210730 13:54:15.255"/>
</kw>
<status status="PASS" starttime="20210730 13:54:13.744" endtime="20210730 13:54:15.255"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:15.256" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:15.256" endtime="20210730 13:54:15.256"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:15.256" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:15.256" endtime="20210730 13:54:15.256"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:15.257" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:15.257" endtime="20210730 13:54:15.257"/>
</kw>
<msg timestamp="20210730 13:54:15.257" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:15.255" endtime="20210730 13:54:15.257"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:54:15.258" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:54:15.257" endtime="20210730 13:54:15.258"/>
</kw>
<status status="PASS" starttime="20210730 13:54:15.255" endtime="20210730 13:54:15.258"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:54:15.259" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:54:15.259" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:54:15.259" endtime="20210730 13:54:15.259"/>
</kw>
<status status="PASS" starttime="20210730 13:54:15.258" endtime="20210730 13:54:15.259"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:54:15.260" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:54:15.261" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:54:15.260" endtime="20210730 13:54:15.261"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:54:15.261" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:54:15.261" endtime="20210730 13:54:15.261"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:15.262" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:15.261" endtime="20210730 13:54:15.262"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:15.262" endtime="20210730 13:54:15.263"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:15.263" endtime="20210730 13:54:15.263"/>
</kw>
<status status="PASS" starttime="20210730 13:54:15.261" endtime="20210730 13:54:15.263"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:15.263" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:15.263" endtime="20210730 13:54:15.263"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:15.263" endtime="20210730 13:54:15.264"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:15.264" endtime="20210730 13:54:15.264"/>
</kw>
<status status="PASS" starttime="20210730 13:54:15.263" endtime="20210730 13:54:15.264"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:15.265" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:15.265" endtime="20210730 13:54:15.265"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:15.265" endtime="20210730 13:54:15.266"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:15.266" endtime="20210730 13:54:15.266"/>
</kw>
<status status="PASS" starttime="20210730 13:54:15.264" endtime="20210730 13:54:15.266"/>
</iter>
<status status="PASS" starttime="20210730 13:54:15.261" endtime="20210730 13:54:15.266"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:54:15.266" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:54:15.266" endtime="20210730 13:54:15.266"/>
</kw>
<status status="PASS" starttime="20210730 13:54:15.260" endtime="20210730 13:54:15.267"/>
</kw>
<status status="PASS" starttime="20210730 13:54:13.710" endtime="20210730 13:54:15.267"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC!?.0</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:15.268" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:54:15.268" endtime="20210730 13:54:15.268"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:15.268" level="INFO">${payload} = {'password': 'ABC!?.0'}</msg>
<status status="PASS" starttime="20210730 13:54:15.268" endtime="20210730 13:54:15.268"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:15.278" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:15.278" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:15.269" endtime="20210730 13:54:15.278"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:15.278" endtime="20210730 13:54:15.278"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:15.279" endtime="20210730 13:54:15.279"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:15.268" endtime="20210730 13:54:15.279"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:15.268" endtime="20210730 13:54:15.279"/>
</for>
<status status="FAIL" starttime="20210730 13:54:15.267" endtime="20210730 13:54:15.279"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:15.267" endtime="20210730 13:54:15.279"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC!?.0</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:15.280" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:54:15.280" endtime="20210730 13:54:15.280"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:15.281" level="INFO">${payload} = {'password': 'ABC!?.0'}</msg>
<status status="PASS" starttime="20210730 13:54:15.280" endtime="20210730 13:54:15.281"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:15.285" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:15.285" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:15.281" endtime="20210730 13:54:15.285"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:15.285" endtime="20210730 13:54:15.285"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:15.285" endtime="20210730 13:54:15.285"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:15.281" endtime="20210730 13:54:15.285"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:15.281" endtime="20210730 13:54:15.285"/>
</for>
<status status="FAIL" starttime="20210730 13:54:15.279" endtime="20210730 13:54:15.286"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:15.279" endtime="20210730 13:54:15.286"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC!?.0</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:15.287" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:54:15.286" endtime="20210730 13:54:15.287"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:15.287" level="INFO">${payload} = {'password': 'ABC!?.0'}</msg>
<status status="PASS" starttime="20210730 13:54:15.287" endtime="20210730 13:54:15.287"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:15.291" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:15.292" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:15.288" endtime="20210730 13:54:15.292"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:15.292" endtime="20210730 13:54:15.292"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:15.292" endtime="20210730 13:54:15.292"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:15.287" endtime="20210730 13:54:15.292"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:15.287" endtime="20210730 13:54:15.292"/>
</for>
<status status="FAIL" starttime="20210730 13:54:15.286" endtime="20210730 13:54:15.292"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:15.286" endtime="20210730 13:54:15.293"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:15.267" endtime="20210730 13:54:15.293"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:15.299" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:15.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:15.309" level="INFO">${pids} = 17621
17628
17633</msg>
<status status="PASS" starttime="20210730 13:54:15.295" endtime="20210730 13:54:15.309"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:15.310" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:15.309" endtime="20210730 13:54:15.310"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:15.310" level="INFO">${pids} = ['17621', '17628', '17633']</msg>
<status status="PASS" starttime="20210730 13:54:15.310" endtime="20210730 13:54:15.310"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17621</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:15.315" level="INFO">Running command 'kill 17621 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:15.311" endtime="20210730 13:54:15.316"/>
</kw>
<status status="PASS" starttime="20210730 13:54:15.310" endtime="20210730 13:54:15.316"/>
</iter>
<iter>
<var name="${pid}">17628</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:15.321" level="INFO">Running command 'kill 17628 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:15.316" endtime="20210730 13:54:15.323"/>
</kw>
<status status="PASS" starttime="20210730 13:54:15.316" endtime="20210730 13:54:15.323"/>
</iter>
<iter>
<var name="${pid}">17633</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:15.329" level="INFO">Running command 'kill 17633 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:15.324" endtime="20210730 13:54:15.329"/>
</kw>
<status status="PASS" starttime="20210730 13:54:15.323" endtime="20210730 13:54:15.330"/>
</iter>
<status status="PASS" starttime="20210730 13:54:15.310" endtime="20210730 13:54:15.330"/>
</for>
<status status="PASS" starttime="20210730 13:54:15.310" endtime="20210730 13:54:15.330"/>
</branch>
<status status="PASS" starttime="20210730 13:54:15.310" endtime="20210730 13:54:15.330"/>
</if>
<status status="PASS" starttime="20210730 13:54:15.294" endtime="20210730 13:54:15.330"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABC!?.0'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:54:13.709" endtime="20210730 13:54:15.330">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t94" name="With Each Valid Token, Updating Password Of Each System User With ABC!?.01 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:15.335" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:15.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:15.346" level="INFO">${pids} = 17662</msg>
<status status="PASS" starttime="20210730 13:54:15.332" endtime="20210730 13:54:15.346"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:15.347" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:15.347" endtime="20210730 13:54:15.347"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:15.348" level="INFO">${pids} = ['17662']</msg>
<status status="PASS" starttime="20210730 13:54:15.347" endtime="20210730 13:54:15.348"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17662</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:15.352" level="INFO">Running command 'kill 17662 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:15.348" endtime="20210730 13:54:15.353"/>
</kw>
<status status="PASS" starttime="20210730 13:54:15.348" endtime="20210730 13:54:15.353"/>
</iter>
<status status="PASS" starttime="20210730 13:54:15.348" endtime="20210730 13:54:15.353"/>
</for>
<status status="PASS" starttime="20210730 13:54:15.347" endtime="20210730 13:54:15.353"/>
</branch>
<status status="PASS" starttime="20210730 13:54:15.347" endtime="20210730 13:54:15.353"/>
</if>
<status status="PASS" starttime="20210730 13:54:15.332" endtime="20210730 13:54:15.353"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:15.355" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:15.354" endtime="20210730 13:54:15.355"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:15.355" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:15.355" endtime="20210730 13:54:15.355"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:15.356" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:15.355" endtime="20210730 13:54:15.356"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:15.356" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:15.356" endtime="20210730 13:54:15.356"/>
</kw>
<msg timestamp="20210730 13:54:15.356" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:15.355" endtime="20210730 13:54:15.356"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:15.364" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:15.356" endtime="20210730 13:54:15.366"/>
</kw>
<status status="PASS" starttime="20210730 13:54:15.354" endtime="20210730 13:54:15.366"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:54:15.367" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:54:15.367" endtime="20210730 13:54:15.371"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:54:16.874" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:54:15.371" endtime="20210730 13:54:16.874"/>
</kw>
<status status="PASS" starttime="20210730 13:54:15.366" endtime="20210730 13:54:16.874"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:16.876" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:16.875" endtime="20210730 13:54:16.876"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:16.876" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:16.876" endtime="20210730 13:54:16.876"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:16.876" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:16.876" endtime="20210730 13:54:16.876"/>
</kw>
<msg timestamp="20210730 13:54:16.877" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:16.875" endtime="20210730 13:54:16.877"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:54:16.877" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:54:16.877" endtime="20210730 13:54:16.878"/>
</kw>
<status status="PASS" starttime="20210730 13:54:16.874" endtime="20210730 13:54:16.878"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:54:16.878" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:54:16.878" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:54:16.878" endtime="20210730 13:54:16.878"/>
</kw>
<status status="PASS" starttime="20210730 13:54:16.878" endtime="20210730 13:54:16.878"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:54:16.879" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:54:16.879" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:54:16.879" endtime="20210730 13:54:16.879"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:54:16.880" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:54:16.880" endtime="20210730 13:54:16.880"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:16.880" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:16.880" endtime="20210730 13:54:16.880"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:16.880" endtime="20210730 13:54:16.881"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:16.881" endtime="20210730 13:54:16.881"/>
</kw>
<status status="PASS" starttime="20210730 13:54:16.880" endtime="20210730 13:54:16.881"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:16.882" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:16.882" endtime="20210730 13:54:16.882"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:16.882" endtime="20210730 13:54:16.883"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:16.883" endtime="20210730 13:54:16.883"/>
</kw>
<status status="PASS" starttime="20210730 13:54:16.882" endtime="20210730 13:54:16.883"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:16.884" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:16.883" endtime="20210730 13:54:16.884"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:16.884" endtime="20210730 13:54:16.885"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:16.885" endtime="20210730 13:54:16.885"/>
</kw>
<status status="PASS" starttime="20210730 13:54:16.883" endtime="20210730 13:54:16.885"/>
</iter>
<status status="PASS" starttime="20210730 13:54:16.880" endtime="20210730 13:54:16.885"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:54:16.886" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:54:16.885" endtime="20210730 13:54:16.886"/>
</kw>
<status status="PASS" starttime="20210730 13:54:16.878" endtime="20210730 13:54:16.886"/>
</kw>
<status status="PASS" starttime="20210730 13:54:15.332" endtime="20210730 13:54:16.886"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC!?.01</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:16.887" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:54:16.887" endtime="20210730 13:54:16.887"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:16.888" level="INFO">${payload} = {'password': 'ABC!?.01'}</msg>
<status status="PASS" starttime="20210730 13:54:16.887" endtime="20210730 13:54:16.888"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:16.897" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:16.897" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:16.888" endtime="20210730 13:54:16.897"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:16.898" endtime="20210730 13:54:16.898"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:16.898" endtime="20210730 13:54:16.898"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:16.888" endtime="20210730 13:54:16.898"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:16.888" endtime="20210730 13:54:16.898"/>
</for>
<status status="FAIL" starttime="20210730 13:54:16.887" endtime="20210730 13:54:16.898"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:16.886" endtime="20210730 13:54:16.898"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC!?.01</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:16.899" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:54:16.899" endtime="20210730 13:54:16.899"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:16.899" level="INFO">${payload} = {'password': 'ABC!?.01'}</msg>
<status status="PASS" starttime="20210730 13:54:16.899" endtime="20210730 13:54:16.900"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:16.904" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:16.904" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:16.900" endtime="20210730 13:54:16.904"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:16.904" endtime="20210730 13:54:16.904"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:16.904" endtime="20210730 13:54:16.904"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:16.900" endtime="20210730 13:54:16.904"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:16.900" endtime="20210730 13:54:16.904"/>
</for>
<status status="FAIL" starttime="20210730 13:54:16.898" endtime="20210730 13:54:16.904"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:16.898" endtime="20210730 13:54:16.904"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC!?.01</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:16.905" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:54:16.905" endtime="20210730 13:54:16.906"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:16.906" level="INFO">${payload} = {'password': 'ABC!?.01'}</msg>
<status status="PASS" starttime="20210730 13:54:16.906" endtime="20210730 13:54:16.906"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:16.910" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:16.910" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:16.906" endtime="20210730 13:54:16.910"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:16.910" endtime="20210730 13:54:16.910"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:16.910" endtime="20210730 13:54:16.910"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:16.906" endtime="20210730 13:54:16.910"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:16.906" endtime="20210730 13:54:16.910"/>
</for>
<status status="FAIL" starttime="20210730 13:54:16.905" endtime="20210730 13:54:16.911"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:16.905" endtime="20210730 13:54:16.911"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:16.886" endtime="20210730 13:54:16.911"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:16.915" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:16.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:16.929" level="INFO">${pids} = 17685
17692
17696</msg>
<status status="PASS" starttime="20210730 13:54:16.911" endtime="20210730 13:54:16.929"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:16.930" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:16.929" endtime="20210730 13:54:16.930"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:16.930" level="INFO">${pids} = ['17685', '17692', '17696']</msg>
<status status="PASS" starttime="20210730 13:54:16.930" endtime="20210730 13:54:16.930"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17685</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:16.934" level="INFO">Running command 'kill 17685 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:16.931" endtime="20210730 13:54:16.934"/>
</kw>
<status status="PASS" starttime="20210730 13:54:16.931" endtime="20210730 13:54:16.935"/>
</iter>
<iter>
<var name="${pid}">17692</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:16.938" level="INFO">Running command 'kill 17692 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:16.935" endtime="20210730 13:54:16.938"/>
</kw>
<status status="PASS" starttime="20210730 13:54:16.935" endtime="20210730 13:54:16.938"/>
</iter>
<iter>
<var name="${pid}">17696</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:16.941" level="INFO">Running command 'kill 17696 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:16.939" endtime="20210730 13:54:16.942"/>
</kw>
<status status="PASS" starttime="20210730 13:54:16.938" endtime="20210730 13:54:16.942"/>
</iter>
<status status="PASS" starttime="20210730 13:54:16.930" endtime="20210730 13:54:16.942"/>
</for>
<status status="PASS" starttime="20210730 13:54:16.930" endtime="20210730 13:54:16.942"/>
</branch>
<status status="PASS" starttime="20210730 13:54:16.930" endtime="20210730 13:54:16.942"/>
</if>
<status status="PASS" starttime="20210730 13:54:16.911" endtime="20210730 13:54:16.943"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABC!?.01'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:54:15.331" endtime="20210730 13:54:16.943">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t95" name="With Each Valid Token, Updating Password Of Each System User With ABC!?.01ABC!?.01ABC!?. Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:16.951" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:16.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:16.962" level="INFO">${pids} = 17725</msg>
<status status="PASS" starttime="20210730 13:54:16.948" endtime="20210730 13:54:16.962"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:16.963" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:16.963" endtime="20210730 13:54:16.963"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:16.964" level="INFO">${pids} = ['17725']</msg>
<status status="PASS" starttime="20210730 13:54:16.964" endtime="20210730 13:54:16.964"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17725</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:16.968" level="INFO">Running command 'kill 17725 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:16.964" endtime="20210730 13:54:16.968"/>
</kw>
<status status="PASS" starttime="20210730 13:54:16.964" endtime="20210730 13:54:16.968"/>
</iter>
<status status="PASS" starttime="20210730 13:54:16.964" endtime="20210730 13:54:16.968"/>
</for>
<status status="PASS" starttime="20210730 13:54:16.963" endtime="20210730 13:54:16.968"/>
</branch>
<status status="PASS" starttime="20210730 13:54:16.963" endtime="20210730 13:54:16.968"/>
</if>
<status status="PASS" starttime="20210730 13:54:16.947" endtime="20210730 13:54:16.968"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:16.969" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:16.969" endtime="20210730 13:54:16.969"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:16.970" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:16.970" endtime="20210730 13:54:16.970"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:16.970" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:16.970" endtime="20210730 13:54:16.970"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:16.971" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:16.971" endtime="20210730 13:54:16.971"/>
</kw>
<msg timestamp="20210730 13:54:16.971" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:16.970" endtime="20210730 13:54:16.971"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:16.974" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:16.971" endtime="20210730 13:54:16.977"/>
</kw>
<status status="PASS" starttime="20210730 13:54:16.969" endtime="20210730 13:54:16.977"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:54:16.979" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:54:16.978" endtime="20210730 13:54:16.985"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:54:18.490" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:54:16.985" endtime="20210730 13:54:18.490"/>
</kw>
<status status="PASS" starttime="20210730 13:54:16.978" endtime="20210730 13:54:18.491"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:18.492" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:18.491" endtime="20210730 13:54:18.492"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:18.493" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:18.492" endtime="20210730 13:54:18.493"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:18.493" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:18.493" endtime="20210730 13:54:18.493"/>
</kw>
<msg timestamp="20210730 13:54:18.494" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:18.491" endtime="20210730 13:54:18.494"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:54:18.494" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:54:18.494" endtime="20210730 13:54:18.495"/>
</kw>
<status status="PASS" starttime="20210730 13:54:18.491" endtime="20210730 13:54:18.495"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:54:18.495" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:54:18.495" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:54:18.495" endtime="20210730 13:54:18.496"/>
</kw>
<status status="PASS" starttime="20210730 13:54:18.495" endtime="20210730 13:54:18.496"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:54:18.497" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:54:18.497" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:54:18.496" endtime="20210730 13:54:18.497"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:54:18.497" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:54:18.497" endtime="20210730 13:54:18.497"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:18.498" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:18.497" endtime="20210730 13:54:18.498"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:18.498" endtime="20210730 13:54:18.499"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:18.499" endtime="20210730 13:54:18.499"/>
</kw>
<status status="PASS" starttime="20210730 13:54:18.497" endtime="20210730 13:54:18.499"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:18.499" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:18.499" endtime="20210730 13:54:18.500"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:18.500" endtime="20210730 13:54:18.500"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:18.500" endtime="20210730 13:54:18.501"/>
</kw>
<status status="PASS" starttime="20210730 13:54:18.499" endtime="20210730 13:54:18.501"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:18.501" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:18.501" endtime="20210730 13:54:18.501"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:18.501" endtime="20210730 13:54:18.502"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:18.502" endtime="20210730 13:54:18.502"/>
</kw>
<status status="PASS" starttime="20210730 13:54:18.501" endtime="20210730 13:54:18.502"/>
</iter>
<status status="PASS" starttime="20210730 13:54:18.497" endtime="20210730 13:54:18.502"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:54:18.503" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:54:18.502" endtime="20210730 13:54:18.503"/>
</kw>
<status status="PASS" starttime="20210730 13:54:18.496" endtime="20210730 13:54:18.503"/>
</kw>
<status status="PASS" starttime="20210730 13:54:16.947" endtime="20210730 13:54:18.503"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC!?.01ABC!?.01ABC!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:18.504" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:54:18.504" endtime="20210730 13:54:18.504"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:18.505" level="INFO">${payload} = {'password': 'ABC!?.01ABC!?.01ABC!?.'}</msg>
<status status="PASS" starttime="20210730 13:54:18.504" endtime="20210730 13:54:18.505"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:18.514" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:18.514" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:18.505" endtime="20210730 13:54:18.514"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:18.514" endtime="20210730 13:54:18.514"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:18.514" endtime="20210730 13:54:18.514"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:18.505" endtime="20210730 13:54:18.514"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:18.505" endtime="20210730 13:54:18.514"/>
</for>
<status status="FAIL" starttime="20210730 13:54:18.504" endtime="20210730 13:54:18.514"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:18.503" endtime="20210730 13:54:18.515"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC!?.01ABC!?.01ABC!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:18.516" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:54:18.515" endtime="20210730 13:54:18.516"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:18.516" level="INFO">${payload} = {'password': 'ABC!?.01ABC!?.01ABC!?.'}</msg>
<status status="PASS" starttime="20210730 13:54:18.516" endtime="20210730 13:54:18.516"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:18.520" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:18.521" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:18.516" endtime="20210730 13:54:18.521"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:18.521" endtime="20210730 13:54:18.521"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:18.521" endtime="20210730 13:54:18.521"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:18.516" endtime="20210730 13:54:18.521"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:18.516" endtime="20210730 13:54:18.521"/>
</for>
<status status="FAIL" starttime="20210730 13:54:18.515" endtime="20210730 13:54:18.521"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:18.515" endtime="20210730 13:54:18.521"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC!?.01ABC!?.01ABC!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:18.523" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:54:18.522" endtime="20210730 13:54:18.523"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:18.523" level="INFO">${payload} = {'password': 'ABC!?.01ABC!?.01ABC!?.'}</msg>
<status status="PASS" starttime="20210730 13:54:18.523" endtime="20210730 13:54:18.523"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:18.528" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:18.528" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:18.524" endtime="20210730 13:54:18.528"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:18.528" endtime="20210730 13:54:18.528"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:18.528" endtime="20210730 13:54:18.528"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:18.523" endtime="20210730 13:54:18.528"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:18.523" endtime="20210730 13:54:18.529"/>
</for>
<status status="FAIL" starttime="20210730 13:54:18.522" endtime="20210730 13:54:18.529"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:18.522" endtime="20210730 13:54:18.529"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:18.503" endtime="20210730 13:54:18.529"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:18.535" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:18.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:18.545" level="INFO">${pids} = 17748
17755
17759</msg>
<status status="PASS" starttime="20210730 13:54:18.530" endtime="20210730 13:54:18.545"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:18.546" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:18.546" endtime="20210730 13:54:18.546"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:18.547" level="INFO">${pids} = ['17748', '17755', '17759']</msg>
<status status="PASS" starttime="20210730 13:54:18.546" endtime="20210730 13:54:18.547"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17748</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:18.550" level="INFO">Running command 'kill 17748 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:18.547" endtime="20210730 13:54:18.551"/>
</kw>
<status status="PASS" starttime="20210730 13:54:18.547" endtime="20210730 13:54:18.551"/>
</iter>
<iter>
<var name="${pid}">17755</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:18.556" level="INFO">Running command 'kill 17755 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:18.552" endtime="20210730 13:54:18.556"/>
</kw>
<status status="PASS" starttime="20210730 13:54:18.551" endtime="20210730 13:54:18.557"/>
</iter>
<iter>
<var name="${pid}">17759</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:18.561" level="INFO">Running command 'kill 17759 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:18.557" endtime="20210730 13:54:18.562"/>
</kw>
<status status="PASS" starttime="20210730 13:54:18.557" endtime="20210730 13:54:18.562"/>
</iter>
<status status="PASS" starttime="20210730 13:54:18.547" endtime="20210730 13:54:18.562"/>
</for>
<status status="PASS" starttime="20210730 13:54:18.546" endtime="20210730 13:54:18.562"/>
</branch>
<status status="PASS" starttime="20210730 13:54:18.546" endtime="20210730 13:54:18.562"/>
</if>
<status status="PASS" starttime="20210730 13:54:18.529" endtime="20210730 13:54:18.562"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABC!?.01ABC!?.01ABC!?.'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:54:16.946" endtime="20210730 13:54:18.562">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t96" name="With Each Valid Token, Updating Password Of Each System User With 012!.Aa Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:18.568" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:18.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:18.579" level="INFO">${pids} = 17788</msg>
<status status="PASS" starttime="20210730 13:54:18.565" endtime="20210730 13:54:18.579"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:18.580" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:18.579" endtime="20210730 13:54:18.580"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:18.581" level="INFO">${pids} = ['17788']</msg>
<status status="PASS" starttime="20210730 13:54:18.580" endtime="20210730 13:54:18.581"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17788</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:18.585" level="INFO">Running command 'kill 17788 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:18.581" endtime="20210730 13:54:18.586"/>
</kw>
<status status="PASS" starttime="20210730 13:54:18.581" endtime="20210730 13:54:18.586"/>
</iter>
<status status="PASS" starttime="20210730 13:54:18.581" endtime="20210730 13:54:18.586"/>
</for>
<status status="PASS" starttime="20210730 13:54:18.580" endtime="20210730 13:54:18.586"/>
</branch>
<status status="PASS" starttime="20210730 13:54:18.580" endtime="20210730 13:54:18.586"/>
</if>
<status status="PASS" starttime="20210730 13:54:18.564" endtime="20210730 13:54:18.586"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:18.587" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:18.587" endtime="20210730 13:54:18.587"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:18.588" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:18.588" endtime="20210730 13:54:18.588"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:18.588" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:18.588" endtime="20210730 13:54:18.588"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:18.589" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:18.588" endtime="20210730 13:54:18.589"/>
</kw>
<msg timestamp="20210730 13:54:18.589" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:18.587" endtime="20210730 13:54:18.589"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:18.596" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:18.589" endtime="20210730 13:54:18.598"/>
</kw>
<status status="PASS" starttime="20210730 13:54:18.586" endtime="20210730 13:54:18.598"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:54:18.600" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:54:18.599" endtime="20210730 13:54:18.604"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:54:20.106" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:54:18.605" endtime="20210730 13:54:20.106"/>
</kw>
<status status="PASS" starttime="20210730 13:54:18.599" endtime="20210730 13:54:20.106"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:20.107" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:20.107" endtime="20210730 13:54:20.107"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:20.108" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:20.108" endtime="20210730 13:54:20.108"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:20.108" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:20.108" endtime="20210730 13:54:20.108"/>
</kw>
<msg timestamp="20210730 13:54:20.108" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:20.107" endtime="20210730 13:54:20.109"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:54:20.109" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:54:20.109" endtime="20210730 13:54:20.109"/>
</kw>
<status status="PASS" starttime="20210730 13:54:20.107" endtime="20210730 13:54:20.109"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:54:20.110" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:54:20.110" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:54:20.110" endtime="20210730 13:54:20.110"/>
</kw>
<status status="PASS" starttime="20210730 13:54:20.110" endtime="20210730 13:54:20.110"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:54:20.111" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:54:20.111" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:54:20.111" endtime="20210730 13:54:20.111"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:54:20.111" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:54:20.111" endtime="20210730 13:54:20.111"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:20.112" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:20.112" endtime="20210730 13:54:20.112"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:20.112" endtime="20210730 13:54:20.113"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:20.113" endtime="20210730 13:54:20.114"/>
</kw>
<status status="PASS" starttime="20210730 13:54:20.112" endtime="20210730 13:54:20.114"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:20.114" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:20.114" endtime="20210730 13:54:20.114"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:20.114" endtime="20210730 13:54:20.115"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:20.115" endtime="20210730 13:54:20.115"/>
</kw>
<status status="PASS" starttime="20210730 13:54:20.114" endtime="20210730 13:54:20.115"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:20.115" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:20.115" endtime="20210730 13:54:20.115"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:20.116" endtime="20210730 13:54:20.116"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:20.116" endtime="20210730 13:54:20.116"/>
</kw>
<status status="PASS" starttime="20210730 13:54:20.115" endtime="20210730 13:54:20.117"/>
</iter>
<status status="PASS" starttime="20210730 13:54:20.111" endtime="20210730 13:54:20.117"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:54:20.117" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:54:20.117" endtime="20210730 13:54:20.117"/>
</kw>
<status status="PASS" starttime="20210730 13:54:20.110" endtime="20210730 13:54:20.117"/>
</kw>
<status status="PASS" starttime="20210730 13:54:18.564" endtime="20210730 13:54:20.117"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=012!.Aa</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:20.119" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:54:20.118" endtime="20210730 13:54:20.119"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:20.119" level="INFO">${payload} = {'password': '012!.Aa'}</msg>
<status status="PASS" starttime="20210730 13:54:20.119" endtime="20210730 13:54:20.119"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:20.128" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:20.128" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:20.119" endtime="20210730 13:54:20.128"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:20.129" endtime="20210730 13:54:20.129"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:20.129" endtime="20210730 13:54:20.129"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:20.119" endtime="20210730 13:54:20.129"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:20.119" endtime="20210730 13:54:20.129"/>
</for>
<status status="FAIL" starttime="20210730 13:54:20.118" endtime="20210730 13:54:20.129"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:20.118" endtime="20210730 13:54:20.129"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=012!.Aa</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:20.131" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:54:20.130" endtime="20210730 13:54:20.131"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:20.131" level="INFO">${payload} = {'password': '012!.Aa'}</msg>
<status status="PASS" starttime="20210730 13:54:20.131" endtime="20210730 13:54:20.131"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:20.135" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:20.135" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:20.131" endtime="20210730 13:54:20.135"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:20.135" endtime="20210730 13:54:20.135"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:20.135" endtime="20210730 13:54:20.136"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:20.131" endtime="20210730 13:54:20.136"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:20.131" endtime="20210730 13:54:20.136"/>
</for>
<status status="FAIL" starttime="20210730 13:54:20.130" endtime="20210730 13:54:20.136"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:20.130" endtime="20210730 13:54:20.136"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=012!.Aa</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:20.137" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:54:20.136" endtime="20210730 13:54:20.137"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:20.137" level="INFO">${payload} = {'password': '012!.Aa'}</msg>
<status status="PASS" starttime="20210730 13:54:20.137" endtime="20210730 13:54:20.137"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:20.141" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:20.141" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:20.137" endtime="20210730 13:54:20.141"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:20.141" endtime="20210730 13:54:20.141"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:20.141" endtime="20210730 13:54:20.141"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:20.137" endtime="20210730 13:54:20.141"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:20.137" endtime="20210730 13:54:20.141"/>
</for>
<status status="FAIL" starttime="20210730 13:54:20.136" endtime="20210730 13:54:20.142"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:20.136" endtime="20210730 13:54:20.142"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:20.117" endtime="20210730 13:54:20.142"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:20.148" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:20.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:20.160" level="INFO">${pids} = 17811
17818
17823</msg>
<status status="PASS" starttime="20210730 13:54:20.143" endtime="20210730 13:54:20.160"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:20.161" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:20.161" endtime="20210730 13:54:20.161"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:20.162" level="INFO">${pids} = ['17811', '17818', '17823']</msg>
<status status="PASS" starttime="20210730 13:54:20.162" endtime="20210730 13:54:20.162"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17811</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:20.166" level="INFO">Running command 'kill 17811 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:20.162" endtime="20210730 13:54:20.166"/>
</kw>
<status status="PASS" starttime="20210730 13:54:20.162" endtime="20210730 13:54:20.166"/>
</iter>
<iter>
<var name="${pid}">17818</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:20.170" level="INFO">Running command 'kill 17818 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:20.167" endtime="20210730 13:54:20.172"/>
</kw>
<status status="PASS" starttime="20210730 13:54:20.167" endtime="20210730 13:54:20.172"/>
</iter>
<iter>
<var name="${pid}">17823</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:20.177" level="INFO">Running command 'kill 17823 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:20.173" endtime="20210730 13:54:20.178"/>
</kw>
<status status="PASS" starttime="20210730 13:54:20.173" endtime="20210730 13:54:20.178"/>
</iter>
<status status="PASS" starttime="20210730 13:54:20.162" endtime="20210730 13:54:20.178"/>
</for>
<status status="PASS" starttime="20210730 13:54:20.162" endtime="20210730 13:54:20.178"/>
</branch>
<status status="PASS" starttime="20210730 13:54:20.161" endtime="20210730 13:54:20.178"/>
</if>
<status status="PASS" starttime="20210730 13:54:20.142" endtime="20210730 13:54:20.178"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": '012!.Aa'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:54:18.563" endtime="20210730 13:54:20.178">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t97" name="With Each Valid Token, Updating Password Of Each System User With 012!.Aab Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:20.183" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:20.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:20.196" level="INFO">${pids} = 17852</msg>
<status status="PASS" starttime="20210730 13:54:20.180" endtime="20210730 13:54:20.196"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:20.197" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:20.196" endtime="20210730 13:54:20.197"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:20.198" level="INFO">${pids} = ['17852']</msg>
<status status="PASS" starttime="20210730 13:54:20.197" endtime="20210730 13:54:20.198"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17852</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:20.201" level="INFO">Running command 'kill 17852 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:20.198" endtime="20210730 13:54:20.202"/>
</kw>
<status status="PASS" starttime="20210730 13:54:20.198" endtime="20210730 13:54:20.202"/>
</iter>
<status status="PASS" starttime="20210730 13:54:20.198" endtime="20210730 13:54:20.202"/>
</for>
<status status="PASS" starttime="20210730 13:54:20.197" endtime="20210730 13:54:20.202"/>
</branch>
<status status="PASS" starttime="20210730 13:54:20.197" endtime="20210730 13:54:20.202"/>
</if>
<status status="PASS" starttime="20210730 13:54:20.180" endtime="20210730 13:54:20.202"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:20.203" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:20.203" endtime="20210730 13:54:20.203"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:20.204" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:20.203" endtime="20210730 13:54:20.204"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:20.204" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:20.204" endtime="20210730 13:54:20.204"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:20.204" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:20.204" endtime="20210730 13:54:20.204"/>
</kw>
<msg timestamp="20210730 13:54:20.205" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:20.203" endtime="20210730 13:54:20.205"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:20.209" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:20.205" endtime="20210730 13:54:20.212"/>
</kw>
<status status="PASS" starttime="20210730 13:54:20.202" endtime="20210730 13:54:20.222"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:54:20.224" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:54:20.223" endtime="20210730 13:54:20.231"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:54:21.733" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:54:20.232" endtime="20210730 13:54:21.733"/>
</kw>
<status status="PASS" starttime="20210730 13:54:20.222" endtime="20210730 13:54:21.733"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:21.735" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:21.734" endtime="20210730 13:54:21.735"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:21.735" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:21.735" endtime="20210730 13:54:21.735"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:21.735" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:21.735" endtime="20210730 13:54:21.735"/>
</kw>
<msg timestamp="20210730 13:54:21.736" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:21.734" endtime="20210730 13:54:21.736"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:54:21.736" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:54:21.736" endtime="20210730 13:54:21.736"/>
</kw>
<status status="PASS" starttime="20210730 13:54:21.734" endtime="20210730 13:54:21.736"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:54:21.737" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:54:21.737" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:54:21.737" endtime="20210730 13:54:21.737"/>
</kw>
<status status="PASS" starttime="20210730 13:54:21.737" endtime="20210730 13:54:21.737"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:54:21.738" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:54:21.738" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:54:21.738" endtime="20210730 13:54:21.738"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:54:21.739" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:54:21.738" endtime="20210730 13:54:21.739"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:21.739" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:21.739" endtime="20210730 13:54:21.739"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:21.739" endtime="20210730 13:54:21.740"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:21.740" endtime="20210730 13:54:21.740"/>
</kw>
<status status="PASS" starttime="20210730 13:54:21.739" endtime="20210730 13:54:21.740"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:21.741" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:21.740" endtime="20210730 13:54:21.741"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:21.741" endtime="20210730 13:54:21.741"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:21.741" endtime="20210730 13:54:21.742"/>
</kw>
<status status="PASS" starttime="20210730 13:54:21.740" endtime="20210730 13:54:21.742"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:21.742" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:21.742" endtime="20210730 13:54:21.742"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:21.742" endtime="20210730 13:54:21.743"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:21.743" endtime="20210730 13:54:21.743"/>
</kw>
<status status="PASS" starttime="20210730 13:54:21.742" endtime="20210730 13:54:21.743"/>
</iter>
<status status="PASS" starttime="20210730 13:54:21.739" endtime="20210730 13:54:21.743"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:54:21.744" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:54:21.744" endtime="20210730 13:54:21.744"/>
</kw>
<status status="PASS" starttime="20210730 13:54:21.737" endtime="20210730 13:54:21.744"/>
</kw>
<status status="PASS" starttime="20210730 13:54:20.180" endtime="20210730 13:54:21.744"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=012!.Aab</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:21.745" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:54:21.745" endtime="20210730 13:54:21.745"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:21.746" level="INFO">${payload} = {'password': '012!.Aab'}</msg>
<status status="PASS" starttime="20210730 13:54:21.745" endtime="20210730 13:54:21.746"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:21.756" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:21.756" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:21.746" endtime="20210730 13:54:21.756"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:21.756" endtime="20210730 13:54:21.757"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:21.757" endtime="20210730 13:54:21.757"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:21.746" endtime="20210730 13:54:21.757"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:21.746" endtime="20210730 13:54:21.757"/>
</for>
<status status="FAIL" starttime="20210730 13:54:21.744" endtime="20210730 13:54:21.757"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:21.744" endtime="20210730 13:54:21.757"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=012!.Aab</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:21.758" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:54:21.758" endtime="20210730 13:54:21.758"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:21.759" level="INFO">${payload} = {'password': '012!.Aab'}</msg>
<status status="PASS" starttime="20210730 13:54:21.758" endtime="20210730 13:54:21.759"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:21.763" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:21.763" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:21.759" endtime="20210730 13:54:21.763"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:21.764" endtime="20210730 13:54:21.764"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:21.764" endtime="20210730 13:54:21.764"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:21.759" endtime="20210730 13:54:21.764"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:21.759" endtime="20210730 13:54:21.764"/>
</for>
<status status="FAIL" starttime="20210730 13:54:21.757" endtime="20210730 13:54:21.764"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:21.757" endtime="20210730 13:54:21.764"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=012!.Aab</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:21.765" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:54:21.765" endtime="20210730 13:54:21.765"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:21.766" level="INFO">${payload} = {'password': '012!.Aab'}</msg>
<status status="PASS" starttime="20210730 13:54:21.765" endtime="20210730 13:54:21.766"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:21.770" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:21.770" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:21.766" endtime="20210730 13:54:21.770"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:21.771" endtime="20210730 13:54:21.771"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:21.771" endtime="20210730 13:54:21.771"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:21.766" endtime="20210730 13:54:21.771"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:21.766" endtime="20210730 13:54:21.771"/>
</for>
<status status="FAIL" starttime="20210730 13:54:21.764" endtime="20210730 13:54:21.771"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:21.764" endtime="20210730 13:54:21.771"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:21.744" endtime="20210730 13:54:21.772"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:21.779" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:21.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:21.789" level="INFO">${pids} = 17875
17882
17886</msg>
<status status="PASS" starttime="20210730 13:54:21.773" endtime="20210730 13:54:21.789"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:21.790" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:21.789" endtime="20210730 13:54:21.790"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:21.791" level="INFO">${pids} = ['17875', '17882', '17886']</msg>
<status status="PASS" starttime="20210730 13:54:21.790" endtime="20210730 13:54:21.791"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17875</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:21.795" level="INFO">Running command 'kill 17875 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:21.791" endtime="20210730 13:54:21.796"/>
</kw>
<status status="PASS" starttime="20210730 13:54:21.791" endtime="20210730 13:54:21.796"/>
</iter>
<iter>
<var name="${pid}">17882</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:21.799" level="INFO">Running command 'kill 17882 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:21.796" endtime="20210730 13:54:21.800"/>
</kw>
<status status="PASS" starttime="20210730 13:54:21.796" endtime="20210730 13:54:21.800"/>
</iter>
<iter>
<var name="${pid}">17886</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:21.804" level="INFO">Running command 'kill 17886 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:21.800" endtime="20210730 13:54:21.805"/>
</kw>
<status status="PASS" starttime="20210730 13:54:21.800" endtime="20210730 13:54:21.805"/>
</iter>
<status status="PASS" starttime="20210730 13:54:21.791" endtime="20210730 13:54:21.805"/>
</for>
<status status="PASS" starttime="20210730 13:54:21.790" endtime="20210730 13:54:21.805"/>
</branch>
<status status="PASS" starttime="20210730 13:54:21.790" endtime="20210730 13:54:21.805"/>
</if>
<status status="PASS" starttime="20210730 13:54:21.772" endtime="20210730 13:54:21.806"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": '012!.Aab'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:54:20.179" endtime="20210730 13:54:21.806">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t98" name="With Each Valid Token, Updating Password Of Each System User With 012!.Aab012!.Aab012!.A Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:21.812" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:21.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:21.823" level="INFO">${pids} = 17915</msg>
<status status="PASS" starttime="20210730 13:54:21.809" endtime="20210730 13:54:21.823"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:21.824" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:21.823" endtime="20210730 13:54:21.824"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:21.824" level="INFO">${pids} = ['17915']</msg>
<status status="PASS" starttime="20210730 13:54:21.824" endtime="20210730 13:54:21.824"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17915</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:21.829" level="INFO">Running command 'kill 17915 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:21.825" endtime="20210730 13:54:21.829"/>
</kw>
<status status="PASS" starttime="20210730 13:54:21.825" endtime="20210730 13:54:21.829"/>
</iter>
<status status="PASS" starttime="20210730 13:54:21.825" endtime="20210730 13:54:21.829"/>
</for>
<status status="PASS" starttime="20210730 13:54:21.824" endtime="20210730 13:54:21.829"/>
</branch>
<status status="PASS" starttime="20210730 13:54:21.824" endtime="20210730 13:54:21.829"/>
</if>
<status status="PASS" starttime="20210730 13:54:21.808" endtime="20210730 13:54:21.830"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:21.831" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:21.830" endtime="20210730 13:54:21.831"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:21.831" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:21.831" endtime="20210730 13:54:21.832"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:21.832" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:21.832" endtime="20210730 13:54:21.832"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:21.832" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:21.832" endtime="20210730 13:54:21.832"/>
</kw>
<msg timestamp="20210730 13:54:21.833" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:21.831" endtime="20210730 13:54:21.833"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:21.840" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:21.833" endtime="20210730 13:54:21.841"/>
</kw>
<status status="PASS" starttime="20210730 13:54:21.830" endtime="20210730 13:54:21.842"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:54:21.844" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:54:21.843" endtime="20210730 13:54:21.848"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:54:23.356" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:54:21.848" endtime="20210730 13:54:23.356"/>
</kw>
<status status="PASS" starttime="20210730 13:54:21.842" endtime="20210730 13:54:23.357"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:23.358" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:23.358" endtime="20210730 13:54:23.358"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:23.358" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:23.358" endtime="20210730 13:54:23.358"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:23.359" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:23.358" endtime="20210730 13:54:23.359"/>
</kw>
<msg timestamp="20210730 13:54:23.359" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:23.357" endtime="20210730 13:54:23.359"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:54:23.360" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:54:23.359" endtime="20210730 13:54:23.360"/>
</kw>
<status status="PASS" starttime="20210730 13:54:23.357" endtime="20210730 13:54:23.360"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:54:23.361" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:54:23.361" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:54:23.361" endtime="20210730 13:54:23.361"/>
</kw>
<status status="PASS" starttime="20210730 13:54:23.360" endtime="20210730 13:54:23.361"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:54:23.363" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:54:23.363" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:54:23.362" endtime="20210730 13:54:23.363"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:54:23.363" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:54:23.363" endtime="20210730 13:54:23.363"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:23.364" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:23.364" endtime="20210730 13:54:23.364"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:23.364" endtime="20210730 13:54:23.365"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:23.365" endtime="20210730 13:54:23.365"/>
</kw>
<status status="PASS" starttime="20210730 13:54:23.364" endtime="20210730 13:54:23.365"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:23.366" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:23.365" endtime="20210730 13:54:23.366"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:23.366" endtime="20210730 13:54:23.366"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:23.367" endtime="20210730 13:54:23.367"/>
</kw>
<status status="PASS" starttime="20210730 13:54:23.365" endtime="20210730 13:54:23.367"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:23.367" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:23.367" endtime="20210730 13:54:23.367"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:23.367" endtime="20210730 13:54:23.368"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:23.368" endtime="20210730 13:54:23.368"/>
</kw>
<status status="PASS" starttime="20210730 13:54:23.367" endtime="20210730 13:54:23.368"/>
</iter>
<status status="PASS" starttime="20210730 13:54:23.363" endtime="20210730 13:54:23.368"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:54:23.369" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:54:23.368" endtime="20210730 13:54:23.369"/>
</kw>
<status status="PASS" starttime="20210730 13:54:23.362" endtime="20210730 13:54:23.369"/>
</kw>
<status status="PASS" starttime="20210730 13:54:21.808" endtime="20210730 13:54:23.369"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=012!.Aab012!.Aab012!.A</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:23.370" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:54:23.370" endtime="20210730 13:54:23.370"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:23.371" level="INFO">${payload} = {'password': '012!.Aab012!.Aab012!.A'}</msg>
<status status="PASS" starttime="20210730 13:54:23.371" endtime="20210730 13:54:23.371"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:23.380" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:23.380" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:23.371" endtime="20210730 13:54:23.380"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:23.381" endtime="20210730 13:54:23.381"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:23.381" endtime="20210730 13:54:23.381"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:23.371" endtime="20210730 13:54:23.381"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:23.371" endtime="20210730 13:54:23.381"/>
</for>
<status status="FAIL" starttime="20210730 13:54:23.370" endtime="20210730 13:54:23.381"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:23.370" endtime="20210730 13:54:23.381"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=012!.Aab012!.Aab012!.A</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:23.383" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 13:54:23.382" endtime="20210730 13:54:23.383"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:23.383" level="INFO">${payload} = {'password': '012!.Aab012!.Aab012!.A'}</msg>
<status status="PASS" starttime="20210730 13:54:23.383" endtime="20210730 13:54:23.383"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:23.388" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:23.388" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:23.384" endtime="20210730 13:54:23.388"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:23.388" endtime="20210730 13:54:23.388"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:23.388" endtime="20210730 13:54:23.388"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:23.384" endtime="20210730 13:54:23.388"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:23.383" endtime="20210730 13:54:23.389"/>
</for>
<status status="FAIL" starttime="20210730 13:54:23.381" endtime="20210730 13:54:23.389"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:23.381" endtime="20210730 13:54:23.389"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=012!.Aab012!.Aab012!.A</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:23.390" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 13:54:23.389" endtime="20210730 13:54:23.390"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:23.390" level="INFO">${payload} = {'password': '012!.Aab012!.Aab012!.A'}</msg>
<status status="PASS" starttime="20210730 13:54:23.390" endtime="20210730 13:54:23.390"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:23.395" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:23.395" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:23.391" endtime="20210730 13:54:23.395"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 13:54:23.396" endtime="20210730 13:54:23.396"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 13:54:23.396" endtime="20210730 13:54:23.396"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:23.390" endtime="20210730 13:54:23.396"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:23.390" endtime="20210730 13:54:23.396"/>
</for>
<status status="FAIL" starttime="20210730 13:54:23.389" endtime="20210730 13:54:23.396"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:23.389" endtime="20210730 13:54:23.396"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:23.369" endtime="20210730 13:54:23.396"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:23.402" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:23.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:23.412" level="INFO">${pids} = 17938
17945
17953</msg>
<status status="PASS" starttime="20210730 13:54:23.397" endtime="20210730 13:54:23.412"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:23.413" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:23.413" endtime="20210730 13:54:23.413"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:23.414" level="INFO">${pids} = ['17938', '17945', '17953']</msg>
<status status="PASS" starttime="20210730 13:54:23.414" endtime="20210730 13:54:23.414"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17938</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:23.418" level="INFO">Running command 'kill 17938 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:23.415" endtime="20210730 13:54:23.419"/>
</kw>
<status status="PASS" starttime="20210730 13:54:23.414" endtime="20210730 13:54:23.419"/>
</iter>
<iter>
<var name="${pid}">17945</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:23.423" level="INFO">Running command 'kill 17945 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:23.420" endtime="20210730 13:54:23.423"/>
</kw>
<status status="PASS" starttime="20210730 13:54:23.419" endtime="20210730 13:54:23.424"/>
</iter>
<iter>
<var name="${pid}">17953</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:23.429" level="INFO">Running command 'kill 17953 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:23.424" endtime="20210730 13:54:23.430"/>
</kw>
<status status="PASS" starttime="20210730 13:54:23.424" endtime="20210730 13:54:23.430"/>
</iter>
<status status="PASS" starttime="20210730 13:54:23.414" endtime="20210730 13:54:23.430"/>
</for>
<status status="PASS" starttime="20210730 13:54:23.414" endtime="20210730 13:54:23.430"/>
</branch>
<status status="PASS" starttime="20210730 13:54:23.414" endtime="20210730 13:54:23.430"/>
</if>
<status status="PASS" starttime="20210730 13:54:23.396" endtime="20210730 13:54:23.430"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": '012!.Aab012!.Aab012!.A'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:54:21.807" endtime="20210730 13:54:23.431">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t99" name="With Each Valid Token, Updating First Name Of Each System User With '' Results In Failure Status With Right Error Message">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:23.436" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:23.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:23.446" level="INFO">${pids} = 17982</msg>
<status status="PASS" starttime="20210730 13:54:23.433" endtime="20210730 13:54:23.446"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:23.447" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:23.447" endtime="20210730 13:54:23.447"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:23.448" level="INFO">${pids} = ['17982']</msg>
<status status="PASS" starttime="20210730 13:54:23.448" endtime="20210730 13:54:23.448"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17982</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:23.452" level="INFO">Running command 'kill 17982 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:23.448" endtime="20210730 13:54:23.454"/>
</kw>
<status status="PASS" starttime="20210730 13:54:23.448" endtime="20210730 13:54:23.454"/>
</iter>
<status status="PASS" starttime="20210730 13:54:23.448" endtime="20210730 13:54:23.454"/>
</for>
<status status="PASS" starttime="20210730 13:54:23.448" endtime="20210730 13:54:23.454"/>
</branch>
<status status="PASS" starttime="20210730 13:54:23.447" endtime="20210730 13:54:23.454"/>
</if>
<status status="PASS" starttime="20210730 13:54:23.432" endtime="20210730 13:54:23.454"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:23.455" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:23.455" endtime="20210730 13:54:23.455"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:23.456" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:23.456" endtime="20210730 13:54:23.456"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:23.456" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:23.456" endtime="20210730 13:54:23.456"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:23.456" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:23.456" endtime="20210730 13:54:23.457"/>
</kw>
<msg timestamp="20210730 13:54:23.457" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:23.455" endtime="20210730 13:54:23.457"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:23.462" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:23.457" endtime="20210730 13:54:23.464"/>
</kw>
<status status="PASS" starttime="20210730 13:54:23.454" endtime="20210730 13:54:23.465"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:54:23.466" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:54:23.466" endtime="20210730 13:54:23.471"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:54:24.974" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:54:23.471" endtime="20210730 13:54:24.974"/>
</kw>
<status status="PASS" starttime="20210730 13:54:23.465" endtime="20210730 13:54:24.974"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:24.975" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:24.975" endtime="20210730 13:54:24.975"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:24.976" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:24.976" endtime="20210730 13:54:24.976"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:24.976" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:24.976" endtime="20210730 13:54:24.976"/>
</kw>
<msg timestamp="20210730 13:54:24.977" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:24.975" endtime="20210730 13:54:24.977"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:54:24.977" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:54:24.977" endtime="20210730 13:54:24.978"/>
</kw>
<status status="PASS" starttime="20210730 13:54:24.974" endtime="20210730 13:54:24.978"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:54:24.978" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:54:24.978" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:54:24.978" endtime="20210730 13:54:24.978"/>
</kw>
<status status="PASS" starttime="20210730 13:54:24.978" endtime="20210730 13:54:24.979"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:54:24.979" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:54:24.979" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:54:24.979" endtime="20210730 13:54:24.979"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:54:24.980" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:54:24.980" endtime="20210730 13:54:24.980"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:24.980" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:24.980" endtime="20210730 13:54:24.980"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:24.980" endtime="20210730 13:54:24.981"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:24.981" endtime="20210730 13:54:24.982"/>
</kw>
<status status="PASS" starttime="20210730 13:54:24.980" endtime="20210730 13:54:24.982"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:24.982" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:24.982" endtime="20210730 13:54:24.982"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:24.982" endtime="20210730 13:54:24.983"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:24.983" endtime="20210730 13:54:24.983"/>
</kw>
<status status="PASS" starttime="20210730 13:54:24.982" endtime="20210730 13:54:24.983"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:24.984" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:24.984" endtime="20210730 13:54:24.984"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:24.984" endtime="20210730 13:54:24.985"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:24.985" endtime="20210730 13:54:24.986"/>
</kw>
<status status="PASS" starttime="20210730 13:54:24.983" endtime="20210730 13:54:24.986"/>
</iter>
<status status="PASS" starttime="20210730 13:54:24.980" endtime="20210730 13:54:24.986"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:54:24.986" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:54:24.986" endtime="20210730 13:54:24.986"/>
</kw>
<status status="PASS" starttime="20210730 13:54:24.979" endtime="20210730 13:54:24.986"/>
</kw>
<status status="PASS" starttime="20210730 13:54:23.432" endtime="20210730 13:54:24.986"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 13:54:24.990" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 13:54:24.987" endtime="20210730 13:54:24.990"/>
</kw>
<msg timestamp="20210730 13:54:24.990" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 13:54:24.987" endtime="20210730 13:54:24.990"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>first_name</arg>
<arg>An empty first name</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 13:54:24.991" endtime="20210730 13:54:24.991"/>
</kw>
<status status="PASS" starttime="20210730 13:54:24.990" endtime="20210730 13:54:24.991"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=firstname</arg>
<arg>field_data=${user_data}[first_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:24.992" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:54:24.992" endtime="20210730 13:54:24.992"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:24.993" level="INFO">${payload} = {'firstname': ''}</msg>
<status status="PASS" starttime="20210730 13:54:24.993" endtime="20210730 13:54:24.993"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:25.002" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:25.003" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:24.994" endtime="20210730 13:54:25.003"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 13:54:25.003" endtime="20210730 13:54:25.003"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 13:54:25.003" endtime="20210730 13:54:25.003"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:24.993" endtime="20210730 13:54:25.003"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:24.993" endtime="20210730 13:54:25.003"/>
</for>
<status status="FAIL" starttime="20210730 13:54:24.991" endtime="20210730 13:54:25.003"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:24.991" endtime="20210730 13:54:25.003"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:24.991" endtime="20210730 13:54:25.003"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:25.007" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:25.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:25.017" level="INFO">${pids} = 18005
18012
18015</msg>
<status status="PASS" starttime="20210730 13:54:25.004" endtime="20210730 13:54:25.018"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:25.019" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:25.018" endtime="20210730 13:54:25.019"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:25.020" level="INFO">${pids} = ['18005', '18012', '18015']</msg>
<status status="PASS" starttime="20210730 13:54:25.019" endtime="20210730 13:54:25.020"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">18005</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:25.023" level="INFO">Running command 'kill 18005 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:25.020" endtime="20210730 13:54:25.024"/>
</kw>
<status status="PASS" starttime="20210730 13:54:25.020" endtime="20210730 13:54:25.024"/>
</iter>
<iter>
<var name="${pid}">18012</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:25.028" level="INFO">Running command 'kill 18012 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:25.024" endtime="20210730 13:54:25.029"/>
</kw>
<status status="PASS" starttime="20210730 13:54:25.024" endtime="20210730 13:54:25.029"/>
</iter>
<iter>
<var name="${pid}">18015</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:25.034" level="INFO">Running command 'kill 18015 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:25.030" endtime="20210730 13:54:25.034"/>
</kw>
<status status="PASS" starttime="20210730 13:54:25.029" endtime="20210730 13:54:25.034"/>
</iter>
<status status="PASS" starttime="20210730 13:54:25.020" endtime="20210730 13:54:25.034"/>
</for>
<status status="PASS" starttime="20210730 13:54:25.019" endtime="20210730 13:54:25.034"/>
</branch>
<status status="PASS" starttime="20210730 13:54:25.019" endtime="20210730 13:54:25.035"/>
</if>
<status status="PASS" starttime="20210730 13:54:25.004" endtime="20210730 13:54:25.035"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
firstname as such:
{
"firstname": ''
}
Then, each request should fail with the following response body:
{
"message": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<tag>run-me</tag>
<status status="FAIL" starttime="20210730 13:54:23.431" endtime="20210730 13:54:25.035">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t100" name="With Each Valid Token, Updating First Name Of Each System User With Hakan Results In Success">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:25.040" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:25.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:25.057" level="INFO">${pids} = 18044</msg>
<status status="PASS" starttime="20210730 13:54:25.037" endtime="20210730 13:54:25.057"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:25.058" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:25.058" endtime="20210730 13:54:25.058"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:25.059" level="INFO">${pids} = ['18044']</msg>
<status status="PASS" starttime="20210730 13:54:25.058" endtime="20210730 13:54:25.059"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">18044</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:25.063" level="INFO">Running command 'kill 18044 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:25.059" endtime="20210730 13:54:25.064"/>
</kw>
<status status="PASS" starttime="20210730 13:54:25.059" endtime="20210730 13:54:25.064"/>
</iter>
<status status="PASS" starttime="20210730 13:54:25.059" endtime="20210730 13:54:25.064"/>
</for>
<status status="PASS" starttime="20210730 13:54:25.058" endtime="20210730 13:54:25.064"/>
</branch>
<status status="PASS" starttime="20210730 13:54:25.058" endtime="20210730 13:54:25.064"/>
</if>
<status status="PASS" starttime="20210730 13:54:25.037" endtime="20210730 13:54:25.064"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:25.066" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:25.065" endtime="20210730 13:54:25.066"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:25.066" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:25.066" endtime="20210730 13:54:25.066"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:25.067" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:25.066" endtime="20210730 13:54:25.067"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:25.067" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:25.067" endtime="20210730 13:54:25.067"/>
</kw>
<msg timestamp="20210730 13:54:25.067" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:25.066" endtime="20210730 13:54:25.067"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:25.079" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:25.067" endtime="20210730 13:54:25.081"/>
</kw>
<status status="PASS" starttime="20210730 13:54:25.065" endtime="20210730 13:54:25.081"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:54:25.083" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:54:25.082" endtime="20210730 13:54:25.087"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:54:26.592" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:54:25.088" endtime="20210730 13:54:26.592"/>
</kw>
<status status="PASS" starttime="20210730 13:54:25.082" endtime="20210730 13:54:26.593"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:26.594" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:26.594" endtime="20210730 13:54:26.594"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:26.595" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:26.594" endtime="20210730 13:54:26.595"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:26.595" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:26.595" endtime="20210730 13:54:26.595"/>
</kw>
<msg timestamp="20210730 13:54:26.595" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:26.594" endtime="20210730 13:54:26.595"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:54:26.596" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:54:26.595" endtime="20210730 13:54:26.596"/>
</kw>
<status status="PASS" starttime="20210730 13:54:26.593" endtime="20210730 13:54:26.596"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:54:26.597" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:54:26.597" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:54:26.597" endtime="20210730 13:54:26.597"/>
</kw>
<status status="PASS" starttime="20210730 13:54:26.596" endtime="20210730 13:54:26.597"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:54:26.598" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:54:26.598" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:54:26.597" endtime="20210730 13:54:26.598"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:54:26.598" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:54:26.598" endtime="20210730 13:54:26.598"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:26.599" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:26.598" endtime="20210730 13:54:26.599"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:26.599" endtime="20210730 13:54:26.599"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:26.599" endtime="20210730 13:54:26.600"/>
</kw>
<status status="PASS" starttime="20210730 13:54:26.598" endtime="20210730 13:54:26.600"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:26.600" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:26.600" endtime="20210730 13:54:26.601"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:26.601" endtime="20210730 13:54:26.601"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:26.602" endtime="20210730 13:54:26.602"/>
</kw>
<status status="PASS" starttime="20210730 13:54:26.600" endtime="20210730 13:54:26.602"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:26.602" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:26.602" endtime="20210730 13:54:26.602"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:26.602" endtime="20210730 13:54:26.603"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:26.603" endtime="20210730 13:54:26.603"/>
</kw>
<status status="PASS" starttime="20210730 13:54:26.602" endtime="20210730 13:54:26.603"/>
</iter>
<status status="PASS" starttime="20210730 13:54:26.598" endtime="20210730 13:54:26.603"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:54:26.604" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:54:26.604" endtime="20210730 13:54:26.604"/>
</kw>
<status status="PASS" starttime="20210730 13:54:26.597" endtime="20210730 13:54:26.604"/>
</kw>
<status status="PASS" starttime="20210730 13:54:25.036" endtime="20210730 13:54:26.604"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 13:54:26.608" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 13:54:26.605" endtime="20210730 13:54:26.608"/>
</kw>
<msg timestamp="20210730 13:54:26.609" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 13:54:26.604" endtime="20210730 13:54:26.609"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>first_name</arg>
<arg>A first name containing more than 2 characters</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 13:54:26.610" endtime="20210730 13:54:26.610"/>
</kw>
<status status="PASS" starttime="20210730 13:54:26.609" endtime="20210730 13:54:26.611"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=firstname</arg>
<arg>field_data=${user_data}[first_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:26.614" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:54:26.613" endtime="20210730 13:54:26.614"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:26.614" level="INFO">${payload} = {'firstname': 'Hakan'}</msg>
<status status="PASS" starttime="20210730 13:54:26.614" endtime="20210730 13:54:26.614"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:26.624" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:26.624" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:26.614" endtime="20210730 13:54:26.624"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 13:54:26.625" endtime="20210730 13:54:26.625"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 13:54:26.625" endtime="20210730 13:54:26.625"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:26.614" endtime="20210730 13:54:26.625"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:26.614" endtime="20210730 13:54:26.625"/>
</for>
<status status="FAIL" starttime="20210730 13:54:26.612" endtime="20210730 13:54:26.625"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:26.612" endtime="20210730 13:54:26.625"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:26.612" endtime="20210730 13:54:26.625"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:26.630" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:26.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:26.642" level="INFO">${pids} = 18067
18074
18076</msg>
<status status="PASS" starttime="20210730 13:54:26.626" endtime="20210730 13:54:26.642"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:26.643" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:26.642" endtime="20210730 13:54:26.643"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:26.644" level="INFO">${pids} = ['18067', '18074', '18076']</msg>
<status status="PASS" starttime="20210730 13:54:26.644" endtime="20210730 13:54:26.644"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">18067</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:26.647" level="INFO">Running command 'kill 18067 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:26.644" endtime="20210730 13:54:26.648"/>
</kw>
<status status="PASS" starttime="20210730 13:54:26.644" endtime="20210730 13:54:26.648"/>
</iter>
<iter>
<var name="${pid}">18074</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:26.651" level="INFO">Running command 'kill 18074 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:26.648" endtime="20210730 13:54:26.654"/>
</kw>
<status status="PASS" starttime="20210730 13:54:26.648" endtime="20210730 13:54:26.654"/>
</iter>
<iter>
<var name="${pid}">18076</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:26.658" level="INFO">Running command 'kill 18076 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:26.655" endtime="20210730 13:54:26.659"/>
</kw>
<status status="PASS" starttime="20210730 13:54:26.655" endtime="20210730 13:54:26.659"/>
</iter>
<status status="PASS" starttime="20210730 13:54:26.644" endtime="20210730 13:54:26.659"/>
</for>
<status status="PASS" starttime="20210730 13:54:26.643" endtime="20210730 13:54:26.659"/>
</branch>
<status status="PASS" starttime="20210730 13:54:26.643" endtime="20210730 13:54:26.659"/>
</if>
<status status="PASS" starttime="20210730 13:54:26.625" endtime="20210730 13:54:26.660"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
firstname as such:
{
"firstname": 'Hakan'
}
Then, each request should fail with the following response body:
{
"message": "Updated",
"status": "SUCCESS"
}
This test not only verifies message and status but also verifies that the &lt;username&gt;'s data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:54:25.036" endtime="20210730 13:54:26.660">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t101" name="With Each Valid Token, Updating First Name Of Each System User With Hakan123!?. Results In Failure Status With Right Error Message">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:26.671" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:26.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:26.685" level="INFO">${pids} = 18105</msg>
<status status="PASS" starttime="20210730 13:54:26.662" endtime="20210730 13:54:26.685"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:26.686" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:26.686" endtime="20210730 13:54:26.686"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:26.687" level="INFO">${pids} = ['18105']</msg>
<status status="PASS" starttime="20210730 13:54:26.687" endtime="20210730 13:54:26.687"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">18105</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:26.699" level="INFO">Running command 'kill 18105 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:26.688" endtime="20210730 13:54:26.700"/>
</kw>
<status status="PASS" starttime="20210730 13:54:26.688" endtime="20210730 13:54:26.700"/>
</iter>
<status status="PASS" starttime="20210730 13:54:26.688" endtime="20210730 13:54:26.700"/>
</for>
<status status="PASS" starttime="20210730 13:54:26.686" endtime="20210730 13:54:26.700"/>
</branch>
<status status="PASS" starttime="20210730 13:54:26.686" endtime="20210730 13:54:26.700"/>
</if>
<status status="PASS" starttime="20210730 13:54:26.662" endtime="20210730 13:54:26.701"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:26.702" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:26.701" endtime="20210730 13:54:26.702"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:26.703" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:26.702" endtime="20210730 13:54:26.703"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:26.703" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:26.703" endtime="20210730 13:54:26.703"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:26.703" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:26.703" endtime="20210730 13:54:26.703"/>
</kw>
<msg timestamp="20210730 13:54:26.704" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:26.702" endtime="20210730 13:54:26.704"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:26.707" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:26.704" endtime="20210730 13:54:26.709"/>
</kw>
<status status="PASS" starttime="20210730 13:54:26.701" endtime="20210730 13:54:26.709"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:54:26.711" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:54:26.710" endtime="20210730 13:54:26.715"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:54:28.216" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:54:26.715" endtime="20210730 13:54:28.217"/>
</kw>
<status status="PASS" starttime="20210730 13:54:26.710" endtime="20210730 13:54:28.217"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:28.219" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:28.218" endtime="20210730 13:54:28.219"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:28.219" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:28.219" endtime="20210730 13:54:28.219"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:28.220" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:28.219" endtime="20210730 13:54:28.220"/>
</kw>
<msg timestamp="20210730 13:54:28.220" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:28.218" endtime="20210730 13:54:28.220"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:54:28.220" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:54:28.220" endtime="20210730 13:54:28.221"/>
</kw>
<status status="PASS" starttime="20210730 13:54:28.217" endtime="20210730 13:54:28.221"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:54:28.222" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:54:28.222" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:54:28.221" endtime="20210730 13:54:28.222"/>
</kw>
<status status="PASS" starttime="20210730 13:54:28.221" endtime="20210730 13:54:28.222"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:54:28.223" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:54:28.223" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:54:28.222" endtime="20210730 13:54:28.223"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:54:28.223" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:54:28.223" endtime="20210730 13:54:28.223"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:28.224" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:28.223" endtime="20210730 13:54:28.224"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:28.224" endtime="20210730 13:54:28.225"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:28.225" endtime="20210730 13:54:28.225"/>
</kw>
<status status="PASS" starttime="20210730 13:54:28.223" endtime="20210730 13:54:28.225"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:28.225" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:28.225" endtime="20210730 13:54:28.225"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:28.226" endtime="20210730 13:54:28.227"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:28.227" endtime="20210730 13:54:28.227"/>
</kw>
<status status="PASS" starttime="20210730 13:54:28.225" endtime="20210730 13:54:28.227"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:28.228" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:28.228" endtime="20210730 13:54:28.228"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:28.228" endtime="20210730 13:54:28.229"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:28.229" endtime="20210730 13:54:28.229"/>
</kw>
<status status="PASS" starttime="20210730 13:54:28.228" endtime="20210730 13:54:28.229"/>
</iter>
<status status="PASS" starttime="20210730 13:54:28.223" endtime="20210730 13:54:28.229"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:54:28.230" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:54:28.229" endtime="20210730 13:54:28.230"/>
</kw>
<status status="PASS" starttime="20210730 13:54:28.222" endtime="20210730 13:54:28.230"/>
</kw>
<status status="PASS" starttime="20210730 13:54:26.661" endtime="20210730 13:54:28.230"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 13:54:28.233" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 13:54:28.231" endtime="20210730 13:54:28.233"/>
</kw>
<msg timestamp="20210730 13:54:28.234" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 13:54:28.230" endtime="20210730 13:54:28.234"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>first_name</arg>
<arg>A name containing numbers and non-alphanumeric characters</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 13:54:28.234" endtime="20210730 13:54:28.235"/>
</kw>
<status status="PASS" starttime="20210730 13:54:28.234" endtime="20210730 13:54:28.235"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=firstname</arg>
<arg>field_data=${user_data}[first_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:28.236" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:54:28.236" endtime="20210730 13:54:28.236"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:28.237" level="INFO">${payload} = {'firstname': 'Hakan123!?.'}</msg>
<status status="PASS" starttime="20210730 13:54:28.237" endtime="20210730 13:54:28.237"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:28.248" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:28.248" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:28.237" endtime="20210730 13:54:28.248"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 13:54:28.248" endtime="20210730 13:54:28.248"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 13:54:28.248" endtime="20210730 13:54:28.248"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:28.237" endtime="20210730 13:54:28.248"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:28.237" endtime="20210730 13:54:28.249"/>
</for>
<status status="FAIL" starttime="20210730 13:54:28.236" endtime="20210730 13:54:28.249"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:28.235" endtime="20210730 13:54:28.249"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:28.235" endtime="20210730 13:54:28.249"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:28.253" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:28.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:28.265" level="INFO">${pids} = 18128
18135
18141</msg>
<status status="PASS" starttime="20210730 13:54:28.250" endtime="20210730 13:54:28.265"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:28.266" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:28.266" endtime="20210730 13:54:28.266"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:28.267" level="INFO">${pids} = ['18128', '18135', '18141']</msg>
<status status="PASS" starttime="20210730 13:54:28.267" endtime="20210730 13:54:28.267"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">18128</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:28.271" level="INFO">Running command 'kill 18128 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:28.268" endtime="20210730 13:54:28.272"/>
</kw>
<status status="PASS" starttime="20210730 13:54:28.267" endtime="20210730 13:54:28.272"/>
</iter>
<iter>
<var name="${pid}">18135</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:28.276" level="INFO">Running command 'kill 18135 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:28.272" endtime="20210730 13:54:28.277"/>
</kw>
<status status="PASS" starttime="20210730 13:54:28.272" endtime="20210730 13:54:28.277"/>
</iter>
<iter>
<var name="${pid}">18141</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:28.281" level="INFO">Running command 'kill 18141 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:28.277" endtime="20210730 13:54:28.282"/>
</kw>
<status status="PASS" starttime="20210730 13:54:28.277" endtime="20210730 13:54:28.282"/>
</iter>
<status status="PASS" starttime="20210730 13:54:28.267" endtime="20210730 13:54:28.282"/>
</for>
<status status="PASS" starttime="20210730 13:54:28.267" endtime="20210730 13:54:28.282"/>
</branch>
<status status="PASS" starttime="20210730 13:54:28.267" endtime="20210730 13:54:28.282"/>
</if>
<status status="PASS" starttime="20210730 13:54:28.249" endtime="20210730 13:54:28.283"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
firstname as such:
{
"firstname": 'Hakan123!?.'
}
Then, each request should fail with the following response body:
{
"message": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:54:26.661" endtime="20210730 13:54:28.283">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t102" name="With Each Valid Token, Updating First Name Of Each System User With Ha Results In Success">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:28.289" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:28.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:28.302" level="INFO">${pids} = 18170</msg>
<status status="PASS" starttime="20210730 13:54:28.285" endtime="20210730 13:54:28.302"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:28.303" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:28.303" endtime="20210730 13:54:28.303"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:28.304" level="INFO">${pids} = ['18170']</msg>
<status status="PASS" starttime="20210730 13:54:28.304" endtime="20210730 13:54:28.304"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">18170</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:28.310" level="INFO">Running command 'kill 18170 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:28.304" endtime="20210730 13:54:28.314"/>
</kw>
<status status="PASS" starttime="20210730 13:54:28.304" endtime="20210730 13:54:28.314"/>
</iter>
<status status="PASS" starttime="20210730 13:54:28.304" endtime="20210730 13:54:28.314"/>
</for>
<status status="PASS" starttime="20210730 13:54:28.303" endtime="20210730 13:54:28.314"/>
</branch>
<status status="PASS" starttime="20210730 13:54:28.303" endtime="20210730 13:54:28.314"/>
</if>
<status status="PASS" starttime="20210730 13:54:28.284" endtime="20210730 13:54:28.314"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:28.315" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:28.315" endtime="20210730 13:54:28.316"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:28.316" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:28.316" endtime="20210730 13:54:28.317"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:28.317" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:28.317" endtime="20210730 13:54:28.317"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:28.317" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:28.317" endtime="20210730 13:54:28.317"/>
</kw>
<msg timestamp="20210730 13:54:28.318" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:28.316" endtime="20210730 13:54:28.318"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:28.327" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:28.318" endtime="20210730 13:54:28.329"/>
</kw>
<status status="PASS" starttime="20210730 13:54:28.315" endtime="20210730 13:54:28.330"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:54:28.331" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:54:28.330" endtime="20210730 13:54:28.336"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:54:29.844" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:54:28.336" endtime="20210730 13:54:29.844"/>
</kw>
<status status="PASS" starttime="20210730 13:54:28.330" endtime="20210730 13:54:29.845"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:29.846" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:29.846" endtime="20210730 13:54:29.846"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:29.846" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:29.846" endtime="20210730 13:54:29.846"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:29.847" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:29.847" endtime="20210730 13:54:29.847"/>
</kw>
<msg timestamp="20210730 13:54:29.847" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:29.845" endtime="20210730 13:54:29.847"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:54:29.848" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:54:29.847" endtime="20210730 13:54:29.848"/>
</kw>
<status status="PASS" starttime="20210730 13:54:29.845" endtime="20210730 13:54:29.848"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:54:29.849" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:54:29.849" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:54:29.849" endtime="20210730 13:54:29.849"/>
</kw>
<status status="PASS" starttime="20210730 13:54:29.848" endtime="20210730 13:54:29.849"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:54:29.850" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:54:29.850" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:54:29.849" endtime="20210730 13:54:29.850"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:54:29.850" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:54:29.850" endtime="20210730 13:54:29.850"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:29.851" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:29.850" endtime="20210730 13:54:29.851"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:29.851" endtime="20210730 13:54:29.852"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:29.853" endtime="20210730 13:54:29.853"/>
</kw>
<status status="PASS" starttime="20210730 13:54:29.850" endtime="20210730 13:54:29.853"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:29.854" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:29.853" endtime="20210730 13:54:29.854"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:29.854" endtime="20210730 13:54:29.855"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:29.855" endtime="20210730 13:54:29.855"/>
</kw>
<status status="PASS" starttime="20210730 13:54:29.853" endtime="20210730 13:54:29.855"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:29.855" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:29.855" endtime="20210730 13:54:29.855"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:29.856" endtime="20210730 13:54:29.856"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:29.856" endtime="20210730 13:54:29.857"/>
</kw>
<status status="PASS" starttime="20210730 13:54:29.855" endtime="20210730 13:54:29.857"/>
</iter>
<status status="PASS" starttime="20210730 13:54:29.850" endtime="20210730 13:54:29.857"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:54:29.857" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:54:29.857" endtime="20210730 13:54:29.857"/>
</kw>
<status status="PASS" starttime="20210730 13:54:29.849" endtime="20210730 13:54:29.857"/>
</kw>
<status status="PASS" starttime="20210730 13:54:28.284" endtime="20210730 13:54:29.857"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 13:54:29.860" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 13:54:29.858" endtime="20210730 13:54:29.860"/>
</kw>
<msg timestamp="20210730 13:54:29.861" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 13:54:29.858" endtime="20210730 13:54:29.861"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>first_name</arg>
<arg>A minimum 2 characters first name</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 13:54:29.862" endtime="20210730 13:54:29.862"/>
</kw>
<status status="PASS" starttime="20210730 13:54:29.861" endtime="20210730 13:54:29.862"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=firstname</arg>
<arg>field_data=${user_data}[first_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:29.864" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:54:29.863" endtime="20210730 13:54:29.864"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:29.864" level="INFO">${payload} = {'firstname': 'Ha'}</msg>
<status status="PASS" starttime="20210730 13:54:29.864" endtime="20210730 13:54:29.864"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:29.873" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:29.874" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:29.865" endtime="20210730 13:54:29.874"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 13:54:29.874" endtime="20210730 13:54:29.874"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 13:54:29.874" endtime="20210730 13:54:29.874"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:29.864" endtime="20210730 13:54:29.874"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:29.864" endtime="20210730 13:54:29.874"/>
</for>
<status status="FAIL" starttime="20210730 13:54:29.863" endtime="20210730 13:54:29.874"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:29.863" endtime="20210730 13:54:29.875"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:29.862" endtime="20210730 13:54:29.875"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:29.879" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:29.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:29.889" level="INFO">${pids} = 18193
18200
18203</msg>
<status status="PASS" starttime="20210730 13:54:29.875" endtime="20210730 13:54:29.890"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:29.890" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:29.890" endtime="20210730 13:54:29.890"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:29.891" level="INFO">${pids} = ['18193', '18200', '18203']</msg>
<status status="PASS" starttime="20210730 13:54:29.891" endtime="20210730 13:54:29.891"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">18193</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:29.896" level="INFO">Running command 'kill 18193 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:29.891" endtime="20210730 13:54:29.897"/>
</kw>
<status status="PASS" starttime="20210730 13:54:29.891" endtime="20210730 13:54:29.897"/>
</iter>
<iter>
<var name="${pid}">18200</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:29.900" level="INFO">Running command 'kill 18200 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:29.898" endtime="20210730 13:54:29.901"/>
</kw>
<status status="PASS" starttime="20210730 13:54:29.897" endtime="20210730 13:54:29.901"/>
</iter>
<iter>
<var name="${pid}">18203</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:29.906" level="INFO">Running command 'kill 18203 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:29.901" endtime="20210730 13:54:29.907"/>
</kw>
<status status="PASS" starttime="20210730 13:54:29.901" endtime="20210730 13:54:29.907"/>
</iter>
<status status="PASS" starttime="20210730 13:54:29.891" endtime="20210730 13:54:29.907"/>
</for>
<status status="PASS" starttime="20210730 13:54:29.891" endtime="20210730 13:54:29.907"/>
</branch>
<status status="PASS" starttime="20210730 13:54:29.891" endtime="20210730 13:54:29.907"/>
</if>
<status status="PASS" starttime="20210730 13:54:29.875" endtime="20210730 13:54:29.907"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
firstname as such:
{
"firstname": 'Ha'
}
Then, each request should fail with the following response body:
{
"message": "Updated",
"status": "SUCCESS"
}
This test not only verifies message and status but also verifies that the &lt;username&gt;'s data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:54:28.283" endtime="20210730 13:54:29.907">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t103" name="With Each Valid Token, Updating First Name Of Each System User With Ha Xu Results In Success">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:29.913" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:29.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:29.924" level="INFO">${pids} = 18232</msg>
<status status="PASS" starttime="20210730 13:54:29.910" endtime="20210730 13:54:29.924"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:29.925" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:29.925" endtime="20210730 13:54:29.925"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:29.926" level="INFO">${pids} = ['18232']</msg>
<status status="PASS" starttime="20210730 13:54:29.926" endtime="20210730 13:54:29.926"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">18232</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:29.930" level="INFO">Running command 'kill 18232 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:29.927" endtime="20210730 13:54:29.931"/>
</kw>
<status status="PASS" starttime="20210730 13:54:29.927" endtime="20210730 13:54:29.931"/>
</iter>
<status status="PASS" starttime="20210730 13:54:29.926" endtime="20210730 13:54:29.931"/>
</for>
<status status="PASS" starttime="20210730 13:54:29.926" endtime="20210730 13:54:29.931"/>
</branch>
<status status="PASS" starttime="20210730 13:54:29.925" endtime="20210730 13:54:29.931"/>
</if>
<status status="PASS" starttime="20210730 13:54:29.909" endtime="20210730 13:54:29.931"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:29.932" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:29.932" endtime="20210730 13:54:29.932"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:29.933" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:29.933" endtime="20210730 13:54:29.933"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:29.933" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:29.933" endtime="20210730 13:54:29.933"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:29.934" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:29.933" endtime="20210730 13:54:29.934"/>
</kw>
<msg timestamp="20210730 13:54:29.934" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:29.932" endtime="20210730 13:54:29.934"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:29.946" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:29.934" endtime="20210730 13:54:29.951"/>
</kw>
<status status="PASS" starttime="20210730 13:54:29.931" endtime="20210730 13:54:29.951"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:54:29.953" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:54:29.952" endtime="20210730 13:54:29.957"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:54:31.462" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:54:29.957" endtime="20210730 13:54:31.462"/>
</kw>
<status status="PASS" starttime="20210730 13:54:29.952" endtime="20210730 13:54:31.462"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:31.464" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:31.463" endtime="20210730 13:54:31.464"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:31.464" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:31.464" endtime="20210730 13:54:31.464"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:31.465" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:31.464" endtime="20210730 13:54:31.465"/>
</kw>
<msg timestamp="20210730 13:54:31.465" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:31.463" endtime="20210730 13:54:31.465"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:54:31.465" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:54:31.465" endtime="20210730 13:54:31.466"/>
</kw>
<status status="PASS" starttime="20210730 13:54:31.462" endtime="20210730 13:54:31.466"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:54:31.467" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:54:31.467" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:54:31.466" endtime="20210730 13:54:31.467"/>
</kw>
<status status="PASS" starttime="20210730 13:54:31.466" endtime="20210730 13:54:31.467"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:54:31.468" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:54:31.468" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:54:31.467" endtime="20210730 13:54:31.468"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:54:31.468" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:54:31.468" endtime="20210730 13:54:31.468"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:31.469" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:31.468" endtime="20210730 13:54:31.469"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:31.469" endtime="20210730 13:54:31.469"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:31.469" endtime="20210730 13:54:31.470"/>
</kw>
<status status="PASS" starttime="20210730 13:54:31.468" endtime="20210730 13:54:31.470"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:31.470" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:31.470" endtime="20210730 13:54:31.470"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:31.470" endtime="20210730 13:54:31.471"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:31.471" endtime="20210730 13:54:31.471"/>
</kw>
<status status="PASS" starttime="20210730 13:54:31.470" endtime="20210730 13:54:31.471"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:31.471" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:31.471" endtime="20210730 13:54:31.471"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:31.472" endtime="20210730 13:54:31.472"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:31.472" endtime="20210730 13:54:31.473"/>
</kw>
<status status="PASS" starttime="20210730 13:54:31.471" endtime="20210730 13:54:31.473"/>
</iter>
<status status="PASS" starttime="20210730 13:54:31.468" endtime="20210730 13:54:31.473"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:54:31.473" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:54:31.473" endtime="20210730 13:54:31.473"/>
</kw>
<status status="PASS" starttime="20210730 13:54:31.467" endtime="20210730 13:54:31.473"/>
</kw>
<status status="PASS" starttime="20210730 13:54:29.909" endtime="20210730 13:54:31.473"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 13:54:31.476" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 13:54:31.474" endtime="20210730 13:54:31.476"/>
</kw>
<msg timestamp="20210730 13:54:31.477" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 13:54:31.474" endtime="20210730 13:54:31.477"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>first_name</arg>
<arg>minimum 2 characters first names for each first name</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 13:54:31.477" endtime="20210730 13:54:31.478"/>
</kw>
<status status="PASS" starttime="20210730 13:54:31.477" endtime="20210730 13:54:31.478"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=firstname</arg>
<arg>field_data=${user_data}[first_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:31.479" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:54:31.479" endtime="20210730 13:54:31.479"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:31.480" level="INFO">${payload} = {'firstname': 'Ha Xu'}</msg>
<status status="PASS" starttime="20210730 13:54:31.479" endtime="20210730 13:54:31.480"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:31.490" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:31.490" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:31.480" endtime="20210730 13:54:31.490"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 13:54:31.491" endtime="20210730 13:54:31.491"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 13:54:31.491" endtime="20210730 13:54:31.491"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:31.480" endtime="20210730 13:54:31.491"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:31.480" endtime="20210730 13:54:31.491"/>
</for>
<status status="FAIL" starttime="20210730 13:54:31.478" endtime="20210730 13:54:31.491"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:31.478" endtime="20210730 13:54:31.491"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:31.478" endtime="20210730 13:54:31.491"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:31.496" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:31.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:31.507" level="INFO">${pids} = 18255
18262
18264</msg>
<status status="PASS" starttime="20210730 13:54:31.492" endtime="20210730 13:54:31.507"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:31.508" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:31.508" endtime="20210730 13:54:31.508"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:31.509" level="INFO">${pids} = ['18255', '18262', '18264']</msg>
<status status="PASS" starttime="20210730 13:54:31.508" endtime="20210730 13:54:31.509"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">18255</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:31.513" level="INFO">Running command 'kill 18255 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:31.509" endtime="20210730 13:54:31.514"/>
</kw>
<status status="PASS" starttime="20210730 13:54:31.509" endtime="20210730 13:54:31.514"/>
</iter>
<iter>
<var name="${pid}">18262</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:31.519" level="INFO">Running command 'kill 18262 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:31.514" endtime="20210730 13:54:31.520"/>
</kw>
<status status="PASS" starttime="20210730 13:54:31.514" endtime="20210730 13:54:31.520"/>
</iter>
<iter>
<var name="${pid}">18264</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:31.524" level="INFO">Running command 'kill 18264 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:31.521" endtime="20210730 13:54:31.524"/>
</kw>
<status status="PASS" starttime="20210730 13:54:31.520" endtime="20210730 13:54:31.524"/>
</iter>
<status status="PASS" starttime="20210730 13:54:31.509" endtime="20210730 13:54:31.525"/>
</for>
<status status="PASS" starttime="20210730 13:54:31.508" endtime="20210730 13:54:31.525"/>
</branch>
<status status="PASS" starttime="20210730 13:54:31.508" endtime="20210730 13:54:31.525"/>
</if>
<status status="PASS" starttime="20210730 13:54:31.491" endtime="20210730 13:54:31.525"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
firstname as such:
{
"firstname": 'Ha Xu'
}
Then, each request should fail with the following response body:
{
"message": "Updated",
"status": "SUCCESS"
}
This test not only verifies message and status but also verifies that the &lt;username&gt;'s data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:54:29.908" endtime="20210730 13:54:31.525">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t104" name="With Each Valid Token, Updating First Name Of Each System User With H Xu Results In Failure Status With Right Error Message">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:31.531" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:31.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:31.544" level="INFO">${pids} = 18293</msg>
<status status="PASS" starttime="20210730 13:54:31.528" endtime="20210730 13:54:31.544"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:31.545" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:31.544" endtime="20210730 13:54:31.545"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:31.546" level="INFO">${pids} = ['18293']</msg>
<status status="PASS" starttime="20210730 13:54:31.545" endtime="20210730 13:54:31.546"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">18293</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:31.553" level="INFO">Running command 'kill 18293 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:31.546" endtime="20210730 13:54:31.554"/>
</kw>
<status status="PASS" starttime="20210730 13:54:31.546" endtime="20210730 13:54:31.556"/>
</iter>
<status status="PASS" starttime="20210730 13:54:31.546" endtime="20210730 13:54:31.569"/>
</for>
<status status="PASS" starttime="20210730 13:54:31.545" endtime="20210730 13:54:31.569"/>
</branch>
<status status="PASS" starttime="20210730 13:54:31.545" endtime="20210730 13:54:31.569"/>
</if>
<status status="PASS" starttime="20210730 13:54:31.527" endtime="20210730 13:54:31.570"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:31.571" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:31.571" endtime="20210730 13:54:31.571"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:31.572" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:31.571" endtime="20210730 13:54:31.572"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:31.572" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:31.572" endtime="20210730 13:54:31.572"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:31.573" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:31.572" endtime="20210730 13:54:31.573"/>
</kw>
<msg timestamp="20210730 13:54:31.573" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:31.571" endtime="20210730 13:54:31.573"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:31.578" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:31.573" endtime="20210730 13:54:31.579"/>
</kw>
<status status="PASS" starttime="20210730 13:54:31.570" endtime="20210730 13:54:31.580"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:54:31.581" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:54:31.580" endtime="20210730 13:54:31.585"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:54:33.087" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:54:31.586" endtime="20210730 13:54:33.087"/>
</kw>
<status status="PASS" starttime="20210730 13:54:31.580" endtime="20210730 13:54:33.088"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:33.089" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:33.089" endtime="20210730 13:54:33.089"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:33.090" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:33.090" endtime="20210730 13:54:33.090"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:33.090" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:33.090" endtime="20210730 13:54:33.090"/>
</kw>
<msg timestamp="20210730 13:54:33.090" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:33.089" endtime="20210730 13:54:33.090"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:54:33.091" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:54:33.091" endtime="20210730 13:54:33.091"/>
</kw>
<status status="PASS" starttime="20210730 13:54:33.088" endtime="20210730 13:54:33.092"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:54:33.092" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:54:33.092" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:54:33.092" endtime="20210730 13:54:33.093"/>
</kw>
<status status="PASS" starttime="20210730 13:54:33.092" endtime="20210730 13:54:33.093"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:54:33.094" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:54:33.094" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:54:33.094" endtime="20210730 13:54:33.094"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:54:33.095" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:54:33.094" endtime="20210730 13:54:33.095"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:33.095" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:33.095" endtime="20210730 13:54:33.095"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:33.095" endtime="20210730 13:54:33.097"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:33.097" endtime="20210730 13:54:33.098"/>
</kw>
<status status="PASS" starttime="20210730 13:54:33.095" endtime="20210730 13:54:33.098"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:33.099" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:33.098" endtime="20210730 13:54:33.099"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:33.099" endtime="20210730 13:54:33.100"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:33.100" endtime="20210730 13:54:33.100"/>
</kw>
<status status="PASS" starttime="20210730 13:54:33.098" endtime="20210730 13:54:33.100"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:33.100" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:33.100" endtime="20210730 13:54:33.100"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:33.100" endtime="20210730 13:54:33.101"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:33.101" endtime="20210730 13:54:33.101"/>
</kw>
<status status="PASS" starttime="20210730 13:54:33.100" endtime="20210730 13:54:33.101"/>
</iter>
<status status="PASS" starttime="20210730 13:54:33.095" endtime="20210730 13:54:33.102"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:54:33.102" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:54:33.102" endtime="20210730 13:54:33.102"/>
</kw>
<status status="PASS" starttime="20210730 13:54:33.093" endtime="20210730 13:54:33.102"/>
</kw>
<status status="PASS" starttime="20210730 13:54:31.527" endtime="20210730 13:54:33.102"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 13:54:33.106" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 13:54:33.103" endtime="20210730 13:54:33.106"/>
</kw>
<msg timestamp="20210730 13:54:33.106" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 13:54:33.102" endtime="20210730 13:54:33.106"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>first_name</arg>
<arg>The first first name is invalid with only 1 letter, the second first name is valid</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 13:54:33.107" endtime="20210730 13:54:33.107"/>
</kw>
<status status="PASS" starttime="20210730 13:54:33.106" endtime="20210730 13:54:33.108"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=firstname</arg>
<arg>field_data=${user_data}[first_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:33.110" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:54:33.109" endtime="20210730 13:54:33.110"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:33.110" level="INFO">${payload} = {'firstname': 'H Xu'}</msg>
<status status="PASS" starttime="20210730 13:54:33.110" endtime="20210730 13:54:33.110"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:33.120" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:33.120" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:33.111" endtime="20210730 13:54:33.120"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 13:54:33.120" endtime="20210730 13:54:33.121"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 13:54:33.121" endtime="20210730 13:54:33.121"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:33.110" endtime="20210730 13:54:33.121"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:33.110" endtime="20210730 13:54:33.121"/>
</for>
<status status="FAIL" starttime="20210730 13:54:33.108" endtime="20210730 13:54:33.123"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:33.108" endtime="20210730 13:54:33.123"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:33.108" endtime="20210730 13:54:33.123"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:33.129" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:33.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:33.142" level="INFO">${pids} = 18316
18323
18325</msg>
<status status="PASS" starttime="20210730 13:54:33.125" endtime="20210730 13:54:33.142"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:33.143" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:33.143" endtime="20210730 13:54:33.144"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:33.144" level="INFO">${pids} = ['18316', '18323', '18325']</msg>
<status status="PASS" starttime="20210730 13:54:33.144" endtime="20210730 13:54:33.144"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">18316</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:33.149" level="INFO">Running command 'kill 18316 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:33.145" endtime="20210730 13:54:33.149"/>
</kw>
<status status="PASS" starttime="20210730 13:54:33.145" endtime="20210730 13:54:33.149"/>
</iter>
<iter>
<var name="${pid}">18323</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:33.153" level="INFO">Running command 'kill 18323 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:33.150" endtime="20210730 13:54:33.155"/>
</kw>
<status status="PASS" starttime="20210730 13:54:33.150" endtime="20210730 13:54:33.155"/>
</iter>
<iter>
<var name="${pid}">18325</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:33.160" level="INFO">Running command 'kill 18325 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:33.156" endtime="20210730 13:54:33.161"/>
</kw>
<status status="PASS" starttime="20210730 13:54:33.156" endtime="20210730 13:54:33.161"/>
</iter>
<status status="PASS" starttime="20210730 13:54:33.144" endtime="20210730 13:54:33.161"/>
</for>
<status status="PASS" starttime="20210730 13:54:33.144" endtime="20210730 13:54:33.161"/>
</branch>
<status status="PASS" starttime="20210730 13:54:33.144" endtime="20210730 13:54:33.161"/>
</if>
<status status="PASS" starttime="20210730 13:54:33.124" endtime="20210730 13:54:33.162"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
firstname as such:
{
"firstname": 'H Xu'
}
Then, each request should fail with the following response body:
{
"message": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:54:31.526" endtime="20210730 13:54:33.162">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t105" name="With Each Valid Token, Updating First Name Of Each System User With Ha X Results In Failure Status With Right Error Message">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:33.167" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:33.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:33.179" level="INFO">${pids} = 18354</msg>
<status status="PASS" starttime="20210730 13:54:33.164" endtime="20210730 13:54:33.179"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:33.180" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:33.179" endtime="20210730 13:54:33.180"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:33.181" level="INFO">${pids} = ['18354']</msg>
<status status="PASS" starttime="20210730 13:54:33.180" endtime="20210730 13:54:33.181"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">18354</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:33.186" level="INFO">Running command 'kill 18354 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:33.181" endtime="20210730 13:54:33.186"/>
</kw>
<status status="PASS" starttime="20210730 13:54:33.181" endtime="20210730 13:54:33.186"/>
</iter>
<status status="PASS" starttime="20210730 13:54:33.181" endtime="20210730 13:54:33.186"/>
</for>
<status status="PASS" starttime="20210730 13:54:33.180" endtime="20210730 13:54:33.187"/>
</branch>
<status status="PASS" starttime="20210730 13:54:33.180" endtime="20210730 13:54:33.187"/>
</if>
<status status="PASS" starttime="20210730 13:54:33.164" endtime="20210730 13:54:33.187"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:33.188" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:33.188" endtime="20210730 13:54:33.188"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:33.188" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:33.188" endtime="20210730 13:54:33.189"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:33.194" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:33.189" endtime="20210730 13:54:33.194"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:33.199" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:33.196" endtime="20210730 13:54:33.199"/>
</kw>
<msg timestamp="20210730 13:54:33.199" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:33.188" endtime="20210730 13:54:33.199"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:33.216" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:33.201" endtime="20210730 13:54:33.218"/>
</kw>
<status status="PASS" starttime="20210730 13:54:33.187" endtime="20210730 13:54:33.219"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:54:33.220" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:54:33.220" endtime="20210730 13:54:33.225"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:54:34.731" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:54:33.225" endtime="20210730 13:54:34.731"/>
</kw>
<status status="PASS" starttime="20210730 13:54:33.219" endtime="20210730 13:54:34.731"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:34.732" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:34.732" endtime="20210730 13:54:34.732"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:34.733" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:34.732" endtime="20210730 13:54:34.733"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:34.733" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:34.733" endtime="20210730 13:54:34.733"/>
</kw>
<msg timestamp="20210730 13:54:34.733" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:34.732" endtime="20210730 13:54:34.733"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:54:34.735" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:54:34.734" endtime="20210730 13:54:34.735"/>
</kw>
<status status="PASS" starttime="20210730 13:54:34.731" endtime="20210730 13:54:34.735"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:54:34.736" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:54:34.736" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:54:34.736" endtime="20210730 13:54:34.736"/>
</kw>
<status status="PASS" starttime="20210730 13:54:34.736" endtime="20210730 13:54:34.736"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:54:34.737" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:54:34.737" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:54:34.737" endtime="20210730 13:54:34.737"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:54:34.737" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:54:34.737" endtime="20210730 13:54:34.737"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:34.738" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:34.738" endtime="20210730 13:54:34.738"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:34.738" endtime="20210730 13:54:34.739"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:34.739" endtime="20210730 13:54:34.739"/>
</kw>
<status status="PASS" starttime="20210730 13:54:34.737" endtime="20210730 13:54:34.739"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:34.740" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:34.739" endtime="20210730 13:54:34.740"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:34.740" endtime="20210730 13:54:34.740"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:34.740" endtime="20210730 13:54:34.741"/>
</kw>
<status status="PASS" starttime="20210730 13:54:34.739" endtime="20210730 13:54:34.741"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:34.741" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:34.741" endtime="20210730 13:54:34.741"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:34.741" endtime="20210730 13:54:34.742"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:34.742" endtime="20210730 13:54:34.742"/>
</kw>
<status status="PASS" starttime="20210730 13:54:34.741" endtime="20210730 13:54:34.742"/>
</iter>
<status status="PASS" starttime="20210730 13:54:34.737" endtime="20210730 13:54:34.742"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:54:34.743" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:54:34.743" endtime="20210730 13:54:34.743"/>
</kw>
<status status="PASS" starttime="20210730 13:54:34.736" endtime="20210730 13:54:34.743"/>
</kw>
<status status="PASS" starttime="20210730 13:54:33.163" endtime="20210730 13:54:34.743"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 13:54:34.746" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 13:54:34.744" endtime="20210730 13:54:34.746"/>
</kw>
<msg timestamp="20210730 13:54:34.747" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 13:54:34.743" endtime="20210730 13:54:34.747"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>first_name</arg>
<arg>The second first name is invalid with only 1 letter, the first first name is valid</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 13:54:34.747" endtime="20210730 13:54:34.748"/>
</kw>
<status status="PASS" starttime="20210730 13:54:34.747" endtime="20210730 13:54:34.748"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=firstname</arg>
<arg>field_data=${user_data}[first_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:34.749" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:54:34.749" endtime="20210730 13:54:34.749"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:34.750" level="INFO">${payload} = {'firstname': 'Ha X'}</msg>
<status status="PASS" starttime="20210730 13:54:34.750" endtime="20210730 13:54:34.750"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:34.759" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:34.760" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:34.751" endtime="20210730 13:54:34.760"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 13:54:34.760" endtime="20210730 13:54:34.760"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 13:54:34.760" endtime="20210730 13:54:34.760"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:34.750" endtime="20210730 13:54:34.760"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:34.750" endtime="20210730 13:54:34.760"/>
</for>
<status status="FAIL" starttime="20210730 13:54:34.748" endtime="20210730 13:54:34.760"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:34.748" endtime="20210730 13:54:34.761"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:34.748" endtime="20210730 13:54:34.761"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:34.765" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:34.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:34.778" level="INFO">${pids} = 18377
18384
18387</msg>
<status status="PASS" starttime="20210730 13:54:34.761" endtime="20210730 13:54:34.778"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:34.779" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:34.778" endtime="20210730 13:54:34.779"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:34.780" level="INFO">${pids} = ['18377', '18384', '18387']</msg>
<status status="PASS" starttime="20210730 13:54:34.779" endtime="20210730 13:54:34.780"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">18377</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:34.783" level="INFO">Running command 'kill 18377 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:34.780" endtime="20210730 13:54:34.784"/>
</kw>
<status status="PASS" starttime="20210730 13:54:34.780" endtime="20210730 13:54:34.784"/>
</iter>
<iter>
<var name="${pid}">18384</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:34.789" level="INFO">Running command 'kill 18384 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:34.785" endtime="20210730 13:54:34.791"/>
</kw>
<status status="PASS" starttime="20210730 13:54:34.785" endtime="20210730 13:54:34.791"/>
</iter>
<iter>
<var name="${pid}">18387</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:34.795" level="INFO">Running command 'kill 18387 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:34.791" endtime="20210730 13:54:34.796"/>
</kw>
<status status="PASS" starttime="20210730 13:54:34.791" endtime="20210730 13:54:34.796"/>
</iter>
<status status="PASS" starttime="20210730 13:54:34.780" endtime="20210730 13:54:34.796"/>
</for>
<status status="PASS" starttime="20210730 13:54:34.779" endtime="20210730 13:54:34.796"/>
</branch>
<status status="PASS" starttime="20210730 13:54:34.779" endtime="20210730 13:54:34.796"/>
</if>
<status status="PASS" starttime="20210730 13:54:34.761" endtime="20210730 13:54:34.796"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
firstname as such:
{
"firstname": 'Ha X'
}
Then, each request should fail with the following response body:
{
"message": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:54:33.163" endtime="20210730 13:54:34.796">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t106" name="With Each Valid Token, Updating First Name Of Each System User With H X Results In Failure Status With Right Error Message">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:34.804" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:34.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:34.813" level="INFO">${pids} = 18416</msg>
<status status="PASS" starttime="20210730 13:54:34.798" endtime="20210730 13:54:34.813"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:34.814" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:34.814" endtime="20210730 13:54:34.815"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:34.815" level="INFO">${pids} = ['18416']</msg>
<status status="PASS" starttime="20210730 13:54:34.815" endtime="20210730 13:54:34.815"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">18416</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:34.821" level="INFO">Running command 'kill 18416 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:34.815" endtime="20210730 13:54:34.823"/>
</kw>
<status status="PASS" starttime="20210730 13:54:34.815" endtime="20210730 13:54:34.824"/>
</iter>
<status status="PASS" starttime="20210730 13:54:34.815" endtime="20210730 13:54:34.824"/>
</for>
<status status="PASS" starttime="20210730 13:54:34.815" endtime="20210730 13:54:34.824"/>
</branch>
<status status="PASS" starttime="20210730 13:54:34.815" endtime="20210730 13:54:34.824"/>
</if>
<status status="PASS" starttime="20210730 13:54:34.798" endtime="20210730 13:54:34.824"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:34.825" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:34.825" endtime="20210730 13:54:34.825"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:34.826" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:34.826" endtime="20210730 13:54:34.826"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:34.827" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:34.826" endtime="20210730 13:54:34.827"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:34.827" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:34.827" endtime="20210730 13:54:34.827"/>
</kw>
<msg timestamp="20210730 13:54:34.827" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:34.825" endtime="20210730 13:54:34.827"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:34.837" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:34.828" endtime="20210730 13:54:34.838"/>
</kw>
<status status="PASS" starttime="20210730 13:54:34.824" endtime="20210730 13:54:34.839"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:54:34.840" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:54:34.839" endtime="20210730 13:54:34.845"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:54:36.347" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:54:34.846" endtime="20210730 13:54:36.347"/>
</kw>
<status status="PASS" starttime="20210730 13:54:34.839" endtime="20210730 13:54:36.347"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:36.348" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:36.348" endtime="20210730 13:54:36.348"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:36.349" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:36.349" endtime="20210730 13:54:36.349"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:36.349" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:36.349" endtime="20210730 13:54:36.349"/>
</kw>
<msg timestamp="20210730 13:54:36.349" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:36.348" endtime="20210730 13:54:36.349"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:54:36.350" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:54:36.349" endtime="20210730 13:54:36.350"/>
</kw>
<status status="PASS" starttime="20210730 13:54:36.347" endtime="20210730 13:54:36.350"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:54:36.351" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:54:36.351" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:54:36.351" endtime="20210730 13:54:36.351"/>
</kw>
<status status="PASS" starttime="20210730 13:54:36.350" endtime="20210730 13:54:36.351"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:54:36.352" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:54:36.353" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:54:36.352" endtime="20210730 13:54:36.353"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:54:36.353" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:54:36.353" endtime="20210730 13:54:36.353"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:36.354" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:36.353" endtime="20210730 13:54:36.354"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:36.354" endtime="20210730 13:54:36.354"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:36.355" endtime="20210730 13:54:36.355"/>
</kw>
<status status="PASS" starttime="20210730 13:54:36.353" endtime="20210730 13:54:36.355"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:36.355" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:36.355" endtime="20210730 13:54:36.355"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:36.355" endtime="20210730 13:54:36.356"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:36.356" endtime="20210730 13:54:36.356"/>
</kw>
<status status="PASS" starttime="20210730 13:54:36.355" endtime="20210730 13:54:36.356"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:36.357" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:36.357" endtime="20210730 13:54:36.357"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:36.357" endtime="20210730 13:54:36.358"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:36.358" endtime="20210730 13:54:36.358"/>
</kw>
<status status="PASS" starttime="20210730 13:54:36.357" endtime="20210730 13:54:36.358"/>
</iter>
<status status="PASS" starttime="20210730 13:54:36.353" endtime="20210730 13:54:36.358"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:54:36.359" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:54:36.358" endtime="20210730 13:54:36.359"/>
</kw>
<status status="PASS" starttime="20210730 13:54:36.352" endtime="20210730 13:54:36.359"/>
</kw>
<status status="PASS" starttime="20210730 13:54:34.798" endtime="20210730 13:54:36.359"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 13:54:36.362" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 13:54:36.359" endtime="20210730 13:54:36.362"/>
</kw>
<msg timestamp="20210730 13:54:36.363" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 13:54:36.359" endtime="20210730 13:54:36.363"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>first_name</arg>
<arg>The both first names are invalid with only 1 letter</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 13:54:36.363" endtime="20210730 13:54:36.364"/>
</kw>
<status status="PASS" starttime="20210730 13:54:36.363" endtime="20210730 13:54:36.364"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=firstname</arg>
<arg>field_data=${user_data}[first_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:36.365" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:54:36.365" endtime="20210730 13:54:36.365"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:36.366" level="INFO">${payload} = {'firstname': 'H X'}</msg>
<status status="PASS" starttime="20210730 13:54:36.366" endtime="20210730 13:54:36.366"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:36.375" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:36.375" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:36.366" endtime="20210730 13:54:36.375"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 13:54:36.376" endtime="20210730 13:54:36.376"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 13:54:36.376" endtime="20210730 13:54:36.376"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:36.366" endtime="20210730 13:54:36.376"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:36.366" endtime="20210730 13:54:36.376"/>
</for>
<status status="FAIL" starttime="20210730 13:54:36.364" endtime="20210730 13:54:36.376"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:36.364" endtime="20210730 13:54:36.376"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:36.364" endtime="20210730 13:54:36.377"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:36.380" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:36.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:36.392" level="INFO">${pids} = 18439
18446
18453</msg>
<status status="PASS" starttime="20210730 13:54:36.377" endtime="20210730 13:54:36.392"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:36.393" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:36.392" endtime="20210730 13:54:36.393"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:36.394" level="INFO">${pids} = ['18439', '18446', '18453']</msg>
<status status="PASS" starttime="20210730 13:54:36.393" endtime="20210730 13:54:36.394"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">18439</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:36.398" level="INFO">Running command 'kill 18439 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:36.394" endtime="20210730 13:54:36.398"/>
</kw>
<status status="PASS" starttime="20210730 13:54:36.394" endtime="20210730 13:54:36.398"/>
</iter>
<iter>
<var name="${pid}">18446</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:36.402" level="INFO">Running command 'kill 18446 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:36.399" endtime="20210730 13:54:36.403"/>
</kw>
<status status="PASS" starttime="20210730 13:54:36.398" endtime="20210730 13:54:36.403"/>
</iter>
<iter>
<var name="${pid}">18453</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:36.407" level="INFO">Running command 'kill 18453 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:36.404" endtime="20210730 13:54:36.408"/>
</kw>
<status status="PASS" starttime="20210730 13:54:36.403" endtime="20210730 13:54:36.408"/>
</iter>
<status status="PASS" starttime="20210730 13:54:36.394" endtime="20210730 13:54:36.408"/>
</for>
<status status="PASS" starttime="20210730 13:54:36.393" endtime="20210730 13:54:36.408"/>
</branch>
<status status="PASS" starttime="20210730 13:54:36.393" endtime="20210730 13:54:36.408"/>
</if>
<status status="PASS" starttime="20210730 13:54:36.377" endtime="20210730 13:54:36.408"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
firstname as such:
{
"firstname": 'H X'
}
Then, each request should fail with the following response body:
{
"message": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:54:34.797" endtime="20210730 13:54:36.409">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t107" name="With Each Valid Token, Updating First Name Of Each System User With Helena123 Results In Failure Status With Right Error Message">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:36.415" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:36.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:36.426" level="INFO">${pids} = 18482</msg>
<status status="PASS" starttime="20210730 13:54:36.411" endtime="20210730 13:54:36.426"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:36.427" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:36.426" endtime="20210730 13:54:36.427"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:36.428" level="INFO">${pids} = ['18482']</msg>
<status status="PASS" starttime="20210730 13:54:36.427" endtime="20210730 13:54:36.428"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">18482</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:36.431" level="INFO">Running command 'kill 18482 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:36.428" endtime="20210730 13:54:36.432"/>
</kw>
<status status="PASS" starttime="20210730 13:54:36.428" endtime="20210730 13:54:36.432"/>
</iter>
<status status="PASS" starttime="20210730 13:54:36.428" endtime="20210730 13:54:36.432"/>
</for>
<status status="PASS" starttime="20210730 13:54:36.427" endtime="20210730 13:54:36.432"/>
</branch>
<status status="PASS" starttime="20210730 13:54:36.427" endtime="20210730 13:54:36.432"/>
</if>
<status status="PASS" starttime="20210730 13:54:36.411" endtime="20210730 13:54:36.432"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:36.433" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:36.433" endtime="20210730 13:54:36.433"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:36.434" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:36.434" endtime="20210730 13:54:36.434"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:36.435" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:36.434" endtime="20210730 13:54:36.435"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:36.435" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:36.435" endtime="20210730 13:54:36.435"/>
</kw>
<msg timestamp="20210730 13:54:36.435" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:36.434" endtime="20210730 13:54:36.435"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:36.451" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:36.435" endtime="20210730 13:54:36.453"/>
</kw>
<status status="PASS" starttime="20210730 13:54:36.433" endtime="20210730 13:54:36.454"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:54:36.455" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:54:36.454" endtime="20210730 13:54:36.459"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:54:37.965" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:54:36.459" endtime="20210730 13:54:37.966"/>
</kw>
<status status="PASS" starttime="20210730 13:54:36.454" endtime="20210730 13:54:37.966"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:37.967" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:37.967" endtime="20210730 13:54:37.967"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:37.967" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:37.967" endtime="20210730 13:54:37.967"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:37.968" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:37.968" endtime="20210730 13:54:37.968"/>
</kw>
<msg timestamp="20210730 13:54:37.968" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:37.966" endtime="20210730 13:54:37.968"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:54:37.968" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:54:37.968" endtime="20210730 13:54:37.969"/>
</kw>
<status status="PASS" starttime="20210730 13:54:37.966" endtime="20210730 13:54:37.969"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:54:37.970" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:54:37.970" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:54:37.969" endtime="20210730 13:54:37.971"/>
</kw>
<status status="PASS" starttime="20210730 13:54:37.969" endtime="20210730 13:54:37.971"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:54:37.971" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:54:37.971" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:54:37.971" endtime="20210730 13:54:37.971"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:54:37.972" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:54:37.971" endtime="20210730 13:54:37.972"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:37.972" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:37.972" endtime="20210730 13:54:37.972"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:37.972" endtime="20210730 13:54:37.973"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:37.973" endtime="20210730 13:54:37.974"/>
</kw>
<status status="PASS" starttime="20210730 13:54:37.972" endtime="20210730 13:54:37.974"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:37.974" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:37.974" endtime="20210730 13:54:37.974"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:37.974" endtime="20210730 13:54:37.975"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:37.975" endtime="20210730 13:54:37.975"/>
</kw>
<status status="PASS" starttime="20210730 13:54:37.974" endtime="20210730 13:54:37.975"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:37.975" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:37.975" endtime="20210730 13:54:37.976"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:37.976" endtime="20210730 13:54:37.976"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:37.976" endtime="20210730 13:54:37.977"/>
</kw>
<status status="PASS" starttime="20210730 13:54:37.975" endtime="20210730 13:54:37.977"/>
</iter>
<status status="PASS" starttime="20210730 13:54:37.972" endtime="20210730 13:54:37.977"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:54:37.977" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:54:37.977" endtime="20210730 13:54:37.977"/>
</kw>
<status status="PASS" starttime="20210730 13:54:37.971" endtime="20210730 13:54:37.977"/>
</kw>
<status status="PASS" starttime="20210730 13:54:36.411" endtime="20210730 13:54:37.978"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 13:54:37.980" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 13:54:37.978" endtime="20210730 13:54:37.980"/>
</kw>
<msg timestamp="20210730 13:54:37.981" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 13:54:37.978" endtime="20210730 13:54:37.981"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>first_name</arg>
<arg>First name does contain numbers, which makes it invalid</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 13:54:37.981" endtime="20210730 13:54:37.982"/>
</kw>
<status status="PASS" starttime="20210730 13:54:37.981" endtime="20210730 13:54:37.982"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=firstname</arg>
<arg>field_data=${user_data}[first_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:37.983" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:54:37.983" endtime="20210730 13:54:37.983"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:37.983" level="INFO">${payload} = {'firstname': 'Helena123'}</msg>
<status status="PASS" starttime="20210730 13:54:37.983" endtime="20210730 13:54:37.983"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:37.992" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:37.992" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:37.984" endtime="20210730 13:54:37.992"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 13:54:37.993" endtime="20210730 13:54:37.993"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 13:54:37.993" endtime="20210730 13:54:37.993"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:37.984" endtime="20210730 13:54:37.993"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:37.983" endtime="20210730 13:54:37.993"/>
</for>
<status status="FAIL" starttime="20210730 13:54:37.982" endtime="20210730 13:54:37.993"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:37.982" endtime="20210730 13:54:37.993"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:37.982" endtime="20210730 13:54:37.993"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:37.998" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:38.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:38.010" level="INFO">${pids} = 18505
18512
18515</msg>
<status status="PASS" starttime="20210730 13:54:37.994" endtime="20210730 13:54:38.010"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:38.011" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:38.011" endtime="20210730 13:54:38.011"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:38.012" level="INFO">${pids} = ['18505', '18512', '18515']</msg>
<status status="PASS" starttime="20210730 13:54:38.012" endtime="20210730 13:54:38.012"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">18505</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:38.016" level="INFO">Running command 'kill 18505 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:38.012" endtime="20210730 13:54:38.017"/>
</kw>
<status status="PASS" starttime="20210730 13:54:38.012" endtime="20210730 13:54:38.017"/>
</iter>
<iter>
<var name="${pid}">18512</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:38.021" level="INFO">Running command 'kill 18512 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:38.017" endtime="20210730 13:54:38.022"/>
</kw>
<status status="PASS" starttime="20210730 13:54:38.017" endtime="20210730 13:54:38.022"/>
</iter>
<iter>
<var name="${pid}">18515</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:38.026" level="INFO">Running command 'kill 18515 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:38.022" endtime="20210730 13:54:38.026"/>
</kw>
<status status="PASS" starttime="20210730 13:54:38.022" endtime="20210730 13:54:38.026"/>
</iter>
<status status="PASS" starttime="20210730 13:54:38.012" endtime="20210730 13:54:38.026"/>
</for>
<status status="PASS" starttime="20210730 13:54:38.011" endtime="20210730 13:54:38.026"/>
</branch>
<status status="PASS" starttime="20210730 13:54:38.011" endtime="20210730 13:54:38.027"/>
</if>
<status status="PASS" starttime="20210730 13:54:37.994" endtime="20210730 13:54:38.027"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
firstname as such:
{
"firstname": 'Helena123'
}
Then, each request should fail with the following response body:
{
"message": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:54:36.409" endtime="20210730 13:54:38.027">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t108" name="With Each Valid Token, Updating First Name Of Each System User With Helena!.? Results In Failure Status With Right Error Message">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:38.032" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:38.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:38.044" level="INFO">${pids} = 18544</msg>
<status status="PASS" starttime="20210730 13:54:38.029" endtime="20210730 13:54:38.044"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:38.045" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:38.044" endtime="20210730 13:54:38.045"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:38.046" level="INFO">${pids} = ['18544']</msg>
<status status="PASS" starttime="20210730 13:54:38.045" endtime="20210730 13:54:38.046"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">18544</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:38.049" level="INFO">Running command 'kill 18544 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:38.046" endtime="20210730 13:54:38.050"/>
</kw>
<status status="PASS" starttime="20210730 13:54:38.046" endtime="20210730 13:54:38.050"/>
</iter>
<status status="PASS" starttime="20210730 13:54:38.046" endtime="20210730 13:54:38.050"/>
</for>
<status status="PASS" starttime="20210730 13:54:38.045" endtime="20210730 13:54:38.050"/>
</branch>
<status status="PASS" starttime="20210730 13:54:38.045" endtime="20210730 13:54:38.050"/>
</if>
<status status="PASS" starttime="20210730 13:54:38.029" endtime="20210730 13:54:38.050"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:38.051" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:38.051" endtime="20210730 13:54:38.051"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:38.052" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:38.052" endtime="20210730 13:54:38.052"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:38.053" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:38.052" endtime="20210730 13:54:38.053"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:38.053" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:38.053" endtime="20210730 13:54:38.053"/>
</kw>
<msg timestamp="20210730 13:54:38.053" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:38.051" endtime="20210730 13:54:38.053"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:38.070" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:38.055" endtime="20210730 13:54:38.072"/>
</kw>
<status status="PASS" starttime="20210730 13:54:38.051" endtime="20210730 13:54:38.072"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:54:38.073" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:54:38.073" endtime="20210730 13:54:38.078"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:54:39.580" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:54:38.079" endtime="20210730 13:54:39.580"/>
</kw>
<status status="PASS" starttime="20210730 13:54:38.072" endtime="20210730 13:54:39.580"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:39.581" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:39.581" endtime="20210730 13:54:39.581"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:39.581" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:39.581" endtime="20210730 13:54:39.581"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:39.582" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:39.582" endtime="20210730 13:54:39.582"/>
</kw>
<msg timestamp="20210730 13:54:39.582" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:39.580" endtime="20210730 13:54:39.582"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:54:39.582" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:54:39.582" endtime="20210730 13:54:39.583"/>
</kw>
<status status="PASS" starttime="20210730 13:54:39.580" endtime="20210730 13:54:39.583"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:54:39.584" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:54:39.584" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:54:39.583" endtime="20210730 13:54:39.584"/>
</kw>
<status status="PASS" starttime="20210730 13:54:39.583" endtime="20210730 13:54:39.584"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:54:39.585" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:54:39.585" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:54:39.585" endtime="20210730 13:54:39.585"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:54:39.586" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:54:39.585" endtime="20210730 13:54:39.586"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:39.586" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:39.586" endtime="20210730 13:54:39.586"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:39.586" endtime="20210730 13:54:39.587"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:39.587" endtime="20210730 13:54:39.588"/>
</kw>
<status status="PASS" starttime="20210730 13:54:39.586" endtime="20210730 13:54:39.588"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:39.588" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:39.588" endtime="20210730 13:54:39.588"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:39.588" endtime="20210730 13:54:39.589"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:39.589" endtime="20210730 13:54:39.589"/>
</kw>
<status status="PASS" starttime="20210730 13:54:39.588" endtime="20210730 13:54:39.589"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:39.590" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:39.589" endtime="20210730 13:54:39.590"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:39.590" endtime="20210730 13:54:39.590"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:39.591" endtime="20210730 13:54:39.591"/>
</kw>
<status status="PASS" starttime="20210730 13:54:39.589" endtime="20210730 13:54:39.591"/>
</iter>
<status status="PASS" starttime="20210730 13:54:39.586" endtime="20210730 13:54:39.591"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:54:39.591" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:54:39.591" endtime="20210730 13:54:39.591"/>
</kw>
<status status="PASS" starttime="20210730 13:54:39.584" endtime="20210730 13:54:39.591"/>
</kw>
<status status="PASS" starttime="20210730 13:54:38.028" endtime="20210730 13:54:39.591"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 13:54:39.595" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 13:54:39.592" endtime="20210730 13:54:39.595"/>
</kw>
<msg timestamp="20210730 13:54:39.595" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 13:54:39.592" endtime="20210730 13:54:39.595"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>first_name</arg>
<arg>First name does contain non alphanumeric characters, which makes it invalid</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 13:54:39.596" endtime="20210730 13:54:39.596"/>
</kw>
<status status="PASS" starttime="20210730 13:54:39.595" endtime="20210730 13:54:39.596"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=firstname</arg>
<arg>field_data=${user_data}[first_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:39.598" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:54:39.597" endtime="20210730 13:54:39.598"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:39.598" level="INFO">${payload} = {'firstname': 'Helena!.?'}</msg>
<status status="PASS" starttime="20210730 13:54:39.598" endtime="20210730 13:54:39.598"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:39.607" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:39.607" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:39.599" endtime="20210730 13:54:39.607"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 13:54:39.608" endtime="20210730 13:54:39.608"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 13:54:39.608" endtime="20210730 13:54:39.608"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:39.598" endtime="20210730 13:54:39.608"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:39.598" endtime="20210730 13:54:39.608"/>
</for>
<status status="FAIL" starttime="20210730 13:54:39.597" endtime="20210730 13:54:39.608"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:39.597" endtime="20210730 13:54:39.608"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:39.596" endtime="20210730 13:54:39.608"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:39.612" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:39.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:39.625" level="INFO">${pids} = 18567
18574
18576</msg>
<status status="PASS" starttime="20210730 13:54:39.609" endtime="20210730 13:54:39.625"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:39.626" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:39.625" endtime="20210730 13:54:39.626"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:39.627" level="INFO">${pids} = ['18567', '18574', '18576']</msg>
<status status="PASS" starttime="20210730 13:54:39.627" endtime="20210730 13:54:39.627"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">18567</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:39.631" level="INFO">Running command 'kill 18567 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:39.628" endtime="20210730 13:54:39.632"/>
</kw>
<status status="PASS" starttime="20210730 13:54:39.627" endtime="20210730 13:54:39.632"/>
</iter>
<iter>
<var name="${pid}">18574</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:39.638" level="INFO">Running command 'kill 18574 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:39.632" endtime="20210730 13:54:39.640"/>
</kw>
<status status="PASS" starttime="20210730 13:54:39.632" endtime="20210730 13:54:39.640"/>
</iter>
<iter>
<var name="${pid}">18576</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:39.644" level="INFO">Running command 'kill 18576 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:39.641" endtime="20210730 13:54:39.645"/>
</kw>
<status status="PASS" starttime="20210730 13:54:39.640" endtime="20210730 13:54:39.645"/>
</iter>
<status status="PASS" starttime="20210730 13:54:39.627" endtime="20210730 13:54:39.645"/>
</for>
<status status="PASS" starttime="20210730 13:54:39.626" endtime="20210730 13:54:39.645"/>
</branch>
<status status="PASS" starttime="20210730 13:54:39.626" endtime="20210730 13:54:39.645"/>
</if>
<status status="PASS" starttime="20210730 13:54:39.608" endtime="20210730 13:54:39.645"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
firstname as such:
{
"firstname": 'Helena!.?'
}
Then, each request should fail with the following response body:
{
"message": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:54:38.028" endtime="20210730 13:54:39.646">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t109" name="With Each Valid Token, Updating First Name Of Each System User With Helena Margaretha Results In Success">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:39.658" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:39.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:39.666" level="INFO">${pids} = 18605</msg>
<status status="PASS" starttime="20210730 13:54:39.648" endtime="20210730 13:54:39.666"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:39.667" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:39.667" endtime="20210730 13:54:39.667"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:39.671" level="INFO">${pids} = ['18605']</msg>
<status status="PASS" starttime="20210730 13:54:39.669" endtime="20210730 13:54:39.671"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">18605</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:39.684" level="INFO">Running command 'kill 18605 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:39.672" endtime="20210730 13:54:39.685"/>
</kw>
<status status="PASS" starttime="20210730 13:54:39.672" endtime="20210730 13:54:39.685"/>
</iter>
<status status="PASS" starttime="20210730 13:54:39.671" endtime="20210730 13:54:39.685"/>
</for>
<status status="PASS" starttime="20210730 13:54:39.669" endtime="20210730 13:54:39.685"/>
</branch>
<status status="PASS" starttime="20210730 13:54:39.669" endtime="20210730 13:54:39.685"/>
</if>
<status status="PASS" starttime="20210730 13:54:39.647" endtime="20210730 13:54:39.686"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:39.687" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:39.687" endtime="20210730 13:54:39.687"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:39.688" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:39.688" endtime="20210730 13:54:39.688"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:39.688" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:39.688" endtime="20210730 13:54:39.688"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:39.689" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:39.688" endtime="20210730 13:54:39.689"/>
</kw>
<msg timestamp="20210730 13:54:39.689" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:39.687" endtime="20210730 13:54:39.689"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:39.692" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:39.689" endtime="20210730 13:54:39.695"/>
</kw>
<status status="PASS" starttime="20210730 13:54:39.686" endtime="20210730 13:54:39.696"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:54:39.697" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:54:39.696" endtime="20210730 13:54:39.701"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:54:41.204" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:54:39.702" endtime="20210730 13:54:41.204"/>
</kw>
<status status="PASS" starttime="20210730 13:54:39.696" endtime="20210730 13:54:41.205"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:41.208" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:41.208" endtime="20210730 13:54:41.208"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:41.208" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:41.208" endtime="20210730 13:54:41.208"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:41.209" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:41.208" endtime="20210730 13:54:41.209"/>
</kw>
<msg timestamp="20210730 13:54:41.209" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:41.207" endtime="20210730 13:54:41.209"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:54:41.210" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:54:41.209" endtime="20210730 13:54:41.210"/>
</kw>
<status status="PASS" starttime="20210730 13:54:41.205" endtime="20210730 13:54:41.210"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:54:41.211" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:54:41.211" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:54:41.210" endtime="20210730 13:54:41.211"/>
</kw>
<status status="PASS" starttime="20210730 13:54:41.210" endtime="20210730 13:54:41.211"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:54:41.211" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:54:41.212" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:54:41.211" endtime="20210730 13:54:41.212"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:54:41.212" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:54:41.212" endtime="20210730 13:54:41.212"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:41.212" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:41.212" endtime="20210730 13:54:41.213"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:41.213" endtime="20210730 13:54:41.213"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:41.214" endtime="20210730 13:54:41.214"/>
</kw>
<status status="PASS" starttime="20210730 13:54:41.212" endtime="20210730 13:54:41.214"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:41.214" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:41.214" endtime="20210730 13:54:41.214"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:41.215" endtime="20210730 13:54:41.215"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:41.215" endtime="20210730 13:54:41.216"/>
</kw>
<status status="PASS" starttime="20210730 13:54:41.214" endtime="20210730 13:54:41.216"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:41.216" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:41.216" endtime="20210730 13:54:41.216"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:41.216" endtime="20210730 13:54:41.217"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:41.217" endtime="20210730 13:54:41.217"/>
</kw>
<status status="PASS" starttime="20210730 13:54:41.216" endtime="20210730 13:54:41.217"/>
</iter>
<status status="PASS" starttime="20210730 13:54:41.212" endtime="20210730 13:54:41.217"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:54:41.218" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:54:41.218" endtime="20210730 13:54:41.218"/>
</kw>
<status status="PASS" starttime="20210730 13:54:41.211" endtime="20210730 13:54:41.218"/>
</kw>
<status status="PASS" starttime="20210730 13:54:39.647" endtime="20210730 13:54:41.218"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 13:54:41.221" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 13:54:41.219" endtime="20210730 13:54:41.221"/>
</kw>
<msg timestamp="20210730 13:54:41.222" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 13:54:41.218" endtime="20210730 13:54:41.222"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>first_name</arg>
<arg>Two valid first names seperated by a single space character</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 13:54:41.222" endtime="20210730 13:54:41.223"/>
</kw>
<status status="PASS" starttime="20210730 13:54:41.222" endtime="20210730 13:54:41.223"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=firstname</arg>
<arg>field_data=${user_data}[first_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:41.225" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:54:41.224" endtime="20210730 13:54:41.225"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:41.225" level="INFO">${payload} = {'firstname': 'Helena Margaretha'}</msg>
<status status="PASS" starttime="20210730 13:54:41.225" endtime="20210730 13:54:41.225"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:41.235" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:41.235" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:41.226" endtime="20210730 13:54:41.235"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 13:54:41.235" endtime="20210730 13:54:41.235"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 13:54:41.235" endtime="20210730 13:54:41.235"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:41.225" endtime="20210730 13:54:41.235"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:41.225" endtime="20210730 13:54:41.235"/>
</for>
<status status="FAIL" starttime="20210730 13:54:41.224" endtime="20210730 13:54:41.235"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:41.223" endtime="20210730 13:54:41.235"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:41.223" endtime="20210730 13:54:41.236"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:41.239" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:41.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:41.251" level="INFO">${pids} = 18628
18635
18638</msg>
<status status="PASS" starttime="20210730 13:54:41.236" endtime="20210730 13:54:41.251"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:41.252" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:41.251" endtime="20210730 13:54:41.253"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:41.254" level="INFO">${pids} = ['18628', '18635', '18638']</msg>
<status status="PASS" starttime="20210730 13:54:41.253" endtime="20210730 13:54:41.254"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">18628</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:41.257" level="INFO">Running command 'kill 18628 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:41.254" endtime="20210730 13:54:41.258"/>
</kw>
<status status="PASS" starttime="20210730 13:54:41.254" endtime="20210730 13:54:41.258"/>
</iter>
<iter>
<var name="${pid}">18635</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:41.262" level="INFO">Running command 'kill 18635 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:41.258" endtime="20210730 13:54:41.264"/>
</kw>
<status status="PASS" starttime="20210730 13:54:41.258" endtime="20210730 13:54:41.264"/>
</iter>
<iter>
<var name="${pid}">18638</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:41.268" level="INFO">Running command 'kill 18638 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:41.265" endtime="20210730 13:54:41.269"/>
</kw>
<status status="PASS" starttime="20210730 13:54:41.265" endtime="20210730 13:54:41.269"/>
</iter>
<status status="PASS" starttime="20210730 13:54:41.254" endtime="20210730 13:54:41.269"/>
</for>
<status status="PASS" starttime="20210730 13:54:41.253" endtime="20210730 13:54:41.269"/>
</branch>
<status status="PASS" starttime="20210730 13:54:41.253" endtime="20210730 13:54:41.269"/>
</if>
<status status="PASS" starttime="20210730 13:54:41.236" endtime="20210730 13:54:41.269"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
firstname as such:
{
"firstname": 'Helena Margaretha'
}
Then, each request should fail with the following response body:
{
"message": "Updated",
"status": "SUCCESS"
}
This test not only verifies message and status but also verifies that the &lt;username&gt;'s data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 13:54:39.647" endtime="20210730 13:54:41.269">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t110" name="With Each Valid Token, Updating First Name Of Each System User With Helena      Margaretha Results In Failure Status With Right Error Message">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:41.274" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:41.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:41.286" level="INFO">${pids} = 18667</msg>
<status status="PASS" starttime="20210730 13:54:41.271" endtime="20210730 13:54:41.286"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:41.287" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:41.286" endtime="20210730 13:54:41.287"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:41.288" level="INFO">${pids} = ['18667']</msg>
<status status="PASS" starttime="20210730 13:54:41.287" endtime="20210730 13:54:41.288"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">18667</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:41.291" level="INFO">Running command 'kill 18667 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:41.288" endtime="20210730 13:54:41.292"/>
</kw>
<status status="PASS" starttime="20210730 13:54:41.288" endtime="20210730 13:54:41.292"/>
</iter>
<status status="PASS" starttime="20210730 13:54:41.288" endtime="20210730 13:54:41.292"/>
</for>
<status status="PASS" starttime="20210730 13:54:41.287" endtime="20210730 13:54:41.292"/>
</branch>
<status status="PASS" starttime="20210730 13:54:41.287" endtime="20210730 13:54:41.292"/>
</if>
<status status="PASS" starttime="20210730 13:54:41.271" endtime="20210730 13:54:41.292"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:41.293" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:41.293" endtime="20210730 13:54:41.293"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:41.294" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:41.294" endtime="20210730 13:54:41.294"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:41.295" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:41.294" endtime="20210730 13:54:41.295"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:41.296" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:41.295" endtime="20210730 13:54:41.296"/>
</kw>
<msg timestamp="20210730 13:54:41.296" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:41.294" endtime="20210730 13:54:41.296"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:41.312" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:41.296" endtime="20210730 13:54:41.314"/>
</kw>
<status status="PASS" starttime="20210730 13:54:41.292" endtime="20210730 13:54:41.314"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 13:54:41.316" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 13:54:41.315" endtime="20210730 13:54:41.320"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 13:54:42.837" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 13:54:41.321" endtime="20210730 13:54:42.837"/>
</kw>
<status status="PASS" starttime="20210730 13:54:41.314" endtime="20210730 13:54:42.838"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:42.839" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 13:54:42.838" endtime="20210730 13:54:42.839"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 13:54:42.839" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 13:54:42.839" endtime="20210730 13:54:42.839"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 13:54:42.840" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:42.839" endtime="20210730 13:54:42.840"/>
</kw>
<msg timestamp="20210730 13:54:42.840" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 13:54:42.838" endtime="20210730 13:54:42.840"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 13:54:42.840" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 13:54:42.840" endtime="20210730 13:54:42.841"/>
</kw>
<status status="PASS" starttime="20210730 13:54:42.838" endtime="20210730 13:54:42.841"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 13:54:42.842" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 13:54:42.842" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 13:54:42.841" endtime="20210730 13:54:42.842"/>
</kw>
<status status="PASS" starttime="20210730 13:54:42.841" endtime="20210730 13:54:42.842"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 13:54:42.842" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 13:54:42.842" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 13:54:42.842" endtime="20210730 13:54:42.842"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 13:54:42.843" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 13:54:42.843" endtime="20210730 13:54:42.843"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:42.844" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:42.843" endtime="20210730 13:54:42.844"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:42.844" endtime="20210730 13:54:42.845"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:42.845" endtime="20210730 13:54:42.845"/>
</kw>
<status status="PASS" starttime="20210730 13:54:42.843" endtime="20210730 13:54:42.845"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:42.845" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:42.845" endtime="20210730 13:54:42.845"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:42.846" endtime="20210730 13:54:42.846"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:42.846" endtime="20210730 13:54:42.847"/>
</kw>
<status status="PASS" starttime="20210730 13:54:42.845" endtime="20210730 13:54:42.847"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:42.847" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 13:54:42.847" endtime="20210730 13:54:42.847"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 13:54:42.847" endtime="20210730 13:54:42.848"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 13:54:42.848" endtime="20210730 13:54:42.848"/>
</kw>
<status status="PASS" starttime="20210730 13:54:42.847" endtime="20210730 13:54:42.848"/>
</iter>
<status status="PASS" starttime="20210730 13:54:42.843" endtime="20210730 13:54:42.848"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 13:54:42.848" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 13:54:42.848" endtime="20210730 13:54:42.848"/>
</kw>
<status status="PASS" starttime="20210730 13:54:42.842" endtime="20210730 13:54:42.849"/>
</kw>
<status status="PASS" starttime="20210730 13:54:41.271" endtime="20210730 13:54:42.849"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 13:54:42.851" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 13:54:42.849" endtime="20210730 13:54:42.852"/>
</kw>
<msg timestamp="20210730 13:54:42.852" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 13:54:42.849" endtime="20210730 13:54:42.852"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>first_name</arg>
<arg>Two valid first names seperated by multiple space characters making it invalid</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 13:54:42.852" endtime="20210730 13:54:42.853"/>
</kw>
<status status="PASS" starttime="20210730 13:54:42.852" endtime="20210730 13:54:42.853"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=firstname</arg>
<arg>field_data=${user_data}[first_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:42.854" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 13:54:42.854" endtime="20210730 13:54:42.855"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 13:54:42.855" level="INFO">${payload} = {'firstname': 'Helena      Margaretha'}</msg>
<status status="PASS" starttime="20210730 13:54:42.855" endtime="20210730 13:54:42.855"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 13:54:42.865" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 13:54:42.865" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 13:54:42.855" endtime="20210730 13:54:42.865"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 13:54:42.866" endtime="20210730 13:54:42.866"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 13:54:42.866" endtime="20210730 13:54:42.866"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:42.855" endtime="20210730 13:54:42.866"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:42.855" endtime="20210730 13:54:42.866"/>
</for>
<status status="FAIL" starttime="20210730 13:54:42.853" endtime="20210730 13:54:42.866"/>
</kw>
<status status="FAIL" starttime="20210730 13:54:42.853" endtime="20210730 13:54:42.866"/>
</iter>
<status status="FAIL" starttime="20210730 13:54:42.853" endtime="20210730 13:54:42.866"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 13:54:42.870" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 13:54:42.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 13:54:42.881" level="INFO">${pids} = 18690
18697
18701</msg>
<status status="PASS" starttime="20210730 13:54:42.867" endtime="20210730 13:54:42.881"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:42.882" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 13:54:42.881" endtime="20210730 13:54:42.882"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 13:54:42.883" level="INFO">${pids} = ['18690', '18697', '18701']</msg>
<status status="PASS" starttime="20210730 13:54:42.882" endtime="20210730 13:54:42.883"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">18690</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:42.887" level="INFO">Running command 'kill 18690 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:42.883" endtime="20210730 13:54:42.887"/>
</kw>
<status status="PASS" starttime="20210730 13:54:42.883" endtime="20210730 13:54:42.888"/>
</iter>
<iter>
<var name="${pid}">18697</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:42.891" level="INFO">Running command 'kill 18697 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:42.888" endtime="20210730 13:54:42.893"/>
</kw>
<status status="PASS" starttime="20210730 13:54:42.888" endtime="20210730 13:54:42.893"/>
</iter>
<iter>
<var name="${pid}">18701</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 13:54:42.898" level="INFO">Running command 'kill 18701 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 13:54:42.894" endtime="20210730 13:54:42.898"/>
</kw>
<status status="PASS" starttime="20210730 13:54:42.894" endtime="20210730 13:54:42.899"/>
</iter>
<status status="PASS" starttime="20210730 13:54:42.883" endtime="20210730 13:54:42.899"/>
</for>
<status status="PASS" starttime="20210730 13:54:42.882" endtime="20210730 13:54:42.899"/>
</branch>
<status status="PASS" starttime="20210730 13:54:42.882" endtime="20210730 13:54:42.899"/>
</if>
<status status="PASS" starttime="20210730 13:54:42.867" endtime="20210730 13:54:42.899"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
firstname as such:
{
"firstname": 'Helena Margaretha'
}
Then, each request should fail with the following response body:
{
"message": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<tag>run-me</tag>
<status status="FAIL" starttime="20210730 13:54:41.270" endtime="20210730 13:54:42.899">We expected a JSON, but received text/html</status>
</test>
<doc>This test suite contains test cases for CRF Demo API.
Documentation for the API can be found:
https://github.com/Interview-demoapp/Flasky
The acceptance criteria we verify here is
"3: As an API Consumer, if authenticated, I can update personal information of users"
Definitions
(1) System User: The user, who is registered to the system under test with a valid token
(2) API User: The user, who calls the API to update personal information of the system user</doc>
<status status="FAIL" starttime="20210730 13:51:44.120" endtime="20210730 13:54:42.903"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="110" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="2" skip="0">run-me</stat>
</tag>
<suite>
<stat pass="0" fail="110" skip="0" id="s1" name="3-Updating-Personal-Information">3-Updating-Personal-Information</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20210730 13:53:00.715" level="WARN">Multiple test cases with name 'With Each Valid Token, Updating Password Of Each System User With ABCDEFG Results In "Field update not allowed"' executed in test suite '3-Updating-Personal-Information'.</msg>
<msg timestamp="20210730 13:53:02.333" level="WARN">Multiple test cases with name 'With Each Valid Token, Updating Password Of Each System User With ABCDEFGH Results In "Field update not allowed"' executed in test suite '3-Updating-Personal-Information'.</msg>
<msg timestamp="20210730 13:53:03.952" level="WARN">Multiple test cases with name 'With Each Valid Token, Updating Password Of Each System User With ABCDEFGHJKLMNPRSTOÖUÜVYZ Results In "Field update not allowed"' executed in test suite '3-Updating-Personal-Information'.</msg>
<msg timestamp="20210730 13:53:29.888" level="WARN">Multiple test cases with name 'With Each Valid Token, Updating Password Of Each System User With ABCD012 Results In "Field update not allowed"' executed in test suite '3-Updating-Personal-Information'.</msg>
<msg timestamp="20210730 13:53:31.511" level="WARN">Multiple test cases with name 'With Each Valid Token, Updating Password Of Each System User With ABCD0123 Results In "Field update not allowed"' executed in test suite '3-Updating-Personal-Information'.</msg>
<msg timestamp="20210730 13:53:34.746" level="WARN">Multiple test cases with name 'With Each Valid Token, Updating Password Of Each System User With ABCD!?. Results In "Field update not allowed"' executed in test suite '3-Updating-Personal-Information'.</msg>
</errors>
</robot>
