<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0.3 (Python 3.7.4 on linux)" generated="20210731 12:09:19.493" rpa="false" schemaversion="2">
<suite id="s1" name="3-Updating-Personal-Information" source="/home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/Tests/API/3-Updating-Personal-Information.robot">
<kw name="Import DataManager" library="Common" type="SETUP">
<kw name="Convert Suite Variables To Correct Types" library="Common">
<doc>This keyword is needed because parameters passed by command line
to robot (i.e. -v variable_name:value) are of string types.
In run command we pass 2 parameters to robot:
robot -d Results/ -v DATA_SET_LENGTH:100 -v USE_EXISTING_FORM_DATA_SET:True -v BROWSER:chromium -P CustomLibs Tests/
So, we have the following variables passed as strings:
- DATA_SET_LENGTH:100
- USE_EXISTING_FORM_DATA_SET:True
We need to convert:
- DATA_SET_LENGTH to int (i.e. integer)
- USE_EXISTING_FORM_DATA_SET to bool (i.e. boolean)
Later these values will be used while loading DataManager.robot resource.</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${DATA_SET_LENGTH}</var>
<arg>int($DATA_SET_LENGTH)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210731 12:09:20.203" level="INFO">${DATA_SET_LENGTH} = 100</msg>
<status status="PASS" starttime="20210731 12:09:20.199" endtime="20210731 12:09:20.203"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${USE_EXISTING_FORM_DATA_SET}</var>
<arg>$USE_EXISTING_FORM_DATA_SET=='True'</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210731 12:09:20.204" level="INFO">${USE_EXISTING_FORM_DATA_SET} = True</msg>
<status status="PASS" starttime="20210731 12:09:20.203" endtime="20210731 12:09:20.204"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DATA_SET_LENGTH}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210731 12:09:20.204" level="INFO">${DATA_SET_LENGTH} = 100</msg>
<status status="PASS" starttime="20210731 12:09:20.204" endtime="20210731 12:09:20.204"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${USE_EXISTING_FORM_DATA_SET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210731 12:09:20.205" level="INFO">${USE_EXISTING_FORM_DATA_SET} = True</msg>
<status status="PASS" starttime="20210731 12:09:20.205" endtime="20210731 12:09:20.205"/>
</kw>
<status status="PASS" starttime="20210731 12:09:20.199" endtime="20210731 12:09:20.205"/>
</kw>
<kw name="Import Resource" library="BuiltIn">
<arg>${EXECDIR}${/}Resources${/}DataManager.robot</arg>
<doc>Imports a resource file with the given path.</doc>
<status status="PASS" starttime="20210731 12:09:20.205" endtime="20210731 12:09:20.214"/>
</kw>
<status status="PASS" starttime="20210731 12:09:20.198" endtime="20210731 12:09:20.215"/>
</kw>
<test id="s1-t1" name="All System Users With A Valid Token Can Update Firstname, Lastname And Phone Of All System Users With Valid Values">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210731 12:09:20.219" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210731 12:09:20.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20210731 12:09:20.230" level="INFO">${pids} = 21617</msg>
<status status="PASS" starttime="20210731 12:09:20.216" endtime="20210731 12:09:20.230"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210731 12:09:20.231" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210731 12:09:20.230" endtime="20210731 12:09:20.231"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210731 12:09:20.232" level="INFO">${pids} = ['21617']</msg>
<status status="PASS" starttime="20210731 12:09:20.232" endtime="20210731 12:09:20.232"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">21617</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:20.236" level="INFO">Running command 'kill 21617 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:20.233" endtime="20210731 12:09:20.237"/>
</kw>
<status status="PASS" starttime="20210731 12:09:20.232" endtime="20210731 12:09:20.237"/>
</iter>
<status status="PASS" starttime="20210731 12:09:20.232" endtime="20210731 12:09:20.237"/>
</for>
<status status="PASS" starttime="20210731 12:09:20.231" endtime="20210731 12:09:20.237"/>
</branch>
<status status="PASS" starttime="20210731 12:09:20.231" endtime="20210731 12:09:20.237"/>
</if>
<status status="PASS" starttime="20210731 12:09:20.216" endtime="20210731 12:09:20.237"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:20.239" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:20.238" endtime="20210731 12:09:20.239"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:20.240" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210731 12:09:20.239" endtime="20210731 12:09:20.240"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210731 12:09:20.240" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210731 12:09:20.240" endtime="20210731 12:09:20.240"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:20.241" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:20.240" endtime="20210731 12:09:20.241"/>
</kw>
<msg timestamp="20210731 12:09:20.242" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:20.239" endtime="20210731 12:09:20.242"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:20.249" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:20.242" endtime="20210731 12:09:20.250"/>
</kw>
<status status="PASS" starttime="20210731 12:09:20.238" endtime="20210731 12:09:20.251"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210731 12:09:20.252" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210731 12:09:20.252" endtime="20210731 12:09:20.257"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210731 12:09:21.758" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210731 12:09:20.258" endtime="20210731 12:09:21.759"/>
</kw>
<status status="PASS" starttime="20210731 12:09:20.251" endtime="20210731 12:09:21.759"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:21.760" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210731 12:09:21.760" endtime="20210731 12:09:21.760"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210731 12:09:21.761" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210731 12:09:21.760" endtime="20210731 12:09:21.761"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:21.761" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:21.761" endtime="20210731 12:09:21.761"/>
</kw>
<msg timestamp="20210731 12:09:21.761" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:21.759" endtime="20210731 12:09:21.761"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210731 12:09:21.763" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210731 12:09:21.762" endtime="20210731 12:09:21.764"/>
</kw>
<status status="PASS" starttime="20210731 12:09:21.759" endtime="20210731 12:09:21.764"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210731 12:09:21.765" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210731 12:09:21.765" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210731 12:09:21.765" endtime="20210731 12:09:21.766"/>
</kw>
<status status="PASS" starttime="20210731 12:09:21.764" endtime="20210731 12:09:21.766"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210731 12:09:21.767" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210731 12:09:21.767" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210731 12:09:21.767" endtime="20210731 12:09:21.767"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210731 12:09:21.768" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210731 12:09:21.767" endtime="20210731 12:09:21.768"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:21.769" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210731 12:09:21.768" endtime="20210731 12:09:21.769"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210731 12:09:21.769" endtime="20210731 12:09:21.770"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210731 12:09:21.771" endtime="20210731 12:09:21.771"/>
</kw>
<status status="PASS" starttime="20210731 12:09:21.768" endtime="20210731 12:09:21.771"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:21.772" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210731 12:09:21.771" endtime="20210731 12:09:21.772"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210731 12:09:21.772" endtime="20210731 12:09:21.773"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210731 12:09:21.773" endtime="20210731 12:09:21.774"/>
</kw>
<status status="PASS" starttime="20210731 12:09:21.771" endtime="20210731 12:09:21.774"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:21.774" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210731 12:09:21.774" endtime="20210731 12:09:21.774"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210731 12:09:21.774" endtime="20210731 12:09:21.775"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210731 12:09:21.776" endtime="20210731 12:09:21.776"/>
</kw>
<status status="PASS" starttime="20210731 12:09:21.774" endtime="20210731 12:09:21.776"/>
</iter>
<status status="PASS" starttime="20210731 12:09:21.768" endtime="20210731 12:09:21.776"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210731 12:09:21.777" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210731 12:09:21.776" endtime="20210731 12:09:21.777"/>
</kw>
<status status="PASS" starttime="20210731 12:09:21.766" endtime="20210731 12:09:21.777"/>
</kw>
<status status="PASS" starttime="20210731 12:09:20.216" endtime="20210731 12:09:21.777"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:21.778" level="INFO">${payload} = {}</msg>
<status status="PASS" starttime="20210731 12:09:21.777" endtime="20210731 12:09:21.778"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${payload}</arg>
<arg>firstname=Hakan</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210731 12:09:21.778" endtime="20210731 12:09:21.778"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${payload}</arg>
<arg>lastname=Cuzdan</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210731 12:09:21.779" endtime="20210731 12:09:21.779"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${payload}</arg>
<arg>phone=+358406875453</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210731 12:09:21.779" endtime="20210731 12:09:21.779"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Update Given Fields For All System Users">
<arg>${api_user}[token]</arg>
<arg>${payload}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:21.781" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210731 12:09:21.780" endtime="20210731 12:09:21.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${payload}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210731 12:09:21.782" level="INFO">{'firstname': 'Hakan', 'lastname': 'Cuzdan', 'phone': '+358406875453'}</msg>
<status status="PASS" starttime="20210731 12:09:21.781" endtime="20210731 12:09:21.782"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210731 12:09:21.794" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210731 12:09:21.795" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210731 12:09:21.782" endtime="20210731 12:09:21.795"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Updated</arg>
<arg>status=SUCCESS</arg>
<status status="NOT RUN" starttime="20210731 12:09:21.795" endtime="20210731 12:09:21.795"/>
</kw>
<kw name="Verify System User's Data Updated In Database With Payload">
<arg>${system_user}</arg>
<arg>${payload}</arg>
<status status="NOT RUN" starttime="20210731 12:09:21.795" endtime="20210731 12:09:21.795"/>
</kw>
<status status="FAIL" starttime="20210731 12:09:21.782" endtime="20210731 12:09:21.795"/>
</iter>
<status status="FAIL" starttime="20210731 12:09:21.782" endtime="20210731 12:09:21.795"/>
</for>
<status status="FAIL" starttime="20210731 12:09:21.780" endtime="20210731 12:09:21.796"/>
</kw>
<status status="FAIL" starttime="20210731 12:09:21.780" endtime="20210731 12:09:21.796"/>
</iter>
<status status="FAIL" starttime="20210731 12:09:21.780" endtime="20210731 12:09:21.796"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210731 12:09:21.800" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210731 12:09:21.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20210731 12:09:21.810" level="INFO">${pids} = 21640
21647
21650</msg>
<status status="PASS" starttime="20210731 12:09:21.797" endtime="20210731 12:09:21.810"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210731 12:09:21.812" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210731 12:09:21.811" endtime="20210731 12:09:21.812"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210731 12:09:21.812" level="INFO">${pids} = ['21640', '21647', '21650']</msg>
<status status="PASS" starttime="20210731 12:09:21.812" endtime="20210731 12:09:21.812"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">21640</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:21.817" level="INFO">Running command 'kill 21640 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:21.813" endtime="20210731 12:09:21.818"/>
</kw>
<status status="PASS" starttime="20210731 12:09:21.813" endtime="20210731 12:09:21.818"/>
</iter>
<iter>
<var name="${pid}">21647</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:21.822" level="INFO">Running command 'kill 21647 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:21.818" endtime="20210731 12:09:21.822"/>
</kw>
<status status="PASS" starttime="20210731 12:09:21.818" endtime="20210731 12:09:21.822"/>
</iter>
<iter>
<var name="${pid}">21650</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:21.828" level="INFO">Running command 'kill 21650 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:21.823" endtime="20210731 12:09:21.828"/>
</kw>
<status status="PASS" starttime="20210731 12:09:21.823" endtime="20210731 12:09:21.828"/>
</iter>
<status status="PASS" starttime="20210731 12:09:21.812" endtime="20210731 12:09:21.828"/>
</for>
<status status="PASS" starttime="20210731 12:09:21.812" endtime="20210731 12:09:21.828"/>
</branch>
<status status="PASS" starttime="20210731 12:09:21.812" endtime="20210731 12:09:21.828"/>
</if>
<status status="PASS" starttime="20210731 12:09:21.796" endtime="20210731 12:09:21.829"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set:
{
"firstname": "Hakan",
"lastname": "Cuzdan",
"phone": '+358406875453'
}
Note that firstname, lastname and phone are valid.
Then, each request should pass with the following response body:
{
"message": "Updated",
"status": "SUCCESS"
}
This test not only verifies message and status but also verifies that &lt;username&gt;'s data in the database has changed.</doc>
<tag>run-me</tag>
<status status="FAIL" starttime="20210731 12:09:20.215" endtime="20210731 12:09:21.829">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t2" name="All System Users With A Valid Token Can Update Firstname And Lastname Of All System Users With Valid Values">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210731 12:09:21.837" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210731 12:09:21.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20210731 12:09:21.850" level="INFO">${pids} = 21679</msg>
<status status="PASS" starttime="20210731 12:09:21.832" endtime="20210731 12:09:21.850"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210731 12:09:21.851" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210731 12:09:21.851" endtime="20210731 12:09:21.851"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210731 12:09:21.852" level="INFO">${pids} = ['21679']</msg>
<status status="PASS" starttime="20210731 12:09:21.852" endtime="20210731 12:09:21.852"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">21679</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:21.856" level="INFO">Running command 'kill 21679 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:21.853" endtime="20210731 12:09:21.857"/>
</kw>
<status status="PASS" starttime="20210731 12:09:21.853" endtime="20210731 12:09:21.857"/>
</iter>
<status status="PASS" starttime="20210731 12:09:21.852" endtime="20210731 12:09:21.857"/>
</for>
<status status="PASS" starttime="20210731 12:09:21.852" endtime="20210731 12:09:21.857"/>
</branch>
<status status="PASS" starttime="20210731 12:09:21.851" endtime="20210731 12:09:21.857"/>
</if>
<status status="PASS" starttime="20210731 12:09:21.831" endtime="20210731 12:09:21.857"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:21.859" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:21.858" endtime="20210731 12:09:21.859"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:21.860" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210731 12:09:21.859" endtime="20210731 12:09:21.860"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210731 12:09:21.860" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210731 12:09:21.860" endtime="20210731 12:09:21.860"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:21.861" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:21.860" endtime="20210731 12:09:21.861"/>
</kw>
<msg timestamp="20210731 12:09:21.861" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:21.859" endtime="20210731 12:09:21.861"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:21.865" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:21.861" endtime="20210731 12:09:21.867"/>
</kw>
<status status="PASS" starttime="20210731 12:09:21.858" endtime="20210731 12:09:21.867"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210731 12:09:21.869" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210731 12:09:21.868" endtime="20210731 12:09:21.875"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210731 12:09:23.376" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210731 12:09:21.875" endtime="20210731 12:09:23.377"/>
</kw>
<status status="PASS" starttime="20210731 12:09:21.867" endtime="20210731 12:09:23.377"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:23.378" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210731 12:09:23.378" endtime="20210731 12:09:23.378"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210731 12:09:23.379" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210731 12:09:23.379" endtime="20210731 12:09:23.379"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:23.380" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:23.379" endtime="20210731 12:09:23.380"/>
</kw>
<msg timestamp="20210731 12:09:23.380" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:23.378" endtime="20210731 12:09:23.380"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210731 12:09:23.381" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210731 12:09:23.380" endtime="20210731 12:09:23.381"/>
</kw>
<status status="PASS" starttime="20210731 12:09:23.377" endtime="20210731 12:09:23.381"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210731 12:09:23.382" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210731 12:09:23.382" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210731 12:09:23.382" endtime="20210731 12:09:23.382"/>
</kw>
<status status="PASS" starttime="20210731 12:09:23.381" endtime="20210731 12:09:23.382"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210731 12:09:23.383" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210731 12:09:23.383" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210731 12:09:23.383" endtime="20210731 12:09:23.383"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210731 12:09:23.384" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210731 12:09:23.383" endtime="20210731 12:09:23.384"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:23.384" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210731 12:09:23.384" endtime="20210731 12:09:23.384"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210731 12:09:23.385" endtime="20210731 12:09:23.386"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210731 12:09:23.386" endtime="20210731 12:09:23.386"/>
</kw>
<status status="PASS" starttime="20210731 12:09:23.384" endtime="20210731 12:09:23.386"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:23.386" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210731 12:09:23.386" endtime="20210731 12:09:23.386"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210731 12:09:23.387" endtime="20210731 12:09:23.387"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210731 12:09:23.387" endtime="20210731 12:09:23.388"/>
</kw>
<status status="PASS" starttime="20210731 12:09:23.386" endtime="20210731 12:09:23.388"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:23.388" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210731 12:09:23.388" endtime="20210731 12:09:23.388"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210731 12:09:23.388" endtime="20210731 12:09:23.389"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210731 12:09:23.390" endtime="20210731 12:09:23.390"/>
</kw>
<status status="PASS" starttime="20210731 12:09:23.388" endtime="20210731 12:09:23.390"/>
</iter>
<status status="PASS" starttime="20210731 12:09:23.384" endtime="20210731 12:09:23.390"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210731 12:09:23.390" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210731 12:09:23.390" endtime="20210731 12:09:23.391"/>
</kw>
<status status="PASS" starttime="20210731 12:09:23.383" endtime="20210731 12:09:23.391"/>
</kw>
<status status="PASS" starttime="20210731 12:09:21.831" endtime="20210731 12:09:23.391"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:23.391" level="INFO">${payload} = {}</msg>
<status status="PASS" starttime="20210731 12:09:23.391" endtime="20210731 12:09:23.391"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${payload}</arg>
<arg>firstname=Hakan</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210731 12:09:23.392" endtime="20210731 12:09:23.392"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${payload}</arg>
<arg>lastname=Cuzdan</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210731 12:09:23.392" endtime="20210731 12:09:23.392"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Update Given Fields For All System Users">
<arg>${api_user}[token]</arg>
<arg>${payload}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:23.394" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210731 12:09:23.393" endtime="20210731 12:09:23.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${payload}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210731 12:09:23.394" level="INFO">{'firstname': 'Hakan', 'lastname': 'Cuzdan'}</msg>
<status status="PASS" starttime="20210731 12:09:23.394" endtime="20210731 12:09:23.394"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210731 12:09:23.405" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210731 12:09:23.406" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210731 12:09:23.394" endtime="20210731 12:09:23.406"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Updated</arg>
<arg>status=SUCCESS</arg>
<status status="NOT RUN" starttime="20210731 12:09:23.406" endtime="20210731 12:09:23.406"/>
</kw>
<kw name="Verify System User's Data Updated In Database With Payload">
<arg>${system_user}</arg>
<arg>${payload}</arg>
<status status="NOT RUN" starttime="20210731 12:09:23.406" endtime="20210731 12:09:23.406"/>
</kw>
<status status="FAIL" starttime="20210731 12:09:23.394" endtime="20210731 12:09:23.406"/>
</iter>
<status status="FAIL" starttime="20210731 12:09:23.394" endtime="20210731 12:09:23.406"/>
</for>
<status status="FAIL" starttime="20210731 12:09:23.393" endtime="20210731 12:09:23.406"/>
</kw>
<status status="FAIL" starttime="20210731 12:09:23.392" endtime="20210731 12:09:23.407"/>
</iter>
<status status="FAIL" starttime="20210731 12:09:23.392" endtime="20210731 12:09:23.407"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210731 12:09:23.411" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210731 12:09:23.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20210731 12:09:23.421" level="INFO">${pids} = 21702
21709
21711</msg>
<status status="PASS" starttime="20210731 12:09:23.408" endtime="20210731 12:09:23.421"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210731 12:09:23.422" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210731 12:09:23.422" endtime="20210731 12:09:23.422"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210731 12:09:23.423" level="INFO">${pids} = ['21702', '21709', '21711']</msg>
<status status="PASS" starttime="20210731 12:09:23.423" endtime="20210731 12:09:23.423"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">21702</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:23.428" level="INFO">Running command 'kill 21702 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:23.424" endtime="20210731 12:09:23.428"/>
</kw>
<status status="PASS" starttime="20210731 12:09:23.423" endtime="20210731 12:09:23.429"/>
</iter>
<iter>
<var name="${pid}">21709</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:23.432" level="INFO">Running command 'kill 21709 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:23.429" endtime="20210731 12:09:23.433"/>
</kw>
<status status="PASS" starttime="20210731 12:09:23.429" endtime="20210731 12:09:23.433"/>
</iter>
<iter>
<var name="${pid}">21711</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:23.438" level="INFO">Running command 'kill 21711 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:23.434" endtime="20210731 12:09:23.439"/>
</kw>
<status status="PASS" starttime="20210731 12:09:23.433" endtime="20210731 12:09:23.439"/>
</iter>
<status status="PASS" starttime="20210731 12:09:23.423" endtime="20210731 12:09:23.439"/>
</for>
<status status="PASS" starttime="20210731 12:09:23.423" endtime="20210731 12:09:23.439"/>
</branch>
<status status="PASS" starttime="20210731 12:09:23.422" endtime="20210731 12:09:23.439"/>
</if>
<status status="PASS" starttime="20210731 12:09:23.407" endtime="20210731 12:09:23.439"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set:
{
"firstname": "Hakan",
"lastname": "Cuzdan"
}
Note that firstname, lastname are valid.
Then, each request should pass with the following response body:
{
"message": "Updated",
"status": "SUCCESS"
}
This test not only verifies message and status but also verifies that &lt;username&gt;'s data in the database has changed.</doc>
<tag>run-me</tag>
<status status="FAIL" starttime="20210731 12:09:21.830" endtime="20210731 12:09:23.440">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t3" name="All System Users With A Valid Token Can Update Firstname And Phone Of All System Users With Valid Values">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210731 12:09:23.446" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210731 12:09:23.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20210731 12:09:23.455" level="INFO">${pids} = 21740</msg>
<status status="PASS" starttime="20210731 12:09:23.443" endtime="20210731 12:09:23.455"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210731 12:09:23.456" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210731 12:09:23.456" endtime="20210731 12:09:23.456"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210731 12:09:23.457" level="INFO">${pids} = ['21740']</msg>
<status status="PASS" starttime="20210731 12:09:23.457" endtime="20210731 12:09:23.457"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">21740</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:23.461" level="INFO">Running command 'kill 21740 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:23.458" endtime="20210731 12:09:23.462"/>
</kw>
<status status="PASS" starttime="20210731 12:09:23.458" endtime="20210731 12:09:23.462"/>
</iter>
<status status="PASS" starttime="20210731 12:09:23.457" endtime="20210731 12:09:23.462"/>
</for>
<status status="PASS" starttime="20210731 12:09:23.457" endtime="20210731 12:09:23.462"/>
</branch>
<status status="PASS" starttime="20210731 12:09:23.456" endtime="20210731 12:09:23.462"/>
</if>
<status status="PASS" starttime="20210731 12:09:23.442" endtime="20210731 12:09:23.462"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:23.464" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:23.463" endtime="20210731 12:09:23.464"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:23.464" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210731 12:09:23.464" endtime="20210731 12:09:23.464"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210731 12:09:23.465" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210731 12:09:23.465" endtime="20210731 12:09:23.465"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:23.466" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:23.465" endtime="20210731 12:09:23.466"/>
</kw>
<msg timestamp="20210731 12:09:23.466" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:23.464" endtime="20210731 12:09:23.466"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:23.469" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:23.466" endtime="20210731 12:09:23.472"/>
</kw>
<status status="PASS" starttime="20210731 12:09:23.463" endtime="20210731 12:09:23.472"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210731 12:09:23.474" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210731 12:09:23.473" endtime="20210731 12:09:23.479"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210731 12:09:24.981" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210731 12:09:23.480" endtime="20210731 12:09:24.981"/>
</kw>
<status status="PASS" starttime="20210731 12:09:23.472" endtime="20210731 12:09:24.982"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:24.983" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210731 12:09:24.983" endtime="20210731 12:09:24.983"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210731 12:09:24.984" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210731 12:09:24.984" endtime="20210731 12:09:24.984"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:24.985" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:24.984" endtime="20210731 12:09:24.985"/>
</kw>
<msg timestamp="20210731 12:09:24.985" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:24.983" endtime="20210731 12:09:24.985"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210731 12:09:24.986" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210731 12:09:24.985" endtime="20210731 12:09:24.987"/>
</kw>
<status status="PASS" starttime="20210731 12:09:24.982" endtime="20210731 12:09:24.987"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210731 12:09:24.988" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210731 12:09:24.988" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210731 12:09:24.988" endtime="20210731 12:09:24.988"/>
</kw>
<status status="PASS" starttime="20210731 12:09:24.987" endtime="20210731 12:09:24.988"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210731 12:09:24.989" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210731 12:09:24.989" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210731 12:09:24.989" endtime="20210731 12:09:24.989"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210731 12:09:24.990" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210731 12:09:24.989" endtime="20210731 12:09:24.990"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:24.991" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210731 12:09:24.990" endtime="20210731 12:09:24.991"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210731 12:09:24.991" endtime="20210731 12:09:24.992"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210731 12:09:24.992" endtime="20210731 12:09:24.992"/>
</kw>
<status status="PASS" starttime="20210731 12:09:24.990" endtime="20210731 12:09:24.992"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:24.993" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210731 12:09:24.993" endtime="20210731 12:09:24.993"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210731 12:09:24.993" endtime="20210731 12:09:24.994"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210731 12:09:24.994" endtime="20210731 12:09:24.994"/>
</kw>
<status status="PASS" starttime="20210731 12:09:24.992" endtime="20210731 12:09:24.995"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:24.995" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210731 12:09:24.995" endtime="20210731 12:09:24.995"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210731 12:09:24.995" endtime="20210731 12:09:24.996"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210731 12:09:24.997" endtime="20210731 12:09:24.997"/>
</kw>
<status status="PASS" starttime="20210731 12:09:24.995" endtime="20210731 12:09:24.997"/>
</iter>
<status status="PASS" starttime="20210731 12:09:24.990" endtime="20210731 12:09:24.997"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210731 12:09:24.998" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210731 12:09:24.997" endtime="20210731 12:09:24.998"/>
</kw>
<status status="PASS" starttime="20210731 12:09:24.988" endtime="20210731 12:09:24.998"/>
</kw>
<status status="PASS" starttime="20210731 12:09:23.442" endtime="20210731 12:09:24.998"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:24.999" level="INFO">${payload} = {}</msg>
<status status="PASS" starttime="20210731 12:09:24.998" endtime="20210731 12:09:24.999"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${payload}</arg>
<arg>firstname=Hakan</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210731 12:09:24.999" endtime="20210731 12:09:24.999"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${payload}</arg>
<arg>phone=+358406875453</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210731 12:09:24.999" endtime="20210731 12:09:25.000"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Update Given Fields For All System Users">
<arg>${api_user}[token]</arg>
<arg>${payload}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:25.001" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210731 12:09:25.001" endtime="20210731 12:09:25.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${payload}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210731 12:09:25.002" level="INFO">{'firstname': 'Hakan', 'phone': '+358406875453'}</msg>
<status status="PASS" starttime="20210731 12:09:25.002" endtime="20210731 12:09:25.002"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210731 12:09:25.017" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210731 12:09:25.017" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210731 12:09:25.002" endtime="20210731 12:09:25.017"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Updated</arg>
<arg>status=SUCCESS</arg>
<status status="NOT RUN" starttime="20210731 12:09:25.017" endtime="20210731 12:09:25.018"/>
</kw>
<kw name="Verify System User's Data Updated In Database With Payload">
<arg>${system_user}</arg>
<arg>${payload}</arg>
<status status="NOT RUN" starttime="20210731 12:09:25.018" endtime="20210731 12:09:25.018"/>
</kw>
<status status="FAIL" starttime="20210731 12:09:25.002" endtime="20210731 12:09:25.018"/>
</iter>
<status status="FAIL" starttime="20210731 12:09:25.002" endtime="20210731 12:09:25.018"/>
</for>
<status status="FAIL" starttime="20210731 12:09:25.000" endtime="20210731 12:09:25.018"/>
</kw>
<status status="FAIL" starttime="20210731 12:09:25.000" endtime="20210731 12:09:25.018"/>
</iter>
<status status="FAIL" starttime="20210731 12:09:25.000" endtime="20210731 12:09:25.018"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210731 12:09:25.022" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210731 12:09:25.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20210731 12:09:25.034" level="INFO">${pids} = 21763
21770
21772</msg>
<status status="PASS" starttime="20210731 12:09:25.019" endtime="20210731 12:09:25.034"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210731 12:09:25.036" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210731 12:09:25.035" endtime="20210731 12:09:25.036"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210731 12:09:25.037" level="INFO">${pids} = ['21763', '21770', '21772']</msg>
<status status="PASS" starttime="20210731 12:09:25.036" endtime="20210731 12:09:25.037"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">21763</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:25.041" level="INFO">Running command 'kill 21763 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:25.037" endtime="20210731 12:09:25.041"/>
</kw>
<status status="PASS" starttime="20210731 12:09:25.037" endtime="20210731 12:09:25.041"/>
</iter>
<iter>
<var name="${pid}">21770</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:25.047" level="INFO">Running command 'kill 21770 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:25.042" endtime="20210731 12:09:25.047"/>
</kw>
<status status="PASS" starttime="20210731 12:09:25.042" endtime="20210731 12:09:25.048"/>
</iter>
<iter>
<var name="${pid}">21772</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:25.053" level="INFO">Running command 'kill 21772 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:25.048" endtime="20210731 12:09:25.053"/>
</kw>
<status status="PASS" starttime="20210731 12:09:25.048" endtime="20210731 12:09:25.053"/>
</iter>
<status status="PASS" starttime="20210731 12:09:25.037" endtime="20210731 12:09:25.053"/>
</for>
<status status="PASS" starttime="20210731 12:09:25.036" endtime="20210731 12:09:25.053"/>
</branch>
<status status="PASS" starttime="20210731 12:09:25.036" endtime="20210731 12:09:25.053"/>
</if>
<status status="PASS" starttime="20210731 12:09:25.018" endtime="20210731 12:09:25.054"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set:
{
"firstname": "Hakan",
"phone": '+358406875453'
}
Note that firstname and phone are valid.
Then, each request should pass with the following response body:
{
"message": "Updated",
"status": "SUCCESS"
}
This test not only verifies message and status but also verifies that &lt;username&gt;'s data in the database has changed.</doc>
<tag>run-me</tag>
<status status="FAIL" starttime="20210731 12:09:23.440" endtime="20210731 12:09:25.054">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t4" name="All System Users With A Valid Token Can Update Lastname And Phone Of All System Users With Valid Values">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210731 12:09:25.064" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210731 12:09:25.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20210731 12:09:25.075" level="INFO">${pids} = 21801</msg>
<status status="PASS" starttime="20210731 12:09:25.056" endtime="20210731 12:09:25.075"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210731 12:09:25.076" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210731 12:09:25.075" endtime="20210731 12:09:25.076"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210731 12:09:25.077" level="INFO">${pids} = ['21801']</msg>
<status status="PASS" starttime="20210731 12:09:25.076" endtime="20210731 12:09:25.077"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">21801</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:25.080" level="INFO">Running command 'kill 21801 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:25.077" endtime="20210731 12:09:25.080"/>
</kw>
<status status="PASS" starttime="20210731 12:09:25.077" endtime="20210731 12:09:25.081"/>
</iter>
<status status="PASS" starttime="20210731 12:09:25.077" endtime="20210731 12:09:25.081"/>
</for>
<status status="PASS" starttime="20210731 12:09:25.076" endtime="20210731 12:09:25.081"/>
</branch>
<status status="PASS" starttime="20210731 12:09:25.076" endtime="20210731 12:09:25.081"/>
</if>
<status status="PASS" starttime="20210731 12:09:25.056" endtime="20210731 12:09:25.081"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:25.082" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:25.082" endtime="20210731 12:09:25.082"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:25.083" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210731 12:09:25.083" endtime="20210731 12:09:25.083"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210731 12:09:25.084" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210731 12:09:25.084" endtime="20210731 12:09:25.084"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:25.084" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:25.084" endtime="20210731 12:09:25.084"/>
</kw>
<msg timestamp="20210731 12:09:25.085" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:25.083" endtime="20210731 12:09:25.085"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:25.088" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:25.085" endtime="20210731 12:09:25.090"/>
</kw>
<status status="PASS" starttime="20210731 12:09:25.081" endtime="20210731 12:09:25.090"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210731 12:09:25.092" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210731 12:09:25.091" endtime="20210731 12:09:25.096"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210731 12:09:26.597" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210731 12:09:25.096" endtime="20210731 12:09:26.597"/>
</kw>
<status status="PASS" starttime="20210731 12:09:25.090" endtime="20210731 12:09:26.598"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:26.599" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210731 12:09:26.599" endtime="20210731 12:09:26.599"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210731 12:09:26.600" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210731 12:09:26.599" endtime="20210731 12:09:26.600"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:26.600" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:26.600" endtime="20210731 12:09:26.600"/>
</kw>
<msg timestamp="20210731 12:09:26.600" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:26.598" endtime="20210731 12:09:26.600"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210731 12:09:26.601" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210731 12:09:26.600" endtime="20210731 12:09:26.601"/>
</kw>
<status status="PASS" starttime="20210731 12:09:26.598" endtime="20210731 12:09:26.601"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210731 12:09:26.602" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210731 12:09:26.602" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210731 12:09:26.602" endtime="20210731 12:09:26.602"/>
</kw>
<status status="PASS" starttime="20210731 12:09:26.602" endtime="20210731 12:09:26.602"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210731 12:09:26.603" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210731 12:09:26.603" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210731 12:09:26.603" endtime="20210731 12:09:26.603"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210731 12:09:26.603" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210731 12:09:26.603" endtime="20210731 12:09:26.604"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:26.604" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210731 12:09:26.604" endtime="20210731 12:09:26.604"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210731 12:09:26.604" endtime="20210731 12:09:26.605"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210731 12:09:26.605" endtime="20210731 12:09:26.606"/>
</kw>
<status status="PASS" starttime="20210731 12:09:26.604" endtime="20210731 12:09:26.606"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:26.606" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210731 12:09:26.606" endtime="20210731 12:09:26.607"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210731 12:09:26.607" endtime="20210731 12:09:26.608"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210731 12:09:26.608" endtime="20210731 12:09:26.608"/>
</kw>
<status status="PASS" starttime="20210731 12:09:26.606" endtime="20210731 12:09:26.608"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:26.610" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210731 12:09:26.609" endtime="20210731 12:09:26.610"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210731 12:09:26.610" endtime="20210731 12:09:26.611"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210731 12:09:26.611" endtime="20210731 12:09:26.611"/>
</kw>
<status status="PASS" starttime="20210731 12:09:26.609" endtime="20210731 12:09:26.611"/>
</iter>
<status status="PASS" starttime="20210731 12:09:26.604" endtime="20210731 12:09:26.611"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210731 12:09:26.612" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210731 12:09:26.611" endtime="20210731 12:09:26.612"/>
</kw>
<status status="PASS" starttime="20210731 12:09:26.602" endtime="20210731 12:09:26.612"/>
</kw>
<status status="PASS" starttime="20210731 12:09:25.055" endtime="20210731 12:09:26.612"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:26.613" level="INFO">${payload} = {}</msg>
<status status="PASS" starttime="20210731 12:09:26.612" endtime="20210731 12:09:26.613"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${payload}</arg>
<arg>lastname=Cuzdan</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210731 12:09:26.613" endtime="20210731 12:09:26.613"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${payload}</arg>
<arg>phone=+358406875453</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210731 12:09:26.613" endtime="20210731 12:09:26.614"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Update Given Fields For All System Users">
<arg>${api_user}[token]</arg>
<arg>${payload}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:26.615" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210731 12:09:26.615" endtime="20210731 12:09:26.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${payload}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210731 12:09:26.615" level="INFO">{'lastname': 'Cuzdan', 'phone': '+358406875453'}</msg>
<status status="PASS" starttime="20210731 12:09:26.615" endtime="20210731 12:09:26.615"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210731 12:09:26.626" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210731 12:09:26.627" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210731 12:09:26.616" endtime="20210731 12:09:26.627"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Updated</arg>
<arg>status=SUCCESS</arg>
<status status="NOT RUN" starttime="20210731 12:09:26.627" endtime="20210731 12:09:26.627"/>
</kw>
<kw name="Verify System User's Data Updated In Database With Payload">
<arg>${system_user}</arg>
<arg>${payload}</arg>
<status status="NOT RUN" starttime="20210731 12:09:26.627" endtime="20210731 12:09:26.627"/>
</kw>
<status status="FAIL" starttime="20210731 12:09:26.616" endtime="20210731 12:09:26.627"/>
</iter>
<status status="FAIL" starttime="20210731 12:09:26.616" endtime="20210731 12:09:26.627"/>
</for>
<status status="FAIL" starttime="20210731 12:09:26.614" endtime="20210731 12:09:26.628"/>
</kw>
<status status="FAIL" starttime="20210731 12:09:26.614" endtime="20210731 12:09:26.628"/>
</iter>
<status status="FAIL" starttime="20210731 12:09:26.614" endtime="20210731 12:09:26.628"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210731 12:09:26.632" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210731 12:09:26.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20210731 12:09:26.644" level="INFO">${pids} = 21824
21831
21834</msg>
<status status="PASS" starttime="20210731 12:09:26.628" endtime="20210731 12:09:26.644"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210731 12:09:26.645" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210731 12:09:26.644" endtime="20210731 12:09:26.645"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210731 12:09:26.646" level="INFO">${pids} = ['21824', '21831', '21834']</msg>
<status status="PASS" starttime="20210731 12:09:26.645" endtime="20210731 12:09:26.646"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">21824</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:26.650" level="INFO">Running command 'kill 21824 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:26.646" endtime="20210731 12:09:26.651"/>
</kw>
<status status="PASS" starttime="20210731 12:09:26.646" endtime="20210731 12:09:26.651"/>
</iter>
<iter>
<var name="${pid}">21831</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:26.655" level="INFO">Running command 'kill 21831 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:26.652" endtime="20210731 12:09:26.658"/>
</kw>
<status status="PASS" starttime="20210731 12:09:26.651" endtime="20210731 12:09:26.658"/>
</iter>
<iter>
<var name="${pid}">21834</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:26.662" level="INFO">Running command 'kill 21834 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:26.659" endtime="20210731 12:09:26.662"/>
</kw>
<status status="PASS" starttime="20210731 12:09:26.658" endtime="20210731 12:09:26.662"/>
</iter>
<status status="PASS" starttime="20210731 12:09:26.646" endtime="20210731 12:09:26.662"/>
</for>
<status status="PASS" starttime="20210731 12:09:26.645" endtime="20210731 12:09:26.662"/>
</branch>
<status status="PASS" starttime="20210731 12:09:26.645" endtime="20210731 12:09:26.663"/>
</if>
<status status="PASS" starttime="20210731 12:09:26.628" endtime="20210731 12:09:26.663"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set:
{
"lastname": "Cuzdan",
"phone": '+358406875453'
}
Note that lastname and phone are valid.
Then, each request should pass with the following response body:
{
"message": "Updated",
"status": "SUCCESS"
}
This test not only verifies message and status but also verifies that &lt;username&gt;'s data in the database has changed.</doc>
<tag>run-me</tag>
<status status="FAIL" starttime="20210731 12:09:25.055" endtime="20210731 12:09:26.663">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t5" name="All System Users With A Valid Token Can Update Firstname Of All System Users With Valid Values">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210731 12:09:26.668" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210731 12:09:26.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20210731 12:09:26.682" level="INFO">${pids} = 21863</msg>
<status status="PASS" starttime="20210731 12:09:26.665" endtime="20210731 12:09:26.682"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210731 12:09:26.683" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210731 12:09:26.682" endtime="20210731 12:09:26.683"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210731 12:09:26.684" level="INFO">${pids} = ['21863']</msg>
<status status="PASS" starttime="20210731 12:09:26.683" endtime="20210731 12:09:26.684"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">21863</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:26.688" level="INFO">Running command 'kill 21863 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:26.684" endtime="20210731 12:09:26.688"/>
</kw>
<status status="PASS" starttime="20210731 12:09:26.684" endtime="20210731 12:09:26.688"/>
</iter>
<status status="PASS" starttime="20210731 12:09:26.684" endtime="20210731 12:09:26.688"/>
</for>
<status status="PASS" starttime="20210731 12:09:26.683" endtime="20210731 12:09:26.688"/>
</branch>
<status status="PASS" starttime="20210731 12:09:26.683" endtime="20210731 12:09:26.688"/>
</if>
<status status="PASS" starttime="20210731 12:09:26.665" endtime="20210731 12:09:26.689"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:26.690" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:26.690" endtime="20210731 12:09:26.690"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:26.692" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210731 12:09:26.692" endtime="20210731 12:09:26.692"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210731 12:09:26.692" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210731 12:09:26.692" endtime="20210731 12:09:26.693"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:26.693" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:26.693" endtime="20210731 12:09:26.693"/>
</kw>
<msg timestamp="20210731 12:09:26.694" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:26.691" endtime="20210731 12:09:26.694"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:26.697" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:26.694" endtime="20210731 12:09:26.699"/>
</kw>
<status status="PASS" starttime="20210731 12:09:26.689" endtime="20210731 12:09:26.699"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210731 12:09:26.700" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210731 12:09:26.700" endtime="20210731 12:09:26.704"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210731 12:09:28.206" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210731 12:09:26.705" endtime="20210731 12:09:28.206"/>
</kw>
<status status="PASS" starttime="20210731 12:09:26.699" endtime="20210731 12:09:28.207"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:28.209" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210731 12:09:28.208" endtime="20210731 12:09:28.209"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210731 12:09:28.210" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210731 12:09:28.209" endtime="20210731 12:09:28.210"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:28.210" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:28.210" endtime="20210731 12:09:28.210"/>
</kw>
<msg timestamp="20210731 12:09:28.211" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:28.208" endtime="20210731 12:09:28.211"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210731 12:09:28.211" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210731 12:09:28.211" endtime="20210731 12:09:28.212"/>
</kw>
<status status="PASS" starttime="20210731 12:09:28.207" endtime="20210731 12:09:28.212"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210731 12:09:28.213" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210731 12:09:28.213" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210731 12:09:28.212" endtime="20210731 12:09:28.213"/>
</kw>
<status status="PASS" starttime="20210731 12:09:28.212" endtime="20210731 12:09:28.213"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210731 12:09:28.214" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210731 12:09:28.214" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210731 12:09:28.213" endtime="20210731 12:09:28.214"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210731 12:09:28.214" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210731 12:09:28.214" endtime="20210731 12:09:28.214"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:28.215" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210731 12:09:28.215" endtime="20210731 12:09:28.215"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210731 12:09:28.215" endtime="20210731 12:09:28.216"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210731 12:09:28.216" endtime="20210731 12:09:28.217"/>
</kw>
<status status="PASS" starttime="20210731 12:09:28.215" endtime="20210731 12:09:28.217"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:28.217" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210731 12:09:28.217" endtime="20210731 12:09:28.217"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210731 12:09:28.217" endtime="20210731 12:09:28.218"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210731 12:09:28.218" endtime="20210731 12:09:28.219"/>
</kw>
<status status="PASS" starttime="20210731 12:09:28.217" endtime="20210731 12:09:28.219"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:28.219" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210731 12:09:28.219" endtime="20210731 12:09:28.219"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210731 12:09:28.219" endtime="20210731 12:09:28.220"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210731 12:09:28.220" endtime="20210731 12:09:28.221"/>
</kw>
<status status="PASS" starttime="20210731 12:09:28.219" endtime="20210731 12:09:28.221"/>
</iter>
<status status="PASS" starttime="20210731 12:09:28.214" endtime="20210731 12:09:28.221"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210731 12:09:28.221" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210731 12:09:28.221" endtime="20210731 12:09:28.221"/>
</kw>
<status status="PASS" starttime="20210731 12:09:28.213" endtime="20210731 12:09:28.222"/>
</kw>
<status status="PASS" starttime="20210731 12:09:26.665" endtime="20210731 12:09:28.222"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:28.222" level="INFO">${payload} = {}</msg>
<status status="PASS" starttime="20210731 12:09:28.222" endtime="20210731 12:09:28.222"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${payload}</arg>
<arg>firstname=Hakan</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210731 12:09:28.222" endtime="20210731 12:09:28.223"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Update Given Fields For All System Users">
<arg>${api_user}[token]</arg>
<arg>${payload}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:28.224" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210731 12:09:28.224" endtime="20210731 12:09:28.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${payload}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210731 12:09:28.225" level="INFO">{'firstname': 'Hakan'}</msg>
<status status="PASS" starttime="20210731 12:09:28.224" endtime="20210731 12:09:28.225"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210731 12:09:28.236" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210731 12:09:28.237" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210731 12:09:28.225" endtime="20210731 12:09:28.237"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Updated</arg>
<arg>status=SUCCESS</arg>
<status status="NOT RUN" starttime="20210731 12:09:28.237" endtime="20210731 12:09:28.237"/>
</kw>
<kw name="Verify System User's Data Updated In Database With Payload">
<arg>${system_user}</arg>
<arg>${payload}</arg>
<status status="NOT RUN" starttime="20210731 12:09:28.237" endtime="20210731 12:09:28.237"/>
</kw>
<status status="FAIL" starttime="20210731 12:09:28.225" endtime="20210731 12:09:28.237"/>
</iter>
<status status="FAIL" starttime="20210731 12:09:28.225" endtime="20210731 12:09:28.237"/>
</for>
<status status="FAIL" starttime="20210731 12:09:28.223" endtime="20210731 12:09:28.237"/>
</kw>
<status status="FAIL" starttime="20210731 12:09:28.223" endtime="20210731 12:09:28.237"/>
</iter>
<status status="FAIL" starttime="20210731 12:09:28.223" endtime="20210731 12:09:28.237"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210731 12:09:28.243" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210731 12:09:28.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20210731 12:09:28.253" level="INFO">${pids} = 21886
21893
21895</msg>
<status status="PASS" starttime="20210731 12:09:28.239" endtime="20210731 12:09:28.253"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210731 12:09:28.254" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210731 12:09:28.253" endtime="20210731 12:09:28.254"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210731 12:09:28.255" level="INFO">${pids} = ['21886', '21893', '21895']</msg>
<status status="PASS" starttime="20210731 12:09:28.254" endtime="20210731 12:09:28.255"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">21886</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:28.261" level="INFO">Running command 'kill 21886 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:28.255" endtime="20210731 12:09:28.261"/>
</kw>
<status status="PASS" starttime="20210731 12:09:28.255" endtime="20210731 12:09:28.261"/>
</iter>
<iter>
<var name="${pid}">21893</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:28.265" level="INFO">Running command 'kill 21893 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:28.262" endtime="20210731 12:09:28.265"/>
</kw>
<status status="PASS" starttime="20210731 12:09:28.262" endtime="20210731 12:09:28.265"/>
</iter>
<iter>
<var name="${pid}">21895</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:28.269" level="INFO">Running command 'kill 21895 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:28.266" endtime="20210731 12:09:28.269"/>
</kw>
<status status="PASS" starttime="20210731 12:09:28.266" endtime="20210731 12:09:28.269"/>
</iter>
<status status="PASS" starttime="20210731 12:09:28.255" endtime="20210731 12:09:28.270"/>
</for>
<status status="PASS" starttime="20210731 12:09:28.254" endtime="20210731 12:09:28.270"/>
</branch>
<status status="PASS" starttime="20210731 12:09:28.254" endtime="20210731 12:09:28.270"/>
</if>
<status status="PASS" starttime="20210731 12:09:28.238" endtime="20210731 12:09:28.270"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set:
{
"firstname": "Hakan"
}
Note that firstname is valid.
Then, each request should pass with the following response body:
{
"message": "Updated",
"status": "SUCCESS"
}
This test not only verifies message and status but also verifies that &lt;username&gt;'s data in the database has changed.</doc>
<tag>run-me</tag>
<status status="FAIL" starttime="20210731 12:09:26.664" endtime="20210731 12:09:28.270">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t6" name="All System Users With A Valid Token Can Update Lastname Of All System Users With Valid Values">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210731 12:09:28.276" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210731 12:09:28.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20210731 12:09:28.287" level="INFO">${pids} = 21924</msg>
<status status="PASS" starttime="20210731 12:09:28.272" endtime="20210731 12:09:28.287"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210731 12:09:28.288" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210731 12:09:28.287" endtime="20210731 12:09:28.288"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210731 12:09:28.289" level="INFO">${pids} = ['21924']</msg>
<status status="PASS" starttime="20210731 12:09:28.289" endtime="20210731 12:09:28.289"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">21924</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:28.293" level="INFO">Running command 'kill 21924 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:28.290" endtime="20210731 12:09:28.294"/>
</kw>
<status status="PASS" starttime="20210731 12:09:28.289" endtime="20210731 12:09:28.294"/>
</iter>
<status status="PASS" starttime="20210731 12:09:28.289" endtime="20210731 12:09:28.294"/>
</for>
<status status="PASS" starttime="20210731 12:09:28.288" endtime="20210731 12:09:28.294"/>
</branch>
<status status="PASS" starttime="20210731 12:09:28.288" endtime="20210731 12:09:28.294"/>
</if>
<status status="PASS" starttime="20210731 12:09:28.272" endtime="20210731 12:09:28.294"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:28.295" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:28.295" endtime="20210731 12:09:28.295"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:28.296" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210731 12:09:28.296" endtime="20210731 12:09:28.296"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210731 12:09:28.297" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210731 12:09:28.296" endtime="20210731 12:09:28.297"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:28.297" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:28.297" endtime="20210731 12:09:28.297"/>
</kw>
<msg timestamp="20210731 12:09:28.297" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:28.296" endtime="20210731 12:09:28.297"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:28.301" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:28.298" endtime="20210731 12:09:28.305"/>
</kw>
<status status="PASS" starttime="20210731 12:09:28.294" endtime="20210731 12:09:28.306"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210731 12:09:28.307" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210731 12:09:28.307" endtime="20210731 12:09:28.312"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210731 12:09:29.813" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210731 12:09:28.313" endtime="20210731 12:09:29.814"/>
</kw>
<status status="PASS" starttime="20210731 12:09:28.306" endtime="20210731 12:09:29.814"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:29.815" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210731 12:09:29.815" endtime="20210731 12:09:29.815"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210731 12:09:29.816" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210731 12:09:29.815" endtime="20210731 12:09:29.816"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:29.816" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:29.816" endtime="20210731 12:09:29.816"/>
</kw>
<msg timestamp="20210731 12:09:29.816" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:29.815" endtime="20210731 12:09:29.816"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210731 12:09:29.817" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210731 12:09:29.816" endtime="20210731 12:09:29.817"/>
</kw>
<status status="PASS" starttime="20210731 12:09:29.814" endtime="20210731 12:09:29.817"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210731 12:09:29.818" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210731 12:09:29.818" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210731 12:09:29.818" endtime="20210731 12:09:29.818"/>
</kw>
<status status="PASS" starttime="20210731 12:09:29.818" endtime="20210731 12:09:29.819"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210731 12:09:29.819" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210731 12:09:29.819" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210731 12:09:29.819" endtime="20210731 12:09:29.819"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210731 12:09:29.820" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210731 12:09:29.820" endtime="20210731 12:09:29.820"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:29.821" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210731 12:09:29.821" endtime="20210731 12:09:29.821"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210731 12:09:29.821" endtime="20210731 12:09:29.822"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210731 12:09:29.822" endtime="20210731 12:09:29.822"/>
</kw>
<status status="PASS" starttime="20210731 12:09:29.820" endtime="20210731 12:09:29.822"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:29.823" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210731 12:09:29.823" endtime="20210731 12:09:29.823"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210731 12:09:29.823" endtime="20210731 12:09:29.824"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210731 12:09:29.824" endtime="20210731 12:09:29.825"/>
</kw>
<status status="PASS" starttime="20210731 12:09:29.823" endtime="20210731 12:09:29.825"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:29.825" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210731 12:09:29.825" endtime="20210731 12:09:29.825"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210731 12:09:29.825" endtime="20210731 12:09:29.826"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210731 12:09:29.826" endtime="20210731 12:09:29.827"/>
</kw>
<status status="PASS" starttime="20210731 12:09:29.825" endtime="20210731 12:09:29.827"/>
</iter>
<status status="PASS" starttime="20210731 12:09:29.820" endtime="20210731 12:09:29.827"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210731 12:09:29.827" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210731 12:09:29.827" endtime="20210731 12:09:29.827"/>
</kw>
<status status="PASS" starttime="20210731 12:09:29.819" endtime="20210731 12:09:29.827"/>
</kw>
<status status="PASS" starttime="20210731 12:09:28.272" endtime="20210731 12:09:29.827"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:29.828" level="INFO">${payload} = {}</msg>
<status status="PASS" starttime="20210731 12:09:29.828" endtime="20210731 12:09:29.828"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${payload}</arg>
<arg>lastname=Cuzdan</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210731 12:09:29.828" endtime="20210731 12:09:29.828"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Update Given Fields For All System Users">
<arg>${api_user}[token]</arg>
<arg>${payload}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:29.830" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210731 12:09:29.829" endtime="20210731 12:09:29.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${payload}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210731 12:09:29.830" level="INFO">{'lastname': 'Cuzdan'}</msg>
<status status="PASS" starttime="20210731 12:09:29.830" endtime="20210731 12:09:29.830"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210731 12:09:29.846" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210731 12:09:29.847" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210731 12:09:29.831" endtime="20210731 12:09:29.847"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Updated</arg>
<arg>status=SUCCESS</arg>
<status status="NOT RUN" starttime="20210731 12:09:29.847" endtime="20210731 12:09:29.847"/>
</kw>
<kw name="Verify System User's Data Updated In Database With Payload">
<arg>${system_user}</arg>
<arg>${payload}</arg>
<status status="NOT RUN" starttime="20210731 12:09:29.847" endtime="20210731 12:09:29.847"/>
</kw>
<status status="FAIL" starttime="20210731 12:09:29.831" endtime="20210731 12:09:29.847"/>
</iter>
<status status="FAIL" starttime="20210731 12:09:29.830" endtime="20210731 12:09:29.847"/>
</for>
<status status="FAIL" starttime="20210731 12:09:29.829" endtime="20210731 12:09:29.848"/>
</kw>
<status status="FAIL" starttime="20210731 12:09:29.829" endtime="20210731 12:09:29.848"/>
</iter>
<status status="FAIL" starttime="20210731 12:09:29.829" endtime="20210731 12:09:29.848"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210731 12:09:29.852" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210731 12:09:29.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20210731 12:09:29.864" level="INFO">${pids} = 21947
21954
21956</msg>
<status status="PASS" starttime="20210731 12:09:29.848" endtime="20210731 12:09:29.864"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210731 12:09:29.865" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210731 12:09:29.865" endtime="20210731 12:09:29.865"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210731 12:09:29.866" level="INFO">${pids} = ['21947', '21954', '21956']</msg>
<status status="PASS" starttime="20210731 12:09:29.866" endtime="20210731 12:09:29.866"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">21947</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:29.875" level="INFO">Running command 'kill 21947 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:29.866" endtime="20210731 12:09:29.876"/>
</kw>
<status status="PASS" starttime="20210731 12:09:29.866" endtime="20210731 12:09:29.876"/>
</iter>
<iter>
<var name="${pid}">21954</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:29.879" level="INFO">Running command 'kill 21954 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:29.876" endtime="20210731 12:09:29.880"/>
</kw>
<status status="PASS" starttime="20210731 12:09:29.876" endtime="20210731 12:09:29.880"/>
</iter>
<iter>
<var name="${pid}">21956</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:29.883" level="INFO">Running command 'kill 21956 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:29.880" endtime="20210731 12:09:29.883"/>
</kw>
<status status="PASS" starttime="20210731 12:09:29.880" endtime="20210731 12:09:29.884"/>
</iter>
<status status="PASS" starttime="20210731 12:09:29.866" endtime="20210731 12:09:29.884"/>
</for>
<status status="PASS" starttime="20210731 12:09:29.866" endtime="20210731 12:09:29.884"/>
</branch>
<status status="PASS" starttime="20210731 12:09:29.865" endtime="20210731 12:09:29.884"/>
</if>
<status status="PASS" starttime="20210731 12:09:29.848" endtime="20210731 12:09:29.884"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set:
{
"lastname": "Cuzdan"
}
Note that firstname, lastname and phone are valid.
Then, each request should pass with the following response body:
{
"message": "Updated",
"status": "SUCCESS"
}
This test not only verifies message and status but also verifies that &lt;username&gt;'s data in the database has changed.</doc>
<tag>run-me</tag>
<status status="FAIL" starttime="20210731 12:09:28.271" endtime="20210731 12:09:29.884">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t7" name="All System Users With A Valid Token Can Update Phone Of All System Users With Valid Values">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210731 12:09:29.889" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210731 12:09:29.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20210731 12:09:29.900" level="INFO">${pids} = 21985</msg>
<status status="PASS" starttime="20210731 12:09:29.886" endtime="20210731 12:09:29.900"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210731 12:09:29.901" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210731 12:09:29.900" endtime="20210731 12:09:29.901"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210731 12:09:29.902" level="INFO">${pids} = ['21985']</msg>
<status status="PASS" starttime="20210731 12:09:29.901" endtime="20210731 12:09:29.902"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">21985</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:29.906" level="INFO">Running command 'kill 21985 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:29.902" endtime="20210731 12:09:29.907"/>
</kw>
<status status="PASS" starttime="20210731 12:09:29.902" endtime="20210731 12:09:29.907"/>
</iter>
<status status="PASS" starttime="20210731 12:09:29.902" endtime="20210731 12:09:29.907"/>
</for>
<status status="PASS" starttime="20210731 12:09:29.901" endtime="20210731 12:09:29.907"/>
</branch>
<status status="PASS" starttime="20210731 12:09:29.901" endtime="20210731 12:09:29.907"/>
</if>
<status status="PASS" starttime="20210731 12:09:29.886" endtime="20210731 12:09:29.908"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:29.910" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:29.910" endtime="20210731 12:09:29.910"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:29.911" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210731 12:09:29.911" endtime="20210731 12:09:29.911"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210731 12:09:29.912" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210731 12:09:29.911" endtime="20210731 12:09:29.912"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:29.913" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:29.912" endtime="20210731 12:09:29.913"/>
</kw>
<msg timestamp="20210731 12:09:29.913" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:29.911" endtime="20210731 12:09:29.913"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:29.918" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:29.913" endtime="20210731 12:09:29.922"/>
</kw>
<status status="PASS" starttime="20210731 12:09:29.909" endtime="20210731 12:09:29.922"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210731 12:09:29.924" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210731 12:09:29.923" endtime="20210731 12:09:29.928"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210731 12:09:31.429" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210731 12:09:29.928" endtime="20210731 12:09:31.429"/>
</kw>
<status status="PASS" starttime="20210731 12:09:29.922" endtime="20210731 12:09:31.429"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:31.431" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210731 12:09:31.431" endtime="20210731 12:09:31.431"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210731 12:09:31.431" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210731 12:09:31.431" endtime="20210731 12:09:31.431"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210731 12:09:31.432" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:31.432" endtime="20210731 12:09:31.432"/>
</kw>
<msg timestamp="20210731 12:09:31.432" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210731 12:09:31.430" endtime="20210731 12:09:31.432"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210731 12:09:31.433" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210731 12:09:31.432" endtime="20210731 12:09:31.433"/>
</kw>
<status status="PASS" starttime="20210731 12:09:31.430" endtime="20210731 12:09:31.433"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210731 12:09:31.434" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210731 12:09:31.434" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210731 12:09:31.434" endtime="20210731 12:09:31.434"/>
</kw>
<status status="PASS" starttime="20210731 12:09:31.434" endtime="20210731 12:09:31.434"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210731 12:09:31.435" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210731 12:09:31.435" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210731 12:09:31.435" endtime="20210731 12:09:31.435"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210731 12:09:31.436" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210731 12:09:31.436" endtime="20210731 12:09:31.436"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:31.437" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210731 12:09:31.436" endtime="20210731 12:09:31.437"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210731 12:09:31.437" endtime="20210731 12:09:31.438"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210731 12:09:31.438" endtime="20210731 12:09:31.438"/>
</kw>
<status status="PASS" starttime="20210731 12:09:31.436" endtime="20210731 12:09:31.438"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:31.439" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210731 12:09:31.438" endtime="20210731 12:09:31.439"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210731 12:09:31.439" endtime="20210731 12:09:31.440"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210731 12:09:31.440" endtime="20210731 12:09:31.440"/>
</kw>
<status status="PASS" starttime="20210731 12:09:31.438" endtime="20210731 12:09:31.440"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:31.441" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210731 12:09:31.441" endtime="20210731 12:09:31.441"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210731 12:09:31.442" endtime="20210731 12:09:31.443"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210731 12:09:31.443" endtime="20210731 12:09:31.444"/>
</kw>
<status status="PASS" starttime="20210731 12:09:31.441" endtime="20210731 12:09:31.444"/>
</iter>
<status status="PASS" starttime="20210731 12:09:31.436" endtime="20210731 12:09:31.444"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210731 12:09:31.444" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210731 12:09:31.444" endtime="20210731 12:09:31.444"/>
</kw>
<status status="PASS" starttime="20210731 12:09:31.435" endtime="20210731 12:09:31.445"/>
</kw>
<status status="PASS" starttime="20210731 12:09:29.886" endtime="20210731 12:09:31.445"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:31.445" level="INFO">${payload} = {}</msg>
<status status="PASS" starttime="20210731 12:09:31.445" endtime="20210731 12:09:31.445"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${payload}</arg>
<arg>phone=+358406875453</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210731 12:09:31.446" endtime="20210731 12:09:31.446"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Update Given Fields For All System Users">
<arg>${api_user}[token]</arg>
<arg>${payload}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210731 12:09:31.447" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210731 12:09:31.447" endtime="20210731 12:09:31.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${payload}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210731 12:09:31.448" level="INFO">{'phone': '+358406875453'}</msg>
<status status="PASS" starttime="20210731 12:09:31.447" endtime="20210731 12:09:31.448"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210731 12:09:31.459" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210731 12:09:31.460" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210731 12:09:31.448" endtime="20210731 12:09:31.460"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Updated</arg>
<arg>status=SUCCESS</arg>
<status status="NOT RUN" starttime="20210731 12:09:31.460" endtime="20210731 12:09:31.460"/>
</kw>
<kw name="Verify System User's Data Updated In Database With Payload">
<arg>${system_user}</arg>
<arg>${payload}</arg>
<status status="NOT RUN" starttime="20210731 12:09:31.460" endtime="20210731 12:09:31.460"/>
</kw>
<status status="FAIL" starttime="20210731 12:09:31.448" endtime="20210731 12:09:31.460"/>
</iter>
<status status="FAIL" starttime="20210731 12:09:31.448" endtime="20210731 12:09:31.460"/>
</for>
<status status="FAIL" starttime="20210731 12:09:31.446" endtime="20210731 12:09:31.460"/>
</kw>
<status status="FAIL" starttime="20210731 12:09:31.446" endtime="20210731 12:09:31.460"/>
</iter>
<status status="FAIL" starttime="20210731 12:09:31.446" endtime="20210731 12:09:31.460"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210731 12:09:31.464" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210731 12:09:31.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20210731 12:09:31.482" level="INFO">${pids} = 22008
22015
22022</msg>
<status status="PASS" starttime="20210731 12:09:31.461" endtime="20210731 12:09:31.483"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210731 12:09:31.484" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210731 12:09:31.483" endtime="20210731 12:09:31.484"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210731 12:09:31.484" level="INFO">${pids} = ['22008', '22015', '22022']</msg>
<status status="PASS" starttime="20210731 12:09:31.484" endtime="20210731 12:09:31.485"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">22008</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:31.488" level="INFO">Running command 'kill 22008 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:31.485" endtime="20210731 12:09:31.488"/>
</kw>
<status status="PASS" starttime="20210731 12:09:31.485" endtime="20210731 12:09:31.489"/>
</iter>
<iter>
<var name="${pid}">22015</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:31.494" level="INFO">Running command 'kill 22015 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:31.489" endtime="20210731 12:09:31.494"/>
</kw>
<status status="PASS" starttime="20210731 12:09:31.489" endtime="20210731 12:09:31.494"/>
</iter>
<iter>
<var name="${pid}">22022</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210731 12:09:31.497" level="INFO">Running command 'kill 22022 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210731 12:09:31.495" endtime="20210731 12:09:31.498"/>
</kw>
<status status="PASS" starttime="20210731 12:09:31.494" endtime="20210731 12:09:31.498"/>
</iter>
<status status="PASS" starttime="20210731 12:09:31.485" endtime="20210731 12:09:31.498"/>
</for>
<status status="PASS" starttime="20210731 12:09:31.484" endtime="20210731 12:09:31.498"/>
</branch>
<status status="PASS" starttime="20210731 12:09:31.484" endtime="20210731 12:09:31.498"/>
</if>
<status status="PASS" starttime="20210731 12:09:31.461" endtime="20210731 12:09:31.498"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set:
{
"phone": '+358406875453'
}
Note that phone is valid.
Then, each request should pass with the following response body:
{
"message": "Updated",
"status": "SUCCESS"
}
This test not only verifies message and status but also verifies that &lt;username&gt;'s data in the database has changed.</doc>
<tag>run-me</tag>
<status status="FAIL" starttime="20210731 12:09:29.885" endtime="20210731 12:09:31.498">We expected a JSON, but received text/html</status>
</test>
<doc>This test suite contains test cases for CRF Demo API.
Documentation for the API can be found:
https://github.com/Interview-demoapp/Flasky
The acceptance criteria we verify here is
"3: As an API Consumer, if authenticated, I can update personal information of users"
Definitions
(1) System User: The user, who is registered to the system under test with a valid token
(2) API User: The user, who calls the API to update personal information of the system user</doc>
<status status="FAIL" starttime="20210731 12:09:19.494" endtime="20210731 12:09:31.500"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="7" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="7" skip="0">run-me</stat>
</tag>
<suite>
<stat pass="0" fail="7" skip="0" id="s1" name="3-Updating-Personal-Information">3-Updating-Personal-Information</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
