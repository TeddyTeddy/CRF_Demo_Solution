<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0.3 (Python 3.7.4 on linux)" generated="20210730 14:38:08.694" rpa="false" schemaversion="2">
<suite id="s1" name="3-Updating-Personal-Information" source="/home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/Tests/API/3-Updating-Personal-Information.robot">
<kw name="Import DataManager" library="Common" type="SETUP">
<kw name="Convert Suite Variables To Correct Types" library="Common">
<doc>This keyword is needed because parameters passed by command line
to robot (i.e. -v variable_name:value) are of string types.
In run command we pass 2 parameters to robot:
robot -d Results/ -v DATA_SET_LENGTH:100 -v USE_EXISTING_FORM_DATA_SET:True -v BROWSER:chromium -P CustomLibs Tests/
So, we have the following variables passed as strings:
- DATA_SET_LENGTH:100
- USE_EXISTING_FORM_DATA_SET:True
We need to convert:
- DATA_SET_LENGTH to int (i.e. integer)
- USE_EXISTING_FORM_DATA_SET to bool (i.e. boolean)
Later these values will be used while loading DataManager.robot resource.</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${DATA_SET_LENGTH}</var>
<arg>int($DATA_SET_LENGTH)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:09.402" level="INFO">${DATA_SET_LENGTH} = 100</msg>
<status status="PASS" starttime="20210730 14:38:09.399" endtime="20210730 14:38:09.402"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${USE_EXISTING_FORM_DATA_SET}</var>
<arg>$USE_EXISTING_FORM_DATA_SET=='True'</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:09.403" level="INFO">${USE_EXISTING_FORM_DATA_SET} = True</msg>
<status status="PASS" starttime="20210730 14:38:09.402" endtime="20210730 14:38:09.403"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DATA_SET_LENGTH}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:38:09.403" level="INFO">${DATA_SET_LENGTH} = 100</msg>
<status status="PASS" starttime="20210730 14:38:09.403" endtime="20210730 14:38:09.403"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${USE_EXISTING_FORM_DATA_SET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:38:09.404" level="INFO">${USE_EXISTING_FORM_DATA_SET} = True</msg>
<status status="PASS" starttime="20210730 14:38:09.403" endtime="20210730 14:38:09.404"/>
</kw>
<status status="PASS" starttime="20210730 14:38:09.399" endtime="20210730 14:38:09.404"/>
</kw>
<kw name="Import Resource" library="BuiltIn">
<arg>${EXECDIR}${/}Resources${/}DataManager.robot</arg>
<doc>Imports a resource file with the given path.</doc>
<status status="PASS" starttime="20210730 14:38:09.404" endtime="20210730 14:38:09.412"/>
</kw>
<status status="PASS" starttime="20210730 14:38:09.399" endtime="20210730 14:38:09.412"/>
</kw>
<test id="s1-t1" name="With Each Valid Token, Updating Username Of Each System User With '' Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:09.416" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:09.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:09.429" level="INFO">${pids} = 23078</msg>
<status status="PASS" starttime="20210730 14:38:09.413" endtime="20210730 14:38:09.429"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:09.430" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:09.430" endtime="20210730 14:38:09.430"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:09.431" level="INFO">${pids} = ['23078']</msg>
<status status="PASS" starttime="20210730 14:38:09.431" endtime="20210730 14:38:09.431"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23078</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:09.435" level="INFO">Running command 'kill 23078 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:09.431" endtime="20210730 14:38:09.435"/>
</kw>
<status status="PASS" starttime="20210730 14:38:09.431" endtime="20210730 14:38:09.435"/>
</iter>
<status status="PASS" starttime="20210730 14:38:09.431" endtime="20210730 14:38:09.435"/>
</for>
<status status="PASS" starttime="20210730 14:38:09.431" endtime="20210730 14:38:09.435"/>
</branch>
<status status="PASS" starttime="20210730 14:38:09.430" endtime="20210730 14:38:09.435"/>
</if>
<status status="PASS" starttime="20210730 14:38:09.413" endtime="20210730 14:38:09.435"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:09.437" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:09.436" endtime="20210730 14:38:09.437"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:09.437" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:09.437" endtime="20210730 14:38:09.437"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:09.438" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:09.437" endtime="20210730 14:38:09.439"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:09.439" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:09.439" endtime="20210730 14:38:09.440"/>
</kw>
<msg timestamp="20210730 14:38:09.440" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:09.437" endtime="20210730 14:38:09.440"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:09.446" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:09.440" endtime="20210730 14:38:09.448"/>
</kw>
<status status="PASS" starttime="20210730 14:38:09.436" endtime="20210730 14:38:09.448"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:38:09.449" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:38:09.449" endtime="20210730 14:38:09.453"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:38:10.954" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:38:09.453" endtime="20210730 14:38:10.954"/>
</kw>
<status status="PASS" starttime="20210730 14:38:09.448" endtime="20210730 14:38:10.954"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:10.956" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:10.955" endtime="20210730 14:38:10.956"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:10.956" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:10.956" endtime="20210730 14:38:10.956"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:10.956" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:10.956" endtime="20210730 14:38:10.956"/>
</kw>
<msg timestamp="20210730 14:38:10.957" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:10.955" endtime="20210730 14:38:10.957"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:38:10.958" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:38:10.957" endtime="20210730 14:38:10.958"/>
</kw>
<status status="PASS" starttime="20210730 14:38:10.954" endtime="20210730 14:38:10.959"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:38:10.959" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:38:10.959" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:38:10.959" endtime="20210730 14:38:10.959"/>
</kw>
<status status="PASS" starttime="20210730 14:38:10.959" endtime="20210730 14:38:10.959"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:38:10.960" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:38:10.960" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:38:10.960" endtime="20210730 14:38:10.960"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:38:10.960" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:38:10.960" endtime="20210730 14:38:10.960"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:10.961" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:10.961" endtime="20210730 14:38:10.961"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:10.961" endtime="20210730 14:38:10.962"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:10.962" endtime="20210730 14:38:10.962"/>
</kw>
<status status="PASS" starttime="20210730 14:38:10.961" endtime="20210730 14:38:10.962"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:10.963" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:10.963" endtime="20210730 14:38:10.963"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:10.963" endtime="20210730 14:38:10.964"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:10.964" endtime="20210730 14:38:10.964"/>
</kw>
<status status="PASS" starttime="20210730 14:38:10.963" endtime="20210730 14:38:10.964"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:10.964" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:10.964" endtime="20210730 14:38:10.964"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:10.965" endtime="20210730 14:38:10.965"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:10.966" endtime="20210730 14:38:10.966"/>
</kw>
<status status="PASS" starttime="20210730 14:38:10.964" endtime="20210730 14:38:10.966"/>
</iter>
<status status="PASS" starttime="20210730 14:38:10.960" endtime="20210730 14:38:10.966"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:38:10.966" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:38:10.966" endtime="20210730 14:38:10.966"/>
</kw>
<status status="PASS" starttime="20210730 14:38:10.960" endtime="20210730 14:38:10.966"/>
</kw>
<status status="PASS" starttime="20210730 14:38:09.413" endtime="20210730 14:38:10.967"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=${EMPTY}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:10.968" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:38:10.968" endtime="20210730 14:38:10.969"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:10.969" level="INFO">${payload} = {'username': ''}</msg>
<status status="PASS" starttime="20210730 14:38:10.969" endtime="20210730 14:38:10.969"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:10.982" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:10.982" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:10.970" endtime="20210730 14:38:10.982"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:10.982" endtime="20210730 14:38:10.983"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:10.983" endtime="20210730 14:38:10.983"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:10.969" endtime="20210730 14:38:10.983"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:10.969" endtime="20210730 14:38:10.983"/>
</for>
<status status="FAIL" starttime="20210730 14:38:10.967" endtime="20210730 14:38:10.983"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:10.967" endtime="20210730 14:38:10.983"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=${EMPTY}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:10.984" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:38:10.984" endtime="20210730 14:38:10.984"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:10.985" level="INFO">${payload} = {'username': ''}</msg>
<status status="PASS" starttime="20210730 14:38:10.985" endtime="20210730 14:38:10.985"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:10.989" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:10.990" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:10.985" endtime="20210730 14:38:10.990"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:10.990" endtime="20210730 14:38:10.990"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:10.990" endtime="20210730 14:38:10.990"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:10.985" endtime="20210730 14:38:10.990"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:10.985" endtime="20210730 14:38:10.990"/>
</for>
<status status="FAIL" starttime="20210730 14:38:10.983" endtime="20210730 14:38:10.990"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:10.983" endtime="20210730 14:38:10.990"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=${EMPTY}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:10.992" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:38:10.992" endtime="20210730 14:38:10.992"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:10.992" level="INFO">${payload} = {'username': ''}</msg>
<status status="PASS" starttime="20210730 14:38:10.992" endtime="20210730 14:38:10.993"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:10.997" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:10.998" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:10.993" endtime="20210730 14:38:10.998"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:10.998" endtime="20210730 14:38:10.998"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:10.998" endtime="20210730 14:38:10.998"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:10.993" endtime="20210730 14:38:10.998"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:10.993" endtime="20210730 14:38:10.998"/>
</for>
<status status="FAIL" starttime="20210730 14:38:10.991" endtime="20210730 14:38:10.998"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:10.991" endtime="20210730 14:38:10.998"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:10.967" endtime="20210730 14:38:10.999"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:11.002" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:11.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:11.014" level="INFO">${pids} = 23101
23108
23113</msg>
<status status="PASS" starttime="20210730 14:38:10.999" endtime="20210730 14:38:11.014"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:11.015" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:11.014" endtime="20210730 14:38:11.015"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:11.016" level="INFO">${pids} = ['23101', '23108', '23113']</msg>
<status status="PASS" starttime="20210730 14:38:11.016" endtime="20210730 14:38:11.016"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23101</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:11.019" level="INFO">Running command 'kill 23101 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:11.016" endtime="20210730 14:38:11.020"/>
</kw>
<status status="PASS" starttime="20210730 14:38:11.016" endtime="20210730 14:38:11.020"/>
</iter>
<iter>
<var name="${pid}">23108</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:11.023" level="INFO">Running command 'kill 23108 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:11.020" endtime="20210730 14:38:11.023"/>
</kw>
<status status="PASS" starttime="20210730 14:38:11.020" endtime="20210730 14:38:11.024"/>
</iter>
<iter>
<var name="${pid}">23113</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:11.029" level="INFO">Running command 'kill 23113 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:11.024" endtime="20210730 14:38:11.030"/>
</kw>
<status status="PASS" starttime="20210730 14:38:11.024" endtime="20210730 14:38:11.030"/>
</iter>
<status status="PASS" starttime="20210730 14:38:11.016" endtime="20210730 14:38:11.030"/>
</for>
<status status="PASS" starttime="20210730 14:38:11.016" endtime="20210730 14:38:11.030"/>
</branch>
<status status="PASS" starttime="20210730 14:38:11.015" endtime="20210730 14:38:11.030"/>
</if>
<status status="PASS" starttime="20210730 14:38:10.999" endtime="20210730 14:38:11.030"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
username as such:
{
"username": ''
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:38:09.412" endtime="20210730 14:38:11.031">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t2" name="With Each Valid Token, Updating Username Of Each System User With !#%&amp;/¤% Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:11.035" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:11.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:11.046" level="INFO">${pids} = 23142</msg>
<status status="PASS" starttime="20210730 14:38:11.032" endtime="20210730 14:38:11.046"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:11.047" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:11.046" endtime="20210730 14:38:11.047"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:11.047" level="INFO">${pids} = ['23142']</msg>
<status status="PASS" starttime="20210730 14:38:11.047" endtime="20210730 14:38:11.047"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23142</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:11.051" level="INFO">Running command 'kill 23142 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:11.048" endtime="20210730 14:38:11.051"/>
</kw>
<status status="PASS" starttime="20210730 14:38:11.048" endtime="20210730 14:38:11.051"/>
</iter>
<status status="PASS" starttime="20210730 14:38:11.047" endtime="20210730 14:38:11.051"/>
</for>
<status status="PASS" starttime="20210730 14:38:11.047" endtime="20210730 14:38:11.051"/>
</branch>
<status status="PASS" starttime="20210730 14:38:11.047" endtime="20210730 14:38:11.051"/>
</if>
<status status="PASS" starttime="20210730 14:38:11.032" endtime="20210730 14:38:11.051"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:11.052" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:11.052" endtime="20210730 14:38:11.052"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:11.053" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:11.053" endtime="20210730 14:38:11.053"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:11.053" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:11.053" endtime="20210730 14:38:11.053"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:11.054" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:11.054" endtime="20210730 14:38:11.054"/>
</kw>
<msg timestamp="20210730 14:38:11.054" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:11.053" endtime="20210730 14:38:11.054"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:11.060" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:11.054" endtime="20210730 14:38:11.063"/>
</kw>
<status status="PASS" starttime="20210730 14:38:11.052" endtime="20210730 14:38:11.064"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:38:11.065" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:38:11.065" endtime="20210730 14:38:11.069"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:38:12.582" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:38:11.069" endtime="20210730 14:38:12.582"/>
</kw>
<status status="PASS" starttime="20210730 14:38:11.064" endtime="20210730 14:38:12.582"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:12.583" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:12.583" endtime="20210730 14:38:12.584"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:12.584" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:12.584" endtime="20210730 14:38:12.584"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:12.584" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:12.584" endtime="20210730 14:38:12.584"/>
</kw>
<msg timestamp="20210730 14:38:12.585" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:12.583" endtime="20210730 14:38:12.585"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:38:12.585" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:38:12.585" endtime="20210730 14:38:12.586"/>
</kw>
<status status="PASS" starttime="20210730 14:38:12.582" endtime="20210730 14:38:12.586"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:38:12.586" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:38:12.586" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:38:12.586" endtime="20210730 14:38:12.587"/>
</kw>
<status status="PASS" starttime="20210730 14:38:12.586" endtime="20210730 14:38:12.587"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:38:12.587" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:38:12.587" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:38:12.587" endtime="20210730 14:38:12.587"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:38:12.588" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:38:12.588" endtime="20210730 14:38:12.588"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:12.588" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:12.588" endtime="20210730 14:38:12.588"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:12.589" endtime="20210730 14:38:12.589"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:12.589" endtime="20210730 14:38:12.590"/>
</kw>
<status status="PASS" starttime="20210730 14:38:12.588" endtime="20210730 14:38:12.590"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:12.590" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:12.590" endtime="20210730 14:38:12.590"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:12.590" endtime="20210730 14:38:12.591"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:12.591" endtime="20210730 14:38:12.591"/>
</kw>
<status status="PASS" starttime="20210730 14:38:12.590" endtime="20210730 14:38:12.591"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:12.592" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:12.592" endtime="20210730 14:38:12.592"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:12.592" endtime="20210730 14:38:12.593"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:12.593" endtime="20210730 14:38:12.593"/>
</kw>
<status status="PASS" starttime="20210730 14:38:12.591" endtime="20210730 14:38:12.593"/>
</iter>
<status status="PASS" starttime="20210730 14:38:12.588" endtime="20210730 14:38:12.593"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:38:12.593" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:38:12.593" endtime="20210730 14:38:12.594"/>
</kw>
<status status="PASS" starttime="20210730 14:38:12.587" endtime="20210730 14:38:12.594"/>
</kw>
<status status="PASS" starttime="20210730 14:38:11.032" endtime="20210730 14:38:12.594"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!#%&amp;/¤%</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:12.596" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:38:12.595" endtime="20210730 14:38:12.596"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:12.596" level="INFO">${payload} = {'username': '!#%&amp;/¤%'}</msg>
<status status="PASS" starttime="20210730 14:38:12.596" endtime="20210730 14:38:12.596"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:12.608" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:12.608" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:12.596" endtime="20210730 14:38:12.608"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:12.608" endtime="20210730 14:38:12.609"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:12.609" endtime="20210730 14:38:12.609"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:12.596" endtime="20210730 14:38:12.609"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:12.596" endtime="20210730 14:38:12.609"/>
</for>
<status status="FAIL" starttime="20210730 14:38:12.594" endtime="20210730 14:38:12.609"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:12.594" endtime="20210730 14:38:12.609"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!#%&amp;/¤%</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:12.611" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:38:12.610" endtime="20210730 14:38:12.611"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:12.611" level="INFO">${payload} = {'username': '!#%&amp;/¤%'}</msg>
<status status="PASS" starttime="20210730 14:38:12.611" endtime="20210730 14:38:12.611"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:12.616" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:12.616" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:12.611" endtime="20210730 14:38:12.616"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:12.616" endtime="20210730 14:38:12.616"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:12.616" endtime="20210730 14:38:12.616"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:12.611" endtime="20210730 14:38:12.616"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:12.611" endtime="20210730 14:38:12.616"/>
</for>
<status status="FAIL" starttime="20210730 14:38:12.610" endtime="20210730 14:38:12.617"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:12.610" endtime="20210730 14:38:12.617"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!#%&amp;/¤%</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:12.618" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:38:12.618" endtime="20210730 14:38:12.618"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:12.619" level="INFO">${payload} = {'username': '!#%&amp;/¤%'}</msg>
<status status="PASS" starttime="20210730 14:38:12.618" endtime="20210730 14:38:12.619"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:12.623" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:12.624" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:12.619" endtime="20210730 14:38:12.624"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:12.624" endtime="20210730 14:38:12.624"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:12.624" endtime="20210730 14:38:12.624"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:12.619" endtime="20210730 14:38:12.624"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:12.619" endtime="20210730 14:38:12.624"/>
</for>
<status status="FAIL" starttime="20210730 14:38:12.617" endtime="20210730 14:38:12.624"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:12.617" endtime="20210730 14:38:12.625"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:12.594" endtime="20210730 14:38:12.625"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:12.629" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:12.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:12.639" level="INFO">${pids} = 23165
23172
23176</msg>
<status status="PASS" starttime="20210730 14:38:12.626" endtime="20210730 14:38:12.639"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:12.640" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:12.640" endtime="20210730 14:38:12.640"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:12.641" level="INFO">${pids} = ['23165', '23172', '23176']</msg>
<status status="PASS" starttime="20210730 14:38:12.641" endtime="20210730 14:38:12.641"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23165</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:12.644" level="INFO">Running command 'kill 23165 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:12.642" endtime="20210730 14:38:12.645"/>
</kw>
<status status="PASS" starttime="20210730 14:38:12.642" endtime="20210730 14:38:12.645"/>
</iter>
<iter>
<var name="${pid}">23172</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:12.650" level="INFO">Running command 'kill 23172 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:12.647" endtime="20210730 14:38:12.650"/>
</kw>
<status status="PASS" starttime="20210730 14:38:12.645" endtime="20210730 14:38:12.650"/>
</iter>
<iter>
<var name="${pid}">23176</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:12.654" level="INFO">Running command 'kill 23176 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:12.650" endtime="20210730 14:38:12.654"/>
</kw>
<status status="PASS" starttime="20210730 14:38:12.650" endtime="20210730 14:38:12.655"/>
</iter>
<status status="PASS" starttime="20210730 14:38:12.641" endtime="20210730 14:38:12.655"/>
</for>
<status status="PASS" starttime="20210730 14:38:12.641" endtime="20210730 14:38:12.655"/>
</branch>
<status status="PASS" starttime="20210730 14:38:12.640" endtime="20210730 14:38:12.655"/>
</if>
<status status="PASS" starttime="20210730 14:38:12.625" endtime="20210730 14:38:12.655"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '!#%&amp;/¤%'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:38:11.031" endtime="20210730 14:38:12.655">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t3" name="With Each Valid Token, Updating Username Of Each System User With !#%&amp;/¤%= Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:12.661" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:12.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:12.672" level="INFO">${pids} = 23205</msg>
<status status="PASS" starttime="20210730 14:38:12.657" endtime="20210730 14:38:12.672"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:12.673" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:12.672" endtime="20210730 14:38:12.673"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:12.674" level="INFO">${pids} = ['23205']</msg>
<status status="PASS" starttime="20210730 14:38:12.674" endtime="20210730 14:38:12.674"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23205</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:12.678" level="INFO">Running command 'kill 23205 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:12.675" endtime="20210730 14:38:12.678"/>
</kw>
<status status="PASS" starttime="20210730 14:38:12.674" endtime="20210730 14:38:12.678"/>
</iter>
<status status="PASS" starttime="20210730 14:38:12.674" endtime="20210730 14:38:12.678"/>
</for>
<status status="PASS" starttime="20210730 14:38:12.673" endtime="20210730 14:38:12.678"/>
</branch>
<status status="PASS" starttime="20210730 14:38:12.673" endtime="20210730 14:38:12.678"/>
</if>
<status status="PASS" starttime="20210730 14:38:12.657" endtime="20210730 14:38:12.678"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:12.680" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:12.679" endtime="20210730 14:38:12.680"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:12.680" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:12.680" endtime="20210730 14:38:12.680"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:12.681" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:12.680" endtime="20210730 14:38:12.681"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:12.681" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:12.681" endtime="20210730 14:38:12.681"/>
</kw>
<msg timestamp="20210730 14:38:12.681" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:12.680" endtime="20210730 14:38:12.681"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:12.685" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:12.682" endtime="20210730 14:38:12.687"/>
</kw>
<status status="PASS" starttime="20210730 14:38:12.679" endtime="20210730 14:38:12.687"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:38:12.688" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:38:12.688" endtime="20210730 14:38:12.695"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:38:14.199" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:38:12.695" endtime="20210730 14:38:14.200"/>
</kw>
<status status="PASS" starttime="20210730 14:38:12.687" endtime="20210730 14:38:14.201"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:14.204" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:14.203" endtime="20210730 14:38:14.204"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:14.204" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:14.204" endtime="20210730 14:38:14.204"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:14.205" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:14.204" endtime="20210730 14:38:14.205"/>
</kw>
<msg timestamp="20210730 14:38:14.205" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:14.203" endtime="20210730 14:38:14.205"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:38:14.206" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:38:14.205" endtime="20210730 14:38:14.206"/>
</kw>
<status status="PASS" starttime="20210730 14:38:14.202" endtime="20210730 14:38:14.206"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:38:14.207" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:38:14.207" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:38:14.207" endtime="20210730 14:38:14.208"/>
</kw>
<status status="PASS" starttime="20210730 14:38:14.207" endtime="20210730 14:38:14.208"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:38:14.208" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:38:14.208" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:38:14.208" endtime="20210730 14:38:14.208"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:38:14.209" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:38:14.209" endtime="20210730 14:38:14.209"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:14.209" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:14.209" endtime="20210730 14:38:14.209"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:14.210" endtime="20210730 14:38:14.210"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:14.210" endtime="20210730 14:38:14.210"/>
</kw>
<status status="PASS" starttime="20210730 14:38:14.209" endtime="20210730 14:38:14.211"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:14.211" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:14.211" endtime="20210730 14:38:14.211"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:14.211" endtime="20210730 14:38:14.212"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:14.212" endtime="20210730 14:38:14.212"/>
</kw>
<status status="PASS" starttime="20210730 14:38:14.211" endtime="20210730 14:38:14.212"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:14.212" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:14.212" endtime="20210730 14:38:14.212"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:14.213" endtime="20210730 14:38:14.213"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:14.213" endtime="20210730 14:38:14.214"/>
</kw>
<status status="PASS" starttime="20210730 14:38:14.212" endtime="20210730 14:38:14.214"/>
</iter>
<status status="PASS" starttime="20210730 14:38:14.209" endtime="20210730 14:38:14.214"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:38:14.214" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:38:14.214" endtime="20210730 14:38:14.214"/>
</kw>
<status status="PASS" starttime="20210730 14:38:14.208" endtime="20210730 14:38:14.214"/>
</kw>
<status status="PASS" starttime="20210730 14:38:12.657" endtime="20210730 14:38:14.214"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!#%&amp;/¤%=</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:14.216" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:38:14.215" endtime="20210730 14:38:14.216"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:14.216" level="INFO">${payload} = {'username': '!#%&amp;/¤%='}</msg>
<status status="PASS" starttime="20210730 14:38:14.216" endtime="20210730 14:38:14.216"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:14.226" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:14.226" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:14.216" endtime="20210730 14:38:14.227"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:14.227" endtime="20210730 14:38:14.227"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:14.227" endtime="20210730 14:38:14.227"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:14.216" endtime="20210730 14:38:14.227"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:14.216" endtime="20210730 14:38:14.227"/>
</for>
<status status="FAIL" starttime="20210730 14:38:14.215" endtime="20210730 14:38:14.227"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:14.215" endtime="20210730 14:38:14.227"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!#%&amp;/¤%=</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:14.228" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:38:14.228" endtime="20210730 14:38:14.228"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:14.229" level="INFO">${payload} = {'username': '!#%&amp;/¤%='}</msg>
<status status="PASS" starttime="20210730 14:38:14.228" endtime="20210730 14:38:14.229"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:14.233" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:14.233" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:14.229" endtime="20210730 14:38:14.233"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:14.233" endtime="20210730 14:38:14.234"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:14.234" endtime="20210730 14:38:14.234"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:14.229" endtime="20210730 14:38:14.234"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:14.229" endtime="20210730 14:38:14.234"/>
</for>
<status status="FAIL" starttime="20210730 14:38:14.227" endtime="20210730 14:38:14.234"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:14.227" endtime="20210730 14:38:14.234"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!#%&amp;/¤%=</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:14.235" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:38:14.235" endtime="20210730 14:38:14.235"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:14.236" level="INFO">${payload} = {'username': '!#%&amp;/¤%='}</msg>
<status status="PASS" starttime="20210730 14:38:14.235" endtime="20210730 14:38:14.236"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:14.241" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:14.241" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:14.236" endtime="20210730 14:38:14.241"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:14.242" endtime="20210730 14:38:14.242"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:14.242" endtime="20210730 14:38:14.242"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:14.236" endtime="20210730 14:38:14.242"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:14.236" endtime="20210730 14:38:14.242"/>
</for>
<status status="FAIL" starttime="20210730 14:38:14.234" endtime="20210730 14:38:14.242"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:14.234" endtime="20210730 14:38:14.242"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:14.215" endtime="20210730 14:38:14.242"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:14.247" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:14.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:14.256" level="INFO">${pids} = 23228
23235
23239</msg>
<status status="PASS" starttime="20210730 14:38:14.243" endtime="20210730 14:38:14.257"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:14.257" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:14.257" endtime="20210730 14:38:14.258"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:14.258" level="INFO">${pids} = ['23228', '23235', '23239']</msg>
<status status="PASS" starttime="20210730 14:38:14.258" endtime="20210730 14:38:14.258"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23228</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:14.261" level="INFO">Running command 'kill 23228 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:14.259" endtime="20210730 14:38:14.261"/>
</kw>
<status status="PASS" starttime="20210730 14:38:14.258" endtime="20210730 14:38:14.261"/>
</iter>
<iter>
<var name="${pid}">23235</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:14.264" level="INFO">Running command 'kill 23235 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:14.262" endtime="20210730 14:38:14.264"/>
</kw>
<status status="PASS" starttime="20210730 14:38:14.262" endtime="20210730 14:38:14.264"/>
</iter>
<iter>
<var name="${pid}">23239</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:14.268" level="INFO">Running command 'kill 23239 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:14.265" endtime="20210730 14:38:14.268"/>
</kw>
<status status="PASS" starttime="20210730 14:38:14.265" endtime="20210730 14:38:14.268"/>
</iter>
<status status="PASS" starttime="20210730 14:38:14.258" endtime="20210730 14:38:14.268"/>
</for>
<status status="PASS" starttime="20210730 14:38:14.258" endtime="20210730 14:38:14.268"/>
</branch>
<status status="PASS" starttime="20210730 14:38:14.258" endtime="20210730 14:38:14.269"/>
</if>
<status status="PASS" starttime="20210730 14:38:14.243" endtime="20210730 14:38:14.269"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '!#%&amp;/¤%='
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:38:12.656" endtime="20210730 14:38:14.269">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t4" name="With Each Valid Token, Updating Username Of Each System User With !#%&amp;/¤%=!()=? Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:14.279" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:14.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:14.290" level="INFO">${pids} = 23268</msg>
<status status="PASS" starttime="20210730 14:38:14.274" endtime="20210730 14:38:14.290"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:14.291" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:14.291" endtime="20210730 14:38:14.291"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:14.292" level="INFO">${pids} = ['23268']</msg>
<status status="PASS" starttime="20210730 14:38:14.292" endtime="20210730 14:38:14.292"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23268</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:14.295" level="INFO">Running command 'kill 23268 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:14.292" endtime="20210730 14:38:14.295"/>
</kw>
<status status="PASS" starttime="20210730 14:38:14.292" endtime="20210730 14:38:14.295"/>
</iter>
<status status="PASS" starttime="20210730 14:38:14.292" endtime="20210730 14:38:14.295"/>
</for>
<status status="PASS" starttime="20210730 14:38:14.291" endtime="20210730 14:38:14.296"/>
</branch>
<status status="PASS" starttime="20210730 14:38:14.291" endtime="20210730 14:38:14.296"/>
</if>
<status status="PASS" starttime="20210730 14:38:14.274" endtime="20210730 14:38:14.296"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:14.297" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:14.296" endtime="20210730 14:38:14.297"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:14.298" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:14.298" endtime="20210730 14:38:14.298"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:14.298" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:14.298" endtime="20210730 14:38:14.298"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:14.299" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:14.298" endtime="20210730 14:38:14.299"/>
</kw>
<msg timestamp="20210730 14:38:14.299" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:14.297" endtime="20210730 14:38:14.299"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:14.302" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:14.299" endtime="20210730 14:38:14.303"/>
</kw>
<status status="PASS" starttime="20210730 14:38:14.296" endtime="20210730 14:38:14.304"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:38:14.305" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:38:14.304" endtime="20210730 14:38:14.309"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:38:15.813" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:38:14.310" endtime="20210730 14:38:15.813"/>
</kw>
<status status="PASS" starttime="20210730 14:38:14.304" endtime="20210730 14:38:15.814"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:15.817" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:15.816" endtime="20210730 14:38:15.817"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:15.818" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:15.817" endtime="20210730 14:38:15.818"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:15.819" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:15.818" endtime="20210730 14:38:15.819"/>
</kw>
<msg timestamp="20210730 14:38:15.819" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:15.815" endtime="20210730 14:38:15.819"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:38:15.820" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:38:15.820" endtime="20210730 14:38:15.821"/>
</kw>
<status status="PASS" starttime="20210730 14:38:15.815" endtime="20210730 14:38:15.821"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:38:15.823" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:38:15.823" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:38:15.823" endtime="20210730 14:38:15.823"/>
</kw>
<status status="PASS" starttime="20210730 14:38:15.822" endtime="20210730 14:38:15.823"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:38:15.825" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:38:15.825" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:38:15.824" endtime="20210730 14:38:15.825"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:38:15.826" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:38:15.825" endtime="20210730 14:38:15.826"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:15.827" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:15.826" endtime="20210730 14:38:15.827"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:15.827" endtime="20210730 14:38:15.827"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:15.828" endtime="20210730 14:38:15.828"/>
</kw>
<status status="PASS" starttime="20210730 14:38:15.826" endtime="20210730 14:38:15.828"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:15.828" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:15.828" endtime="20210730 14:38:15.828"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:15.828" endtime="20210730 14:38:15.829"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:15.829" endtime="20210730 14:38:15.829"/>
</kw>
<status status="PASS" starttime="20210730 14:38:15.828" endtime="20210730 14:38:15.829"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:15.830" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:15.829" endtime="20210730 14:38:15.830"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:15.830" endtime="20210730 14:38:15.830"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:15.830" endtime="20210730 14:38:15.831"/>
</kw>
<status status="PASS" starttime="20210730 14:38:15.829" endtime="20210730 14:38:15.831"/>
</iter>
<status status="PASS" starttime="20210730 14:38:15.826" endtime="20210730 14:38:15.831"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:38:15.831" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:38:15.831" endtime="20210730 14:38:15.831"/>
</kw>
<status status="PASS" starttime="20210730 14:38:15.824" endtime="20210730 14:38:15.831"/>
</kw>
<status status="PASS" starttime="20210730 14:38:14.273" endtime="20210730 14:38:15.831"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!#%&amp;/¤%=!()=?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:15.832" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:38:15.832" endtime="20210730 14:38:15.833"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:15.833" level="INFO">${payload} = {'username': '!#%&amp;/¤%=!()=?'}</msg>
<status status="PASS" starttime="20210730 14:38:15.833" endtime="20210730 14:38:15.833"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:15.845" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:15.845" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:15.833" endtime="20210730 14:38:15.845"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:15.845" endtime="20210730 14:38:15.845"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:15.845" endtime="20210730 14:38:15.846"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:15.833" endtime="20210730 14:38:15.846"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:15.833" endtime="20210730 14:38:15.846"/>
</for>
<status status="FAIL" starttime="20210730 14:38:15.832" endtime="20210730 14:38:15.846"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:15.832" endtime="20210730 14:38:15.846"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!#%&amp;/¤%=!()=?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:15.847" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:38:15.847" endtime="20210730 14:38:15.847"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:15.847" level="INFO">${payload} = {'username': '!#%&amp;/¤%=!()=?'}</msg>
<status status="PASS" starttime="20210730 14:38:15.847" endtime="20210730 14:38:15.847"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:15.851" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:15.852" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:15.848" endtime="20210730 14:38:15.852"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:15.852" endtime="20210730 14:38:15.852"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:15.852" endtime="20210730 14:38:15.852"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:15.848" endtime="20210730 14:38:15.852"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:15.848" endtime="20210730 14:38:15.852"/>
</for>
<status status="FAIL" starttime="20210730 14:38:15.846" endtime="20210730 14:38:15.852"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:15.846" endtime="20210730 14:38:15.852"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!#%&amp;/¤%=!()=?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:15.853" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:38:15.853" endtime="20210730 14:38:15.853"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:15.854" level="INFO">${payload} = {'username': '!#%&amp;/¤%=!()=?'}</msg>
<status status="PASS" starttime="20210730 14:38:15.854" endtime="20210730 14:38:15.854"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:15.858" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:15.859" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:15.854" endtime="20210730 14:38:15.859"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:15.859" endtime="20210730 14:38:15.859"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:15.859" endtime="20210730 14:38:15.859"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:15.854" endtime="20210730 14:38:15.859"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:15.854" endtime="20210730 14:38:15.859"/>
</for>
<status status="FAIL" starttime="20210730 14:38:15.852" endtime="20210730 14:38:15.859"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:15.852" endtime="20210730 14:38:15.859"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:15.831" endtime="20210730 14:38:15.859"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:15.864" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:15.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:15.874" level="INFO">${pids} = 23291
23298
23303</msg>
<status status="PASS" starttime="20210730 14:38:15.860" endtime="20210730 14:38:15.874"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:15.875" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:15.874" endtime="20210730 14:38:15.875"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:15.875" level="INFO">${pids} = ['23291', '23298', '23303']</msg>
<status status="PASS" starttime="20210730 14:38:15.875" endtime="20210730 14:38:15.875"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23291</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:15.878" level="INFO">Running command 'kill 23291 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:15.876" endtime="20210730 14:38:15.878"/>
</kw>
<status status="PASS" starttime="20210730 14:38:15.876" endtime="20210730 14:38:15.878"/>
</iter>
<iter>
<var name="${pid}">23298</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:15.881" level="INFO">Running command 'kill 23298 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:15.879" endtime="20210730 14:38:15.881"/>
</kw>
<status status="PASS" starttime="20210730 14:38:15.879" endtime="20210730 14:38:15.881"/>
</iter>
<iter>
<var name="${pid}">23303</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:15.885" level="INFO">Running command 'kill 23303 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:15.882" endtime="20210730 14:38:15.885"/>
</kw>
<status status="PASS" starttime="20210730 14:38:15.882" endtime="20210730 14:38:15.885"/>
</iter>
<status status="PASS" starttime="20210730 14:38:15.875" endtime="20210730 14:38:15.885"/>
</for>
<status status="PASS" starttime="20210730 14:38:15.875" endtime="20210730 14:38:15.885"/>
</branch>
<status status="PASS" starttime="20210730 14:38:15.875" endtime="20210730 14:38:15.885"/>
</if>
<status status="PASS" starttime="20210730 14:38:15.860" endtime="20210730 14:38:15.885"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '!#%&amp;/¤%=!()=?'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:38:14.270" endtime="20210730 14:38:15.886">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t5" name="With Each Valid Token, Updating Username Of Each System User With 1234567 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:15.891" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:15.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:15.900" level="INFO">${pids} = 23332</msg>
<status status="PASS" starttime="20210730 14:38:15.888" endtime="20210730 14:38:15.900"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:15.901" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:15.900" endtime="20210730 14:38:15.901"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:15.903" level="INFO">${pids} = ['23332']</msg>
<status status="PASS" starttime="20210730 14:38:15.901" endtime="20210730 14:38:15.903"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23332</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:15.909" level="INFO">Running command 'kill 23332 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:15.904" endtime="20210730 14:38:15.910"/>
</kw>
<status status="PASS" starttime="20210730 14:38:15.904" endtime="20210730 14:38:15.910"/>
</iter>
<status status="PASS" starttime="20210730 14:38:15.904" endtime="20210730 14:38:15.910"/>
</for>
<status status="PASS" starttime="20210730 14:38:15.901" endtime="20210730 14:38:15.910"/>
</branch>
<status status="PASS" starttime="20210730 14:38:15.901" endtime="20210730 14:38:15.910"/>
</if>
<status status="PASS" starttime="20210730 14:38:15.887" endtime="20210730 14:38:15.910"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:15.911" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:15.911" endtime="20210730 14:38:15.911"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:15.912" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:15.912" endtime="20210730 14:38:15.912"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:15.912" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:15.912" endtime="20210730 14:38:15.912"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:15.913" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:15.912" endtime="20210730 14:38:15.913"/>
</kw>
<msg timestamp="20210730 14:38:15.913" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:15.911" endtime="20210730 14:38:15.913"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:15.916" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:15.913" endtime="20210730 14:38:15.918"/>
</kw>
<status status="PASS" starttime="20210730 14:38:15.910" endtime="20210730 14:38:15.918"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:38:15.919" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:38:15.919" endtime="20210730 14:38:15.923"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:38:17.425" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:38:15.924" endtime="20210730 14:38:17.425"/>
</kw>
<status status="PASS" starttime="20210730 14:38:15.918" endtime="20210730 14:38:17.425"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:17.426" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:17.426" endtime="20210730 14:38:17.426"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:17.427" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:17.427" endtime="20210730 14:38:17.427"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:17.427" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:17.427" endtime="20210730 14:38:17.427"/>
</kw>
<msg timestamp="20210730 14:38:17.427" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:17.426" endtime="20210730 14:38:17.428"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:38:17.428" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:38:17.428" endtime="20210730 14:38:17.428"/>
</kw>
<status status="PASS" starttime="20210730 14:38:17.425" endtime="20210730 14:38:17.429"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:38:17.429" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:38:17.429" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:38:17.429" endtime="20210730 14:38:17.430"/>
</kw>
<status status="PASS" starttime="20210730 14:38:17.429" endtime="20210730 14:38:17.430"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:38:17.430" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:38:17.431" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:38:17.430" endtime="20210730 14:38:17.431"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:38:17.431" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:38:17.431" endtime="20210730 14:38:17.431"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:17.432" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:17.431" endtime="20210730 14:38:17.432"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:17.432" endtime="20210730 14:38:17.433"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:17.433" endtime="20210730 14:38:17.433"/>
</kw>
<status status="PASS" starttime="20210730 14:38:17.431" endtime="20210730 14:38:17.433"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:17.434" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:17.434" endtime="20210730 14:38:17.434"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:17.437" endtime="20210730 14:38:17.438"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:17.438" endtime="20210730 14:38:17.438"/>
</kw>
<status status="PASS" starttime="20210730 14:38:17.434" endtime="20210730 14:38:17.438"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:17.441" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:17.441" endtime="20210730 14:38:17.441"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:17.441" endtime="20210730 14:38:17.442"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:17.442" endtime="20210730 14:38:17.443"/>
</kw>
<status status="PASS" starttime="20210730 14:38:17.440" endtime="20210730 14:38:17.443"/>
</iter>
<status status="PASS" starttime="20210730 14:38:17.431" endtime="20210730 14:38:17.443"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:38:17.443" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:38:17.443" endtime="20210730 14:38:17.444"/>
</kw>
<status status="PASS" starttime="20210730 14:38:17.430" endtime="20210730 14:38:17.444"/>
</kw>
<status status="PASS" starttime="20210730 14:38:15.887" endtime="20210730 14:38:17.444"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=1234567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:17.449" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:38:17.449" endtime="20210730 14:38:17.449"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:17.450" level="INFO">${payload} = {'username': '1234567'}</msg>
<status status="PASS" starttime="20210730 14:38:17.449" endtime="20210730 14:38:17.450"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:17.464" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:17.464" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:17.450" endtime="20210730 14:38:17.464"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:17.464" endtime="20210730 14:38:17.464"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:17.464" endtime="20210730 14:38:17.464"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:17.450" endtime="20210730 14:38:17.464"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:17.450" endtime="20210730 14:38:17.465"/>
</for>
<status status="FAIL" starttime="20210730 14:38:17.448" endtime="20210730 14:38:17.465"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:17.448" endtime="20210730 14:38:17.465"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=1234567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:17.466" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:38:17.466" endtime="20210730 14:38:17.466"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:17.467" level="INFO">${payload} = {'username': '1234567'}</msg>
<status status="PASS" starttime="20210730 14:38:17.466" endtime="20210730 14:38:17.467"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:17.479" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:17.480" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:17.467" endtime="20210730 14:38:17.480"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:17.480" endtime="20210730 14:38:17.480"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:17.480" endtime="20210730 14:38:17.480"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:17.467" endtime="20210730 14:38:17.480"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:17.467" endtime="20210730 14:38:17.480"/>
</for>
<status status="FAIL" starttime="20210730 14:38:17.465" endtime="20210730 14:38:17.480"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:17.465" endtime="20210730 14:38:17.481"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=1234567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:17.482" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:38:17.482" endtime="20210730 14:38:17.482"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:17.483" level="INFO">${payload} = {'username': '1234567'}</msg>
<status status="PASS" starttime="20210730 14:38:17.483" endtime="20210730 14:38:17.483"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:17.493" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:17.493" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:17.483" endtime="20210730 14:38:17.493"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:17.493" endtime="20210730 14:38:17.493"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:17.494" endtime="20210730 14:38:17.494"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:17.483" endtime="20210730 14:38:17.494"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:17.483" endtime="20210730 14:38:17.494"/>
</for>
<status status="FAIL" starttime="20210730 14:38:17.481" endtime="20210730 14:38:17.494"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:17.481" endtime="20210730 14:38:17.494"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:17.447" endtime="20210730 14:38:17.494"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:17.498" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:17.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:17.511" level="INFO">${pids} = 23355
23362
23366</msg>
<status status="PASS" starttime="20210730 14:38:17.495" endtime="20210730 14:38:17.511"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:17.512" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:17.511" endtime="20210730 14:38:17.512"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:17.513" level="INFO">${pids} = ['23355', '23362', '23366']</msg>
<status status="PASS" starttime="20210730 14:38:17.513" endtime="20210730 14:38:17.513"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23355</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:17.528" level="INFO">Running command 'kill 23355 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:17.514" endtime="20210730 14:38:17.529"/>
</kw>
<status status="PASS" starttime="20210730 14:38:17.513" endtime="20210730 14:38:17.529"/>
</iter>
<iter>
<var name="${pid}">23362</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:17.532" level="INFO">Running command 'kill 23362 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:17.529" endtime="20210730 14:38:17.533"/>
</kw>
<status status="PASS" starttime="20210730 14:38:17.529" endtime="20210730 14:38:17.533"/>
</iter>
<iter>
<var name="${pid}">23366</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:17.538" level="INFO">Running command 'kill 23366 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:17.534" endtime="20210730 14:38:17.539"/>
</kw>
<status status="PASS" starttime="20210730 14:38:17.533" endtime="20210730 14:38:17.539"/>
</iter>
<status status="PASS" starttime="20210730 14:38:17.513" endtime="20210730 14:38:17.539"/>
</for>
<status status="PASS" starttime="20210730 14:38:17.512" endtime="20210730 14:38:17.539"/>
</branch>
<status status="PASS" starttime="20210730 14:38:17.512" endtime="20210730 14:38:17.539"/>
</if>
<status status="PASS" starttime="20210730 14:38:17.495" endtime="20210730 14:38:17.540"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '1234567'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:38:15.886" endtime="20210730 14:38:17.540">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t6" name="With Each Valid Token, Updating Username Of Each System User With 12345678 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:17.546" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:17.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:17.556" level="INFO">${pids} = 23395</msg>
<status status="PASS" starttime="20210730 14:38:17.543" endtime="20210730 14:38:17.556"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:17.558" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:17.557" endtime="20210730 14:38:17.558"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:17.558" level="INFO">${pids} = ['23395']</msg>
<status status="PASS" starttime="20210730 14:38:17.558" endtime="20210730 14:38:17.558"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23395</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:17.562" level="INFO">Running command 'kill 23395 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:17.559" endtime="20210730 14:38:17.563"/>
</kw>
<status status="PASS" starttime="20210730 14:38:17.559" endtime="20210730 14:38:17.563"/>
</iter>
<status status="PASS" starttime="20210730 14:38:17.559" endtime="20210730 14:38:17.563"/>
</for>
<status status="PASS" starttime="20210730 14:38:17.558" endtime="20210730 14:38:17.563"/>
</branch>
<status status="PASS" starttime="20210730 14:38:17.558" endtime="20210730 14:38:17.563"/>
</if>
<status status="PASS" starttime="20210730 14:38:17.542" endtime="20210730 14:38:17.563"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:17.565" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:17.564" endtime="20210730 14:38:17.565"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:17.566" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:17.565" endtime="20210730 14:38:17.566"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:17.566" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:17.566" endtime="20210730 14:38:17.567"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:17.567" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:17.567" endtime="20210730 14:38:17.567"/>
</kw>
<msg timestamp="20210730 14:38:17.567" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:17.565" endtime="20210730 14:38:17.567"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:17.571" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:17.568" endtime="20210730 14:38:17.573"/>
</kw>
<status status="PASS" starttime="20210730 14:38:17.564" endtime="20210730 14:38:17.573"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:38:17.575" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:38:17.574" endtime="20210730 14:38:17.578"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:38:19.081" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:38:17.579" endtime="20210730 14:38:19.082"/>
</kw>
<status status="PASS" starttime="20210730 14:38:17.574" endtime="20210730 14:38:19.083"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:19.086" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:19.086" endtime="20210730 14:38:19.086"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:19.086" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:19.086" endtime="20210730 14:38:19.086"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:19.087" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:19.086" endtime="20210730 14:38:19.087"/>
</kw>
<msg timestamp="20210730 14:38:19.087" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:19.085" endtime="20210730 14:38:19.087"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:38:19.087" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:38:19.087" endtime="20210730 14:38:19.088"/>
</kw>
<status status="PASS" starttime="20210730 14:38:19.084" endtime="20210730 14:38:19.088"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:38:19.088" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:38:19.088" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:38:19.088" endtime="20210730 14:38:19.089"/>
</kw>
<status status="PASS" starttime="20210730 14:38:19.088" endtime="20210730 14:38:19.089"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:38:19.089" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:38:19.089" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:38:19.089" endtime="20210730 14:38:19.089"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:38:19.090" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:38:19.090" endtime="20210730 14:38:19.090"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:19.090" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:19.090" endtime="20210730 14:38:19.090"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:19.090" endtime="20210730 14:38:19.091"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:19.091" endtime="20210730 14:38:19.091"/>
</kw>
<status status="PASS" starttime="20210730 14:38:19.090" endtime="20210730 14:38:19.091"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:19.092" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:19.092" endtime="20210730 14:38:19.092"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:19.092" endtime="20210730 14:38:19.092"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:19.093" endtime="20210730 14:38:19.093"/>
</kw>
<status status="PASS" starttime="20210730 14:38:19.091" endtime="20210730 14:38:19.093"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:19.093" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:19.093" endtime="20210730 14:38:19.093"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:19.093" endtime="20210730 14:38:19.094"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:19.094" endtime="20210730 14:38:19.094"/>
</kw>
<status status="PASS" starttime="20210730 14:38:19.093" endtime="20210730 14:38:19.094"/>
</iter>
<status status="PASS" starttime="20210730 14:38:19.090" endtime="20210730 14:38:19.094"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:38:19.095" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:38:19.094" endtime="20210730 14:38:19.095"/>
</kw>
<status status="PASS" starttime="20210730 14:38:19.089" endtime="20210730 14:38:19.095"/>
</kw>
<status status="PASS" starttime="20210730 14:38:17.542" endtime="20210730 14:38:19.095"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=12345678</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:19.096" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:38:19.096" endtime="20210730 14:38:19.096"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:19.097" level="INFO">${payload} = {'username': '12345678'}</msg>
<status status="PASS" starttime="20210730 14:38:19.096" endtime="20210730 14:38:19.097"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:19.107" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:19.108" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:19.097" endtime="20210730 14:38:19.108"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:19.108" endtime="20210730 14:38:19.108"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:19.108" endtime="20210730 14:38:19.108"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:19.097" endtime="20210730 14:38:19.108"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:19.097" endtime="20210730 14:38:19.108"/>
</for>
<status status="FAIL" starttime="20210730 14:38:19.095" endtime="20210730 14:38:19.108"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:19.095" endtime="20210730 14:38:19.108"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=12345678</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:19.110" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:38:19.109" endtime="20210730 14:38:19.110"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:19.110" level="INFO">${payload} = {'username': '12345678'}</msg>
<status status="PASS" starttime="20210730 14:38:19.110" endtime="20210730 14:38:19.110"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:19.114" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:19.114" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:19.110" endtime="20210730 14:38:19.114"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:19.115" endtime="20210730 14:38:19.115"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:19.115" endtime="20210730 14:38:19.115"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:19.110" endtime="20210730 14:38:19.115"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:19.110" endtime="20210730 14:38:19.115"/>
</for>
<status status="FAIL" starttime="20210730 14:38:19.109" endtime="20210730 14:38:19.115"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:19.108" endtime="20210730 14:38:19.115"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=12345678</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:19.116" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:38:19.116" endtime="20210730 14:38:19.116"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:19.116" level="INFO">${payload} = {'username': '12345678'}</msg>
<status status="PASS" starttime="20210730 14:38:19.116" endtime="20210730 14:38:19.116"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:19.120" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:19.120" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:19.117" endtime="20210730 14:38:19.120"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:19.120" endtime="20210730 14:38:19.120"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:19.121" endtime="20210730 14:38:19.121"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:19.116" endtime="20210730 14:38:19.121"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:19.116" endtime="20210730 14:38:19.121"/>
</for>
<status status="FAIL" starttime="20210730 14:38:19.115" endtime="20210730 14:38:19.121"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:19.115" endtime="20210730 14:38:19.121"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:19.095" endtime="20210730 14:38:19.121"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:19.126" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:19.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:19.135" level="INFO">${pids} = 23418
23425
23429</msg>
<status status="PASS" starttime="20210730 14:38:19.122" endtime="20210730 14:38:19.135"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:19.136" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:19.135" endtime="20210730 14:38:19.136"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:19.136" level="INFO">${pids} = ['23418', '23425', '23429']</msg>
<status status="PASS" starttime="20210730 14:38:19.136" endtime="20210730 14:38:19.136"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23418</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:19.141" level="INFO">Running command 'kill 23418 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:19.137" endtime="20210730 14:38:19.141"/>
</kw>
<status status="PASS" starttime="20210730 14:38:19.137" endtime="20210730 14:38:19.141"/>
</iter>
<iter>
<var name="${pid}">23425</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:19.145" level="INFO">Running command 'kill 23425 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:19.142" endtime="20210730 14:38:19.145"/>
</kw>
<status status="PASS" starttime="20210730 14:38:19.141" endtime="20210730 14:38:19.145"/>
</iter>
<iter>
<var name="${pid}">23429</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:19.148" level="INFO">Running command 'kill 23429 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:19.146" endtime="20210730 14:38:19.148"/>
</kw>
<status status="PASS" starttime="20210730 14:38:19.145" endtime="20210730 14:38:19.149"/>
</iter>
<status status="PASS" starttime="20210730 14:38:19.137" endtime="20210730 14:38:19.149"/>
</for>
<status status="PASS" starttime="20210730 14:38:19.136" endtime="20210730 14:38:19.149"/>
</branch>
<status status="PASS" starttime="20210730 14:38:19.136" endtime="20210730 14:38:19.149"/>
</if>
<status status="PASS" starttime="20210730 14:38:19.121" endtime="20210730 14:38:19.149"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '12345678'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:38:17.540" endtime="20210730 14:38:19.149">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t7" name="With Each Valid Token, Updating Username Of Each System User With 12345678912345 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:19.153" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:19.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:19.166" level="INFO">${pids} = 23458</msg>
<status status="PASS" starttime="20210730 14:38:19.151" endtime="20210730 14:38:19.166"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:19.167" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:19.166" endtime="20210730 14:38:19.167"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:19.167" level="INFO">${pids} = ['23458']</msg>
<status status="PASS" starttime="20210730 14:38:19.167" endtime="20210730 14:38:19.167"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23458</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:19.170" level="INFO">Running command 'kill 23458 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:19.168" endtime="20210730 14:38:19.171"/>
</kw>
<status status="PASS" starttime="20210730 14:38:19.168" endtime="20210730 14:38:19.171"/>
</iter>
<status status="PASS" starttime="20210730 14:38:19.167" endtime="20210730 14:38:19.171"/>
</for>
<status status="PASS" starttime="20210730 14:38:19.167" endtime="20210730 14:38:19.171"/>
</branch>
<status status="PASS" starttime="20210730 14:38:19.167" endtime="20210730 14:38:19.171"/>
</if>
<status status="PASS" starttime="20210730 14:38:19.151" endtime="20210730 14:38:19.171"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:19.173" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:19.172" endtime="20210730 14:38:19.173"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:19.173" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:19.173" endtime="20210730 14:38:19.173"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:19.174" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:19.174" endtime="20210730 14:38:19.174"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:19.174" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:19.174" endtime="20210730 14:38:19.175"/>
</kw>
<msg timestamp="20210730 14:38:19.178" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:19.173" endtime="20210730 14:38:19.178"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:19.198" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:19.179" endtime="20210730 14:38:19.198"/>
</kw>
<status status="PASS" starttime="20210730 14:38:19.172" endtime="20210730 14:38:19.199"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:38:19.200" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:38:19.200" endtime="20210730 14:38:19.208"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:38:20.709" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:38:19.208" endtime="20210730 14:38:20.710"/>
</kw>
<status status="PASS" starttime="20210730 14:38:19.199" endtime="20210730 14:38:20.710"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:20.711" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:20.711" endtime="20210730 14:38:20.711"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:20.711" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:20.711" endtime="20210730 14:38:20.711"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:20.712" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:20.711" endtime="20210730 14:38:20.712"/>
</kw>
<msg timestamp="20210730 14:38:20.712" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:20.710" endtime="20210730 14:38:20.712"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:38:20.713" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:38:20.712" endtime="20210730 14:38:20.713"/>
</kw>
<status status="PASS" starttime="20210730 14:38:20.710" endtime="20210730 14:38:20.713"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:38:20.714" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:38:20.714" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:38:20.714" endtime="20210730 14:38:20.714"/>
</kw>
<status status="PASS" starttime="20210730 14:38:20.713" endtime="20210730 14:38:20.714"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:38:20.715" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:38:20.715" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:38:20.714" endtime="20210730 14:38:20.715"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:38:20.715" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:38:20.715" endtime="20210730 14:38:20.715"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:20.716" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:20.715" endtime="20210730 14:38:20.716"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:20.716" endtime="20210730 14:38:20.717"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:20.717" endtime="20210730 14:38:20.717"/>
</kw>
<status status="PASS" starttime="20210730 14:38:20.715" endtime="20210730 14:38:20.717"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:20.717" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:20.717" endtime="20210730 14:38:20.717"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:20.718" endtime="20210730 14:38:20.718"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:20.718" endtime="20210730 14:38:20.719"/>
</kw>
<status status="PASS" starttime="20210730 14:38:20.717" endtime="20210730 14:38:20.719"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:20.719" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:20.719" endtime="20210730 14:38:20.719"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:20.719" endtime="20210730 14:38:20.720"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:20.720" endtime="20210730 14:38:20.720"/>
</kw>
<status status="PASS" starttime="20210730 14:38:20.719" endtime="20210730 14:38:20.720"/>
</iter>
<status status="PASS" starttime="20210730 14:38:20.715" endtime="20210730 14:38:20.720"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:38:20.721" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:38:20.720" endtime="20210730 14:38:20.721"/>
</kw>
<status status="PASS" starttime="20210730 14:38:20.714" endtime="20210730 14:38:20.721"/>
</kw>
<status status="PASS" starttime="20210730 14:38:19.150" endtime="20210730 14:38:20.721"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=12345678912345</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:20.723" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:38:20.722" endtime="20210730 14:38:20.723"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:20.723" level="INFO">${payload} = {'username': '12345678912345'}</msg>
<status status="PASS" starttime="20210730 14:38:20.723" endtime="20210730 14:38:20.723"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:20.734" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:20.734" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:20.724" endtime="20210730 14:38:20.734"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:20.734" endtime="20210730 14:38:20.734"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:20.735" endtime="20210730 14:38:20.735"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:20.723" endtime="20210730 14:38:20.735"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:20.723" endtime="20210730 14:38:20.735"/>
</for>
<status status="FAIL" starttime="20210730 14:38:20.722" endtime="20210730 14:38:20.735"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:20.722" endtime="20210730 14:38:20.735"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=12345678912345</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:20.736" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:38:20.736" endtime="20210730 14:38:20.736"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:20.737" level="INFO">${payload} = {'username': '12345678912345'}</msg>
<status status="PASS" starttime="20210730 14:38:20.736" endtime="20210730 14:38:20.737"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:20.742" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:20.742" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:20.737" endtime="20210730 14:38:20.742"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:20.743" endtime="20210730 14:38:20.743"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:20.743" endtime="20210730 14:38:20.743"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:20.737" endtime="20210730 14:38:20.743"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:20.737" endtime="20210730 14:38:20.743"/>
</for>
<status status="FAIL" starttime="20210730 14:38:20.735" endtime="20210730 14:38:20.743"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:20.735" endtime="20210730 14:38:20.743"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=12345678912345</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:20.744" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:38:20.744" endtime="20210730 14:38:20.744"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:20.745" level="INFO">${payload} = {'username': '12345678912345'}</msg>
<status status="PASS" starttime="20210730 14:38:20.744" endtime="20210730 14:38:20.745"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:20.749" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:20.749" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:20.745" endtime="20210730 14:38:20.750"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:20.750" endtime="20210730 14:38:20.750"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:20.750" endtime="20210730 14:38:20.750"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:20.745" endtime="20210730 14:38:20.750"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:20.745" endtime="20210730 14:38:20.750"/>
</for>
<status status="FAIL" starttime="20210730 14:38:20.743" endtime="20210730 14:38:20.750"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:20.743" endtime="20210730 14:38:20.750"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:20.721" endtime="20210730 14:38:20.750"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:20.761" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:20.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:20.770" level="INFO">${pids} = 23481
23488
23493</msg>
<status status="PASS" starttime="20210730 14:38:20.751" endtime="20210730 14:38:20.770"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:20.771" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:20.770" endtime="20210730 14:38:20.771"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:20.771" level="INFO">${pids} = ['23481', '23488', '23493']</msg>
<status status="PASS" starttime="20210730 14:38:20.771" endtime="20210730 14:38:20.771"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23481</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:20.775" level="INFO">Running command 'kill 23481 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:20.772" endtime="20210730 14:38:20.776"/>
</kw>
<status status="PASS" starttime="20210730 14:38:20.772" endtime="20210730 14:38:20.776"/>
</iter>
<iter>
<var name="${pid}">23488</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:20.784" level="INFO">Running command 'kill 23488 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:20.776" endtime="20210730 14:38:20.785"/>
</kw>
<status status="PASS" starttime="20210730 14:38:20.776" endtime="20210730 14:38:20.785"/>
</iter>
<iter>
<var name="${pid}">23493</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:20.789" level="INFO">Running command 'kill 23493 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:20.786" endtime="20210730 14:38:20.789"/>
</kw>
<status status="PASS" starttime="20210730 14:38:20.785" endtime="20210730 14:38:20.790"/>
</iter>
<status status="PASS" starttime="20210730 14:38:20.771" endtime="20210730 14:38:20.790"/>
</for>
<status status="PASS" starttime="20210730 14:38:20.771" endtime="20210730 14:38:20.790"/>
</branch>
<status status="PASS" starttime="20210730 14:38:20.771" endtime="20210730 14:38:20.790"/>
</if>
<status status="PASS" starttime="20210730 14:38:20.751" endtime="20210730 14:38:20.790"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '12345678912345'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:38:19.150" endtime="20210730 14:38:20.790">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t8" name="With Each Valid Token, Updating Username Of Each System User With abcdefg Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:20.796" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:20.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:20.806" level="INFO">${pids} = 23522</msg>
<status status="PASS" starttime="20210730 14:38:20.793" endtime="20210730 14:38:20.806"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:20.808" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:20.807" endtime="20210730 14:38:20.808"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:20.809" level="INFO">${pids} = ['23522']</msg>
<status status="PASS" starttime="20210730 14:38:20.808" endtime="20210730 14:38:20.809"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23522</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:20.816" level="INFO">Running command 'kill 23522 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:20.809" endtime="20210730 14:38:20.816"/>
</kw>
<status status="PASS" starttime="20210730 14:38:20.809" endtime="20210730 14:38:20.816"/>
</iter>
<status status="PASS" starttime="20210730 14:38:20.809" endtime="20210730 14:38:20.816"/>
</for>
<status status="PASS" starttime="20210730 14:38:20.808" endtime="20210730 14:38:20.816"/>
</branch>
<status status="PASS" starttime="20210730 14:38:20.808" endtime="20210730 14:38:20.816"/>
</if>
<status status="PASS" starttime="20210730 14:38:20.792" endtime="20210730 14:38:20.817"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:20.818" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:20.818" endtime="20210730 14:38:20.818"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:20.819" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:20.819" endtime="20210730 14:38:20.819"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:20.819" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:20.819" endtime="20210730 14:38:20.820"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:20.820" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:20.820" endtime="20210730 14:38:20.820"/>
</kw>
<msg timestamp="20210730 14:38:20.820" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:20.818" endtime="20210730 14:38:20.820"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:20.824" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:20.820" endtime="20210730 14:38:20.826"/>
</kw>
<status status="PASS" starttime="20210730 14:38:20.817" endtime="20210730 14:38:20.826"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:38:20.827" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:38:20.827" endtime="20210730 14:38:20.834"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:38:22.336" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:38:20.834" endtime="20210730 14:38:22.336"/>
</kw>
<status status="PASS" starttime="20210730 14:38:20.826" endtime="20210730 14:38:22.337"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:22.338" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:22.338" endtime="20210730 14:38:22.338"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:22.338" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:22.338" endtime="20210730 14:38:22.338"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:22.339" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:22.338" endtime="20210730 14:38:22.339"/>
</kw>
<msg timestamp="20210730 14:38:22.339" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:22.337" endtime="20210730 14:38:22.339"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:38:22.340" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:38:22.339" endtime="20210730 14:38:22.341"/>
</kw>
<status status="PASS" starttime="20210730 14:38:22.337" endtime="20210730 14:38:22.341"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:38:22.342" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:38:22.342" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:38:22.342" endtime="20210730 14:38:22.342"/>
</kw>
<status status="PASS" starttime="20210730 14:38:22.341" endtime="20210730 14:38:22.342"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:38:22.347" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:38:22.347" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:38:22.343" endtime="20210730 14:38:22.347"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:38:22.348" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:38:22.348" endtime="20210730 14:38:22.348"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:22.349" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:22.348" endtime="20210730 14:38:22.349"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:22.349" endtime="20210730 14:38:22.349"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:22.350" endtime="20210730 14:38:22.350"/>
</kw>
<status status="PASS" starttime="20210730 14:38:22.348" endtime="20210730 14:38:22.350"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:22.350" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:22.350" endtime="20210730 14:38:22.350"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:22.350" endtime="20210730 14:38:22.351"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:22.351" endtime="20210730 14:38:22.351"/>
</kw>
<status status="PASS" starttime="20210730 14:38:22.350" endtime="20210730 14:38:22.351"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:22.352" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:22.351" endtime="20210730 14:38:22.352"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:22.352" endtime="20210730 14:38:22.352"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:22.353" endtime="20210730 14:38:22.353"/>
</kw>
<status status="PASS" starttime="20210730 14:38:22.351" endtime="20210730 14:38:22.353"/>
</iter>
<status status="PASS" starttime="20210730 14:38:22.348" endtime="20210730 14:38:22.353"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:38:22.353" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:38:22.353" endtime="20210730 14:38:22.353"/>
</kw>
<status status="PASS" starttime="20210730 14:38:22.342" endtime="20210730 14:38:22.354"/>
</kw>
<status status="PASS" starttime="20210730 14:38:20.792" endtime="20210730 14:38:22.354"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=abcdefg</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:22.355" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:38:22.355" endtime="20210730 14:38:22.355"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:22.356" level="INFO">${payload} = {'username': 'abcdefg'}</msg>
<status status="PASS" starttime="20210730 14:38:22.356" endtime="20210730 14:38:22.356"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:22.366" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:22.366" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:22.356" endtime="20210730 14:38:22.366"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:22.366" endtime="20210730 14:38:22.366"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:22.366" endtime="20210730 14:38:22.366"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:22.356" endtime="20210730 14:38:22.366"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:22.356" endtime="20210730 14:38:22.367"/>
</for>
<status status="FAIL" starttime="20210730 14:38:22.354" endtime="20210730 14:38:22.367"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:22.354" endtime="20210730 14:38:22.367"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=abcdefg</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:22.368" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:38:22.368" endtime="20210730 14:38:22.368"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:22.368" level="INFO">${payload} = {'username': 'abcdefg'}</msg>
<status status="PASS" starttime="20210730 14:38:22.368" endtime="20210730 14:38:22.368"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:22.373" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:22.374" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:22.369" endtime="20210730 14:38:22.374"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:22.374" endtime="20210730 14:38:22.374"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:22.374" endtime="20210730 14:38:22.374"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:22.369" endtime="20210730 14:38:22.374"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:22.368" endtime="20210730 14:38:22.374"/>
</for>
<status status="FAIL" starttime="20210730 14:38:22.367" endtime="20210730 14:38:22.375"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:22.367" endtime="20210730 14:38:22.375"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=abcdefg</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:22.376" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:38:22.375" endtime="20210730 14:38:22.376"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:22.376" level="INFO">${payload} = {'username': 'abcdefg'}</msg>
<status status="PASS" starttime="20210730 14:38:22.376" endtime="20210730 14:38:22.376"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:22.381" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:22.381" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:22.376" endtime="20210730 14:38:22.381"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:22.381" endtime="20210730 14:38:22.381"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:22.381" endtime="20210730 14:38:22.381"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:22.376" endtime="20210730 14:38:22.381"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:22.376" endtime="20210730 14:38:22.381"/>
</for>
<status status="FAIL" starttime="20210730 14:38:22.375" endtime="20210730 14:38:22.381"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:22.375" endtime="20210730 14:38:22.382"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:22.354" endtime="20210730 14:38:22.382"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:22.386" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:22.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:22.396" level="INFO">${pids} = 23545
23552
23559</msg>
<status status="PASS" starttime="20210730 14:38:22.382" endtime="20210730 14:38:22.396"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:22.397" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:22.396" endtime="20210730 14:38:22.397"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:22.398" level="INFO">${pids} = ['23545', '23552', '23559']</msg>
<status status="PASS" starttime="20210730 14:38:22.398" endtime="20210730 14:38:22.398"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23545</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:22.402" level="INFO">Running command 'kill 23545 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:22.398" endtime="20210730 14:38:22.402"/>
</kw>
<status status="PASS" starttime="20210730 14:38:22.398" endtime="20210730 14:38:22.402"/>
</iter>
<iter>
<var name="${pid}">23552</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:22.409" level="INFO">Running command 'kill 23552 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:22.402" endtime="20210730 14:38:22.410"/>
</kw>
<status status="PASS" starttime="20210730 14:38:22.402" endtime="20210730 14:38:22.410"/>
</iter>
<iter>
<var name="${pid}">23559</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:22.415" level="INFO">Running command 'kill 23559 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:22.411" endtime="20210730 14:38:22.416"/>
</kw>
<status status="PASS" starttime="20210730 14:38:22.410" endtime="20210730 14:38:22.416"/>
</iter>
<status status="PASS" starttime="20210730 14:38:22.398" endtime="20210730 14:38:22.416"/>
</for>
<status status="PASS" starttime="20210730 14:38:22.397" endtime="20210730 14:38:22.416"/>
</branch>
<status status="PASS" starttime="20210730 14:38:22.397" endtime="20210730 14:38:22.416"/>
</if>
<status status="PASS" starttime="20210730 14:38:22.382" endtime="20210730 14:38:22.416"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": 'abcdefg'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:38:20.791" endtime="20210730 14:38:22.416">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t9" name="With Each Valid Token, Updating Username Of Each System User With abcdefgh Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:22.422" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:22.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:22.431" level="INFO">${pids} = 23588</msg>
<status status="PASS" starttime="20210730 14:38:22.419" endtime="20210730 14:38:22.432"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:22.432" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:22.432" endtime="20210730 14:38:22.432"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:22.433" level="INFO">${pids} = ['23588']</msg>
<status status="PASS" starttime="20210730 14:38:22.433" endtime="20210730 14:38:22.433"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23588</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:22.436" level="INFO">Running command 'kill 23588 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:22.434" endtime="20210730 14:38:22.437"/>
</kw>
<status status="PASS" starttime="20210730 14:38:22.433" endtime="20210730 14:38:22.437"/>
</iter>
<status status="PASS" starttime="20210730 14:38:22.433" endtime="20210730 14:38:22.437"/>
</for>
<status status="PASS" starttime="20210730 14:38:22.433" endtime="20210730 14:38:22.437"/>
</branch>
<status status="PASS" starttime="20210730 14:38:22.433" endtime="20210730 14:38:22.437"/>
</if>
<status status="PASS" starttime="20210730 14:38:22.418" endtime="20210730 14:38:22.437"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:22.439" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:22.438" endtime="20210730 14:38:22.439"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:22.439" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:22.439" endtime="20210730 14:38:22.439"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:22.440" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:22.439" endtime="20210730 14:38:22.440"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:22.440" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:22.440" endtime="20210730 14:38:22.440"/>
</kw>
<msg timestamp="20210730 14:38:22.440" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:22.439" endtime="20210730 14:38:22.441"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:22.444" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:22.441" endtime="20210730 14:38:22.448"/>
</kw>
<status status="PASS" starttime="20210730 14:38:22.438" endtime="20210730 14:38:22.449"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:38:22.450" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:38:22.450" endtime="20210730 14:38:22.454"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:38:23.955" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:38:22.454" endtime="20210730 14:38:23.955"/>
</kw>
<status status="PASS" starttime="20210730 14:38:22.449" endtime="20210730 14:38:23.956"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:23.957" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:23.957" endtime="20210730 14:38:23.957"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:23.957" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:23.957" endtime="20210730 14:38:23.957"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:23.958" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:23.958" endtime="20210730 14:38:23.958"/>
</kw>
<msg timestamp="20210730 14:38:23.958" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:23.956" endtime="20210730 14:38:23.958"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:38:23.959" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:38:23.958" endtime="20210730 14:38:23.959"/>
</kw>
<status status="PASS" starttime="20210730 14:38:23.956" endtime="20210730 14:38:23.959"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:38:23.960" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:38:23.960" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:38:23.960" endtime="20210730 14:38:23.960"/>
</kw>
<status status="PASS" starttime="20210730 14:38:23.959" endtime="20210730 14:38:23.960"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:38:23.961" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:38:23.961" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:38:23.960" endtime="20210730 14:38:23.961"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:38:23.961" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:38:23.961" endtime="20210730 14:38:23.961"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:23.962" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:23.961" endtime="20210730 14:38:23.962"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:23.962" endtime="20210730 14:38:23.963"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:23.963" endtime="20210730 14:38:23.963"/>
</kw>
<status status="PASS" starttime="20210730 14:38:23.961" endtime="20210730 14:38:23.963"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:23.963" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:23.963" endtime="20210730 14:38:23.963"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:23.964" endtime="20210730 14:38:23.964"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:23.965" endtime="20210730 14:38:23.965"/>
</kw>
<status status="PASS" starttime="20210730 14:38:23.963" endtime="20210730 14:38:23.965"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:23.965" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:23.965" endtime="20210730 14:38:23.965"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:23.965" endtime="20210730 14:38:23.966"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:23.966" endtime="20210730 14:38:23.966"/>
</kw>
<status status="PASS" starttime="20210730 14:38:23.965" endtime="20210730 14:38:23.966"/>
</iter>
<status status="PASS" starttime="20210730 14:38:23.961" endtime="20210730 14:38:23.966"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:38:23.967" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:38:23.966" endtime="20210730 14:38:23.967"/>
</kw>
<status status="PASS" starttime="20210730 14:38:23.960" endtime="20210730 14:38:23.967"/>
</kw>
<status status="PASS" starttime="20210730 14:38:22.418" endtime="20210730 14:38:23.967"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=abcdefgh</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:23.968" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:38:23.968" endtime="20210730 14:38:23.968"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:23.969" level="INFO">${payload} = {'username': 'abcdefgh'}</msg>
<status status="PASS" starttime="20210730 14:38:23.968" endtime="20210730 14:38:23.969"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:23.979" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:23.979" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:23.969" endtime="20210730 14:38:23.979"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:23.979" endtime="20210730 14:38:23.979"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:23.979" endtime="20210730 14:38:23.979"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:23.969" endtime="20210730 14:38:23.980"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:23.969" endtime="20210730 14:38:23.980"/>
</for>
<status status="FAIL" starttime="20210730 14:38:23.968" endtime="20210730 14:38:23.980"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:23.967" endtime="20210730 14:38:23.980"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=abcdefgh</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:23.981" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:38:23.980" endtime="20210730 14:38:23.981"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:23.981" level="INFO">${payload} = {'username': 'abcdefgh'}</msg>
<status status="PASS" starttime="20210730 14:38:23.981" endtime="20210730 14:38:23.981"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:23.986" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:23.986" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:23.982" endtime="20210730 14:38:23.986"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:23.986" endtime="20210730 14:38:23.986"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:23.986" endtime="20210730 14:38:23.986"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:23.982" endtime="20210730 14:38:23.986"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:23.981" endtime="20210730 14:38:23.986"/>
</for>
<status status="FAIL" starttime="20210730 14:38:23.980" endtime="20210730 14:38:23.987"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:23.980" endtime="20210730 14:38:23.987"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=abcdefgh</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:23.988" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:38:23.987" endtime="20210730 14:38:23.988"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:23.988" level="INFO">${payload} = {'username': 'abcdefgh'}</msg>
<status status="PASS" starttime="20210730 14:38:23.988" endtime="20210730 14:38:23.988"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:23.992" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:23.992" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:23.988" endtime="20210730 14:38:23.992"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:23.993" endtime="20210730 14:38:23.993"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:23.993" endtime="20210730 14:38:23.993"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:23.988" endtime="20210730 14:38:23.993"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:23.988" endtime="20210730 14:38:23.993"/>
</for>
<status status="FAIL" starttime="20210730 14:38:23.987" endtime="20210730 14:38:23.993"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:23.987" endtime="20210730 14:38:23.993"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:23.967" endtime="20210730 14:38:23.993"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:23.997" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:24.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:24.008" level="INFO">${pids} = 23611
23618
23622</msg>
<status status="PASS" starttime="20210730 14:38:23.994" endtime="20210730 14:38:24.008"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:24.009" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:24.008" endtime="20210730 14:38:24.009"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:24.010" level="INFO">${pids} = ['23611', '23618', '23622']</msg>
<status status="PASS" starttime="20210730 14:38:24.009" endtime="20210730 14:38:24.010"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23611</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:24.013" level="INFO">Running command 'kill 23611 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:24.010" endtime="20210730 14:38:24.014"/>
</kw>
<status status="PASS" starttime="20210730 14:38:24.010" endtime="20210730 14:38:24.014"/>
</iter>
<iter>
<var name="${pid}">23618</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:24.017" level="INFO">Running command 'kill 23618 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:24.014" endtime="20210730 14:38:24.017"/>
</kw>
<status status="PASS" starttime="20210730 14:38:24.014" endtime="20210730 14:38:24.017"/>
</iter>
<iter>
<var name="${pid}">23622</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:24.020" level="INFO">Running command 'kill 23622 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:24.017" endtime="20210730 14:38:24.020"/>
</kw>
<status status="PASS" starttime="20210730 14:38:24.017" endtime="20210730 14:38:24.020"/>
</iter>
<status status="PASS" starttime="20210730 14:38:24.010" endtime="20210730 14:38:24.021"/>
</for>
<status status="PASS" starttime="20210730 14:38:24.009" endtime="20210730 14:38:24.021"/>
</branch>
<status status="PASS" starttime="20210730 14:38:24.009" endtime="20210730 14:38:24.021"/>
</if>
<status status="PASS" starttime="20210730 14:38:23.994" endtime="20210730 14:38:24.021"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": 'abcdefgh'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:38:22.417" endtime="20210730 14:38:24.021">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t10" name="With Each Valid Token, Updating Username Of Each System User With abcdefghijklmnprstop Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:24.033" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:24.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:24.042" level="INFO">${pids} = 23651</msg>
<status status="PASS" starttime="20210730 14:38:24.024" endtime="20210730 14:38:24.043"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:24.044" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:24.043" endtime="20210730 14:38:24.044"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:24.044" level="INFO">${pids} = ['23651']</msg>
<status status="PASS" starttime="20210730 14:38:24.044" endtime="20210730 14:38:24.044"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23651</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:24.066" level="INFO">Running command 'kill 23651 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:24.045" endtime="20210730 14:38:24.067"/>
</kw>
<status status="PASS" starttime="20210730 14:38:24.045" endtime="20210730 14:38:24.067"/>
</iter>
<status status="PASS" starttime="20210730 14:38:24.044" endtime="20210730 14:38:24.067"/>
</for>
<status status="PASS" starttime="20210730 14:38:24.044" endtime="20210730 14:38:24.067"/>
</branch>
<status status="PASS" starttime="20210730 14:38:24.044" endtime="20210730 14:38:24.067"/>
</if>
<status status="PASS" starttime="20210730 14:38:24.023" endtime="20210730 14:38:24.067"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:24.069" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:24.068" endtime="20210730 14:38:24.069"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:24.070" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:24.069" endtime="20210730 14:38:24.070"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:24.070" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:24.070" endtime="20210730 14:38:24.070"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:24.070" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:24.070" endtime="20210730 14:38:24.070"/>
</kw>
<msg timestamp="20210730 14:38:24.071" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:24.069" endtime="20210730 14:38:24.071"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:24.075" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:24.071" endtime="20210730 14:38:24.076"/>
</kw>
<status status="PASS" starttime="20210730 14:38:24.068" endtime="20210730 14:38:24.077"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:38:24.078" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:38:24.078" endtime="20210730 14:38:24.082"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:38:25.588" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:38:24.082" endtime="20210730 14:38:25.589"/>
</kw>
<status status="PASS" starttime="20210730 14:38:24.077" endtime="20210730 14:38:25.590"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:25.592" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:25.592" endtime="20210730 14:38:25.592"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:25.593" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:25.593" endtime="20210730 14:38:25.593"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:25.593" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:25.593" endtime="20210730 14:38:25.594"/>
</kw>
<msg timestamp="20210730 14:38:25.594" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:25.591" endtime="20210730 14:38:25.594"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:38:25.594" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:38:25.594" endtime="20210730 14:38:25.595"/>
</kw>
<status status="PASS" starttime="20210730 14:38:25.590" endtime="20210730 14:38:25.595"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:38:25.595" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:38:25.595" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:38:25.595" endtime="20210730 14:38:25.595"/>
</kw>
<status status="PASS" starttime="20210730 14:38:25.595" endtime="20210730 14:38:25.596"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:38:25.596" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:38:25.596" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:38:25.596" endtime="20210730 14:38:25.596"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:38:25.597" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:38:25.596" endtime="20210730 14:38:25.597"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:25.597" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:25.597" endtime="20210730 14:38:25.597"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:25.597" endtime="20210730 14:38:25.598"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:25.598" endtime="20210730 14:38:25.598"/>
</kw>
<status status="PASS" starttime="20210730 14:38:25.597" endtime="20210730 14:38:25.598"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:25.599" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:25.598" endtime="20210730 14:38:25.599"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:25.599" endtime="20210730 14:38:25.599"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:25.600" endtime="20210730 14:38:25.600"/>
</kw>
<status status="PASS" starttime="20210730 14:38:25.598" endtime="20210730 14:38:25.600"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:25.600" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:25.600" endtime="20210730 14:38:25.600"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:25.600" endtime="20210730 14:38:25.601"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:25.601" endtime="20210730 14:38:25.601"/>
</kw>
<status status="PASS" starttime="20210730 14:38:25.600" endtime="20210730 14:38:25.601"/>
</iter>
<status status="PASS" starttime="20210730 14:38:25.597" endtime="20210730 14:38:25.601"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:38:25.602" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:38:25.601" endtime="20210730 14:38:25.602"/>
</kw>
<status status="PASS" starttime="20210730 14:38:25.596" endtime="20210730 14:38:25.602"/>
</kw>
<status status="PASS" starttime="20210730 14:38:24.023" endtime="20210730 14:38:25.602"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=abcdefghijklmnprstop</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:25.603" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:38:25.603" endtime="20210730 14:38:25.603"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:25.604" level="INFO">${payload} = {'username': 'abcdefghijklmnprstop'}</msg>
<status status="PASS" starttime="20210730 14:38:25.603" endtime="20210730 14:38:25.604"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:25.615" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:25.616" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:25.604" endtime="20210730 14:38:25.616"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:25.616" endtime="20210730 14:38:25.616"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:25.616" endtime="20210730 14:38:25.616"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:25.604" endtime="20210730 14:38:25.616"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:25.604" endtime="20210730 14:38:25.616"/>
</for>
<status status="FAIL" starttime="20210730 14:38:25.602" endtime="20210730 14:38:25.616"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:25.602" endtime="20210730 14:38:25.616"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=abcdefghijklmnprstop</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:25.617" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:38:25.617" endtime="20210730 14:38:25.618"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:25.618" level="INFO">${payload} = {'username': 'abcdefghijklmnprstop'}</msg>
<status status="PASS" starttime="20210730 14:38:25.618" endtime="20210730 14:38:25.618"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:25.622" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:25.623" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:25.618" endtime="20210730 14:38:25.623"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:25.623" endtime="20210730 14:38:25.623"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:25.623" endtime="20210730 14:38:25.623"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:25.618" endtime="20210730 14:38:25.623"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:25.618" endtime="20210730 14:38:25.623"/>
</for>
<status status="FAIL" starttime="20210730 14:38:25.617" endtime="20210730 14:38:25.623"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:25.617" endtime="20210730 14:38:25.623"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=abcdefghijklmnprstop</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:25.626" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:38:25.625" endtime="20210730 14:38:25.626"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:25.626" level="INFO">${payload} = {'username': 'abcdefghijklmnprstop'}</msg>
<status status="PASS" starttime="20210730 14:38:25.626" endtime="20210730 14:38:25.626"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:25.633" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:25.634" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:25.626" endtime="20210730 14:38:25.634"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:25.634" endtime="20210730 14:38:25.634"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:25.634" endtime="20210730 14:38:25.634"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:25.626" endtime="20210730 14:38:25.634"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:25.626" endtime="20210730 14:38:25.634"/>
</for>
<status status="FAIL" starttime="20210730 14:38:25.623" endtime="20210730 14:38:25.634"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:25.623" endtime="20210730 14:38:25.634"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:25.602" endtime="20210730 14:38:25.634"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:25.638" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:25.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:25.648" level="INFO">${pids} = 23675
23682
23688</msg>
<status status="PASS" starttime="20210730 14:38:25.635" endtime="20210730 14:38:25.648"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:25.649" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:25.648" endtime="20210730 14:38:25.649"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:25.650" level="INFO">${pids} = ['23675', '23682', '23688']</msg>
<status status="PASS" starttime="20210730 14:38:25.649" endtime="20210730 14:38:25.650"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23675</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:25.654" level="INFO">Running command 'kill 23675 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:25.650" endtime="20210730 14:38:25.654"/>
</kw>
<status status="PASS" starttime="20210730 14:38:25.650" endtime="20210730 14:38:25.654"/>
</iter>
<iter>
<var name="${pid}">23682</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:25.677" level="INFO">Running command 'kill 23682 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:25.655" endtime="20210730 14:38:25.677"/>
</kw>
<status status="PASS" starttime="20210730 14:38:25.655" endtime="20210730 14:38:25.677"/>
</iter>
<iter>
<var name="${pid}">23688</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:25.693" level="INFO">Running command 'kill 23688 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:25.678" endtime="20210730 14:38:25.694"/>
</kw>
<status status="PASS" starttime="20210730 14:38:25.678" endtime="20210730 14:38:25.694"/>
</iter>
<status status="PASS" starttime="20210730 14:38:25.650" endtime="20210730 14:38:25.694"/>
</for>
<status status="PASS" starttime="20210730 14:38:25.649" endtime="20210730 14:38:25.694"/>
</branch>
<status status="PASS" starttime="20210730 14:38:25.649" endtime="20210730 14:38:25.694"/>
</if>
<status status="PASS" starttime="20210730 14:38:25.635" endtime="20210730 14:38:25.695"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": 'abcdefghijklmnprstop'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:38:24.022" endtime="20210730 14:38:25.695">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t11" name="With Each Valid Token, Updating Username Of Each System User With hakan12 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:25.714" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:25.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:25.723" level="INFO">${pids} = 23717</msg>
<status status="PASS" starttime="20210730 14:38:25.697" endtime="20210730 14:38:25.723"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:25.724" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:25.723" endtime="20210730 14:38:25.724"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:25.725" level="INFO">${pids} = ['23717']</msg>
<status status="PASS" starttime="20210730 14:38:25.724" endtime="20210730 14:38:25.725"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23717</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:25.728" level="INFO">Running command 'kill 23717 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:25.725" endtime="20210730 14:38:25.729"/>
</kw>
<status status="PASS" starttime="20210730 14:38:25.725" endtime="20210730 14:38:25.729"/>
</iter>
<status status="PASS" starttime="20210730 14:38:25.725" endtime="20210730 14:38:25.729"/>
</for>
<status status="PASS" starttime="20210730 14:38:25.724" endtime="20210730 14:38:25.729"/>
</branch>
<status status="PASS" starttime="20210730 14:38:25.724" endtime="20210730 14:38:25.729"/>
</if>
<status status="PASS" starttime="20210730 14:38:25.697" endtime="20210730 14:38:25.729"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:25.731" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:25.730" endtime="20210730 14:38:25.731"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:25.731" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:25.731" endtime="20210730 14:38:25.731"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:25.732" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:25.732" endtime="20210730 14:38:25.732"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:25.732" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:25.732" endtime="20210730 14:38:25.732"/>
</kw>
<msg timestamp="20210730 14:38:25.733" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:25.731" endtime="20210730 14:38:25.733"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:25.742" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:25.733" endtime="20210730 14:38:25.742"/>
</kw>
<status status="PASS" starttime="20210730 14:38:25.730" endtime="20210730 14:38:25.743"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:38:25.744" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:38:25.744" endtime="20210730 14:38:25.754"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:38:27.257" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:38:25.755" endtime="20210730 14:38:27.257"/>
</kw>
<status status="PASS" starttime="20210730 14:38:25.743" endtime="20210730 14:38:27.257"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:27.259" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:27.259" endtime="20210730 14:38:27.259"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:27.259" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:27.259" endtime="20210730 14:38:27.259"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:27.260" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:27.259" endtime="20210730 14:38:27.260"/>
</kw>
<msg timestamp="20210730 14:38:27.260" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:27.258" endtime="20210730 14:38:27.260"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:38:27.260" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:38:27.260" endtime="20210730 14:38:27.261"/>
</kw>
<status status="PASS" starttime="20210730 14:38:27.258" endtime="20210730 14:38:27.261"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:38:27.261" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:38:27.261" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:38:27.261" endtime="20210730 14:38:27.262"/>
</kw>
<status status="PASS" starttime="20210730 14:38:27.261" endtime="20210730 14:38:27.262"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:38:27.262" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:38:27.262" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:38:27.262" endtime="20210730 14:38:27.262"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:38:27.263" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:38:27.262" endtime="20210730 14:38:27.263"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:27.263" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:27.263" endtime="20210730 14:38:27.263"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:27.263" endtime="20210730 14:38:27.264"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:27.264" endtime="20210730 14:38:27.264"/>
</kw>
<status status="PASS" starttime="20210730 14:38:27.263" endtime="20210730 14:38:27.265"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:27.265" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:27.265" endtime="20210730 14:38:27.265"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:27.265" endtime="20210730 14:38:27.266"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:27.266" endtime="20210730 14:38:27.266"/>
</kw>
<status status="PASS" starttime="20210730 14:38:27.265" endtime="20210730 14:38:27.266"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:27.267" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:27.266" endtime="20210730 14:38:27.267"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:27.267" endtime="20210730 14:38:27.267"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:27.268" endtime="20210730 14:38:27.268"/>
</kw>
<status status="PASS" starttime="20210730 14:38:27.266" endtime="20210730 14:38:27.268"/>
</iter>
<status status="PASS" starttime="20210730 14:38:27.263" endtime="20210730 14:38:27.268"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:38:27.268" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:38:27.268" endtime="20210730 14:38:27.268"/>
</kw>
<status status="PASS" starttime="20210730 14:38:27.262" endtime="20210730 14:38:27.269"/>
</kw>
<status status="PASS" starttime="20210730 14:38:25.696" endtime="20210730 14:38:27.269"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=hakan12</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:27.270" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:38:27.270" endtime="20210730 14:38:27.270"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:27.270" level="INFO">${payload} = {'username': 'hakan12'}</msg>
<status status="PASS" starttime="20210730 14:38:27.270" endtime="20210730 14:38:27.270"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:27.280" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:27.281" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:27.271" endtime="20210730 14:38:27.281"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:27.281" endtime="20210730 14:38:27.281"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:27.281" endtime="20210730 14:38:27.281"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:27.271" endtime="20210730 14:38:27.281"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:27.270" endtime="20210730 14:38:27.281"/>
</for>
<status status="FAIL" starttime="20210730 14:38:27.269" endtime="20210730 14:38:27.282"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:27.269" endtime="20210730 14:38:27.282"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=hakan12</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:27.283" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:38:27.282" endtime="20210730 14:38:27.283"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:27.283" level="INFO">${payload} = {'username': 'hakan12'}</msg>
<status status="PASS" starttime="20210730 14:38:27.283" endtime="20210730 14:38:27.283"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:27.288" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:27.288" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:27.284" endtime="20210730 14:38:27.288"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:27.288" endtime="20210730 14:38:27.288"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:27.289" endtime="20210730 14:38:27.289"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:27.283" endtime="20210730 14:38:27.289"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:27.283" endtime="20210730 14:38:27.289"/>
</for>
<status status="FAIL" starttime="20210730 14:38:27.282" endtime="20210730 14:38:27.289"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:27.282" endtime="20210730 14:38:27.289"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=hakan12</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:27.290" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:38:27.290" endtime="20210730 14:38:27.290"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:27.291" level="INFO">${payload} = {'username': 'hakan12'}</msg>
<status status="PASS" starttime="20210730 14:38:27.290" endtime="20210730 14:38:27.291"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:27.295" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:27.296" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:27.291" endtime="20210730 14:38:27.296"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:27.296" endtime="20210730 14:38:27.296"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:27.296" endtime="20210730 14:38:27.296"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:27.291" endtime="20210730 14:38:27.296"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:27.291" endtime="20210730 14:38:27.296"/>
</for>
<status status="FAIL" starttime="20210730 14:38:27.289" endtime="20210730 14:38:27.296"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:27.289" endtime="20210730 14:38:27.297"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:27.269" endtime="20210730 14:38:27.297"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:27.302" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:27.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:27.312" level="INFO">${pids} = 23740
23747
23751</msg>
<status status="PASS" starttime="20210730 14:38:27.298" endtime="20210730 14:38:27.312"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:27.312" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:27.312" endtime="20210730 14:38:27.312"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:27.313" level="INFO">${pids} = ['23740', '23747', '23751']</msg>
<status status="PASS" starttime="20210730 14:38:27.313" endtime="20210730 14:38:27.313"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23740</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:27.316" level="INFO">Running command 'kill 23740 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:27.314" endtime="20210730 14:38:27.317"/>
</kw>
<status status="PASS" starttime="20210730 14:38:27.313" endtime="20210730 14:38:27.317"/>
</iter>
<iter>
<var name="${pid}">23747</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:27.321" level="INFO">Running command 'kill 23747 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:27.318" endtime="20210730 14:38:27.322"/>
</kw>
<status status="PASS" starttime="20210730 14:38:27.317" endtime="20210730 14:38:27.322"/>
</iter>
<iter>
<var name="${pid}">23751</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:27.326" level="INFO">Running command 'kill 23751 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:27.322" endtime="20210730 14:38:27.326"/>
</kw>
<status status="PASS" starttime="20210730 14:38:27.322" endtime="20210730 14:38:27.326"/>
</iter>
<status status="PASS" starttime="20210730 14:38:27.313" endtime="20210730 14:38:27.326"/>
</for>
<status status="PASS" starttime="20210730 14:38:27.313" endtime="20210730 14:38:27.326"/>
</branch>
<status status="PASS" starttime="20210730 14:38:27.313" endtime="20210730 14:38:27.326"/>
</if>
<status status="PASS" starttime="20210730 14:38:27.297" endtime="20210730 14:38:27.327"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": 'hakan12'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:38:25.695" endtime="20210730 14:38:27.327">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t12" name="With Each Valid Token, Updating Username Of Each System User With hakan123 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:27.334" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:27.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:27.345" level="INFO">${pids} = 23780</msg>
<status status="PASS" starttime="20210730 14:38:27.330" endtime="20210730 14:38:27.345"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:27.346" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:27.346" endtime="20210730 14:38:27.346"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:27.347" level="INFO">${pids} = ['23780']</msg>
<status status="PASS" starttime="20210730 14:38:27.347" endtime="20210730 14:38:27.347"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23780</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:27.357" level="INFO">Running command 'kill 23780 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:27.347" endtime="20210730 14:38:27.358"/>
</kw>
<status status="PASS" starttime="20210730 14:38:27.347" endtime="20210730 14:38:27.358"/>
</iter>
<status status="PASS" starttime="20210730 14:38:27.347" endtime="20210730 14:38:27.358"/>
</for>
<status status="PASS" starttime="20210730 14:38:27.346" endtime="20210730 14:38:27.358"/>
</branch>
<status status="PASS" starttime="20210730 14:38:27.346" endtime="20210730 14:38:27.358"/>
</if>
<status status="PASS" starttime="20210730 14:38:27.330" endtime="20210730 14:38:27.358"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:27.360" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:27.359" endtime="20210730 14:38:27.360"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:27.361" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:27.360" endtime="20210730 14:38:27.361"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:27.361" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:27.361" endtime="20210730 14:38:27.361"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:27.362" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:27.362" endtime="20210730 14:38:27.362"/>
</kw>
<msg timestamp="20210730 14:38:27.362" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:27.360" endtime="20210730 14:38:27.362"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:27.367" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:27.362" endtime="20210730 14:38:27.370"/>
</kw>
<status status="PASS" starttime="20210730 14:38:27.359" endtime="20210730 14:38:27.370"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:38:27.372" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:38:27.371" endtime="20210730 14:38:27.376"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:38:28.877" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:38:27.377" endtime="20210730 14:38:28.878"/>
</kw>
<status status="PASS" starttime="20210730 14:38:27.371" endtime="20210730 14:38:28.878"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:28.879" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:28.879" endtime="20210730 14:38:28.879"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:28.879" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:28.879" endtime="20210730 14:38:28.879"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:28.880" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:28.879" endtime="20210730 14:38:28.880"/>
</kw>
<msg timestamp="20210730 14:38:28.880" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:28.878" endtime="20210730 14:38:28.880"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:38:28.880" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:38:28.880" endtime="20210730 14:38:28.881"/>
</kw>
<status status="PASS" starttime="20210730 14:38:28.878" endtime="20210730 14:38:28.881"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:38:28.881" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:38:28.881" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:38:28.881" endtime="20210730 14:38:28.882"/>
</kw>
<status status="PASS" starttime="20210730 14:38:28.881" endtime="20210730 14:38:28.882"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:38:28.882" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:38:28.882" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:38:28.882" endtime="20210730 14:38:28.882"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:38:28.883" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:38:28.883" endtime="20210730 14:38:28.883"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:28.883" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:28.883" endtime="20210730 14:38:28.883"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:28.883" endtime="20210730 14:38:28.884"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:28.884" endtime="20210730 14:38:28.885"/>
</kw>
<status status="PASS" starttime="20210730 14:38:28.883" endtime="20210730 14:38:28.885"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:28.885" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:28.885" endtime="20210730 14:38:28.885"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:28.885" endtime="20210730 14:38:28.886"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:28.886" endtime="20210730 14:38:28.887"/>
</kw>
<status status="PASS" starttime="20210730 14:38:28.885" endtime="20210730 14:38:28.887"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:28.887" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:28.887" endtime="20210730 14:38:28.887"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:28.887" endtime="20210730 14:38:28.888"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:28.888" endtime="20210730 14:38:28.888"/>
</kw>
<status status="PASS" starttime="20210730 14:38:28.887" endtime="20210730 14:38:28.888"/>
</iter>
<status status="PASS" starttime="20210730 14:38:28.883" endtime="20210730 14:38:28.888"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:38:28.889" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:38:28.889" endtime="20210730 14:38:28.889"/>
</kw>
<status status="PASS" starttime="20210730 14:38:28.882" endtime="20210730 14:38:28.889"/>
</kw>
<status status="PASS" starttime="20210730 14:38:27.329" endtime="20210730 14:38:28.889"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=hakan123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:28.891" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:38:28.890" endtime="20210730 14:38:28.891"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:28.891" level="INFO">${payload} = {'username': 'hakan123'}</msg>
<status status="PASS" starttime="20210730 14:38:28.891" endtime="20210730 14:38:28.891"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:28.903" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:28.903" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:28.892" endtime="20210730 14:38:28.903"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:28.903" endtime="20210730 14:38:28.903"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:28.903" endtime="20210730 14:38:28.903"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:28.891" endtime="20210730 14:38:28.903"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:28.891" endtime="20210730 14:38:28.904"/>
</for>
<status status="FAIL" starttime="20210730 14:38:28.890" endtime="20210730 14:38:28.904"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:28.890" endtime="20210730 14:38:28.904"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=hakan123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:28.905" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:38:28.905" endtime="20210730 14:38:28.905"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:28.906" level="INFO">${payload} = {'username': 'hakan123'}</msg>
<status status="PASS" starttime="20210730 14:38:28.905" endtime="20210730 14:38:28.906"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:28.911" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:28.911" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:28.906" endtime="20210730 14:38:28.911"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:28.911" endtime="20210730 14:38:28.911"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:28.911" endtime="20210730 14:38:28.911"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:28.906" endtime="20210730 14:38:28.912"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:28.906" endtime="20210730 14:38:28.912"/>
</for>
<status status="FAIL" starttime="20210730 14:38:28.904" endtime="20210730 14:38:28.912"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:28.904" endtime="20210730 14:38:28.912"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=hakan123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:28.913" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:38:28.913" endtime="20210730 14:38:28.913"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:28.913" level="INFO">${payload} = {'username': 'hakan123'}</msg>
<status status="PASS" starttime="20210730 14:38:28.913" endtime="20210730 14:38:28.913"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:28.918" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:28.919" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:28.914" endtime="20210730 14:38:28.919"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:28.919" endtime="20210730 14:38:28.919"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:28.919" endtime="20210730 14:38:28.919"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:28.914" endtime="20210730 14:38:28.919"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:28.913" endtime="20210730 14:38:28.919"/>
</for>
<status status="FAIL" starttime="20210730 14:38:28.912" endtime="20210730 14:38:28.919"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:28.912" endtime="20210730 14:38:28.919"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:28.889" endtime="20210730 14:38:28.920"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:28.923" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:28.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:28.933" level="INFO">${pids} = 23803
23810
23814</msg>
<status status="PASS" starttime="20210730 14:38:28.920" endtime="20210730 14:38:28.933"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:28.934" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:28.933" endtime="20210730 14:38:28.934"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:28.935" level="INFO">${pids} = ['23803', '23810', '23814']</msg>
<status status="PASS" starttime="20210730 14:38:28.934" endtime="20210730 14:38:28.935"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23803</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:28.938" level="INFO">Running command 'kill 23803 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:28.935" endtime="20210730 14:38:28.939"/>
</kw>
<status status="PASS" starttime="20210730 14:38:28.935" endtime="20210730 14:38:28.939"/>
</iter>
<iter>
<var name="${pid}">23810</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:28.943" level="INFO">Running command 'kill 23810 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:28.940" endtime="20210730 14:38:28.945"/>
</kw>
<status status="PASS" starttime="20210730 14:38:28.939" endtime="20210730 14:38:28.945"/>
</iter>
<iter>
<var name="${pid}">23814</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:28.951" level="INFO">Running command 'kill 23814 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:28.946" endtime="20210730 14:38:28.951"/>
</kw>
<status status="PASS" starttime="20210730 14:38:28.946" endtime="20210730 14:38:28.951"/>
</iter>
<status status="PASS" starttime="20210730 14:38:28.935" endtime="20210730 14:38:28.951"/>
</for>
<status status="PASS" starttime="20210730 14:38:28.934" endtime="20210730 14:38:28.951"/>
</branch>
<status status="PASS" starttime="20210730 14:38:28.934" endtime="20210730 14:38:28.951"/>
</if>
<status status="PASS" starttime="20210730 14:38:28.920" endtime="20210730 14:38:28.952"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": 'hakan123'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:38:27.327" endtime="20210730 14:38:28.952">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t13" name="With Each Valid Token, Updating Username Of Each System User With hakan123456789123456789 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:28.957" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:28.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:28.967" level="INFO">${pids} = 23843</msg>
<status status="PASS" starttime="20210730 14:38:28.954" endtime="20210730 14:38:28.967"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:28.968" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:28.967" endtime="20210730 14:38:28.968"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:28.969" level="INFO">${pids} = ['23843']</msg>
<status status="PASS" starttime="20210730 14:38:28.968" endtime="20210730 14:38:28.969"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23843</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:28.973" level="INFO">Running command 'kill 23843 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:28.969" endtime="20210730 14:38:28.973"/>
</kw>
<status status="PASS" starttime="20210730 14:38:28.969" endtime="20210730 14:38:28.973"/>
</iter>
<status status="PASS" starttime="20210730 14:38:28.969" endtime="20210730 14:38:28.973"/>
</for>
<status status="PASS" starttime="20210730 14:38:28.968" endtime="20210730 14:38:28.973"/>
</branch>
<status status="PASS" starttime="20210730 14:38:28.968" endtime="20210730 14:38:28.973"/>
</if>
<status status="PASS" starttime="20210730 14:38:28.954" endtime="20210730 14:38:28.974"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:28.975" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:28.975" endtime="20210730 14:38:28.975"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:28.976" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:28.976" endtime="20210730 14:38:28.976"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:28.976" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:28.976" endtime="20210730 14:38:28.976"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:28.978" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:28.977" endtime="20210730 14:38:28.978"/>
</kw>
<msg timestamp="20210730 14:38:28.978" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:28.975" endtime="20210730 14:38:28.978"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:28.984" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:28.979" endtime="20210730 14:38:28.986"/>
</kw>
<status status="PASS" starttime="20210730 14:38:28.974" endtime="20210730 14:38:28.986"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:38:28.987" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:38:28.987" endtime="20210730 14:38:28.991"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:38:30.493" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:38:28.992" endtime="20210730 14:38:30.493"/>
</kw>
<status status="PASS" starttime="20210730 14:38:28.987" endtime="20210730 14:38:30.494"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:30.495" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:30.495" endtime="20210730 14:38:30.495"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:30.496" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:30.495" endtime="20210730 14:38:30.496"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:30.496" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:30.496" endtime="20210730 14:38:30.496"/>
</kw>
<msg timestamp="20210730 14:38:30.496" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:30.495" endtime="20210730 14:38:30.496"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:38:30.497" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:38:30.496" endtime="20210730 14:38:30.497"/>
</kw>
<status status="PASS" starttime="20210730 14:38:30.494" endtime="20210730 14:38:30.497"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:38:30.498" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:38:30.498" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:38:30.497" endtime="20210730 14:38:30.498"/>
</kw>
<status status="PASS" starttime="20210730 14:38:30.497" endtime="20210730 14:38:30.498"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:38:30.498" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:38:30.499" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:38:30.498" endtime="20210730 14:38:30.499"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:38:30.499" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:38:30.499" endtime="20210730 14:38:30.499"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:30.499" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:30.499" endtime="20210730 14:38:30.499"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:30.500" endtime="20210730 14:38:30.500"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:30.500" endtime="20210730 14:38:30.501"/>
</kw>
<status status="PASS" starttime="20210730 14:38:30.499" endtime="20210730 14:38:30.501"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:30.501" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:30.501" endtime="20210730 14:38:30.501"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:30.501" endtime="20210730 14:38:30.502"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:30.502" endtime="20210730 14:38:30.502"/>
</kw>
<status status="PASS" starttime="20210730 14:38:30.501" endtime="20210730 14:38:30.502"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:30.503" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:30.502" endtime="20210730 14:38:30.503"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:30.503" endtime="20210730 14:38:30.503"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:30.503" endtime="20210730 14:38:30.504"/>
</kw>
<status status="PASS" starttime="20210730 14:38:30.502" endtime="20210730 14:38:30.504"/>
</iter>
<status status="PASS" starttime="20210730 14:38:30.499" endtime="20210730 14:38:30.504"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:38:30.504" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:38:30.504" endtime="20210730 14:38:30.504"/>
</kw>
<status status="PASS" starttime="20210730 14:38:30.498" endtime="20210730 14:38:30.504"/>
</kw>
<status status="PASS" starttime="20210730 14:38:28.953" endtime="20210730 14:38:30.504"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=hakan123456789123456789</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:30.506" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:38:30.506" endtime="20210730 14:38:30.506"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:30.507" level="INFO">${payload} = {'username': 'hakan123456789123456789'}</msg>
<status status="PASS" starttime="20210730 14:38:30.507" endtime="20210730 14:38:30.507"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:30.517" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:30.517" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:30.508" endtime="20210730 14:38:30.517"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:30.518" endtime="20210730 14:38:30.518"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:30.518" endtime="20210730 14:38:30.518"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:30.507" endtime="20210730 14:38:30.518"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:30.507" endtime="20210730 14:38:30.518"/>
</for>
<status status="FAIL" starttime="20210730 14:38:30.505" endtime="20210730 14:38:30.518"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:30.505" endtime="20210730 14:38:30.518"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=hakan123456789123456789</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:30.519" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:38:30.519" endtime="20210730 14:38:30.519"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:30.520" level="INFO">${payload} = {'username': 'hakan123456789123456789'}</msg>
<status status="PASS" starttime="20210730 14:38:30.520" endtime="20210730 14:38:30.520"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:30.525" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:30.525" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:30.520" endtime="20210730 14:38:30.525"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:30.525" endtime="20210730 14:38:30.525"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:30.525" endtime="20210730 14:38:30.525"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:30.520" endtime="20210730 14:38:30.526"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:30.520" endtime="20210730 14:38:30.526"/>
</for>
<status status="FAIL" starttime="20210730 14:38:30.518" endtime="20210730 14:38:30.526"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:30.518" endtime="20210730 14:38:30.526"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=hakan123456789123456789</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:30.527" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:38:30.526" endtime="20210730 14:38:30.527"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:30.527" level="INFO">${payload} = {'username': 'hakan123456789123456789'}</msg>
<status status="PASS" starttime="20210730 14:38:30.527" endtime="20210730 14:38:30.527"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:30.532" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:30.532" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:30.528" endtime="20210730 14:38:30.532"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:30.532" endtime="20210730 14:38:30.532"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:30.532" endtime="20210730 14:38:30.532"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:30.527" endtime="20210730 14:38:30.532"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:30.527" endtime="20210730 14:38:30.533"/>
</for>
<status status="FAIL" starttime="20210730 14:38:30.526" endtime="20210730 14:38:30.533"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:30.526" endtime="20210730 14:38:30.533"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:30.505" endtime="20210730 14:38:30.533"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:30.537" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:30.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:30.547" level="INFO">${pids} = 23866
23873
23878</msg>
<status status="PASS" starttime="20210730 14:38:30.534" endtime="20210730 14:38:30.547"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:30.548" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:30.547" endtime="20210730 14:38:30.548"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:30.548" level="INFO">${pids} = ['23866', '23873', '23878']</msg>
<status status="PASS" starttime="20210730 14:38:30.548" endtime="20210730 14:38:30.548"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23866</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:30.551" level="INFO">Running command 'kill 23866 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:30.549" endtime="20210730 14:38:30.552"/>
</kw>
<status status="PASS" starttime="20210730 14:38:30.549" endtime="20210730 14:38:30.552"/>
</iter>
<iter>
<var name="${pid}">23873</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:30.555" level="INFO">Running command 'kill 23873 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:30.552" endtime="20210730 14:38:30.557"/>
</kw>
<status status="PASS" starttime="20210730 14:38:30.552" endtime="20210730 14:38:30.557"/>
</iter>
<iter>
<var name="${pid}">23878</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:30.561" level="INFO">Running command 'kill 23878 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:30.558" endtime="20210730 14:38:30.561"/>
</kw>
<status status="PASS" starttime="20210730 14:38:30.557" endtime="20210730 14:38:30.561"/>
</iter>
<status status="PASS" starttime="20210730 14:38:30.548" endtime="20210730 14:38:30.561"/>
</for>
<status status="PASS" starttime="20210730 14:38:30.548" endtime="20210730 14:38:30.561"/>
</branch>
<status status="PASS" starttime="20210730 14:38:30.548" endtime="20210730 14:38:30.561"/>
</if>
<status status="PASS" starttime="20210730 14:38:30.533" endtime="20210730 14:38:30.562"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": 'hakan123456789123456789'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:38:28.953" endtime="20210730 14:38:30.562">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t14" name="With Each Valid Token, Updating Username Of Each System User With #¤%123! Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:30.568" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:30.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:30.579" level="INFO">${pids} = 23907</msg>
<status status="PASS" starttime="20210730 14:38:30.564" endtime="20210730 14:38:30.579"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:30.580" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:30.579" endtime="20210730 14:38:30.580"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:30.580" level="INFO">${pids} = ['23907']</msg>
<status status="PASS" starttime="20210730 14:38:30.580" endtime="20210730 14:38:30.580"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23907</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:30.584" level="INFO">Running command 'kill 23907 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:30.581" endtime="20210730 14:38:30.584"/>
</kw>
<status status="PASS" starttime="20210730 14:38:30.581" endtime="20210730 14:38:30.585"/>
</iter>
<status status="PASS" starttime="20210730 14:38:30.581" endtime="20210730 14:38:30.585"/>
</for>
<status status="PASS" starttime="20210730 14:38:30.580" endtime="20210730 14:38:30.585"/>
</branch>
<status status="PASS" starttime="20210730 14:38:30.580" endtime="20210730 14:38:30.585"/>
</if>
<status status="PASS" starttime="20210730 14:38:30.564" endtime="20210730 14:38:30.585"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:30.586" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:30.586" endtime="20210730 14:38:30.586"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:30.587" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:30.587" endtime="20210730 14:38:30.587"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:30.587" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:30.587" endtime="20210730 14:38:30.587"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:30.588" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:30.587" endtime="20210730 14:38:30.588"/>
</kw>
<msg timestamp="20210730 14:38:30.588" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:30.586" endtime="20210730 14:38:30.588"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:30.591" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:30.588" endtime="20210730 14:38:30.593"/>
</kw>
<status status="PASS" starttime="20210730 14:38:30.585" endtime="20210730 14:38:30.593"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:38:30.595" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:38:30.594" endtime="20210730 14:38:30.603"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:38:32.105" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:38:30.603" endtime="20210730 14:38:32.106"/>
</kw>
<status status="PASS" starttime="20210730 14:38:30.593" endtime="20210730 14:38:32.106"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:32.108" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:32.108" endtime="20210730 14:38:32.108"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:32.109" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:32.108" endtime="20210730 14:38:32.109"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:32.109" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:32.109" endtime="20210730 14:38:32.109"/>
</kw>
<msg timestamp="20210730 14:38:32.110" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:32.107" endtime="20210730 14:38:32.110"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:38:32.110" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:38:32.110" endtime="20210730 14:38:32.110"/>
</kw>
<status status="PASS" starttime="20210730 14:38:32.107" endtime="20210730 14:38:32.110"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:38:32.111" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:38:32.111" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:38:32.111" endtime="20210730 14:38:32.111"/>
</kw>
<status status="PASS" starttime="20210730 14:38:32.111" endtime="20210730 14:38:32.111"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:38:32.112" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:38:32.112" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:38:32.112" endtime="20210730 14:38:32.112"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:38:32.112" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:38:32.112" endtime="20210730 14:38:32.112"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:32.113" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:32.113" endtime="20210730 14:38:32.113"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:32.113" endtime="20210730 14:38:32.114"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:32.114" endtime="20210730 14:38:32.114"/>
</kw>
<status status="PASS" starttime="20210730 14:38:32.112" endtime="20210730 14:38:32.114"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:32.115" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:32.115" endtime="20210730 14:38:32.115"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:32.115" endtime="20210730 14:38:32.116"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:32.116" endtime="20210730 14:38:32.116"/>
</kw>
<status status="PASS" starttime="20210730 14:38:32.114" endtime="20210730 14:38:32.116"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:32.116" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:32.116" endtime="20210730 14:38:32.116"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:32.116" endtime="20210730 14:38:32.117"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:32.117" endtime="20210730 14:38:32.117"/>
</kw>
<status status="PASS" starttime="20210730 14:38:32.116" endtime="20210730 14:38:32.117"/>
</iter>
<status status="PASS" starttime="20210730 14:38:32.112" endtime="20210730 14:38:32.117"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:38:32.118" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:38:32.118" endtime="20210730 14:38:32.118"/>
</kw>
<status status="PASS" starttime="20210730 14:38:32.111" endtime="20210730 14:38:32.118"/>
</kw>
<status status="PASS" starttime="20210730 14:38:30.563" endtime="20210730 14:38:32.118"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤%123!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:32.120" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:38:32.120" endtime="20210730 14:38:32.120"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:32.121" level="INFO">${payload} = {'username': '#¤%123!'}</msg>
<status status="PASS" starttime="20210730 14:38:32.120" endtime="20210730 14:38:32.121"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:32.131" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:32.131" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:32.121" endtime="20210730 14:38:32.131"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:32.131" endtime="20210730 14:38:32.131"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:32.131" endtime="20210730 14:38:32.131"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:32.121" endtime="20210730 14:38:32.131"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:32.121" endtime="20210730 14:38:32.131"/>
</for>
<status status="FAIL" starttime="20210730 14:38:32.119" endtime="20210730 14:38:32.132"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:32.119" endtime="20210730 14:38:32.132"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤%123!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:32.133" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:38:32.132" endtime="20210730 14:38:32.133"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:32.133" level="INFO">${payload} = {'username': '#¤%123!'}</msg>
<status status="PASS" starttime="20210730 14:38:32.133" endtime="20210730 14:38:32.133"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:32.138" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:32.138" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:32.134" endtime="20210730 14:38:32.138"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:32.139" endtime="20210730 14:38:32.139"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:32.139" endtime="20210730 14:38:32.139"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:32.134" endtime="20210730 14:38:32.139"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:32.133" endtime="20210730 14:38:32.139"/>
</for>
<status status="FAIL" starttime="20210730 14:38:32.132" endtime="20210730 14:38:32.139"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:32.132" endtime="20210730 14:38:32.139"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤%123!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:32.140" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:38:32.140" endtime="20210730 14:38:32.140"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:32.141" level="INFO">${payload} = {'username': '#¤%123!'}</msg>
<status status="PASS" starttime="20210730 14:38:32.141" endtime="20210730 14:38:32.141"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:32.146" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:32.146" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:32.141" endtime="20210730 14:38:32.146"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:32.146" endtime="20210730 14:38:32.146"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:32.146" endtime="20210730 14:38:32.147"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:32.141" endtime="20210730 14:38:32.147"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:32.141" endtime="20210730 14:38:32.147"/>
</for>
<status status="FAIL" starttime="20210730 14:38:32.139" endtime="20210730 14:38:32.147"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:32.139" endtime="20210730 14:38:32.147"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:32.119" endtime="20210730 14:38:32.147"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:32.151" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:32.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:32.161" level="INFO">${pids} = 23930
23937
23941</msg>
<status status="PASS" starttime="20210730 14:38:32.148" endtime="20210730 14:38:32.161"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:32.162" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:32.161" endtime="20210730 14:38:32.162"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:32.162" level="INFO">${pids} = ['23930', '23937', '23941']</msg>
<status status="PASS" starttime="20210730 14:38:32.162" endtime="20210730 14:38:32.162"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23930</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:32.168" level="INFO">Running command 'kill 23930 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:32.163" endtime="20210730 14:38:32.168"/>
</kw>
<status status="PASS" starttime="20210730 14:38:32.163" endtime="20210730 14:38:32.168"/>
</iter>
<iter>
<var name="${pid}">23937</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:32.172" level="INFO">Running command 'kill 23937 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:32.169" endtime="20210730 14:38:32.173"/>
</kw>
<status status="PASS" starttime="20210730 14:38:32.169" endtime="20210730 14:38:32.173"/>
</iter>
<iter>
<var name="${pid}">23941</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:32.176" level="INFO">Running command 'kill 23941 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:32.173" endtime="20210730 14:38:32.177"/>
</kw>
<status status="PASS" starttime="20210730 14:38:32.173" endtime="20210730 14:38:32.177"/>
</iter>
<status status="PASS" starttime="20210730 14:38:32.162" endtime="20210730 14:38:32.177"/>
</for>
<status status="PASS" starttime="20210730 14:38:32.162" endtime="20210730 14:38:32.177"/>
</branch>
<status status="PASS" starttime="20210730 14:38:32.162" endtime="20210730 14:38:32.177"/>
</if>
<status status="PASS" starttime="20210730 14:38:32.147" endtime="20210730 14:38:32.177"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤%123!'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:38:30.562" endtime="20210730 14:38:32.178">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t15" name="With Each Valid Token, Updating Username Of Each System User With #¤%123!&amp; Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:32.183" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:32.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:32.193" level="INFO">${pids} = 23970</msg>
<status status="PASS" starttime="20210730 14:38:32.180" endtime="20210730 14:38:32.193"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:32.194" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:32.194" endtime="20210730 14:38:32.194"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:32.195" level="INFO">${pids} = ['23970']</msg>
<status status="PASS" starttime="20210730 14:38:32.195" endtime="20210730 14:38:32.195"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23970</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:32.198" level="INFO">Running command 'kill 23970 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:32.195" endtime="20210730 14:38:32.199"/>
</kw>
<status status="PASS" starttime="20210730 14:38:32.195" endtime="20210730 14:38:32.199"/>
</iter>
<status status="PASS" starttime="20210730 14:38:32.195" endtime="20210730 14:38:32.199"/>
</for>
<status status="PASS" starttime="20210730 14:38:32.194" endtime="20210730 14:38:32.199"/>
</branch>
<status status="PASS" starttime="20210730 14:38:32.194" endtime="20210730 14:38:32.199"/>
</if>
<status status="PASS" starttime="20210730 14:38:32.179" endtime="20210730 14:38:32.199"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:32.200" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:32.200" endtime="20210730 14:38:32.200"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:32.201" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:32.201" endtime="20210730 14:38:32.201"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:32.201" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:32.201" endtime="20210730 14:38:32.201"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:32.202" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:32.202" endtime="20210730 14:38:32.202"/>
</kw>
<msg timestamp="20210730 14:38:32.202" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:32.200" endtime="20210730 14:38:32.202"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:32.205" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:32.202" endtime="20210730 14:38:32.207"/>
</kw>
<status status="PASS" starttime="20210730 14:38:32.199" endtime="20210730 14:38:32.208"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:38:32.210" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:38:32.209" endtime="20210730 14:38:32.216"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:38:33.719" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:38:32.216" endtime="20210730 14:38:33.719"/>
</kw>
<status status="PASS" starttime="20210730 14:38:32.208" endtime="20210730 14:38:33.720"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:33.733" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:33.723" endtime="20210730 14:38:33.733"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:33.733" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:33.733" endtime="20210730 14:38:33.733"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:33.733" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:33.733" endtime="20210730 14:38:33.734"/>
</kw>
<msg timestamp="20210730 14:38:33.734" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:33.723" endtime="20210730 14:38:33.734"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:38:33.734" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:38:33.734" endtime="20210730 14:38:33.735"/>
</kw>
<status status="PASS" starttime="20210730 14:38:33.721" endtime="20210730 14:38:33.735"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:38:33.735" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:38:33.735" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:38:33.735" endtime="20210730 14:38:33.736"/>
</kw>
<status status="PASS" starttime="20210730 14:38:33.735" endtime="20210730 14:38:33.736"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:38:33.736" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:38:33.736" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:38:33.736" endtime="20210730 14:38:33.736"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:38:33.737" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:38:33.737" endtime="20210730 14:38:33.737"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:33.737" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:33.737" endtime="20210730 14:38:33.737"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:33.738" endtime="20210730 14:38:33.738"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:33.739" endtime="20210730 14:38:33.739"/>
</kw>
<status status="PASS" starttime="20210730 14:38:33.737" endtime="20210730 14:38:33.739"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:33.740" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:33.739" endtime="20210730 14:38:33.740"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:33.740" endtime="20210730 14:38:33.741"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:33.741" endtime="20210730 14:38:33.742"/>
</kw>
<status status="PASS" starttime="20210730 14:38:33.739" endtime="20210730 14:38:33.742"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:33.742" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:33.742" endtime="20210730 14:38:33.742"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:33.742" endtime="20210730 14:38:33.743"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:33.743" endtime="20210730 14:38:33.743"/>
</kw>
<status status="PASS" starttime="20210730 14:38:33.742" endtime="20210730 14:38:33.743"/>
</iter>
<status status="PASS" starttime="20210730 14:38:33.737" endtime="20210730 14:38:33.743"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:38:33.744" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:38:33.744" endtime="20210730 14:38:33.744"/>
</kw>
<status status="PASS" starttime="20210730 14:38:33.736" endtime="20210730 14:38:33.744"/>
</kw>
<status status="PASS" starttime="20210730 14:38:32.179" endtime="20210730 14:38:33.744"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤%123!&amp;</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:33.746" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:38:33.745" endtime="20210730 14:38:33.746"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:33.746" level="INFO">${payload} = {'username': '#¤%123!&amp;'}</msg>
<status status="PASS" starttime="20210730 14:38:33.746" endtime="20210730 14:38:33.746"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:33.757" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:33.757" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:33.747" endtime="20210730 14:38:33.757"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:33.757" endtime="20210730 14:38:33.757"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:33.758" endtime="20210730 14:38:33.758"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:33.747" endtime="20210730 14:38:33.758"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:33.746" endtime="20210730 14:38:33.758"/>
</for>
<status status="FAIL" starttime="20210730 14:38:33.745" endtime="20210730 14:38:33.758"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:33.745" endtime="20210730 14:38:33.758"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤%123!&amp;</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:33.760" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:38:33.759" endtime="20210730 14:38:33.760"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:33.760" level="INFO">${payload} = {'username': '#¤%123!&amp;'}</msg>
<status status="PASS" starttime="20210730 14:38:33.760" endtime="20210730 14:38:33.760"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:33.765" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:33.766" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:33.761" endtime="20210730 14:38:33.766"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:33.766" endtime="20210730 14:38:33.766"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:33.766" endtime="20210730 14:38:33.766"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:33.761" endtime="20210730 14:38:33.766"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:33.760" endtime="20210730 14:38:33.766"/>
</for>
<status status="FAIL" starttime="20210730 14:38:33.758" endtime="20210730 14:38:33.766"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:33.758" endtime="20210730 14:38:33.766"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤%123!&amp;</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:33.768" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:38:33.767" endtime="20210730 14:38:33.768"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:33.768" level="INFO">${payload} = {'username': '#¤%123!&amp;'}</msg>
<status status="PASS" starttime="20210730 14:38:33.768" endtime="20210730 14:38:33.768"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:33.774" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:33.774" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:33.769" endtime="20210730 14:38:33.774"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:33.775" endtime="20210730 14:38:33.775"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:33.775" endtime="20210730 14:38:33.775"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:33.768" endtime="20210730 14:38:33.775"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:33.768" endtime="20210730 14:38:33.775"/>
</for>
<status status="FAIL" starttime="20210730 14:38:33.767" endtime="20210730 14:38:33.775"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:33.767" endtime="20210730 14:38:33.775"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:33.744" endtime="20210730 14:38:33.775"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:33.782" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:33.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:33.793" level="INFO">${pids} = 23993
24000
24004</msg>
<status status="PASS" starttime="20210730 14:38:33.777" endtime="20210730 14:38:33.793"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:33.794" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:33.793" endtime="20210730 14:38:33.794"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:33.795" level="INFO">${pids} = ['23993', '24000', '24004']</msg>
<status status="PASS" starttime="20210730 14:38:33.795" endtime="20210730 14:38:33.795"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23993</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:33.799" level="INFO">Running command 'kill 23993 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:33.796" endtime="20210730 14:38:33.799"/>
</kw>
<status status="PASS" starttime="20210730 14:38:33.795" endtime="20210730 14:38:33.799"/>
</iter>
<iter>
<var name="${pid}">24000</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:33.809" level="INFO">Running command 'kill 24000 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:33.800" endtime="20210730 14:38:33.809"/>
</kw>
<status status="PASS" starttime="20210730 14:38:33.800" endtime="20210730 14:38:33.809"/>
</iter>
<iter>
<var name="${pid}">24004</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:33.813" level="INFO">Running command 'kill 24004 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:33.810" endtime="20210730 14:38:33.813"/>
</kw>
<status status="PASS" starttime="20210730 14:38:33.810" endtime="20210730 14:38:33.813"/>
</iter>
<status status="PASS" starttime="20210730 14:38:33.795" endtime="20210730 14:38:33.813"/>
</for>
<status status="PASS" starttime="20210730 14:38:33.794" endtime="20210730 14:38:33.813"/>
</branch>
<status status="PASS" starttime="20210730 14:38:33.794" endtime="20210730 14:38:33.813"/>
</if>
<status status="PASS" starttime="20210730 14:38:33.776" endtime="20210730 14:38:33.814"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤%123!&amp;'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:38:32.178" endtime="20210730 14:38:33.814">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t16" name="With Each Valid Token, Updating Username Of Each System User With #¤%123!&amp;7683##()=?@#¤%&amp;34567 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:33.821" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:33.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:33.830" level="INFO">${pids} = 24033</msg>
<status status="PASS" starttime="20210730 14:38:33.816" endtime="20210730 14:38:33.830"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:33.831" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:33.831" endtime="20210730 14:38:33.831"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:33.832" level="INFO">${pids} = ['24033']</msg>
<status status="PASS" starttime="20210730 14:38:33.832" endtime="20210730 14:38:33.832"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24033</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:33.838" level="INFO">Running command 'kill 24033 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:33.833" endtime="20210730 14:38:33.839"/>
</kw>
<status status="PASS" starttime="20210730 14:38:33.832" endtime="20210730 14:38:33.839"/>
</iter>
<status status="PASS" starttime="20210730 14:38:33.832" endtime="20210730 14:38:33.839"/>
</for>
<status status="PASS" starttime="20210730 14:38:33.832" endtime="20210730 14:38:33.839"/>
</branch>
<status status="PASS" starttime="20210730 14:38:33.832" endtime="20210730 14:38:33.839"/>
</if>
<status status="PASS" starttime="20210730 14:38:33.816" endtime="20210730 14:38:33.839"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:33.842" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:33.841" endtime="20210730 14:38:33.842"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:33.842" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:33.842" endtime="20210730 14:38:33.842"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:33.843" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:33.842" endtime="20210730 14:38:33.843"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:33.843" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:33.843" endtime="20210730 14:38:33.843"/>
</kw>
<msg timestamp="20210730 14:38:33.843" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:33.842" endtime="20210730 14:38:33.843"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:33.846" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:33.843" endtime="20210730 14:38:33.848"/>
</kw>
<status status="PASS" starttime="20210730 14:38:33.840" endtime="20210730 14:38:33.848"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:38:33.849" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:38:33.849" endtime="20210730 14:38:33.862"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:38:35.365" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:38:33.862" endtime="20210730 14:38:35.365"/>
</kw>
<status status="PASS" starttime="20210730 14:38:33.848" endtime="20210730 14:38:35.366"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:35.369" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:35.368" endtime="20210730 14:38:35.369"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:35.369" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:35.369" endtime="20210730 14:38:35.369"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:35.370" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:35.369" endtime="20210730 14:38:35.370"/>
</kw>
<msg timestamp="20210730 14:38:35.370" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:35.368" endtime="20210730 14:38:35.370"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:38:35.371" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:38:35.370" endtime="20210730 14:38:35.372"/>
</kw>
<status status="PASS" starttime="20210730 14:38:35.367" endtime="20210730 14:38:35.372"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:38:35.374" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:38:35.374" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:38:35.374" endtime="20210730 14:38:35.376"/>
</kw>
<status status="PASS" starttime="20210730 14:38:35.373" endtime="20210730 14:38:35.376"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:38:35.377" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:38:35.377" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:38:35.376" endtime="20210730 14:38:35.377"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:38:35.377" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:38:35.377" endtime="20210730 14:38:35.377"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:35.379" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:35.378" endtime="20210730 14:38:35.379"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:35.379" endtime="20210730 14:38:35.380"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:35.380" endtime="20210730 14:38:35.380"/>
</kw>
<status status="PASS" starttime="20210730 14:38:35.377" endtime="20210730 14:38:35.380"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:35.381" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:35.381" endtime="20210730 14:38:35.381"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:35.381" endtime="20210730 14:38:35.382"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:35.382" endtime="20210730 14:38:35.382"/>
</kw>
<status status="PASS" starttime="20210730 14:38:35.380" endtime="20210730 14:38:35.382"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:35.382" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:35.382" endtime="20210730 14:38:35.382"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:35.382" endtime="20210730 14:38:35.383"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:35.383" endtime="20210730 14:38:35.383"/>
</kw>
<status status="PASS" starttime="20210730 14:38:35.382" endtime="20210730 14:38:35.383"/>
</iter>
<status status="PASS" starttime="20210730 14:38:35.377" endtime="20210730 14:38:35.383"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:38:35.384" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:38:35.383" endtime="20210730 14:38:35.384"/>
</kw>
<status status="PASS" starttime="20210730 14:38:35.376" endtime="20210730 14:38:35.384"/>
</kw>
<status status="PASS" starttime="20210730 14:38:33.815" endtime="20210730 14:38:35.384"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤%123!&amp;7683##()=?@#¤%&amp;34567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:35.385" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:38:35.385" endtime="20210730 14:38:35.385"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:35.386" level="INFO">${payload} = {'username': '#¤%123!&amp;7683##()=?@#¤%&amp;34567'}</msg>
<status status="PASS" starttime="20210730 14:38:35.386" endtime="20210730 14:38:35.386"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:35.395" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:35.395" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:35.386" endtime="20210730 14:38:35.396"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:35.396" endtime="20210730 14:38:35.396"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:35.396" endtime="20210730 14:38:35.396"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:35.386" endtime="20210730 14:38:35.396"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:35.386" endtime="20210730 14:38:35.396"/>
</for>
<status status="FAIL" starttime="20210730 14:38:35.385" endtime="20210730 14:38:35.396"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:35.384" endtime="20210730 14:38:35.396"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤%123!&amp;7683##()=?@#¤%&amp;34567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:35.397" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:38:35.397" endtime="20210730 14:38:35.397"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:35.398" level="INFO">${payload} = {'username': '#¤%123!&amp;7683##()=?@#¤%&amp;34567'}</msg>
<status status="PASS" starttime="20210730 14:38:35.397" endtime="20210730 14:38:35.398"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:35.402" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:35.402" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:35.398" endtime="20210730 14:38:35.402"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:35.402" endtime="20210730 14:38:35.402"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:35.402" endtime="20210730 14:38:35.402"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:35.398" endtime="20210730 14:38:35.402"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:35.398" endtime="20210730 14:38:35.402"/>
</for>
<status status="FAIL" starttime="20210730 14:38:35.396" endtime="20210730 14:38:35.403"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:35.396" endtime="20210730 14:38:35.403"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤%123!&amp;7683##()=?@#¤%&amp;34567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:35.404" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:38:35.403" endtime="20210730 14:38:35.404"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:35.404" level="INFO">${payload} = {'username': '#¤%123!&amp;7683##()=?@#¤%&amp;34567'}</msg>
<status status="PASS" starttime="20210730 14:38:35.404" endtime="20210730 14:38:35.404"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:35.409" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:35.409" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:35.404" endtime="20210730 14:38:35.409"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:35.409" endtime="20210730 14:38:35.409"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:35.409" endtime="20210730 14:38:35.410"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:35.404" endtime="20210730 14:38:35.410"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:35.404" endtime="20210730 14:38:35.410"/>
</for>
<status status="FAIL" starttime="20210730 14:38:35.403" endtime="20210730 14:38:35.410"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:35.403" endtime="20210730 14:38:35.410"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:35.384" endtime="20210730 14:38:35.410"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:35.415" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:35.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:35.425" level="INFO">${pids} = 24056
24063
24068</msg>
<status status="PASS" starttime="20210730 14:38:35.411" endtime="20210730 14:38:35.425"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:35.426" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:35.426" endtime="20210730 14:38:35.426"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:35.427" level="INFO">${pids} = ['24056', '24063', '24068']</msg>
<status status="PASS" starttime="20210730 14:38:35.427" endtime="20210730 14:38:35.427"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24056</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:35.430" level="INFO">Running command 'kill 24056 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:35.428" endtime="20210730 14:38:35.431"/>
</kw>
<status status="PASS" starttime="20210730 14:38:35.428" endtime="20210730 14:38:35.431"/>
</iter>
<iter>
<var name="${pid}">24063</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:35.434" level="INFO">Running command 'kill 24063 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:35.431" endtime="20210730 14:38:35.434"/>
</kw>
<status status="PASS" starttime="20210730 14:38:35.431" endtime="20210730 14:38:35.434"/>
</iter>
<iter>
<var name="${pid}">24068</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:35.438" level="INFO">Running command 'kill 24068 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:35.435" endtime="20210730 14:38:35.438"/>
</kw>
<status status="PASS" starttime="20210730 14:38:35.435" endtime="20210730 14:38:35.438"/>
</iter>
<status status="PASS" starttime="20210730 14:38:35.427" endtime="20210730 14:38:35.438"/>
</for>
<status status="PASS" starttime="20210730 14:38:35.426" endtime="20210730 14:38:35.438"/>
</branch>
<status status="PASS" starttime="20210730 14:38:35.426" endtime="20210730 14:38:35.438"/>
</if>
<status status="PASS" starttime="20210730 14:38:35.411" endtime="20210730 14:38:35.439"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤%123!&amp;7683##()=?@#¤%&amp;34567'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:38:33.815" endtime="20210730 14:38:35.439">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t17" name="With Each Valid Token, Updating Username Of Each System User With #¤123ab Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:35.447" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:35.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:35.457" level="INFO">${pids} = 24097</msg>
<status status="PASS" starttime="20210730 14:38:35.444" endtime="20210730 14:38:35.457"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:35.458" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:35.457" endtime="20210730 14:38:35.458"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:35.459" level="INFO">${pids} = ['24097']</msg>
<status status="PASS" starttime="20210730 14:38:35.458" endtime="20210730 14:38:35.459"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24097</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:35.464" level="INFO">Running command 'kill 24097 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:35.459" endtime="20210730 14:38:35.464"/>
</kw>
<status status="PASS" starttime="20210730 14:38:35.459" endtime="20210730 14:38:35.464"/>
</iter>
<status status="PASS" starttime="20210730 14:38:35.459" endtime="20210730 14:38:35.465"/>
</for>
<status status="PASS" starttime="20210730 14:38:35.458" endtime="20210730 14:38:35.465"/>
</branch>
<status status="PASS" starttime="20210730 14:38:35.458" endtime="20210730 14:38:35.465"/>
</if>
<status status="PASS" starttime="20210730 14:38:35.441" endtime="20210730 14:38:35.476"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:35.477" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:35.476" endtime="20210730 14:38:35.477"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:35.480" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:35.480" endtime="20210730 14:38:35.480"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:35.480" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:35.480" endtime="20210730 14:38:35.480"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:35.481" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:35.481" endtime="20210730 14:38:35.481"/>
</kw>
<msg timestamp="20210730 14:38:35.481" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:35.477" endtime="20210730 14:38:35.481"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:35.485" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:35.481" endtime="20210730 14:38:35.486"/>
</kw>
<status status="PASS" starttime="20210730 14:38:35.476" endtime="20210730 14:38:35.486"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:38:35.488" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:38:35.487" endtime="20210730 14:38:35.492"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:38:36.993" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:38:35.493" endtime="20210730 14:38:36.994"/>
</kw>
<status status="PASS" starttime="20210730 14:38:35.487" endtime="20210730 14:38:36.994"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:36.995" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:36.995" endtime="20210730 14:38:36.995"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:36.996" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:36.995" endtime="20210730 14:38:36.996"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:36.996" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:36.996" endtime="20210730 14:38:36.996"/>
</kw>
<msg timestamp="20210730 14:38:36.996" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:36.994" endtime="20210730 14:38:36.996"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:38:36.997" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:38:36.997" endtime="20210730 14:38:36.997"/>
</kw>
<status status="PASS" starttime="20210730 14:38:36.994" endtime="20210730 14:38:36.998"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:38:36.998" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:38:36.998" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:38:36.998" endtime="20210730 14:38:36.998"/>
</kw>
<status status="PASS" starttime="20210730 14:38:36.998" endtime="20210730 14:38:36.999"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:38:37.000" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:38:37.000" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:38:36.999" endtime="20210730 14:38:37.000"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:38:37.000" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:38:37.000" endtime="20210730 14:38:37.000"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:37.001" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:37.001" endtime="20210730 14:38:37.001"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:37.002" endtime="20210730 14:38:37.003"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:37.003" endtime="20210730 14:38:37.004"/>
</kw>
<status status="PASS" starttime="20210730 14:38:37.000" endtime="20210730 14:38:37.004"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:37.005" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:37.005" endtime="20210730 14:38:37.005"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:37.006" endtime="20210730 14:38:37.007"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:37.008" endtime="20210730 14:38:37.008"/>
</kw>
<status status="PASS" starttime="20210730 14:38:37.004" endtime="20210730 14:38:37.008"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:37.009" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:37.009" endtime="20210730 14:38:37.009"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:37.010" endtime="20210730 14:38:37.011"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:37.011" endtime="20210730 14:38:37.012"/>
</kw>
<status status="PASS" starttime="20210730 14:38:37.009" endtime="20210730 14:38:37.012"/>
</iter>
<status status="PASS" starttime="20210730 14:38:37.000" endtime="20210730 14:38:37.012"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:38:37.012" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:38:37.012" endtime="20210730 14:38:37.012"/>
</kw>
<status status="PASS" starttime="20210730 14:38:36.999" endtime="20210730 14:38:37.013"/>
</kw>
<status status="PASS" starttime="20210730 14:38:35.441" endtime="20210730 14:38:37.013"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤123ab</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:37.015" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:38:37.015" endtime="20210730 14:38:37.015"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:37.016" level="INFO">${payload} = {'username': '#¤123ab'}</msg>
<status status="PASS" starttime="20210730 14:38:37.016" endtime="20210730 14:38:37.016"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:37.028" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:37.029" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:37.017" endtime="20210730 14:38:37.029"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:37.029" endtime="20210730 14:38:37.029"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:37.029" endtime="20210730 14:38:37.029"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:37.016" endtime="20210730 14:38:37.029"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:37.016" endtime="20210730 14:38:37.029"/>
</for>
<status status="FAIL" starttime="20210730 14:38:37.014" endtime="20210730 14:38:37.030"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:37.014" endtime="20210730 14:38:37.030"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤123ab</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:37.031" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:38:37.031" endtime="20210730 14:38:37.031"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:37.032" level="INFO">${payload} = {'username': '#¤123ab'}</msg>
<status status="PASS" starttime="20210730 14:38:37.031" endtime="20210730 14:38:37.032"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:37.037" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:37.038" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:37.032" endtime="20210730 14:38:37.038"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:37.038" endtime="20210730 14:38:37.038"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:37.038" endtime="20210730 14:38:37.038"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:37.032" endtime="20210730 14:38:37.038"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:37.032" endtime="20210730 14:38:37.038"/>
</for>
<status status="FAIL" starttime="20210730 14:38:37.030" endtime="20210730 14:38:37.039"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:37.030" endtime="20210730 14:38:37.039"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤123ab</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:37.042" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:38:37.041" endtime="20210730 14:38:37.042"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:37.042" level="INFO">${payload} = {'username': '#¤123ab'}</msg>
<status status="PASS" starttime="20210730 14:38:37.042" endtime="20210730 14:38:37.042"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:37.050" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:37.050" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:37.043" endtime="20210730 14:38:37.050"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:37.050" endtime="20210730 14:38:37.050"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:37.050" endtime="20210730 14:38:37.050"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:37.043" endtime="20210730 14:38:37.050"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:37.042" endtime="20210730 14:38:37.051"/>
</for>
<status status="FAIL" starttime="20210730 14:38:37.040" endtime="20210730 14:38:37.051"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:37.039" endtime="20210730 14:38:37.051"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:37.013" endtime="20210730 14:38:37.051"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:37.056" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:37.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:37.067" level="INFO">${pids} = 24120
24127
24135</msg>
<status status="PASS" starttime="20210730 14:38:37.052" endtime="20210730 14:38:37.067"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:37.068" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:37.067" endtime="20210730 14:38:37.068"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:37.069" level="INFO">${pids} = ['24120', '24127', '24135']</msg>
<status status="PASS" starttime="20210730 14:38:37.068" endtime="20210730 14:38:37.069"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24120</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:37.074" level="INFO">Running command 'kill 24120 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:37.069" endtime="20210730 14:38:37.075"/>
</kw>
<status status="PASS" starttime="20210730 14:38:37.069" endtime="20210730 14:38:37.075"/>
</iter>
<iter>
<var name="${pid}">24127</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:37.079" level="INFO">Running command 'kill 24127 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:37.075" endtime="20210730 14:38:37.081"/>
</kw>
<status status="PASS" starttime="20210730 14:38:37.075" endtime="20210730 14:38:37.081"/>
</iter>
<iter>
<var name="${pid}">24135</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:37.085" level="INFO">Running command 'kill 24135 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:37.082" endtime="20210730 14:38:37.085"/>
</kw>
<status status="PASS" starttime="20210730 14:38:37.081" endtime="20210730 14:38:37.085"/>
</iter>
<status status="PASS" starttime="20210730 14:38:37.069" endtime="20210730 14:38:37.085"/>
</for>
<status status="PASS" starttime="20210730 14:38:37.068" endtime="20210730 14:38:37.085"/>
</branch>
<status status="PASS" starttime="20210730 14:38:37.068" endtime="20210730 14:38:37.085"/>
</if>
<status status="PASS" starttime="20210730 14:38:37.051" endtime="20210730 14:38:37.086"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤123ab'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:38:35.440" endtime="20210730 14:38:37.086">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t18" name="With Each Valid Token, Updating Username Of Each System User With #¤123abc Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:37.092" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:37.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:37.103" level="INFO">${pids} = 24164</msg>
<status status="PASS" starttime="20210730 14:38:37.088" endtime="20210730 14:38:37.103"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:37.104" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:37.103" endtime="20210730 14:38:37.104"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:37.105" level="INFO">${pids} = ['24164']</msg>
<status status="PASS" starttime="20210730 14:38:37.105" endtime="20210730 14:38:37.105"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24164</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:37.111" level="INFO">Running command 'kill 24164 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:37.106" endtime="20210730 14:38:37.112"/>
</kw>
<status status="PASS" starttime="20210730 14:38:37.106" endtime="20210730 14:38:37.112"/>
</iter>
<status status="PASS" starttime="20210730 14:38:37.105" endtime="20210730 14:38:37.112"/>
</for>
<status status="PASS" starttime="20210730 14:38:37.104" endtime="20210730 14:38:37.112"/>
</branch>
<status status="PASS" starttime="20210730 14:38:37.104" endtime="20210730 14:38:37.112"/>
</if>
<status status="PASS" starttime="20210730 14:38:37.088" endtime="20210730 14:38:37.112"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:37.114" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:37.113" endtime="20210730 14:38:37.114"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:37.114" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:37.114" endtime="20210730 14:38:37.114"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:37.115" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:37.114" endtime="20210730 14:38:37.115"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:37.115" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:37.115" endtime="20210730 14:38:37.115"/>
</kw>
<msg timestamp="20210730 14:38:37.115" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:37.114" endtime="20210730 14:38:37.115"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:37.118" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:37.116" endtime="20210730 14:38:37.120"/>
</kw>
<status status="PASS" starttime="20210730 14:38:37.113" endtime="20210730 14:38:37.120"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:38:37.122" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:38:37.121" endtime="20210730 14:38:37.127"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:38:38.651" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:38:37.149" endtime="20210730 14:38:38.651"/>
</kw>
<status status="PASS" starttime="20210730 14:38:37.121" endtime="20210730 14:38:38.651"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:38.652" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:38.652" endtime="20210730 14:38:38.652"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:38.652" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:38.652" endtime="20210730 14:38:38.652"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:38.653" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:38.653" endtime="20210730 14:38:38.653"/>
</kw>
<msg timestamp="20210730 14:38:38.653" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:38.651" endtime="20210730 14:38:38.653"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:38:38.654" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:38:38.653" endtime="20210730 14:38:38.654"/>
</kw>
<status status="PASS" starttime="20210730 14:38:38.651" endtime="20210730 14:38:38.654"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:38:38.655" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:38:38.655" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:38:38.655" endtime="20210730 14:38:38.655"/>
</kw>
<status status="PASS" starttime="20210730 14:38:38.654" endtime="20210730 14:38:38.655"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:38:38.656" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:38:38.656" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:38:38.656" endtime="20210730 14:38:38.656"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:38:38.656" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:38:38.656" endtime="20210730 14:38:38.656"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:38.657" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:38.657" endtime="20210730 14:38:38.657"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:38.657" endtime="20210730 14:38:38.658"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:38.658" endtime="20210730 14:38:38.658"/>
</kw>
<status status="PASS" starttime="20210730 14:38:38.657" endtime="20210730 14:38:38.658"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:38.659" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:38.658" endtime="20210730 14:38:38.659"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:38.659" endtime="20210730 14:38:38.660"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:38.660" endtime="20210730 14:38:38.660"/>
</kw>
<status status="PASS" starttime="20210730 14:38:38.658" endtime="20210730 14:38:38.660"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:38.660" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:38.660" endtime="20210730 14:38:38.660"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:38.660" endtime="20210730 14:38:38.661"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:38.661" endtime="20210730 14:38:38.662"/>
</kw>
<status status="PASS" starttime="20210730 14:38:38.660" endtime="20210730 14:38:38.662"/>
</iter>
<status status="PASS" starttime="20210730 14:38:38.656" endtime="20210730 14:38:38.662"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:38:38.662" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:38:38.662" endtime="20210730 14:38:38.662"/>
</kw>
<status status="PASS" starttime="20210730 14:38:38.655" endtime="20210730 14:38:38.662"/>
</kw>
<status status="PASS" starttime="20210730 14:38:37.088" endtime="20210730 14:38:38.662"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤123abc</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:38.664" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:38:38.663" endtime="20210730 14:38:38.664"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:38.664" level="INFO">${payload} = {'username': '#¤123abc'}</msg>
<status status="PASS" starttime="20210730 14:38:38.664" endtime="20210730 14:38:38.664"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:38.675" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:38.675" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:38.664" endtime="20210730 14:38:38.675"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:38.675" endtime="20210730 14:38:38.676"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:38.676" endtime="20210730 14:38:38.676"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:38.664" endtime="20210730 14:38:38.676"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:38.664" endtime="20210730 14:38:38.676"/>
</for>
<status status="FAIL" starttime="20210730 14:38:38.663" endtime="20210730 14:38:38.676"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:38.663" endtime="20210730 14:38:38.676"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤123abc</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:38.677" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:38:38.677" endtime="20210730 14:38:38.677"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:38.678" level="INFO">${payload} = {'username': '#¤123abc'}</msg>
<status status="PASS" starttime="20210730 14:38:38.677" endtime="20210730 14:38:38.678"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:38.682" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:38.682" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:38.678" endtime="20210730 14:38:38.682"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:38.682" endtime="20210730 14:38:38.683"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:38.683" endtime="20210730 14:38:38.683"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:38.678" endtime="20210730 14:38:38.683"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:38.678" endtime="20210730 14:38:38.683"/>
</for>
<status status="FAIL" starttime="20210730 14:38:38.676" endtime="20210730 14:38:38.683"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:38.676" endtime="20210730 14:38:38.683"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤123abc</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:38.684" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:38:38.684" endtime="20210730 14:38:38.684"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:38.684" level="INFO">${payload} = {'username': '#¤123abc'}</msg>
<status status="PASS" starttime="20210730 14:38:38.684" endtime="20210730 14:38:38.684"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:38.690" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:38.690" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:38.685" endtime="20210730 14:38:38.690"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:38.690" endtime="20210730 14:38:38.690"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:38.690" endtime="20210730 14:38:38.690"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:38.685" endtime="20210730 14:38:38.690"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:38.685" endtime="20210730 14:38:38.690"/>
</for>
<status status="FAIL" starttime="20210730 14:38:38.683" endtime="20210730 14:38:38.690"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:38.683" endtime="20210730 14:38:38.691"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:38.662" endtime="20210730 14:38:38.691"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:38.696" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:38.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:38.707" level="INFO">${pids} = 24187
24194
24198</msg>
<status status="PASS" starttime="20210730 14:38:38.692" endtime="20210730 14:38:38.707"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:38.708" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:38.707" endtime="20210730 14:38:38.708"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:38.709" level="INFO">${pids} = ['24187', '24194', '24198']</msg>
<status status="PASS" starttime="20210730 14:38:38.708" endtime="20210730 14:38:38.709"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24187</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:38.714" level="INFO">Running command 'kill 24187 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:38.709" endtime="20210730 14:38:38.715"/>
</kw>
<status status="PASS" starttime="20210730 14:38:38.709" endtime="20210730 14:38:38.715"/>
</iter>
<iter>
<var name="${pid}">24194</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:38.719" level="INFO">Running command 'kill 24194 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:38.715" endtime="20210730 14:38:38.722"/>
</kw>
<status status="PASS" starttime="20210730 14:38:38.715" endtime="20210730 14:38:38.722"/>
</iter>
<iter>
<var name="${pid}">24198</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:38.727" level="INFO">Running command 'kill 24198 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:38.723" endtime="20210730 14:38:38.728"/>
</kw>
<status status="PASS" starttime="20210730 14:38:38.722" endtime="20210730 14:38:38.728"/>
</iter>
<status status="PASS" starttime="20210730 14:38:38.709" endtime="20210730 14:38:38.728"/>
</for>
<status status="PASS" starttime="20210730 14:38:38.708" endtime="20210730 14:38:38.728"/>
</branch>
<status status="PASS" starttime="20210730 14:38:38.708" endtime="20210730 14:38:38.728"/>
</if>
<status status="PASS" starttime="20210730 14:38:38.691" endtime="20210730 14:38:38.728"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤123abc'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:38:37.087" endtime="20210730 14:38:38.728">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t19" name="With Each Valid Token, Updating Username Of Each System User With #¤/&amp;¤!!123abc456hjk Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:38.733" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:38.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:38.744" level="INFO">${pids} = 24227</msg>
<status status="PASS" starttime="20210730 14:38:38.730" endtime="20210730 14:38:38.744"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:38.745" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:38.744" endtime="20210730 14:38:38.745"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:38.746" level="INFO">${pids} = ['24227']</msg>
<status status="PASS" starttime="20210730 14:38:38.745" endtime="20210730 14:38:38.746"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24227</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:38.749" level="INFO">Running command 'kill 24227 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:38.746" endtime="20210730 14:38:38.750"/>
</kw>
<status status="PASS" starttime="20210730 14:38:38.746" endtime="20210730 14:38:38.750"/>
</iter>
<status status="PASS" starttime="20210730 14:38:38.746" endtime="20210730 14:38:38.750"/>
</for>
<status status="PASS" starttime="20210730 14:38:38.745" endtime="20210730 14:38:38.750"/>
</branch>
<status status="PASS" starttime="20210730 14:38:38.745" endtime="20210730 14:38:38.750"/>
</if>
<status status="PASS" starttime="20210730 14:38:38.730" endtime="20210730 14:38:38.750"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:38.751" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:38.751" endtime="20210730 14:38:38.751"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:38.753" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:38.752" endtime="20210730 14:38:38.753"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:38.753" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:38.753" endtime="20210730 14:38:38.753"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:38.754" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:38.754" endtime="20210730 14:38:38.754"/>
</kw>
<msg timestamp="20210730 14:38:38.754" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:38.752" endtime="20210730 14:38:38.754"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:38.758" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:38.754" endtime="20210730 14:38:38.760"/>
</kw>
<status status="PASS" starttime="20210730 14:38:38.750" endtime="20210730 14:38:38.760"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:38:38.761" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:38:38.761" endtime="20210730 14:38:38.765"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:38:40.267" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:38:38.766" endtime="20210730 14:38:40.267"/>
</kw>
<status status="PASS" starttime="20210730 14:38:38.760" endtime="20210730 14:38:40.268"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:40.269" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:40.269" endtime="20210730 14:38:40.269"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:40.269" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:40.269" endtime="20210730 14:38:40.269"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:40.270" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:40.269" endtime="20210730 14:38:40.270"/>
</kw>
<msg timestamp="20210730 14:38:40.270" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:40.268" endtime="20210730 14:38:40.270"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:38:40.270" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:38:40.270" endtime="20210730 14:38:40.271"/>
</kw>
<status status="PASS" starttime="20210730 14:38:40.268" endtime="20210730 14:38:40.271"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:38:40.272" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:38:40.272" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:38:40.272" endtime="20210730 14:38:40.272"/>
</kw>
<status status="PASS" starttime="20210730 14:38:40.271" endtime="20210730 14:38:40.273"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:38:40.275" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:38:40.275" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:38:40.274" endtime="20210730 14:38:40.275"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:38:40.276" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:38:40.275" endtime="20210730 14:38:40.276"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:40.276" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:40.276" endtime="20210730 14:38:40.276"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:40.277" endtime="20210730 14:38:40.277"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:40.277" endtime="20210730 14:38:40.278"/>
</kw>
<status status="PASS" starttime="20210730 14:38:40.276" endtime="20210730 14:38:40.278"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:40.278" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:40.278" endtime="20210730 14:38:40.278"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:40.278" endtime="20210730 14:38:40.279"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:40.279" endtime="20210730 14:38:40.279"/>
</kw>
<status status="PASS" starttime="20210730 14:38:40.278" endtime="20210730 14:38:40.279"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:40.280" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:40.279" endtime="20210730 14:38:40.280"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:40.280" endtime="20210730 14:38:40.280"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:40.280" endtime="20210730 14:38:40.281"/>
</kw>
<status status="PASS" starttime="20210730 14:38:40.279" endtime="20210730 14:38:40.281"/>
</iter>
<status status="PASS" starttime="20210730 14:38:40.276" endtime="20210730 14:38:40.281"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:38:40.281" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:38:40.281" endtime="20210730 14:38:40.281"/>
</kw>
<status status="PASS" starttime="20210730 14:38:40.273" endtime="20210730 14:38:40.281"/>
</kw>
<status status="PASS" starttime="20210730 14:38:38.729" endtime="20210730 14:38:40.282"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/&amp;¤!!123abc456hjk</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:40.283" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:38:40.282" endtime="20210730 14:38:40.283"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:40.283" level="INFO">${payload} = {'username': '#¤/&amp;¤!!123abc456hjk'}</msg>
<status status="PASS" starttime="20210730 14:38:40.283" endtime="20210730 14:38:40.283"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:40.292" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:40.293" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:40.283" endtime="20210730 14:38:40.293"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:40.293" endtime="20210730 14:38:40.293"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:40.293" endtime="20210730 14:38:40.293"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:40.283" endtime="20210730 14:38:40.293"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:40.283" endtime="20210730 14:38:40.293"/>
</for>
<status status="FAIL" starttime="20210730 14:38:40.282" endtime="20210730 14:38:40.293"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:40.282" endtime="20210730 14:38:40.293"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/&amp;¤!!123abc456hjk</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:40.294" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:38:40.294" endtime="20210730 14:38:40.295"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:40.295" level="INFO">${payload} = {'username': '#¤/&amp;¤!!123abc456hjk'}</msg>
<status status="PASS" starttime="20210730 14:38:40.295" endtime="20210730 14:38:40.295"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:40.299" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:40.300" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:40.295" endtime="20210730 14:38:40.300"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:40.300" endtime="20210730 14:38:40.300"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:40.300" endtime="20210730 14:38:40.300"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:40.295" endtime="20210730 14:38:40.300"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:40.295" endtime="20210730 14:38:40.300"/>
</for>
<status status="FAIL" starttime="20210730 14:38:40.294" endtime="20210730 14:38:40.300"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:40.293" endtime="20210730 14:38:40.300"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/&amp;¤!!123abc456hjk</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:40.301" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:38:40.301" endtime="20210730 14:38:40.301"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:40.302" level="INFO">${payload} = {'username': '#¤/&amp;¤!!123abc456hjk'}</msg>
<status status="PASS" starttime="20210730 14:38:40.301" endtime="20210730 14:38:40.302"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:40.306" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:40.306" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:40.302" endtime="20210730 14:38:40.306"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:40.307" endtime="20210730 14:38:40.307"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:40.307" endtime="20210730 14:38:40.307"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:40.302" endtime="20210730 14:38:40.307"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:40.302" endtime="20210730 14:38:40.307"/>
</for>
<status status="FAIL" starttime="20210730 14:38:40.300" endtime="20210730 14:38:40.307"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:40.300" endtime="20210730 14:38:40.307"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:40.282" endtime="20210730 14:38:40.307"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:40.314" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:40.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:40.324" level="INFO">${pids} = 24250
24257
24262</msg>
<status status="PASS" starttime="20210730 14:38:40.308" endtime="20210730 14:38:40.324"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:40.325" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:40.324" endtime="20210730 14:38:40.325"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:40.326" level="INFO">${pids} = ['24250', '24257', '24262']</msg>
<status status="PASS" starttime="20210730 14:38:40.325" endtime="20210730 14:38:40.326"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24250</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:40.328" level="INFO">Running command 'kill 24250 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:40.326" endtime="20210730 14:38:40.329"/>
</kw>
<status status="PASS" starttime="20210730 14:38:40.326" endtime="20210730 14:38:40.329"/>
</iter>
<iter>
<var name="${pid}">24257</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:40.332" level="INFO">Running command 'kill 24257 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:40.329" endtime="20210730 14:38:40.332"/>
</kw>
<status status="PASS" starttime="20210730 14:38:40.329" endtime="20210730 14:38:40.332"/>
</iter>
<iter>
<var name="${pid}">24262</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:40.335" level="INFO">Running command 'kill 24262 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:40.332" endtime="20210730 14:38:40.336"/>
</kw>
<status status="PASS" starttime="20210730 14:38:40.332" endtime="20210730 14:38:40.336"/>
</iter>
<status status="PASS" starttime="20210730 14:38:40.326" endtime="20210730 14:38:40.336"/>
</for>
<status status="PASS" starttime="20210730 14:38:40.325" endtime="20210730 14:38:40.336"/>
</branch>
<status status="PASS" starttime="20210730 14:38:40.325" endtime="20210730 14:38:40.336"/>
</if>
<status status="PASS" starttime="20210730 14:38:40.307" endtime="20210730 14:38:40.336"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤/&amp;¤!!123abc456hjk'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:38:38.729" endtime="20210730 14:38:40.336">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t20" name="With Each Valid Token, Updating Username Of Each System User With #¤/abc! Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:40.349" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:40.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:40.359" level="INFO">${pids} = 24291</msg>
<status status="PASS" starttime="20210730 14:38:40.339" endtime="20210730 14:38:40.360"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:40.361" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:40.360" endtime="20210730 14:38:40.361"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:40.361" level="INFO">${pids} = ['24291']</msg>
<status status="PASS" starttime="20210730 14:38:40.361" endtime="20210730 14:38:40.361"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24291</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:40.377" level="INFO">Running command 'kill 24291 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:40.362" endtime="20210730 14:38:40.378"/>
</kw>
<status status="PASS" starttime="20210730 14:38:40.362" endtime="20210730 14:38:40.379"/>
</iter>
<status status="PASS" starttime="20210730 14:38:40.361" endtime="20210730 14:38:40.379"/>
</for>
<status status="PASS" starttime="20210730 14:38:40.361" endtime="20210730 14:38:40.379"/>
</branch>
<status status="PASS" starttime="20210730 14:38:40.361" endtime="20210730 14:38:40.379"/>
</if>
<status status="PASS" starttime="20210730 14:38:40.338" endtime="20210730 14:38:40.379"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:40.382" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:40.381" endtime="20210730 14:38:40.382"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:40.383" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:40.383" endtime="20210730 14:38:40.383"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:40.384" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:40.383" endtime="20210730 14:38:40.384"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:40.384" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:40.384" endtime="20210730 14:38:40.384"/>
</kw>
<msg timestamp="20210730 14:38:40.384" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:40.382" endtime="20210730 14:38:40.384"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:40.388" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:40.385" endtime="20210730 14:38:40.390"/>
</kw>
<status status="PASS" starttime="20210730 14:38:40.380" endtime="20210730 14:38:40.390"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:38:40.392" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:38:40.391" endtime="20210730 14:38:40.396"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:38:41.897" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:38:40.396" endtime="20210730 14:38:41.897"/>
</kw>
<status status="PASS" starttime="20210730 14:38:40.391" endtime="20210730 14:38:41.898"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:41.899" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:41.899" endtime="20210730 14:38:41.899"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:41.899" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:41.899" endtime="20210730 14:38:41.899"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:41.900" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:41.899" endtime="20210730 14:38:41.900"/>
</kw>
<msg timestamp="20210730 14:38:41.900" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:41.898" endtime="20210730 14:38:41.900"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:38:41.900" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:38:41.900" endtime="20210730 14:38:41.901"/>
</kw>
<status status="PASS" starttime="20210730 14:38:41.898" endtime="20210730 14:38:41.901"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:38:41.902" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:38:41.902" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:38:41.901" endtime="20210730 14:38:41.902"/>
</kw>
<status status="PASS" starttime="20210730 14:38:41.901" endtime="20210730 14:38:41.902"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:38:41.902" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:38:41.903" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:38:41.902" endtime="20210730 14:38:41.903"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:38:41.903" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:38:41.903" endtime="20210730 14:38:41.903"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:41.904" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:41.904" endtime="20210730 14:38:41.904"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:41.904" endtime="20210730 14:38:41.905"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:41.905" endtime="20210730 14:38:41.905"/>
</kw>
<status status="PASS" starttime="20210730 14:38:41.903" endtime="20210730 14:38:41.905"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:41.906" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:41.905" endtime="20210730 14:38:41.906"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:41.906" endtime="20210730 14:38:41.907"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:41.907" endtime="20210730 14:38:41.907"/>
</kw>
<status status="PASS" starttime="20210730 14:38:41.905" endtime="20210730 14:38:41.907"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:41.908" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:41.907" endtime="20210730 14:38:41.908"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:41.908" endtime="20210730 14:38:41.908"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:41.909" endtime="20210730 14:38:41.909"/>
</kw>
<status status="PASS" starttime="20210730 14:38:41.907" endtime="20210730 14:38:41.909"/>
</iter>
<status status="PASS" starttime="20210730 14:38:41.903" endtime="20210730 14:38:41.909"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:38:41.909" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:38:41.909" endtime="20210730 14:38:41.910"/>
</kw>
<status status="PASS" starttime="20210730 14:38:41.902" endtime="20210730 14:38:41.910"/>
</kw>
<status status="PASS" starttime="20210730 14:38:40.338" endtime="20210730 14:38:41.910"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/abc!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:41.911" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:38:41.911" endtime="20210730 14:38:41.911"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:41.911" level="INFO">${payload} = {'username': '#¤/abc!'}</msg>
<status status="PASS" starttime="20210730 14:38:41.911" endtime="20210730 14:38:41.911"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:41.920" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:41.920" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:41.912" endtime="20210730 14:38:41.920"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:41.921" endtime="20210730 14:38:41.921"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:41.921" endtime="20210730 14:38:41.921"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:41.912" endtime="20210730 14:38:41.921"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:41.912" endtime="20210730 14:38:41.921"/>
</for>
<status status="FAIL" starttime="20210730 14:38:41.910" endtime="20210730 14:38:41.921"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:41.910" endtime="20210730 14:38:41.921"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/abc!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:41.922" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:38:41.922" endtime="20210730 14:38:41.922"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:41.923" level="INFO">${payload} = {'username': '#¤/abc!'}</msg>
<status status="PASS" starttime="20210730 14:38:41.922" endtime="20210730 14:38:41.923"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:41.927" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:41.927" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:41.923" endtime="20210730 14:38:41.927"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:41.928" endtime="20210730 14:38:41.928"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:41.928" endtime="20210730 14:38:41.928"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:41.923" endtime="20210730 14:38:41.928"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:41.923" endtime="20210730 14:38:41.928"/>
</for>
<status status="FAIL" starttime="20210730 14:38:41.921" endtime="20210730 14:38:41.928"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:41.921" endtime="20210730 14:38:41.928"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/abc!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:41.929" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:38:41.929" endtime="20210730 14:38:41.929"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:41.930" level="INFO">${payload} = {'username': '#¤/abc!'}</msg>
<status status="PASS" starttime="20210730 14:38:41.929" endtime="20210730 14:38:41.930"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:41.933" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:41.934" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:41.930" endtime="20210730 14:38:41.934"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:41.934" endtime="20210730 14:38:41.934"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:41.934" endtime="20210730 14:38:41.934"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:41.930" endtime="20210730 14:38:41.934"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:41.930" endtime="20210730 14:38:41.934"/>
</for>
<status status="FAIL" starttime="20210730 14:38:41.928" endtime="20210730 14:38:41.934"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:41.928" endtime="20210730 14:38:41.934"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:41.910" endtime="20210730 14:38:41.934"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:41.940" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:41.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:41.951" level="INFO">${pids} = 24314
24321
24325</msg>
<status status="PASS" starttime="20210730 14:38:41.935" endtime="20210730 14:38:41.951"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:41.952" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:41.951" endtime="20210730 14:38:41.952"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:41.953" level="INFO">${pids} = ['24314', '24321', '24325']</msg>
<status status="PASS" starttime="20210730 14:38:41.952" endtime="20210730 14:38:41.953"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24314</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:41.956" level="INFO">Running command 'kill 24314 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:41.953" endtime="20210730 14:38:41.957"/>
</kw>
<status status="PASS" starttime="20210730 14:38:41.953" endtime="20210730 14:38:41.957"/>
</iter>
<iter>
<var name="${pid}">24321</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:41.960" level="INFO">Running command 'kill 24321 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:41.957" endtime="20210730 14:38:41.960"/>
</kw>
<status status="PASS" starttime="20210730 14:38:41.957" endtime="20210730 14:38:41.960"/>
</iter>
<iter>
<var name="${pid}">24325</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:41.964" level="INFO">Running command 'kill 24325 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:41.961" endtime="20210730 14:38:41.964"/>
</kw>
<status status="PASS" starttime="20210730 14:38:41.961" endtime="20210730 14:38:41.964"/>
</iter>
<status status="PASS" starttime="20210730 14:38:41.953" endtime="20210730 14:38:41.964"/>
</for>
<status status="PASS" starttime="20210730 14:38:41.952" endtime="20210730 14:38:41.964"/>
</branch>
<status status="PASS" starttime="20210730 14:38:41.952" endtime="20210730 14:38:41.964"/>
</if>
<status status="PASS" starttime="20210730 14:38:41.935" endtime="20210730 14:38:41.965"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤/abc!'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:38:40.337" endtime="20210730 14:38:41.965">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t21" name="With Each Valid Token, Updating Username Of Each System User With #¤/abc!g Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:41.970" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:41.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:41.981" level="INFO">${pids} = 24354</msg>
<status status="PASS" starttime="20210730 14:38:41.967" endtime="20210730 14:38:41.981"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:41.982" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:41.981" endtime="20210730 14:38:41.982"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:41.983" level="INFO">${pids} = ['24354']</msg>
<status status="PASS" starttime="20210730 14:38:41.982" endtime="20210730 14:38:41.983"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24354</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:41.988" level="INFO">Running command 'kill 24354 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:41.983" endtime="20210730 14:38:41.989"/>
</kw>
<status status="PASS" starttime="20210730 14:38:41.983" endtime="20210730 14:38:41.989"/>
</iter>
<status status="PASS" starttime="20210730 14:38:41.983" endtime="20210730 14:38:41.989"/>
</for>
<status status="PASS" starttime="20210730 14:38:41.982" endtime="20210730 14:38:41.989"/>
</branch>
<status status="PASS" starttime="20210730 14:38:41.982" endtime="20210730 14:38:41.989"/>
</if>
<status status="PASS" starttime="20210730 14:38:41.966" endtime="20210730 14:38:41.989"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:41.991" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:41.990" endtime="20210730 14:38:41.991"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:41.991" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:41.991" endtime="20210730 14:38:41.991"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:41.992" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:41.992" endtime="20210730 14:38:41.992"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:41.992" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:41.992" endtime="20210730 14:38:41.992"/>
</kw>
<msg timestamp="20210730 14:38:41.992" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:41.991" endtime="20210730 14:38:41.993"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:42.002" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:41.993" endtime="20210730 14:38:42.004"/>
</kw>
<status status="PASS" starttime="20210730 14:38:41.990" endtime="20210730 14:38:42.004"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:38:42.006" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:38:42.005" endtime="20210730 14:38:42.011"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:38:43.512" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:38:42.011" endtime="20210730 14:38:43.513"/>
</kw>
<status status="PASS" starttime="20210730 14:38:42.004" endtime="20210730 14:38:43.513"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:43.514" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:43.514" endtime="20210730 14:38:43.514"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:43.515" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:43.514" endtime="20210730 14:38:43.515"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:43.515" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:43.515" endtime="20210730 14:38:43.515"/>
</kw>
<msg timestamp="20210730 14:38:43.515" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:43.513" endtime="20210730 14:38:43.515"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:38:43.516" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:38:43.515" endtime="20210730 14:38:43.516"/>
</kw>
<status status="PASS" starttime="20210730 14:38:43.513" endtime="20210730 14:38:43.516"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:38:43.516" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:38:43.517" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:38:43.516" endtime="20210730 14:38:43.517"/>
</kw>
<status status="PASS" starttime="20210730 14:38:43.516" endtime="20210730 14:38:43.517"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:38:43.518" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:38:43.518" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:38:43.517" endtime="20210730 14:38:43.518"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:38:43.518" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:38:43.518" endtime="20210730 14:38:43.518"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:43.519" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:43.518" endtime="20210730 14:38:43.519"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:43.519" endtime="20210730 14:38:43.520"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:43.520" endtime="20210730 14:38:43.520"/>
</kw>
<status status="PASS" starttime="20210730 14:38:43.518" endtime="20210730 14:38:43.520"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:43.520" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:43.520" endtime="20210730 14:38:43.520"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:43.521" endtime="20210730 14:38:43.521"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:43.521" endtime="20210730 14:38:43.522"/>
</kw>
<status status="PASS" starttime="20210730 14:38:43.520" endtime="20210730 14:38:43.522"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:43.522" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:43.522" endtime="20210730 14:38:43.522"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:43.522" endtime="20210730 14:38:43.523"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:43.523" endtime="20210730 14:38:43.524"/>
</kw>
<status status="PASS" starttime="20210730 14:38:43.522" endtime="20210730 14:38:43.524"/>
</iter>
<status status="PASS" starttime="20210730 14:38:43.518" endtime="20210730 14:38:43.524"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:38:43.524" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:38:43.524" endtime="20210730 14:38:43.524"/>
</kw>
<status status="PASS" starttime="20210730 14:38:43.517" endtime="20210730 14:38:43.524"/>
</kw>
<status status="PASS" starttime="20210730 14:38:41.966" endtime="20210730 14:38:43.524"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/abc!g</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:43.526" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:38:43.526" endtime="20210730 14:38:43.526"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:43.526" level="INFO">${payload} = {'username': '#¤/abc!g'}</msg>
<status status="PASS" starttime="20210730 14:38:43.526" endtime="20210730 14:38:43.526"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:43.536" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:43.537" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:43.527" endtime="20210730 14:38:43.537"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:43.537" endtime="20210730 14:38:43.537"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:43.537" endtime="20210730 14:38:43.537"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:43.527" endtime="20210730 14:38:43.537"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:43.526" endtime="20210730 14:38:43.537"/>
</for>
<status status="FAIL" starttime="20210730 14:38:43.525" endtime="20210730 14:38:43.537"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:43.525" endtime="20210730 14:38:43.537"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/abc!g</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:43.539" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:38:43.538" endtime="20210730 14:38:43.539"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:43.539" level="INFO">${payload} = {'username': '#¤/abc!g'}</msg>
<status status="PASS" starttime="20210730 14:38:43.539" endtime="20210730 14:38:43.539"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:43.544" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:43.544" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:43.540" endtime="20210730 14:38:43.544"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:43.545" endtime="20210730 14:38:43.545"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:43.545" endtime="20210730 14:38:43.545"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:43.539" endtime="20210730 14:38:43.545"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:43.539" endtime="20210730 14:38:43.545"/>
</for>
<status status="FAIL" starttime="20210730 14:38:43.538" endtime="20210730 14:38:43.545"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:43.538" endtime="20210730 14:38:43.545"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/abc!g</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:43.546" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:38:43.546" endtime="20210730 14:38:43.546"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:43.547" level="INFO">${payload} = {'username': '#¤/abc!g'}</msg>
<status status="PASS" starttime="20210730 14:38:43.546" endtime="20210730 14:38:43.547"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:43.552" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:43.552" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:43.547" endtime="20210730 14:38:43.552"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:43.552" endtime="20210730 14:38:43.552"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:43.552" endtime="20210730 14:38:43.552"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:43.547" endtime="20210730 14:38:43.552"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:43.547" endtime="20210730 14:38:43.552"/>
</for>
<status status="FAIL" starttime="20210730 14:38:43.545" endtime="20210730 14:38:43.552"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:43.545" endtime="20210730 14:38:43.552"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:43.525" endtime="20210730 14:38:43.553"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:43.559" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:43.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:43.569" level="INFO">${pids} = 24377
24384
24391</msg>
<status status="PASS" starttime="20210730 14:38:43.555" endtime="20210730 14:38:43.569"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:43.570" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:43.569" endtime="20210730 14:38:43.570"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:43.571" level="INFO">${pids} = ['24377', '24384', '24391']</msg>
<status status="PASS" starttime="20210730 14:38:43.570" endtime="20210730 14:38:43.571"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24377</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:43.575" level="INFO">Running command 'kill 24377 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:43.571" endtime="20210730 14:38:43.575"/>
</kw>
<status status="PASS" starttime="20210730 14:38:43.571" endtime="20210730 14:38:43.575"/>
</iter>
<iter>
<var name="${pid}">24384</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:43.581" level="INFO">Running command 'kill 24384 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:43.576" endtime="20210730 14:38:43.581"/>
</kw>
<status status="PASS" starttime="20210730 14:38:43.576" endtime="20210730 14:38:43.581"/>
</iter>
<iter>
<var name="${pid}">24391</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:43.590" level="INFO">Running command 'kill 24391 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:43.582" endtime="20210730 14:38:43.590"/>
</kw>
<status status="PASS" starttime="20210730 14:38:43.582" endtime="20210730 14:38:43.590"/>
</iter>
<status status="PASS" starttime="20210730 14:38:43.571" endtime="20210730 14:38:43.591"/>
</for>
<status status="PASS" starttime="20210730 14:38:43.570" endtime="20210730 14:38:43.591"/>
</branch>
<status status="PASS" starttime="20210730 14:38:43.570" endtime="20210730 14:38:43.591"/>
</if>
<status status="PASS" starttime="20210730 14:38:43.553" endtime="20210730 14:38:43.591"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤/abc!g'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:38:41.965" endtime="20210730 14:38:43.591">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t22" name="With Each Valid Token, Updating Username Of Each System User With #¤/abc!g()=&amp;%¤fghjklQWERTY Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:43.596" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:43.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:43.607" level="INFO">${pids} = 24420</msg>
<status status="PASS" starttime="20210730 14:38:43.593" endtime="20210730 14:38:43.607"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:43.608" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:43.607" endtime="20210730 14:38:43.608"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:43.609" level="INFO">${pids} = ['24420']</msg>
<status status="PASS" starttime="20210730 14:38:43.608" endtime="20210730 14:38:43.609"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24420</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:43.612" level="INFO">Running command 'kill 24420 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:43.609" endtime="20210730 14:38:43.612"/>
</kw>
<status status="PASS" starttime="20210730 14:38:43.609" endtime="20210730 14:38:43.612"/>
</iter>
<status status="PASS" starttime="20210730 14:38:43.609" endtime="20210730 14:38:43.613"/>
</for>
<status status="PASS" starttime="20210730 14:38:43.608" endtime="20210730 14:38:43.613"/>
</branch>
<status status="PASS" starttime="20210730 14:38:43.608" endtime="20210730 14:38:43.613"/>
</if>
<status status="PASS" starttime="20210730 14:38:43.593" endtime="20210730 14:38:43.613"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:43.616" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:43.614" endtime="20210730 14:38:43.616"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:43.617" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:43.616" endtime="20210730 14:38:43.617"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:43.617" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:43.617" endtime="20210730 14:38:43.617"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:43.618" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:43.617" endtime="20210730 14:38:43.618"/>
</kw>
<msg timestamp="20210730 14:38:43.618" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:43.616" endtime="20210730 14:38:43.618"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:43.621" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:43.618" endtime="20210730 14:38:43.623"/>
</kw>
<status status="PASS" starttime="20210730 14:38:43.613" endtime="20210730 14:38:43.623"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:38:43.625" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:38:43.624" endtime="20210730 14:38:43.629"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:38:45.131" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:38:43.629" endtime="20210730 14:38:45.131"/>
</kw>
<status status="PASS" starttime="20210730 14:38:43.624" endtime="20210730 14:38:45.132"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:45.136" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:45.135" endtime="20210730 14:38:45.136"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:45.136" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:45.136" endtime="20210730 14:38:45.136"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:45.136" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:45.136" endtime="20210730 14:38:45.137"/>
</kw>
<msg timestamp="20210730 14:38:45.137" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:45.135" endtime="20210730 14:38:45.137"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:38:45.137" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:38:45.137" endtime="20210730 14:38:45.138"/>
</kw>
<status status="PASS" starttime="20210730 14:38:45.133" endtime="20210730 14:38:45.138"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:38:45.138" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:38:45.138" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:38:45.138" endtime="20210730 14:38:45.139"/>
</kw>
<status status="PASS" starttime="20210730 14:38:45.138" endtime="20210730 14:38:45.139"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:38:45.141" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:38:45.141" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:38:45.140" endtime="20210730 14:38:45.142"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:38:45.142" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:38:45.142" endtime="20210730 14:38:45.142"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:45.143" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:45.142" endtime="20210730 14:38:45.143"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:45.143" endtime="20210730 14:38:45.143"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:45.144" endtime="20210730 14:38:45.144"/>
</kw>
<status status="PASS" starttime="20210730 14:38:45.142" endtime="20210730 14:38:45.144"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:45.144" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:45.144" endtime="20210730 14:38:45.144"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:45.144" endtime="20210730 14:38:45.145"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:45.145" endtime="20210730 14:38:45.145"/>
</kw>
<status status="PASS" starttime="20210730 14:38:45.144" endtime="20210730 14:38:45.145"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:45.146" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:45.146" endtime="20210730 14:38:45.146"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:45.146" endtime="20210730 14:38:45.147"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:45.147" endtime="20210730 14:38:45.147"/>
</kw>
<status status="PASS" starttime="20210730 14:38:45.146" endtime="20210730 14:38:45.147"/>
</iter>
<status status="PASS" starttime="20210730 14:38:45.142" endtime="20210730 14:38:45.147"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:38:45.147" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:38:45.147" endtime="20210730 14:38:45.147"/>
</kw>
<status status="PASS" starttime="20210730 14:38:45.139" endtime="20210730 14:38:45.148"/>
</kw>
<status status="PASS" starttime="20210730 14:38:43.593" endtime="20210730 14:38:45.148"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/abc!g()=&amp;%¤fghjklQWERTY</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:45.149" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:38:45.149" endtime="20210730 14:38:45.149"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:45.149" level="INFO">${payload} = {'username': '#¤/abc!g()=&amp;%¤fghjklQWERTY'}</msg>
<status status="PASS" starttime="20210730 14:38:45.149" endtime="20210730 14:38:45.149"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:45.159" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:45.159" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:45.150" endtime="20210730 14:38:45.159"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:45.160" endtime="20210730 14:38:45.160"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:45.160" endtime="20210730 14:38:45.160"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:45.150" endtime="20210730 14:38:45.160"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:45.149" endtime="20210730 14:38:45.160"/>
</for>
<status status="FAIL" starttime="20210730 14:38:45.148" endtime="20210730 14:38:45.160"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:45.148" endtime="20210730 14:38:45.160"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/abc!g()=&amp;%¤fghjklQWERTY</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:45.161" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:38:45.161" endtime="20210730 14:38:45.161"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:45.162" level="INFO">${payload} = {'username': '#¤/abc!g()=&amp;%¤fghjklQWERTY'}</msg>
<status status="PASS" starttime="20210730 14:38:45.161" endtime="20210730 14:38:45.162"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:45.166" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:45.166" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:45.162" endtime="20210730 14:38:45.166"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:45.166" endtime="20210730 14:38:45.166"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:45.166" endtime="20210730 14:38:45.166"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:45.162" endtime="20210730 14:38:45.166"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:45.162" endtime="20210730 14:38:45.166"/>
</for>
<status status="FAIL" starttime="20210730 14:38:45.160" endtime="20210730 14:38:45.166"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:45.160" endtime="20210730 14:38:45.166"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/abc!g()=&amp;%¤fghjklQWERTY</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:45.167" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:38:45.167" endtime="20210730 14:38:45.167"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:45.168" level="INFO">${payload} = {'username': '#¤/abc!g()=&amp;%¤fghjklQWERTY'}</msg>
<status status="PASS" starttime="20210730 14:38:45.167" endtime="20210730 14:38:45.168"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:45.173" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:45.173" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:45.168" endtime="20210730 14:38:45.174"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:45.174" endtime="20210730 14:38:45.174"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:45.174" endtime="20210730 14:38:45.174"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:45.168" endtime="20210730 14:38:45.174"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:45.168" endtime="20210730 14:38:45.174"/>
</for>
<status status="FAIL" starttime="20210730 14:38:45.167" endtime="20210730 14:38:45.175"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:45.166" endtime="20210730 14:38:45.175"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:45.148" endtime="20210730 14:38:45.175"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:45.180" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:45.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:45.190" level="INFO">${pids} = 24443
24450
24455</msg>
<status status="PASS" starttime="20210730 14:38:45.177" endtime="20210730 14:38:45.190"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:45.191" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:45.190" endtime="20210730 14:38:45.191"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:45.191" level="INFO">${pids} = ['24443', '24450', '24455']</msg>
<status status="PASS" starttime="20210730 14:38:45.191" endtime="20210730 14:38:45.191"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24443</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:45.195" level="INFO">Running command 'kill 24443 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:45.192" endtime="20210730 14:38:45.195"/>
</kw>
<status status="PASS" starttime="20210730 14:38:45.192" endtime="20210730 14:38:45.195"/>
</iter>
<iter>
<var name="${pid}">24450</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:45.199" level="INFO">Running command 'kill 24450 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:45.196" endtime="20210730 14:38:45.199"/>
</kw>
<status status="PASS" starttime="20210730 14:38:45.196" endtime="20210730 14:38:45.199"/>
</iter>
<iter>
<var name="${pid}">24455</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:45.203" level="INFO">Running command 'kill 24455 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:45.200" endtime="20210730 14:38:45.203"/>
</kw>
<status status="PASS" starttime="20210730 14:38:45.200" endtime="20210730 14:38:45.203"/>
</iter>
<status status="PASS" starttime="20210730 14:38:45.192" endtime="20210730 14:38:45.203"/>
</for>
<status status="PASS" starttime="20210730 14:38:45.191" endtime="20210730 14:38:45.203"/>
</branch>
<status status="PASS" starttime="20210730 14:38:45.191" endtime="20210730 14:38:45.203"/>
</if>
<status status="PASS" starttime="20210730 14:38:45.175" endtime="20210730 14:38:45.203"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤/abc!g()=&amp;%¤fghjklQWERTY'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:38:43.592" endtime="20210730 14:38:45.204">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t23" name="With Each Valid Token, Updating Username Of Each System User With !# &amp;/¤% Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:45.213" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:45.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:45.223" level="INFO">${pids} = 24484</msg>
<status status="PASS" starttime="20210730 14:38:45.206" endtime="20210730 14:38:45.223"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:45.224" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:45.223" endtime="20210730 14:38:45.224"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:45.225" level="INFO">${pids} = ['24484']</msg>
<status status="PASS" starttime="20210730 14:38:45.224" endtime="20210730 14:38:45.225"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24484</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:45.230" level="INFO">Running command 'kill 24484 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:45.225" endtime="20210730 14:38:45.246"/>
</kw>
<status status="PASS" starttime="20210730 14:38:45.225" endtime="20210730 14:38:45.246"/>
</iter>
<status status="PASS" starttime="20210730 14:38:45.225" endtime="20210730 14:38:45.246"/>
</for>
<status status="PASS" starttime="20210730 14:38:45.224" endtime="20210730 14:38:45.247"/>
</branch>
<status status="PASS" starttime="20210730 14:38:45.224" endtime="20210730 14:38:45.247"/>
</if>
<status status="PASS" starttime="20210730 14:38:45.205" endtime="20210730 14:38:45.247"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:45.248" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:45.248" endtime="20210730 14:38:45.248"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:45.249" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:45.249" endtime="20210730 14:38:45.250"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:45.250" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:45.250" endtime="20210730 14:38:45.250"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:45.251" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:45.250" endtime="20210730 14:38:45.251"/>
</kw>
<msg timestamp="20210730 14:38:45.251" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:45.249" endtime="20210730 14:38:45.251"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:45.255" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:45.251" endtime="20210730 14:38:45.257"/>
</kw>
<status status="PASS" starttime="20210730 14:38:45.247" endtime="20210730 14:38:45.257"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:38:45.259" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:38:45.258" endtime="20210730 14:38:45.263"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:38:46.764" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:38:45.263" endtime="20210730 14:38:46.764"/>
</kw>
<status status="PASS" starttime="20210730 14:38:45.257" endtime="20210730 14:38:46.764"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:46.766" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:46.765" endtime="20210730 14:38:46.766"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:46.766" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:46.766" endtime="20210730 14:38:46.766"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:46.767" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:46.766" endtime="20210730 14:38:46.767"/>
</kw>
<msg timestamp="20210730 14:38:46.767" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:46.765" endtime="20210730 14:38:46.767"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:38:46.767" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:38:46.767" endtime="20210730 14:38:46.768"/>
</kw>
<status status="PASS" starttime="20210730 14:38:46.765" endtime="20210730 14:38:46.768"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:38:46.769" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:38:46.769" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:38:46.768" endtime="20210730 14:38:46.769"/>
</kw>
<status status="PASS" starttime="20210730 14:38:46.768" endtime="20210730 14:38:46.769"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:38:46.770" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:38:46.770" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:38:46.770" endtime="20210730 14:38:46.770"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:38:46.771" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:38:46.770" endtime="20210730 14:38:46.771"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:46.771" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:46.771" endtime="20210730 14:38:46.771"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:46.772" endtime="20210730 14:38:46.773"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:46.773" endtime="20210730 14:38:46.773"/>
</kw>
<status status="PASS" starttime="20210730 14:38:46.771" endtime="20210730 14:38:46.773"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:46.774" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:46.774" endtime="20210730 14:38:46.774"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:46.774" endtime="20210730 14:38:46.775"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:46.776" endtime="20210730 14:38:46.776"/>
</kw>
<status status="PASS" starttime="20210730 14:38:46.774" endtime="20210730 14:38:46.776"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:46.777" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:46.776" endtime="20210730 14:38:46.777"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:46.777" endtime="20210730 14:38:46.778"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:46.778" endtime="20210730 14:38:46.778"/>
</kw>
<status status="PASS" starttime="20210730 14:38:46.776" endtime="20210730 14:38:46.778"/>
</iter>
<status status="PASS" starttime="20210730 14:38:46.771" endtime="20210730 14:38:46.778"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:38:46.779" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:38:46.778" endtime="20210730 14:38:46.779"/>
</kw>
<status status="PASS" starttime="20210730 14:38:46.769" endtime="20210730 14:38:46.779"/>
</kw>
<status status="PASS" starttime="20210730 14:38:45.205" endtime="20210730 14:38:46.779"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!# &amp;/¤%</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:46.781" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:38:46.780" endtime="20210730 14:38:46.781"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:46.781" level="INFO">${payload} = {'username': '!# &amp;/¤%'}</msg>
<status status="PASS" starttime="20210730 14:38:46.781" endtime="20210730 14:38:46.781"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:46.792" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:46.793" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:46.782" endtime="20210730 14:38:46.793"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:46.793" endtime="20210730 14:38:46.793"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:46.793" endtime="20210730 14:38:46.793"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:46.782" endtime="20210730 14:38:46.793"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:46.781" endtime="20210730 14:38:46.793"/>
</for>
<status status="FAIL" starttime="20210730 14:38:46.780" endtime="20210730 14:38:46.793"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:46.779" endtime="20210730 14:38:46.793"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!# &amp;/¤%</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:46.795" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:38:46.794" endtime="20210730 14:38:46.795"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:46.796" level="INFO">${payload} = {'username': '!# &amp;/¤%'}</msg>
<status status="PASS" starttime="20210730 14:38:46.795" endtime="20210730 14:38:46.796"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:46.800" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:46.801" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:46.796" endtime="20210730 14:38:46.801"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:46.801" endtime="20210730 14:38:46.801"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:46.801" endtime="20210730 14:38:46.801"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:46.796" endtime="20210730 14:38:46.801"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:46.796" endtime="20210730 14:38:46.801"/>
</for>
<status status="FAIL" starttime="20210730 14:38:46.794" endtime="20210730 14:38:46.801"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:46.794" endtime="20210730 14:38:46.802"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!# &amp;/¤%</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:46.803" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:38:46.802" endtime="20210730 14:38:46.803"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:46.803" level="INFO">${payload} = {'username': '!# &amp;/¤%'}</msg>
<status status="PASS" starttime="20210730 14:38:46.803" endtime="20210730 14:38:46.803"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:46.810" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:46.810" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:46.804" endtime="20210730 14:38:46.810"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:46.810" endtime="20210730 14:38:46.810"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:46.810" endtime="20210730 14:38:46.810"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:46.804" endtime="20210730 14:38:46.810"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:46.803" endtime="20210730 14:38:46.811"/>
</for>
<status status="FAIL" starttime="20210730 14:38:46.802" endtime="20210730 14:38:46.811"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:46.802" endtime="20210730 14:38:46.811"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:46.779" endtime="20210730 14:38:46.811"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:46.816" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:46.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:46.827" level="INFO">${pids} = 24507
24514
24518</msg>
<status status="PASS" starttime="20210730 14:38:46.812" endtime="20210730 14:38:46.827"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:46.828" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:46.827" endtime="20210730 14:38:46.828"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:46.829" level="INFO">${pids} = ['24507', '24514', '24518']</msg>
<status status="PASS" starttime="20210730 14:38:46.828" endtime="20210730 14:38:46.829"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24507</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:46.833" level="INFO">Running command 'kill 24507 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:46.829" endtime="20210730 14:38:46.833"/>
</kw>
<status status="PASS" starttime="20210730 14:38:46.829" endtime="20210730 14:38:46.834"/>
</iter>
<iter>
<var name="${pid}">24514</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:46.838" level="INFO">Running command 'kill 24514 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:46.834" endtime="20210730 14:38:46.839"/>
</kw>
<status status="PASS" starttime="20210730 14:38:46.834" endtime="20210730 14:38:46.839"/>
</iter>
<iter>
<var name="${pid}">24518</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:46.845" level="INFO">Running command 'kill 24518 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:46.840" endtime="20210730 14:38:46.845"/>
</kw>
<status status="PASS" starttime="20210730 14:38:46.840" endtime="20210730 14:38:46.845"/>
</iter>
<status status="PASS" starttime="20210730 14:38:46.829" endtime="20210730 14:38:46.845"/>
</for>
<status status="PASS" starttime="20210730 14:38:46.828" endtime="20210730 14:38:46.845"/>
</branch>
<status status="PASS" starttime="20210730 14:38:46.828" endtime="20210730 14:38:46.846"/>
</if>
<status status="PASS" starttime="20210730 14:38:46.811" endtime="20210730 14:38:46.846"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '!# &amp;/¤%'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:38:45.204" endtime="20210730 14:38:46.846">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t24" name="With Each Valid Token, Updating Username Of Each System User With !#%&amp;/¤ = Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:46.852" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:46.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:46.863" level="INFO">${pids} = 24547</msg>
<status status="PASS" starttime="20210730 14:38:46.849" endtime="20210730 14:38:46.863"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:46.864" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:46.864" endtime="20210730 14:38:46.864"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:46.865" level="INFO">${pids} = ['24547']</msg>
<status status="PASS" starttime="20210730 14:38:46.865" endtime="20210730 14:38:46.865"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24547</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:46.871" level="INFO">Running command 'kill 24547 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:46.866" endtime="20210730 14:38:46.873"/>
</kw>
<status status="PASS" starttime="20210730 14:38:46.865" endtime="20210730 14:38:46.873"/>
</iter>
<status status="PASS" starttime="20210730 14:38:46.865" endtime="20210730 14:38:46.873"/>
</for>
<status status="PASS" starttime="20210730 14:38:46.865" endtime="20210730 14:38:46.874"/>
</branch>
<status status="PASS" starttime="20210730 14:38:46.864" endtime="20210730 14:38:46.874"/>
</if>
<status status="PASS" starttime="20210730 14:38:46.848" endtime="20210730 14:38:46.874"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:46.876" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:46.876" endtime="20210730 14:38:46.876"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:46.877" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:46.877" endtime="20210730 14:38:46.877"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:46.878" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:46.877" endtime="20210730 14:38:46.878"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:46.878" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:46.878" endtime="20210730 14:38:46.878"/>
</kw>
<msg timestamp="20210730 14:38:46.878" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:46.876" endtime="20210730 14:38:46.878"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:46.882" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:46.879" endtime="20210730 14:38:46.884"/>
</kw>
<status status="PASS" starttime="20210730 14:38:46.875" endtime="20210730 14:38:46.884"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:38:46.886" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:38:46.885" endtime="20210730 14:38:46.913"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:38:48.415" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:38:46.913" endtime="20210730 14:38:48.416"/>
</kw>
<status status="PASS" starttime="20210730 14:38:46.885" endtime="20210730 14:38:48.417"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:48.422" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:48.421" endtime="20210730 14:38:48.422"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:48.423" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:48.422" endtime="20210730 14:38:48.423"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:48.425" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:48.424" endtime="20210730 14:38:48.425"/>
</kw>
<msg timestamp="20210730 14:38:48.426" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:48.419" endtime="20210730 14:38:48.426"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:38:48.427" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:38:48.426" endtime="20210730 14:38:48.427"/>
</kw>
<status status="PASS" starttime="20210730 14:38:48.418" endtime="20210730 14:38:48.428"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:38:48.429" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:38:48.429" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:38:48.429" endtime="20210730 14:38:48.429"/>
</kw>
<status status="PASS" starttime="20210730 14:38:48.428" endtime="20210730 14:38:48.430"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:38:48.431" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:38:48.431" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:38:48.430" endtime="20210730 14:38:48.432"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:38:48.432" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:38:48.432" endtime="20210730 14:38:48.432"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:48.433" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:48.433" endtime="20210730 14:38:48.433"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:48.433" endtime="20210730 14:38:48.435"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:48.435" endtime="20210730 14:38:48.435"/>
</kw>
<status status="PASS" starttime="20210730 14:38:48.433" endtime="20210730 14:38:48.435"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:48.436" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:48.436" endtime="20210730 14:38:48.436"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:48.436" endtime="20210730 14:38:48.437"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:48.437" endtime="20210730 14:38:48.438"/>
</kw>
<status status="PASS" starttime="20210730 14:38:48.435" endtime="20210730 14:38:48.438"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:48.438" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:48.438" endtime="20210730 14:38:48.438"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:48.439" endtime="20210730 14:38:48.440"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:48.440" endtime="20210730 14:38:48.441"/>
</kw>
<status status="PASS" starttime="20210730 14:38:48.438" endtime="20210730 14:38:48.441"/>
</iter>
<status status="PASS" starttime="20210730 14:38:48.432" endtime="20210730 14:38:48.441"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:38:48.442" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:38:48.441" endtime="20210730 14:38:48.442"/>
</kw>
<status status="PASS" starttime="20210730 14:38:48.430" endtime="20210730 14:38:48.442"/>
</kw>
<status status="PASS" starttime="20210730 14:38:46.848" endtime="20210730 14:38:48.442"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!#%&amp;/¤ =</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:48.444" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:38:48.443" endtime="20210730 14:38:48.444"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:48.444" level="INFO">${payload} = {'username': '!#%&amp;/¤ ='}</msg>
<status status="PASS" starttime="20210730 14:38:48.444" endtime="20210730 14:38:48.444"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:48.456" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:48.456" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:48.445" endtime="20210730 14:38:48.456"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:48.456" endtime="20210730 14:38:48.457"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:48.457" endtime="20210730 14:38:48.457"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:48.445" endtime="20210730 14:38:48.457"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:48.444" endtime="20210730 14:38:48.457"/>
</for>
<status status="FAIL" starttime="20210730 14:38:48.443" endtime="20210730 14:38:48.457"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:48.442" endtime="20210730 14:38:48.457"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!#%&amp;/¤ =</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:48.458" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:38:48.458" endtime="20210730 14:38:48.458"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:48.458" level="INFO">${payload} = {'username': '!#%&amp;/¤ ='}</msg>
<status status="PASS" starttime="20210730 14:38:48.458" endtime="20210730 14:38:48.458"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:48.462" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:48.462" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:48.459" endtime="20210730 14:38:48.462"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:48.462" endtime="20210730 14:38:48.463"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:48.463" endtime="20210730 14:38:48.463"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:48.459" endtime="20210730 14:38:48.463"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:48.458" endtime="20210730 14:38:48.463"/>
</for>
<status status="FAIL" starttime="20210730 14:38:48.457" endtime="20210730 14:38:48.463"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:48.457" endtime="20210730 14:38:48.463"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!#%&amp;/¤ =</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:48.464" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:38:48.463" endtime="20210730 14:38:48.464"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:48.464" level="INFO">${payload} = {'username': '!#%&amp;/¤ ='}</msg>
<status status="PASS" starttime="20210730 14:38:48.464" endtime="20210730 14:38:48.464"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:48.468" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:48.468" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:48.465" endtime="20210730 14:38:48.469"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:48.469" endtime="20210730 14:38:48.469"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:48.469" endtime="20210730 14:38:48.469"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:48.464" endtime="20210730 14:38:48.469"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:48.464" endtime="20210730 14:38:48.469"/>
</for>
<status status="FAIL" starttime="20210730 14:38:48.463" endtime="20210730 14:38:48.470"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:48.463" endtime="20210730 14:38:48.470"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:48.442" endtime="20210730 14:38:48.470"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:48.480" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:48.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:48.489" level="INFO">${pids} = 24570
24577
24581</msg>
<status status="PASS" starttime="20210730 14:38:48.476" endtime="20210730 14:38:48.489"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:48.490" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:48.490" endtime="20210730 14:38:48.490"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:48.491" level="INFO">${pids} = ['24570', '24577', '24581']</msg>
<status status="PASS" starttime="20210730 14:38:48.491" endtime="20210730 14:38:48.491"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24570</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:48.494" level="INFO">Running command 'kill 24570 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:48.491" endtime="20210730 14:38:48.495"/>
</kw>
<status status="PASS" starttime="20210730 14:38:48.491" endtime="20210730 14:38:48.495"/>
</iter>
<iter>
<var name="${pid}">24577</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:48.498" level="INFO">Running command 'kill 24577 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:48.495" endtime="20210730 14:38:48.499"/>
</kw>
<status status="PASS" starttime="20210730 14:38:48.495" endtime="20210730 14:38:48.499"/>
</iter>
<iter>
<var name="${pid}">24581</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:48.504" level="INFO">Running command 'kill 24581 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:48.499" endtime="20210730 14:38:48.505"/>
</kw>
<status status="PASS" starttime="20210730 14:38:48.499" endtime="20210730 14:38:48.505"/>
</iter>
<status status="PASS" starttime="20210730 14:38:48.491" endtime="20210730 14:38:48.505"/>
</for>
<status status="PASS" starttime="20210730 14:38:48.490" endtime="20210730 14:38:48.505"/>
</branch>
<status status="PASS" starttime="20210730 14:38:48.490" endtime="20210730 14:38:48.505"/>
</if>
<status status="PASS" starttime="20210730 14:38:48.470" endtime="20210730 14:38:48.506"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '!#%&amp;/¤ ='
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:38:46.847" endtime="20210730 14:38:48.506">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t25" name="With Each Valid Token, Updating Username Of Each System User With !#%&amp;/¤%= ()=? Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:48.511" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:48.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:48.521" level="INFO">${pids} = 24610</msg>
<status status="PASS" starttime="20210730 14:38:48.508" endtime="20210730 14:38:48.521"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:48.522" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:48.522" endtime="20210730 14:38:48.522"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:48.523" level="INFO">${pids} = ['24610']</msg>
<status status="PASS" starttime="20210730 14:38:48.523" endtime="20210730 14:38:48.523"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24610</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:48.526" level="INFO">Running command 'kill 24610 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:48.523" endtime="20210730 14:38:48.527"/>
</kw>
<status status="PASS" starttime="20210730 14:38:48.523" endtime="20210730 14:38:48.527"/>
</iter>
<status status="PASS" starttime="20210730 14:38:48.523" endtime="20210730 14:38:48.527"/>
</for>
<status status="PASS" starttime="20210730 14:38:48.523" endtime="20210730 14:38:48.527"/>
</branch>
<status status="PASS" starttime="20210730 14:38:48.522" endtime="20210730 14:38:48.527"/>
</if>
<status status="PASS" starttime="20210730 14:38:48.508" endtime="20210730 14:38:48.527"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:48.528" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:48.528" endtime="20210730 14:38:48.528"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:48.529" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:48.529" endtime="20210730 14:38:48.529"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:48.529" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:48.529" endtime="20210730 14:38:48.529"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:48.530" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:48.530" endtime="20210730 14:38:48.530"/>
</kw>
<msg timestamp="20210730 14:38:48.530" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:48.528" endtime="20210730 14:38:48.530"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:48.536" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:48.530" endtime="20210730 14:38:48.538"/>
</kw>
<status status="PASS" starttime="20210730 14:38:48.527" endtime="20210730 14:38:48.539"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:38:48.540" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:38:48.540" endtime="20210730 14:38:48.544"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:38:50.053" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:38:48.545" endtime="20210730 14:38:50.053"/>
</kw>
<status status="PASS" starttime="20210730 14:38:48.539" endtime="20210730 14:38:50.053"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:50.055" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:50.054" endtime="20210730 14:38:50.055"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:50.055" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:50.055" endtime="20210730 14:38:50.055"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:50.055" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:50.055" endtime="20210730 14:38:50.055"/>
</kw>
<msg timestamp="20210730 14:38:50.056" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:50.054" endtime="20210730 14:38:50.056"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:38:50.056" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:38:50.056" endtime="20210730 14:38:50.057"/>
</kw>
<status status="PASS" starttime="20210730 14:38:50.054" endtime="20210730 14:38:50.057"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:38:50.057" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:38:50.057" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:38:50.057" endtime="20210730 14:38:50.057"/>
</kw>
<status status="PASS" starttime="20210730 14:38:50.057" endtime="20210730 14:38:50.058"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:38:50.058" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:38:50.058" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:38:50.058" endtime="20210730 14:38:50.058"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:38:50.059" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:38:50.059" endtime="20210730 14:38:50.059"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:50.059" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:50.059" endtime="20210730 14:38:50.059"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:50.059" endtime="20210730 14:38:50.060"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:50.060" endtime="20210730 14:38:50.060"/>
</kw>
<status status="PASS" starttime="20210730 14:38:50.059" endtime="20210730 14:38:50.060"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:50.061" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:50.061" endtime="20210730 14:38:50.061"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:50.061" endtime="20210730 14:38:50.062"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:50.062" endtime="20210730 14:38:50.062"/>
</kw>
<status status="PASS" starttime="20210730 14:38:50.061" endtime="20210730 14:38:50.062"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:50.063" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:50.062" endtime="20210730 14:38:50.063"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:50.063" endtime="20210730 14:38:50.063"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:50.063" endtime="20210730 14:38:50.064"/>
</kw>
<status status="PASS" starttime="20210730 14:38:50.062" endtime="20210730 14:38:50.064"/>
</iter>
<status status="PASS" starttime="20210730 14:38:50.059" endtime="20210730 14:38:50.064"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:38:50.064" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:38:50.064" endtime="20210730 14:38:50.064"/>
</kw>
<status status="PASS" starttime="20210730 14:38:50.058" endtime="20210730 14:38:50.064"/>
</kw>
<status status="PASS" starttime="20210730 14:38:48.507" endtime="20210730 14:38:50.064"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!#%&amp;/¤%= ()=?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:50.066" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:38:50.065" endtime="20210730 14:38:50.066"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:50.066" level="INFO">${payload} = {'username': '!#%&amp;/¤%= ()=?'}</msg>
<status status="PASS" starttime="20210730 14:38:50.066" endtime="20210730 14:38:50.066"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:50.078" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:50.079" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:50.066" endtime="20210730 14:38:50.079"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:50.079" endtime="20210730 14:38:50.079"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:50.079" endtime="20210730 14:38:50.079"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:50.066" endtime="20210730 14:38:50.079"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:50.066" endtime="20210730 14:38:50.079"/>
</for>
<status status="FAIL" starttime="20210730 14:38:50.065" endtime="20210730 14:38:50.079"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:50.065" endtime="20210730 14:38:50.079"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!#%&amp;/¤%= ()=?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:50.080" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:38:50.080" endtime="20210730 14:38:50.081"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:50.081" level="INFO">${payload} = {'username': '!#%&amp;/¤%= ()=?'}</msg>
<status status="PASS" starttime="20210730 14:38:50.081" endtime="20210730 14:38:50.081"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:50.085" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:50.086" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:50.081" endtime="20210730 14:38:50.086"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:50.086" endtime="20210730 14:38:50.086"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:50.086" endtime="20210730 14:38:50.086"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:50.081" endtime="20210730 14:38:50.086"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:50.081" endtime="20210730 14:38:50.086"/>
</for>
<status status="FAIL" starttime="20210730 14:38:50.080" endtime="20210730 14:38:50.086"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:50.080" endtime="20210730 14:38:50.086"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=!#%&amp;/¤%= ()=?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:50.087" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:38:50.087" endtime="20210730 14:38:50.087"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:50.088" level="INFO">${payload} = {'username': '!#%&amp;/¤%= ()=?'}</msg>
<status status="PASS" starttime="20210730 14:38:50.088" endtime="20210730 14:38:50.088"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:50.092" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:50.093" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:50.088" endtime="20210730 14:38:50.093"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:50.093" endtime="20210730 14:38:50.093"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:50.093" endtime="20210730 14:38:50.093"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:50.088" endtime="20210730 14:38:50.093"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:50.088" endtime="20210730 14:38:50.093"/>
</for>
<status status="FAIL" starttime="20210730 14:38:50.086" endtime="20210730 14:38:50.094"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:50.086" endtime="20210730 14:38:50.094"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:50.065" endtime="20210730 14:38:50.094"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:50.098" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:50.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:50.108" level="INFO">${pids} = 24633
24640
24645</msg>
<status status="PASS" starttime="20210730 14:38:50.095" endtime="20210730 14:38:50.108"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:50.109" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:50.109" endtime="20210730 14:38:50.109"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:50.110" level="INFO">${pids} = ['24633', '24640', '24645']</msg>
<status status="PASS" starttime="20210730 14:38:50.110" endtime="20210730 14:38:50.110"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24633</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:50.113" level="INFO">Running command 'kill 24633 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:50.110" endtime="20210730 14:38:50.114"/>
</kw>
<status status="PASS" starttime="20210730 14:38:50.110" endtime="20210730 14:38:50.114"/>
</iter>
<iter>
<var name="${pid}">24640</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:50.117" level="INFO">Running command 'kill 24640 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:50.114" endtime="20210730 14:38:50.117"/>
</kw>
<status status="PASS" starttime="20210730 14:38:50.114" endtime="20210730 14:38:50.117"/>
</iter>
<iter>
<var name="${pid}">24645</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:50.120" level="INFO">Running command 'kill 24645 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:50.118" endtime="20210730 14:38:50.121"/>
</kw>
<status status="PASS" starttime="20210730 14:38:50.117" endtime="20210730 14:38:50.121"/>
</iter>
<status status="PASS" starttime="20210730 14:38:50.110" endtime="20210730 14:38:50.121"/>
</for>
<status status="PASS" starttime="20210730 14:38:50.110" endtime="20210730 14:38:50.121"/>
</branch>
<status status="PASS" starttime="20210730 14:38:50.109" endtime="20210730 14:38:50.121"/>
</if>
<status status="PASS" starttime="20210730 14:38:50.094" endtime="20210730 14:38:50.121"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '!#%&amp;/¤%= ()=?'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:38:48.506" endtime="20210730 14:38:50.122">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t26" name="With Each Valid Token, Updating Username Of Each System User With 1234 67 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:50.128" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:50.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:50.137" level="INFO">${pids} = 24674</msg>
<status status="PASS" starttime="20210730 14:38:50.124" endtime="20210730 14:38:50.137"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:50.138" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:50.138" endtime="20210730 14:38:50.138"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:50.140" level="INFO">${pids} = ['24674']</msg>
<status status="PASS" starttime="20210730 14:38:50.139" endtime="20210730 14:38:50.140"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24674</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:50.144" level="INFO">Running command 'kill 24674 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:50.141" endtime="20210730 14:38:50.145"/>
</kw>
<status status="PASS" starttime="20210730 14:38:50.140" endtime="20210730 14:38:50.145"/>
</iter>
<status status="PASS" starttime="20210730 14:38:50.140" endtime="20210730 14:38:50.145"/>
</for>
<status status="PASS" starttime="20210730 14:38:50.139" endtime="20210730 14:38:50.145"/>
</branch>
<status status="PASS" starttime="20210730 14:38:50.138" endtime="20210730 14:38:50.145"/>
</if>
<status status="PASS" starttime="20210730 14:38:50.124" endtime="20210730 14:38:50.145"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:50.146" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:50.146" endtime="20210730 14:38:50.146"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:50.147" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:50.147" endtime="20210730 14:38:50.147"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:50.148" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:50.147" endtime="20210730 14:38:50.148"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:50.148" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:50.148" endtime="20210730 14:38:50.148"/>
</kw>
<msg timestamp="20210730 14:38:50.148" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:50.147" endtime="20210730 14:38:50.148"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:50.152" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:50.148" endtime="20210730 14:38:50.153"/>
</kw>
<status status="PASS" starttime="20210730 14:38:50.146" endtime="20210730 14:38:50.154"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:38:50.156" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:38:50.155" endtime="20210730 14:38:50.162"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:38:51.676" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:38:50.162" endtime="20210730 14:38:51.676"/>
</kw>
<status status="PASS" starttime="20210730 14:38:50.154" endtime="20210730 14:38:51.677"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:51.678" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:51.677" endtime="20210730 14:38:51.678"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:51.678" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:51.678" endtime="20210730 14:38:51.678"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:51.679" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:51.678" endtime="20210730 14:38:51.679"/>
</kw>
<msg timestamp="20210730 14:38:51.679" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:51.677" endtime="20210730 14:38:51.679"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:38:51.679" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:38:51.679" endtime="20210730 14:38:51.680"/>
</kw>
<status status="PASS" starttime="20210730 14:38:51.677" endtime="20210730 14:38:51.680"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:38:51.680" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:38:51.680" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:38:51.680" endtime="20210730 14:38:51.680"/>
</kw>
<status status="PASS" starttime="20210730 14:38:51.680" endtime="20210730 14:38:51.681"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:38:51.681" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:38:51.681" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:38:51.681" endtime="20210730 14:38:51.681"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:38:51.682" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:38:51.682" endtime="20210730 14:38:51.682"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:51.682" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:51.682" endtime="20210730 14:38:51.682"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:51.682" endtime="20210730 14:38:51.683"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:51.683" endtime="20210730 14:38:51.683"/>
</kw>
<status status="PASS" starttime="20210730 14:38:51.682" endtime="20210730 14:38:51.683"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:51.684" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:51.684" endtime="20210730 14:38:51.684"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:51.684" endtime="20210730 14:38:51.685"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:51.685" endtime="20210730 14:38:51.685"/>
</kw>
<status status="PASS" starttime="20210730 14:38:51.684" endtime="20210730 14:38:51.685"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:51.685" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:51.685" endtime="20210730 14:38:51.685"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:51.686" endtime="20210730 14:38:51.686"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:51.686" endtime="20210730 14:38:51.687"/>
</kw>
<status status="PASS" starttime="20210730 14:38:51.685" endtime="20210730 14:38:51.687"/>
</iter>
<status status="PASS" starttime="20210730 14:38:51.682" endtime="20210730 14:38:51.687"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:38:51.687" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:38:51.687" endtime="20210730 14:38:51.687"/>
</kw>
<status status="PASS" starttime="20210730 14:38:51.681" endtime="20210730 14:38:51.687"/>
</kw>
<status status="PASS" starttime="20210730 14:38:50.123" endtime="20210730 14:38:51.687"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=1234 67</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:51.689" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:38:51.688" endtime="20210730 14:38:51.689"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:51.689" level="INFO">${payload} = {'username': '1234 67'}</msg>
<status status="PASS" starttime="20210730 14:38:51.689" endtime="20210730 14:38:51.689"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:51.699" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:51.699" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:51.689" endtime="20210730 14:38:51.699"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:51.700" endtime="20210730 14:38:51.700"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:51.700" endtime="20210730 14:38:51.700"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:51.689" endtime="20210730 14:38:51.700"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:51.689" endtime="20210730 14:38:51.700"/>
</for>
<status status="FAIL" starttime="20210730 14:38:51.688" endtime="20210730 14:38:51.700"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:51.688" endtime="20210730 14:38:51.700"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=1234 67</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:51.702" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:38:51.702" endtime="20210730 14:38:51.702"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:51.703" level="INFO">${payload} = {'username': '1234 67'}</msg>
<status status="PASS" starttime="20210730 14:38:51.702" endtime="20210730 14:38:51.703"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:51.710" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:51.710" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:51.704" endtime="20210730 14:38:51.710"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:51.711" endtime="20210730 14:38:51.711"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:51.711" endtime="20210730 14:38:51.711"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:51.703" endtime="20210730 14:38:51.711"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:51.703" endtime="20210730 14:38:51.711"/>
</for>
<status status="FAIL" starttime="20210730 14:38:51.701" endtime="20210730 14:38:51.711"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:51.701" endtime="20210730 14:38:51.711"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=1234 67</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:51.712" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:38:51.712" endtime="20210730 14:38:51.713"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:51.713" level="INFO">${payload} = {'username': '1234 67'}</msg>
<status status="PASS" starttime="20210730 14:38:51.713" endtime="20210730 14:38:51.713"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:51.718" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:51.718" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:51.713" endtime="20210730 14:38:51.718"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:51.718" endtime="20210730 14:38:51.718"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:51.718" endtime="20210730 14:38:51.718"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:51.713" endtime="20210730 14:38:51.718"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:51.713" endtime="20210730 14:38:51.718"/>
</for>
<status status="FAIL" starttime="20210730 14:38:51.711" endtime="20210730 14:38:51.719"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:51.711" endtime="20210730 14:38:51.719"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:51.688" endtime="20210730 14:38:51.719"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:51.723" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:51.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:51.733" level="INFO">${pids} = 24697
24704
24709</msg>
<status status="PASS" starttime="20210730 14:38:51.720" endtime="20210730 14:38:51.733"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:51.734" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:51.733" endtime="20210730 14:38:51.734"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:51.734" level="INFO">${pids} = ['24697', '24704', '24709']</msg>
<status status="PASS" starttime="20210730 14:38:51.734" endtime="20210730 14:38:51.734"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24697</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:51.738" level="INFO">Running command 'kill 24697 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:51.735" endtime="20210730 14:38:51.739"/>
</kw>
<status status="PASS" starttime="20210730 14:38:51.735" endtime="20210730 14:38:51.739"/>
</iter>
<iter>
<var name="${pid}">24704</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:51.743" level="INFO">Running command 'kill 24704 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:51.740" endtime="20210730 14:38:51.746"/>
</kw>
<status status="PASS" starttime="20210730 14:38:51.740" endtime="20210730 14:38:51.746"/>
</iter>
<iter>
<var name="${pid}">24709</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:51.750" level="INFO">Running command 'kill 24709 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:51.746" endtime="20210730 14:38:51.750"/>
</kw>
<status status="PASS" starttime="20210730 14:38:51.746" endtime="20210730 14:38:51.750"/>
</iter>
<status status="PASS" starttime="20210730 14:38:51.734" endtime="20210730 14:38:51.750"/>
</for>
<status status="PASS" starttime="20210730 14:38:51.734" endtime="20210730 14:38:51.750"/>
</branch>
<status status="PASS" starttime="20210730 14:38:51.734" endtime="20210730 14:38:51.750"/>
</if>
<status status="PASS" starttime="20210730 14:38:51.719" endtime="20210730 14:38:51.750"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '1234 67'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:38:50.122" endtime="20210730 14:38:51.751">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t27" name="With Each Valid Token, Updating Username Of Each System User With 123456 8 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:51.755" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:51.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:51.765" level="INFO">${pids} = 24738</msg>
<status status="PASS" starttime="20210730 14:38:51.753" endtime="20210730 14:38:51.765"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:51.767" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:51.766" endtime="20210730 14:38:51.767"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:51.767" level="INFO">${pids} = ['24738']</msg>
<status status="PASS" starttime="20210730 14:38:51.767" endtime="20210730 14:38:51.767"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24738</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:51.770" level="INFO">Running command 'kill 24738 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:51.768" endtime="20210730 14:38:51.771"/>
</kw>
<status status="PASS" starttime="20210730 14:38:51.767" endtime="20210730 14:38:51.771"/>
</iter>
<status status="PASS" starttime="20210730 14:38:51.767" endtime="20210730 14:38:51.771"/>
</for>
<status status="PASS" starttime="20210730 14:38:51.767" endtime="20210730 14:38:51.771"/>
</branch>
<status status="PASS" starttime="20210730 14:38:51.767" endtime="20210730 14:38:51.771"/>
</if>
<status status="PASS" starttime="20210730 14:38:51.752" endtime="20210730 14:38:51.771"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:51.773" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:51.772" endtime="20210730 14:38:51.773"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:51.774" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:51.773" endtime="20210730 14:38:51.774"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:51.774" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:51.774" endtime="20210730 14:38:51.774"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:51.774" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:51.774" endtime="20210730 14:38:51.774"/>
</kw>
<msg timestamp="20210730 14:38:51.775" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:51.773" endtime="20210730 14:38:51.775"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:51.787" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:51.775" endtime="20210730 14:38:51.799"/>
</kw>
<status status="PASS" starttime="20210730 14:38:51.772" endtime="20210730 14:38:51.800"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:38:51.801" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:38:51.801" endtime="20210730 14:38:51.806"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:38:53.310" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:38:51.806" endtime="20210730 14:38:53.310"/>
</kw>
<status status="PASS" starttime="20210730 14:38:51.800" endtime="20210730 14:38:53.311"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:53.312" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:53.311" endtime="20210730 14:38:53.312"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:53.312" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:53.312" endtime="20210730 14:38:53.312"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:53.312" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:53.312" endtime="20210730 14:38:53.312"/>
</kw>
<msg timestamp="20210730 14:38:53.313" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:53.311" endtime="20210730 14:38:53.313"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:38:53.313" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:38:53.313" endtime="20210730 14:38:53.313"/>
</kw>
<status status="PASS" starttime="20210730 14:38:53.311" endtime="20210730 14:38:53.314"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:38:53.314" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:38:53.314" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:38:53.314" endtime="20210730 14:38:53.315"/>
</kw>
<status status="PASS" starttime="20210730 14:38:53.314" endtime="20210730 14:38:53.315"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:38:53.315" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:38:53.316" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:38:53.315" endtime="20210730 14:38:53.316"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:38:53.316" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:38:53.316" endtime="20210730 14:38:53.316"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:53.316" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:53.316" endtime="20210730 14:38:53.316"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:53.317" endtime="20210730 14:38:53.317"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:53.317" endtime="20210730 14:38:53.318"/>
</kw>
<status status="PASS" starttime="20210730 14:38:53.316" endtime="20210730 14:38:53.318"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:53.318" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:53.318" endtime="20210730 14:38:53.318"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:53.318" endtime="20210730 14:38:53.319"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:53.319" endtime="20210730 14:38:53.319"/>
</kw>
<status status="PASS" starttime="20210730 14:38:53.318" endtime="20210730 14:38:53.319"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:53.320" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:53.319" endtime="20210730 14:38:53.320"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:53.320" endtime="20210730 14:38:53.320"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:53.321" endtime="20210730 14:38:53.321"/>
</kw>
<status status="PASS" starttime="20210730 14:38:53.319" endtime="20210730 14:38:53.321"/>
</iter>
<status status="PASS" starttime="20210730 14:38:53.316" endtime="20210730 14:38:53.321"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:38:53.321" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:38:53.321" endtime="20210730 14:38:53.321"/>
</kw>
<status status="PASS" starttime="20210730 14:38:53.315" endtime="20210730 14:38:53.322"/>
</kw>
<status status="PASS" starttime="20210730 14:38:51.752" endtime="20210730 14:38:53.322"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=123456 8</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:53.323" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:38:53.323" endtime="20210730 14:38:53.323"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:53.323" level="INFO">${payload} = {'username': '123456 8'}</msg>
<status status="PASS" starttime="20210730 14:38:53.323" endtime="20210730 14:38:53.323"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:53.334" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:53.334" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:53.324" endtime="20210730 14:38:53.334"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:53.335" endtime="20210730 14:38:53.335"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:53.335" endtime="20210730 14:38:53.335"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:53.324" endtime="20210730 14:38:53.335"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:53.323" endtime="20210730 14:38:53.335"/>
</for>
<status status="FAIL" starttime="20210730 14:38:53.322" endtime="20210730 14:38:53.335"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:53.322" endtime="20210730 14:38:53.335"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=123456 8</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:53.336" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:38:53.336" endtime="20210730 14:38:53.336"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:53.337" level="INFO">${payload} = {'username': '123456 8'}</msg>
<status status="PASS" starttime="20210730 14:38:53.336" endtime="20210730 14:38:53.337"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:53.342" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:53.342" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:53.337" endtime="20210730 14:38:53.342"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:53.342" endtime="20210730 14:38:53.342"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:53.342" endtime="20210730 14:38:53.342"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:53.337" endtime="20210730 14:38:53.342"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:53.337" endtime="20210730 14:38:53.342"/>
</for>
<status status="FAIL" starttime="20210730 14:38:53.335" endtime="20210730 14:38:53.343"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:53.335" endtime="20210730 14:38:53.343"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=123456 8</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:53.344" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:38:53.343" endtime="20210730 14:38:53.344"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:53.344" level="INFO">${payload} = {'username': '123456 8'}</msg>
<status status="PASS" starttime="20210730 14:38:53.344" endtime="20210730 14:38:53.344"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:53.349" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:53.349" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:53.345" endtime="20210730 14:38:53.349"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:53.349" endtime="20210730 14:38:53.349"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:53.350" endtime="20210730 14:38:53.350"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:53.344" endtime="20210730 14:38:53.350"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:53.344" endtime="20210730 14:38:53.350"/>
</for>
<status status="FAIL" starttime="20210730 14:38:53.343" endtime="20210730 14:38:53.350"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:53.343" endtime="20210730 14:38:53.350"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:53.322" endtime="20210730 14:38:53.350"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:53.354" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:53.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:53.364" level="INFO">${pids} = 24761
24768
24772</msg>
<status status="PASS" starttime="20210730 14:38:53.351" endtime="20210730 14:38:53.364"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:53.365" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:53.365" endtime="20210730 14:38:53.365"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:53.366" level="INFO">${pids} = ['24761', '24768', '24772']</msg>
<status status="PASS" starttime="20210730 14:38:53.366" endtime="20210730 14:38:53.366"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24761</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:53.369" level="INFO">Running command 'kill 24761 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:53.366" endtime="20210730 14:38:53.370"/>
</kw>
<status status="PASS" starttime="20210730 14:38:53.366" endtime="20210730 14:38:53.370"/>
</iter>
<iter>
<var name="${pid}">24768</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:53.374" level="INFO">Running command 'kill 24768 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:53.370" endtime="20210730 14:38:53.374"/>
</kw>
<status status="PASS" starttime="20210730 14:38:53.370" endtime="20210730 14:38:53.374"/>
</iter>
<iter>
<var name="${pid}">24772</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:53.379" level="INFO">Running command 'kill 24772 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:53.375" endtime="20210730 14:38:53.380"/>
</kw>
<status status="PASS" starttime="20210730 14:38:53.375" endtime="20210730 14:38:53.380"/>
</iter>
<status status="PASS" starttime="20210730 14:38:53.366" endtime="20210730 14:38:53.380"/>
</for>
<status status="PASS" starttime="20210730 14:38:53.366" endtime="20210730 14:38:53.380"/>
</branch>
<status status="PASS" starttime="20210730 14:38:53.365" endtime="20210730 14:38:53.380"/>
</if>
<status status="PASS" starttime="20210730 14:38:53.350" endtime="20210730 14:38:53.381"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '123456 8'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:38:51.751" endtime="20210730 14:38:53.381">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t28" name="With Each Valid Token, Updating Username Of Each System User With 12345678 12345 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:53.386" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:53.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:53.395" level="INFO">${pids} = 24801</msg>
<status status="PASS" starttime="20210730 14:38:53.383" endtime="20210730 14:38:53.396"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:53.397" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:53.396" endtime="20210730 14:38:53.397"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:53.397" level="INFO">${pids} = ['24801']</msg>
<status status="PASS" starttime="20210730 14:38:53.397" endtime="20210730 14:38:53.397"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24801</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:53.401" level="INFO">Running command 'kill 24801 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:53.398" endtime="20210730 14:38:53.402"/>
</kw>
<status status="PASS" starttime="20210730 14:38:53.398" endtime="20210730 14:38:53.402"/>
</iter>
<status status="PASS" starttime="20210730 14:38:53.397" endtime="20210730 14:38:53.402"/>
</for>
<status status="PASS" starttime="20210730 14:38:53.397" endtime="20210730 14:38:53.402"/>
</branch>
<status status="PASS" starttime="20210730 14:38:53.397" endtime="20210730 14:38:53.402"/>
</if>
<status status="PASS" starttime="20210730 14:38:53.382" endtime="20210730 14:38:53.402"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:53.403" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:53.403" endtime="20210730 14:38:53.403"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:53.404" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:53.404" endtime="20210730 14:38:53.404"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:53.404" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:53.404" endtime="20210730 14:38:53.404"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:53.405" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:53.405" endtime="20210730 14:38:53.405"/>
</kw>
<msg timestamp="20210730 14:38:53.405" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:53.404" endtime="20210730 14:38:53.405"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:53.411" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:53.405" endtime="20210730 14:38:53.413"/>
</kw>
<status status="PASS" starttime="20210730 14:38:53.403" endtime="20210730 14:38:53.413"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:38:53.415" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:38:53.414" endtime="20210730 14:38:53.423"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:38:54.933" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:38:53.424" endtime="20210730 14:38:54.933"/>
</kw>
<status status="PASS" starttime="20210730 14:38:53.414" endtime="20210730 14:38:54.934"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:54.935" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:54.935" endtime="20210730 14:38:54.935"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:54.936" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:54.935" endtime="20210730 14:38:54.936"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:54.936" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:54.936" endtime="20210730 14:38:54.936"/>
</kw>
<msg timestamp="20210730 14:38:54.936" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:54.935" endtime="20210730 14:38:54.936"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:38:54.937" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:38:54.936" endtime="20210730 14:38:54.937"/>
</kw>
<status status="PASS" starttime="20210730 14:38:54.934" endtime="20210730 14:38:54.937"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:38:54.938" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:38:54.938" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:38:54.938" endtime="20210730 14:38:54.938"/>
</kw>
<status status="PASS" starttime="20210730 14:38:54.937" endtime="20210730 14:38:54.938"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:38:54.940" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:38:54.940" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:38:54.938" endtime="20210730 14:38:54.940"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:38:54.940" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:38:54.940" endtime="20210730 14:38:54.940"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:54.941" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:54.941" endtime="20210730 14:38:54.941"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:54.941" endtime="20210730 14:38:54.942"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:54.942" endtime="20210730 14:38:54.942"/>
</kw>
<status status="PASS" starttime="20210730 14:38:54.941" endtime="20210730 14:38:54.942"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:54.943" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:54.943" endtime="20210730 14:38:54.943"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:54.943" endtime="20210730 14:38:54.944"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:54.944" endtime="20210730 14:38:54.944"/>
</kw>
<status status="PASS" starttime="20210730 14:38:54.942" endtime="20210730 14:38:54.944"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:54.945" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:54.945" endtime="20210730 14:38:54.945"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:54.945" endtime="20210730 14:38:54.946"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:54.946" endtime="20210730 14:38:54.946"/>
</kw>
<status status="PASS" starttime="20210730 14:38:54.944" endtime="20210730 14:38:54.946"/>
</iter>
<status status="PASS" starttime="20210730 14:38:54.940" endtime="20210730 14:38:54.946"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:38:54.946" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:38:54.946" endtime="20210730 14:38:54.947"/>
</kw>
<status status="PASS" starttime="20210730 14:38:54.938" endtime="20210730 14:38:54.947"/>
</kw>
<status status="PASS" starttime="20210730 14:38:53.382" endtime="20210730 14:38:54.947"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=12345678 12345</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:54.948" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:38:54.948" endtime="20210730 14:38:54.948"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:54.948" level="INFO">${payload} = {'username': '12345678 12345'}</msg>
<status status="PASS" starttime="20210730 14:38:54.948" endtime="20210730 14:38:54.948"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:54.957" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:54.957" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:54.949" endtime="20210730 14:38:54.957"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:54.958" endtime="20210730 14:38:54.958"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:54.958" endtime="20210730 14:38:54.958"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:54.949" endtime="20210730 14:38:54.958"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:54.948" endtime="20210730 14:38:54.958"/>
</for>
<status status="FAIL" starttime="20210730 14:38:54.947" endtime="20210730 14:38:54.958"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:54.947" endtime="20210730 14:38:54.958"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=12345678 12345</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:54.959" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:38:54.959" endtime="20210730 14:38:54.959"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:54.960" level="INFO">${payload} = {'username': '12345678 12345'}</msg>
<status status="PASS" starttime="20210730 14:38:54.960" endtime="20210730 14:38:54.960"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:54.964" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:54.964" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:54.960" endtime="20210730 14:38:54.964"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:54.965" endtime="20210730 14:38:54.965"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:54.965" endtime="20210730 14:38:54.965"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:54.960" endtime="20210730 14:38:54.965"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:54.960" endtime="20210730 14:38:54.965"/>
</for>
<status status="FAIL" starttime="20210730 14:38:54.958" endtime="20210730 14:38:54.965"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:54.958" endtime="20210730 14:38:54.965"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=12345678 12345</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:54.966" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:38:54.966" endtime="20210730 14:38:54.966"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:54.966" level="INFO">${payload} = {'username': '12345678 12345'}</msg>
<status status="PASS" starttime="20210730 14:38:54.966" endtime="20210730 14:38:54.967"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:54.971" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:54.971" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:54.967" endtime="20210730 14:38:54.971"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:54.971" endtime="20210730 14:38:54.971"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:54.971" endtime="20210730 14:38:54.971"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:54.967" endtime="20210730 14:38:54.971"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:54.967" endtime="20210730 14:38:54.971"/>
</for>
<status status="FAIL" starttime="20210730 14:38:54.965" endtime="20210730 14:38:54.971"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:54.965" endtime="20210730 14:38:54.971"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:54.947" endtime="20210730 14:38:54.971"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:54.980" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:54.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:54.989" level="INFO">${pids} = 24824
24831
24836</msg>
<status status="PASS" starttime="20210730 14:38:54.973" endtime="20210730 14:38:54.989"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:54.990" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:54.989" endtime="20210730 14:38:54.990"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:54.991" level="INFO">${pids} = ['24824', '24831', '24836']</msg>
<status status="PASS" starttime="20210730 14:38:54.990" endtime="20210730 14:38:54.991"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24824</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:54.994" level="INFO">Running command 'kill 24824 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:54.991" endtime="20210730 14:38:54.994"/>
</kw>
<status status="PASS" starttime="20210730 14:38:54.991" endtime="20210730 14:38:54.994"/>
</iter>
<iter>
<var name="${pid}">24831</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:54.997" level="INFO">Running command 'kill 24831 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:54.995" endtime="20210730 14:38:54.999"/>
</kw>
<status status="PASS" starttime="20210730 14:38:54.995" endtime="20210730 14:38:54.999"/>
</iter>
<iter>
<var name="${pid}">24836</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:55.003" level="INFO">Running command 'kill 24836 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:55.000" endtime="20210730 14:38:55.003"/>
</kw>
<status status="PASS" starttime="20210730 14:38:54.999" endtime="20210730 14:38:55.003"/>
</iter>
<status status="PASS" starttime="20210730 14:38:54.991" endtime="20210730 14:38:55.003"/>
</for>
<status status="PASS" starttime="20210730 14:38:54.990" endtime="20210730 14:38:55.003"/>
</branch>
<status status="PASS" starttime="20210730 14:38:54.990" endtime="20210730 14:38:55.003"/>
</if>
<status status="PASS" starttime="20210730 14:38:54.972" endtime="20210730 14:38:55.004"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '12345678 12345'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:38:53.381" endtime="20210730 14:38:55.004">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t29" name="With Each Valid Token, Updating Username Of Each System User With abcd fg Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:55.015" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:55.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:55.023" level="INFO">${pids} = 24865</msg>
<status status="PASS" starttime="20210730 14:38:55.007" endtime="20210730 14:38:55.023"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:55.024" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:55.024" endtime="20210730 14:38:55.024"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:55.025" level="INFO">${pids} = ['24865']</msg>
<status status="PASS" starttime="20210730 14:38:55.025" endtime="20210730 14:38:55.025"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24865</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:55.028" level="INFO">Running command 'kill 24865 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:55.025" endtime="20210730 14:38:55.028"/>
</kw>
<status status="PASS" starttime="20210730 14:38:55.025" endtime="20210730 14:38:55.029"/>
</iter>
<status status="PASS" starttime="20210730 14:38:55.025" endtime="20210730 14:38:55.029"/>
</for>
<status status="PASS" starttime="20210730 14:38:55.025" endtime="20210730 14:38:55.029"/>
</branch>
<status status="PASS" starttime="20210730 14:38:55.024" endtime="20210730 14:38:55.029"/>
</if>
<status status="PASS" starttime="20210730 14:38:55.006" endtime="20210730 14:38:55.029"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:55.030" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:55.030" endtime="20210730 14:38:55.030"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:55.031" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:55.030" endtime="20210730 14:38:55.031"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:55.031" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:55.031" endtime="20210730 14:38:55.031"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:55.031" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:55.031" endtime="20210730 14:38:55.031"/>
</kw>
<msg timestamp="20210730 14:38:55.032" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:55.030" endtime="20210730 14:38:55.032"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:55.035" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:55.032" endtime="20210730 14:38:55.036"/>
</kw>
<status status="PASS" starttime="20210730 14:38:55.029" endtime="20210730 14:38:55.037"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:38:55.038" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:38:55.037" endtime="20210730 14:38:55.047"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:38:56.548" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:38:55.047" endtime="20210730 14:38:56.548"/>
</kw>
<status status="PASS" starttime="20210730 14:38:55.037" endtime="20210730 14:38:56.549"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:56.550" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:56.550" endtime="20210730 14:38:56.550"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:56.550" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:56.550" endtime="20210730 14:38:56.550"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:56.551" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:56.550" endtime="20210730 14:38:56.551"/>
</kw>
<msg timestamp="20210730 14:38:56.551" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:56.549" endtime="20210730 14:38:56.551"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:38:56.551" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:38:56.551" endtime="20210730 14:38:56.552"/>
</kw>
<status status="PASS" starttime="20210730 14:38:56.549" endtime="20210730 14:38:56.552"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:38:56.552" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:38:56.552" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:38:56.552" endtime="20210730 14:38:56.553"/>
</kw>
<status status="PASS" starttime="20210730 14:38:56.552" endtime="20210730 14:38:56.553"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:38:56.553" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:38:56.554" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:38:56.553" endtime="20210730 14:38:56.554"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:38:56.554" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:38:56.554" endtime="20210730 14:38:56.554"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:56.555" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:56.555" endtime="20210730 14:38:56.555"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:56.555" endtime="20210730 14:38:56.556"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:56.556" endtime="20210730 14:38:56.556"/>
</kw>
<status status="PASS" starttime="20210730 14:38:56.555" endtime="20210730 14:38:56.556"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:56.557" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:56.556" endtime="20210730 14:38:56.557"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:56.557" endtime="20210730 14:38:56.558"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:56.558" endtime="20210730 14:38:56.558"/>
</kw>
<status status="PASS" starttime="20210730 14:38:56.556" endtime="20210730 14:38:56.558"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:56.558" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:56.558" endtime="20210730 14:38:56.558"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:56.558" endtime="20210730 14:38:56.559"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:56.559" endtime="20210730 14:38:56.559"/>
</kw>
<status status="PASS" starttime="20210730 14:38:56.558" endtime="20210730 14:38:56.559"/>
</iter>
<status status="PASS" starttime="20210730 14:38:56.554" endtime="20210730 14:38:56.560"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:38:56.560" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:38:56.560" endtime="20210730 14:38:56.560"/>
</kw>
<status status="PASS" starttime="20210730 14:38:56.553" endtime="20210730 14:38:56.560"/>
</kw>
<status status="PASS" starttime="20210730 14:38:55.005" endtime="20210730 14:38:56.560"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=abcd fg</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:56.561" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:38:56.561" endtime="20210730 14:38:56.561"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:56.562" level="INFO">${payload} = {'username': 'abcd fg'}</msg>
<status status="PASS" starttime="20210730 14:38:56.562" endtime="20210730 14:38:56.562"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:56.571" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:56.571" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:56.562" endtime="20210730 14:38:56.571"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:56.571" endtime="20210730 14:38:56.572"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:56.572" endtime="20210730 14:38:56.572"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:56.562" endtime="20210730 14:38:56.572"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:56.562" endtime="20210730 14:38:56.572"/>
</for>
<status status="FAIL" starttime="20210730 14:38:56.561" endtime="20210730 14:38:56.572"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:56.561" endtime="20210730 14:38:56.572"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=abcd fg</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:56.574" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:38:56.574" endtime="20210730 14:38:56.574"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:56.575" level="INFO">${payload} = {'username': 'abcd fg'}</msg>
<status status="PASS" starttime="20210730 14:38:56.574" endtime="20210730 14:38:56.575"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:56.579" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:56.580" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:56.575" endtime="20210730 14:38:56.580"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:56.580" endtime="20210730 14:38:56.580"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:56.580" endtime="20210730 14:38:56.580"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:56.575" endtime="20210730 14:38:56.580"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:56.575" endtime="20210730 14:38:56.580"/>
</for>
<status status="FAIL" starttime="20210730 14:38:56.573" endtime="20210730 14:38:56.580"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:56.572" endtime="20210730 14:38:56.580"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=abcd fg</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:56.581" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:38:56.581" endtime="20210730 14:38:56.582"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:56.582" level="INFO">${payload} = {'username': 'abcd fg'}</msg>
<status status="PASS" starttime="20210730 14:38:56.582" endtime="20210730 14:38:56.582"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:56.586" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:56.586" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:56.582" endtime="20210730 14:38:56.586"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:56.586" endtime="20210730 14:38:56.586"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:56.587" endtime="20210730 14:38:56.587"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:56.582" endtime="20210730 14:38:56.587"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:56.582" endtime="20210730 14:38:56.587"/>
</for>
<status status="FAIL" starttime="20210730 14:38:56.581" endtime="20210730 14:38:56.587"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:56.580" endtime="20210730 14:38:56.587"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:56.560" endtime="20210730 14:38:56.587"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:56.591" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:56.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:56.602" level="INFO">${pids} = 24888
24895
24899</msg>
<status status="PASS" starttime="20210730 14:38:56.588" endtime="20210730 14:38:56.602"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:56.603" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:56.602" endtime="20210730 14:38:56.603"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:56.603" level="INFO">${pids} = ['24888', '24895', '24899']</msg>
<status status="PASS" starttime="20210730 14:38:56.603" endtime="20210730 14:38:56.603"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24888</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:56.608" level="INFO">Running command 'kill 24888 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:56.604" endtime="20210730 14:38:56.609"/>
</kw>
<status status="PASS" starttime="20210730 14:38:56.604" endtime="20210730 14:38:56.609"/>
</iter>
<iter>
<var name="${pid}">24895</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:56.613" level="INFO">Running command 'kill 24895 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:56.609" endtime="20210730 14:38:56.613"/>
</kw>
<status status="PASS" starttime="20210730 14:38:56.609" endtime="20210730 14:38:56.613"/>
</iter>
<iter>
<var name="${pid}">24899</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:56.617" level="INFO">Running command 'kill 24899 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:56.614" endtime="20210730 14:38:56.617"/>
</kw>
<status status="PASS" starttime="20210730 14:38:56.613" endtime="20210730 14:38:56.617"/>
</iter>
<status status="PASS" starttime="20210730 14:38:56.604" endtime="20210730 14:38:56.617"/>
</for>
<status status="PASS" starttime="20210730 14:38:56.603" endtime="20210730 14:38:56.617"/>
</branch>
<status status="PASS" starttime="20210730 14:38:56.603" endtime="20210730 14:38:56.617"/>
</if>
<status status="PASS" starttime="20210730 14:38:56.587" endtime="20210730 14:38:56.618"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": 'abcd fg'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:38:55.004" endtime="20210730 14:38:56.618">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t30" name="With Each Valid Token, Updating Username Of Each System User With ab defgh Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:56.623" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:56.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:56.633" level="INFO">${pids} = 24928</msg>
<status status="PASS" starttime="20210730 14:38:56.620" endtime="20210730 14:38:56.633"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:56.634" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:56.633" endtime="20210730 14:38:56.634"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:56.635" level="INFO">${pids} = ['24928']</msg>
<status status="PASS" starttime="20210730 14:38:56.634" endtime="20210730 14:38:56.635"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24928</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:56.638" level="INFO">Running command 'kill 24928 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:56.635" endtime="20210730 14:38:56.639"/>
</kw>
<status status="PASS" starttime="20210730 14:38:56.635" endtime="20210730 14:38:56.639"/>
</iter>
<status status="PASS" starttime="20210730 14:38:56.635" endtime="20210730 14:38:56.639"/>
</for>
<status status="PASS" starttime="20210730 14:38:56.634" endtime="20210730 14:38:56.639"/>
</branch>
<status status="PASS" starttime="20210730 14:38:56.634" endtime="20210730 14:38:56.639"/>
</if>
<status status="PASS" starttime="20210730 14:38:56.619" endtime="20210730 14:38:56.639"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:56.641" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:56.640" endtime="20210730 14:38:56.641"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:56.642" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:56.641" endtime="20210730 14:38:56.642"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:56.642" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:56.642" endtime="20210730 14:38:56.642"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:56.643" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:56.642" endtime="20210730 14:38:56.643"/>
</kw>
<msg timestamp="20210730 14:38:56.643" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:56.641" endtime="20210730 14:38:56.643"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:56.646" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:56.643" endtime="20210730 14:38:56.648"/>
</kw>
<status status="PASS" starttime="20210730 14:38:56.640" endtime="20210730 14:38:56.648"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:38:56.650" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:38:56.649" endtime="20210730 14:38:56.658"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:38:58.159" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:38:56.658" endtime="20210730 14:38:58.159"/>
</kw>
<status status="PASS" starttime="20210730 14:38:56.648" endtime="20210730 14:38:58.160"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:58.161" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:58.161" endtime="20210730 14:38:58.161"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:58.161" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:58.161" endtime="20210730 14:38:58.161"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:58.162" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:58.161" endtime="20210730 14:38:58.162"/>
</kw>
<msg timestamp="20210730 14:38:58.162" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:58.160" endtime="20210730 14:38:58.162"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:38:58.162" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:38:58.162" endtime="20210730 14:38:58.163"/>
</kw>
<status status="PASS" starttime="20210730 14:38:58.160" endtime="20210730 14:38:58.163"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:38:58.163" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:38:58.163" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:38:58.163" endtime="20210730 14:38:58.163"/>
</kw>
<status status="PASS" starttime="20210730 14:38:58.163" endtime="20210730 14:38:58.163"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:38:58.164" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:38:58.164" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:38:58.164" endtime="20210730 14:38:58.164"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:38:58.165" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:38:58.165" endtime="20210730 14:38:58.165"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:58.165" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:58.165" endtime="20210730 14:38:58.165"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:58.165" endtime="20210730 14:38:58.166"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:58.166" endtime="20210730 14:38:58.166"/>
</kw>
<status status="PASS" starttime="20210730 14:38:58.165" endtime="20210730 14:38:58.167"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:58.167" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:58.167" endtime="20210730 14:38:58.167"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:58.167" endtime="20210730 14:38:58.168"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:58.168" endtime="20210730 14:38:58.168"/>
</kw>
<status status="PASS" starttime="20210730 14:38:58.167" endtime="20210730 14:38:58.168"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:58.168" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:58.168" endtime="20210730 14:38:58.168"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:58.169" endtime="20210730 14:38:58.169"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:58.169" endtime="20210730 14:38:58.170"/>
</kw>
<status status="PASS" starttime="20210730 14:38:58.168" endtime="20210730 14:38:58.170"/>
</iter>
<status status="PASS" starttime="20210730 14:38:58.165" endtime="20210730 14:38:58.170"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:38:58.170" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:38:58.170" endtime="20210730 14:38:58.170"/>
</kw>
<status status="PASS" starttime="20210730 14:38:58.164" endtime="20210730 14:38:58.170"/>
</kw>
<status status="PASS" starttime="20210730 14:38:56.619" endtime="20210730 14:38:58.171"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=ab defgh</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:58.172" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:38:58.171" endtime="20210730 14:38:58.172"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:58.172" level="INFO">${payload} = {'username': 'ab defgh'}</msg>
<status status="PASS" starttime="20210730 14:38:58.172" endtime="20210730 14:38:58.172"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:58.182" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:58.182" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:58.173" endtime="20210730 14:38:58.182"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:58.183" endtime="20210730 14:38:58.183"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:58.183" endtime="20210730 14:38:58.183"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:58.173" endtime="20210730 14:38:58.183"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:58.173" endtime="20210730 14:38:58.183"/>
</for>
<status status="FAIL" starttime="20210730 14:38:58.171" endtime="20210730 14:38:58.183"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:58.171" endtime="20210730 14:38:58.183"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=ab defgh</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:58.184" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:38:58.184" endtime="20210730 14:38:58.184"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:58.185" level="INFO">${payload} = {'username': 'ab defgh'}</msg>
<status status="PASS" starttime="20210730 14:38:58.184" endtime="20210730 14:38:58.185"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:58.189" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:58.190" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:58.185" endtime="20210730 14:38:58.190"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:58.190" endtime="20210730 14:38:58.190"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:58.190" endtime="20210730 14:38:58.190"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:58.185" endtime="20210730 14:38:58.190"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:58.185" endtime="20210730 14:38:58.190"/>
</for>
<status status="FAIL" starttime="20210730 14:38:58.183" endtime="20210730 14:38:58.190"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:58.183" endtime="20210730 14:38:58.190"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=ab defgh</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:58.191" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:38:58.191" endtime="20210730 14:38:58.191"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:58.192" level="INFO">${payload} = {'username': 'ab defgh'}</msg>
<status status="PASS" starttime="20210730 14:38:58.191" endtime="20210730 14:38:58.192"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:58.196" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:58.197" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:58.192" endtime="20210730 14:38:58.197"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:58.197" endtime="20210730 14:38:58.197"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:58.197" endtime="20210730 14:38:58.197"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:58.192" endtime="20210730 14:38:58.197"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:58.192" endtime="20210730 14:38:58.197"/>
</for>
<status status="FAIL" starttime="20210730 14:38:58.190" endtime="20210730 14:38:58.197"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:58.190" endtime="20210730 14:38:58.198"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:58.171" endtime="20210730 14:38:58.198"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:58.202" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:58.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:58.213" level="INFO">${pids} = 24951
24958
24963</msg>
<status status="PASS" starttime="20210730 14:38:58.199" endtime="20210730 14:38:58.213"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:58.215" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:58.214" endtime="20210730 14:38:58.215"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:58.215" level="INFO">${pids} = ['24951', '24958', '24963']</msg>
<status status="PASS" starttime="20210730 14:38:58.215" endtime="20210730 14:38:58.215"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24951</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:58.219" level="INFO">Running command 'kill 24951 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:58.216" endtime="20210730 14:38:58.219"/>
</kw>
<status status="PASS" starttime="20210730 14:38:58.216" endtime="20210730 14:38:58.220"/>
</iter>
<iter>
<var name="${pid}">24958</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:58.224" level="INFO">Running command 'kill 24958 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:58.220" endtime="20210730 14:38:58.224"/>
</kw>
<status status="PASS" starttime="20210730 14:38:58.220" endtime="20210730 14:38:58.225"/>
</iter>
<iter>
<var name="${pid}">24963</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:58.232" level="INFO">Running command 'kill 24963 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:58.225" endtime="20210730 14:38:58.233"/>
</kw>
<status status="PASS" starttime="20210730 14:38:58.225" endtime="20210730 14:38:58.233"/>
</iter>
<status status="PASS" starttime="20210730 14:38:58.216" endtime="20210730 14:38:58.233"/>
</for>
<status status="PASS" starttime="20210730 14:38:58.215" endtime="20210730 14:38:58.233"/>
</branch>
<status status="PASS" starttime="20210730 14:38:58.215" endtime="20210730 14:38:58.233"/>
</if>
<status status="PASS" starttime="20210730 14:38:58.198" endtime="20210730 14:38:58.234"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": 'ab defgh'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:38:56.618" endtime="20210730 14:38:58.234">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t31" name="With Each Valid Token, Updating Username Of Each System User With abcdefghijklmnp stop Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:58.239" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:58.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:58.254" level="INFO">${pids} = 24992</msg>
<status status="PASS" starttime="20210730 14:38:58.236" endtime="20210730 14:38:58.254"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:58.255" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:58.254" endtime="20210730 14:38:58.255"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:58.255" level="INFO">${pids} = ['24992']</msg>
<status status="PASS" starttime="20210730 14:38:58.255" endtime="20210730 14:38:58.256"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24992</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:58.265" level="INFO">Running command 'kill 24992 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:58.256" endtime="20210730 14:38:58.266"/>
</kw>
<status status="PASS" starttime="20210730 14:38:58.256" endtime="20210730 14:38:58.266"/>
</iter>
<status status="PASS" starttime="20210730 14:38:58.256" endtime="20210730 14:38:58.266"/>
</for>
<status status="PASS" starttime="20210730 14:38:58.255" endtime="20210730 14:38:58.266"/>
</branch>
<status status="PASS" starttime="20210730 14:38:58.255" endtime="20210730 14:38:58.266"/>
</if>
<status status="PASS" starttime="20210730 14:38:58.236" endtime="20210730 14:38:58.266"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:58.267" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:58.267" endtime="20210730 14:38:58.267"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:58.268" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:58.268" endtime="20210730 14:38:58.268"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:58.268" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:58.268" endtime="20210730 14:38:58.269"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:58.269" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:58.269" endtime="20210730 14:38:58.269"/>
</kw>
<msg timestamp="20210730 14:38:58.269" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:58.268" endtime="20210730 14:38:58.269"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:58.274" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:58.269" endtime="20210730 14:38:58.275"/>
</kw>
<status status="PASS" starttime="20210730 14:38:58.267" endtime="20210730 14:38:58.276"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:38:58.277" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:38:58.277" endtime="20210730 14:38:58.292"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:38:59.793" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:38:58.292" endtime="20210730 14:38:59.794"/>
</kw>
<status status="PASS" starttime="20210730 14:38:58.276" endtime="20210730 14:38:59.795"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:59.798" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:59.797" endtime="20210730 14:38:59.798"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:59.800" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:59.799" endtime="20210730 14:38:59.800"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:59.801" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:59.800" endtime="20210730 14:38:59.801"/>
</kw>
<msg timestamp="20210730 14:38:59.802" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:59.796" endtime="20210730 14:38:59.802"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:38:59.803" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:38:59.802" endtime="20210730 14:38:59.804"/>
</kw>
<status status="PASS" starttime="20210730 14:38:59.795" endtime="20210730 14:38:59.804"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:38:59.806" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:38:59.806" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:38:59.805" endtime="20210730 14:38:59.807"/>
</kw>
<status status="PASS" starttime="20210730 14:38:59.804" endtime="20210730 14:38:59.808"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:38:59.810" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:38:59.810" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:38:59.809" endtime="20210730 14:38:59.810"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:38:59.811" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:38:59.810" endtime="20210730 14:38:59.811"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:59.812" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:59.811" endtime="20210730 14:38:59.812"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:59.812" endtime="20210730 14:38:59.813"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:59.813" endtime="20210730 14:38:59.813"/>
</kw>
<status status="PASS" starttime="20210730 14:38:59.811" endtime="20210730 14:38:59.813"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:59.814" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:59.814" endtime="20210730 14:38:59.814"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:59.814" endtime="20210730 14:38:59.815"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:59.815" endtime="20210730 14:38:59.816"/>
</kw>
<status status="PASS" starttime="20210730 14:38:59.814" endtime="20210730 14:38:59.816"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:59.816" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:38:59.816" endtime="20210730 14:38:59.816"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:38:59.817" endtime="20210730 14:38:59.818"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:38:59.818" endtime="20210730 14:38:59.818"/>
</kw>
<status status="PASS" starttime="20210730 14:38:59.816" endtime="20210730 14:38:59.818"/>
</iter>
<status status="PASS" starttime="20210730 14:38:59.811" endtime="20210730 14:38:59.818"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:38:59.819" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:38:59.818" endtime="20210730 14:38:59.819"/>
</kw>
<status status="PASS" starttime="20210730 14:38:59.808" endtime="20210730 14:38:59.819"/>
</kw>
<status status="PASS" starttime="20210730 14:38:58.235" endtime="20210730 14:38:59.819"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=abcdefghijklmnp stop</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:59.820" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:38:59.820" endtime="20210730 14:38:59.820"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:59.821" level="INFO">${payload} = {'username': 'abcdefghijklmnp stop'}</msg>
<status status="PASS" starttime="20210730 14:38:59.820" endtime="20210730 14:38:59.821"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:59.830" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:59.831" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:59.821" endtime="20210730 14:38:59.831"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:59.831" endtime="20210730 14:38:59.831"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:59.831" endtime="20210730 14:38:59.831"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:59.821" endtime="20210730 14:38:59.831"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:59.821" endtime="20210730 14:38:59.831"/>
</for>
<status status="FAIL" starttime="20210730 14:38:59.819" endtime="20210730 14:38:59.831"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:59.819" endtime="20210730 14:38:59.831"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=abcdefghijklmnp stop</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:59.832" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:38:59.832" endtime="20210730 14:38:59.832"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:59.833" level="INFO">${payload} = {'username': 'abcdefghijklmnp stop'}</msg>
<status status="PASS" starttime="20210730 14:38:59.833" endtime="20210730 14:38:59.833"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:59.837" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:59.837" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:59.833" endtime="20210730 14:38:59.837"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:59.837" endtime="20210730 14:38:59.837"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:59.837" endtime="20210730 14:38:59.838"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:59.833" endtime="20210730 14:38:59.838"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:59.833" endtime="20210730 14:38:59.838"/>
</for>
<status status="FAIL" starttime="20210730 14:38:59.832" endtime="20210730 14:38:59.838"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:59.831" endtime="20210730 14:38:59.838"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=abcdefghijklmnp stop</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:59.840" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:38:59.839" endtime="20210730 14:38:59.840"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:38:59.841" level="INFO">${payload} = {'username': 'abcdefghijklmnp stop'}</msg>
<status status="PASS" starttime="20210730 14:38:59.840" endtime="20210730 14:38:59.841"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:38:59.845" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:38:59.845" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:38:59.841" endtime="20210730 14:38:59.845"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:38:59.846" endtime="20210730 14:38:59.846"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:38:59.846" endtime="20210730 14:38:59.846"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:59.841" endtime="20210730 14:38:59.846"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:59.841" endtime="20210730 14:38:59.846"/>
</for>
<status status="FAIL" starttime="20210730 14:38:59.838" endtime="20210730 14:38:59.846"/>
</kw>
<status status="FAIL" starttime="20210730 14:38:59.838" endtime="20210730 14:38:59.846"/>
</iter>
<status status="FAIL" starttime="20210730 14:38:59.819" endtime="20210730 14:38:59.846"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:59.850" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:59.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:59.860" level="INFO">${pids} = 25015
25022
25027</msg>
<status status="PASS" starttime="20210730 14:38:59.847" endtime="20210730 14:38:59.860"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:59.861" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:59.861" endtime="20210730 14:38:59.861"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:59.862" level="INFO">${pids} = ['25015', '25022', '25027']</msg>
<status status="PASS" starttime="20210730 14:38:59.862" endtime="20210730 14:38:59.862"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">25015</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:59.866" level="INFO">Running command 'kill 25015 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:59.862" endtime="20210730 14:38:59.866"/>
</kw>
<status status="PASS" starttime="20210730 14:38:59.862" endtime="20210730 14:38:59.866"/>
</iter>
<iter>
<var name="${pid}">25022</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:59.869" level="INFO">Running command 'kill 25022 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:59.867" endtime="20210730 14:38:59.871"/>
</kw>
<status status="PASS" starttime="20210730 14:38:59.866" endtime="20210730 14:38:59.871"/>
</iter>
<iter>
<var name="${pid}">25027</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:59.876" level="INFO">Running command 'kill 25027 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:59.872" endtime="20210730 14:38:59.877"/>
</kw>
<status status="PASS" starttime="20210730 14:38:59.871" endtime="20210730 14:38:59.877"/>
</iter>
<status status="PASS" starttime="20210730 14:38:59.862" endtime="20210730 14:38:59.877"/>
</for>
<status status="PASS" starttime="20210730 14:38:59.862" endtime="20210730 14:38:59.877"/>
</branch>
<status status="PASS" starttime="20210730 14:38:59.862" endtime="20210730 14:38:59.877"/>
</if>
<status status="PASS" starttime="20210730 14:38:59.846" endtime="20210730 14:38:59.877"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": 'abcdefghijklmnp stop'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:38:58.234" endtime="20210730 14:38:59.877">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t32" name="With Each Valid Token, Updating Username Of Each System User With haka 12 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:38:59.882" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:38:59.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:38:59.892" level="INFO">${pids} = 25056</msg>
<status status="PASS" starttime="20210730 14:38:59.879" endtime="20210730 14:38:59.892"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:59.893" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:38:59.892" endtime="20210730 14:38:59.893"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:38:59.894" level="INFO">${pids} = ['25056']</msg>
<status status="PASS" starttime="20210730 14:38:59.893" endtime="20210730 14:38:59.894"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">25056</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:59.897" level="INFO">Running command 'kill 25056 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:59.894" endtime="20210730 14:38:59.897"/>
</kw>
<status status="PASS" starttime="20210730 14:38:59.894" endtime="20210730 14:38:59.898"/>
</iter>
<status status="PASS" starttime="20210730 14:38:59.894" endtime="20210730 14:38:59.898"/>
</for>
<status status="PASS" starttime="20210730 14:38:59.893" endtime="20210730 14:38:59.898"/>
</branch>
<status status="PASS" starttime="20210730 14:38:59.893" endtime="20210730 14:38:59.898"/>
</if>
<status status="PASS" starttime="20210730 14:38:59.879" endtime="20210730 14:38:59.898"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:59.899" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:59.899" endtime="20210730 14:38:59.899"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:59.900" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:38:59.899" endtime="20210730 14:38:59.900"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:38:59.900" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:38:59.900" endtime="20210730 14:38:59.900"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:38:59.900" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:59.900" endtime="20210730 14:38:59.901"/>
</kw>
<msg timestamp="20210730 14:38:59.901" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:38:59.899" endtime="20210730 14:38:59.901"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:38:59.904" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:38:59.901" endtime="20210730 14:38:59.906"/>
</kw>
<status status="PASS" starttime="20210730 14:38:59.898" endtime="20210730 14:38:59.906"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:38:59.908" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:38:59.907" endtime="20210730 14:38:59.915"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:01.417" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:38:59.916" endtime="20210730 14:39:01.417"/>
</kw>
<status status="PASS" starttime="20210730 14:38:59.907" endtime="20210730 14:39:01.418"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:01.420" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:01.420" endtime="20210730 14:39:01.420"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:01.421" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:01.420" endtime="20210730 14:39:01.421"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:01.421" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:01.421" endtime="20210730 14:39:01.421"/>
</kw>
<msg timestamp="20210730 14:39:01.421" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:01.420" endtime="20210730 14:39:01.421"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:01.422" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:01.421" endtime="20210730 14:39:01.422"/>
</kw>
<status status="PASS" starttime="20210730 14:39:01.419" endtime="20210730 14:39:01.422"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:01.423" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:01.423" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:01.423" endtime="20210730 14:39:01.423"/>
</kw>
<status status="PASS" starttime="20210730 14:39:01.422" endtime="20210730 14:39:01.423"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:01.424" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:01.424" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:01.423" endtime="20210730 14:39:01.424"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:01.424" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:01.424" endtime="20210730 14:39:01.424"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:01.425" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:01.425" endtime="20210730 14:39:01.425"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:01.425" endtime="20210730 14:39:01.426"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:01.427" endtime="20210730 14:39:01.427"/>
</kw>
<status status="PASS" starttime="20210730 14:39:01.425" endtime="20210730 14:39:01.427"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:01.427" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:01.427" endtime="20210730 14:39:01.427"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:01.427" endtime="20210730 14:39:01.428"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:01.428" endtime="20210730 14:39:01.428"/>
</kw>
<status status="PASS" starttime="20210730 14:39:01.427" endtime="20210730 14:39:01.428"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:01.429" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:01.428" endtime="20210730 14:39:01.429"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:01.429" endtime="20210730 14:39:01.430"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:01.430" endtime="20210730 14:39:01.430"/>
</kw>
<status status="PASS" starttime="20210730 14:39:01.428" endtime="20210730 14:39:01.430"/>
</iter>
<status status="PASS" starttime="20210730 14:39:01.424" endtime="20210730 14:39:01.430"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:01.430" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:01.430" endtime="20210730 14:39:01.430"/>
</kw>
<status status="PASS" starttime="20210730 14:39:01.423" endtime="20210730 14:39:01.431"/>
</kw>
<status status="PASS" starttime="20210730 14:38:59.879" endtime="20210730 14:39:01.431"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=haka 12</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:01.432" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:01.432" endtime="20210730 14:39:01.432"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:01.432" level="INFO">${payload} = {'username': 'haka 12'}</msg>
<status status="PASS" starttime="20210730 14:39:01.432" endtime="20210730 14:39:01.432"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:01.442" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:01.443" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:01.433" endtime="20210730 14:39:01.443"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:01.443" endtime="20210730 14:39:01.443"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:01.443" endtime="20210730 14:39:01.443"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:01.433" endtime="20210730 14:39:01.443"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:01.432" endtime="20210730 14:39:01.443"/>
</for>
<status status="FAIL" starttime="20210730 14:39:01.431" endtime="20210730 14:39:01.443"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:01.431" endtime="20210730 14:39:01.443"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=haka 12</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:01.445" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:01.444" endtime="20210730 14:39:01.445"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:01.445" level="INFO">${payload} = {'username': 'haka 12'}</msg>
<status status="PASS" starttime="20210730 14:39:01.445" endtime="20210730 14:39:01.445"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:01.450" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:01.450" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:01.446" endtime="20210730 14:39:01.450"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:01.450" endtime="20210730 14:39:01.450"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:01.450" endtime="20210730 14:39:01.450"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:01.445" endtime="20210730 14:39:01.450"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:01.445" endtime="20210730 14:39:01.450"/>
</for>
<status status="FAIL" starttime="20210730 14:39:01.444" endtime="20210730 14:39:01.450"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:01.444" endtime="20210730 14:39:01.450"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=haka 12</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:01.452" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:01.451" endtime="20210730 14:39:01.452"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:01.452" level="INFO">${payload} = {'username': 'haka 12'}</msg>
<status status="PASS" starttime="20210730 14:39:01.452" endtime="20210730 14:39:01.452"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:01.457" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:01.457" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:01.453" endtime="20210730 14:39:01.457"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:01.457" endtime="20210730 14:39:01.457"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:01.458" endtime="20210730 14:39:01.458"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:01.452" endtime="20210730 14:39:01.458"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:01.452" endtime="20210730 14:39:01.458"/>
</for>
<status status="FAIL" starttime="20210730 14:39:01.451" endtime="20210730 14:39:01.458"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:01.451" endtime="20210730 14:39:01.458"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:01.431" endtime="20210730 14:39:01.458"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:01.462" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:01.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:01.474" level="INFO">${pids} = 25079
25086
25098</msg>
<status status="PASS" starttime="20210730 14:39:01.459" endtime="20210730 14:39:01.474"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:01.475" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:01.474" endtime="20210730 14:39:01.475"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:01.476" level="INFO">${pids} = ['25079', '25086', '25098']</msg>
<status status="PASS" starttime="20210730 14:39:01.475" endtime="20210730 14:39:01.476"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">25079</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:01.479" level="INFO">Running command 'kill 25079 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:01.476" endtime="20210730 14:39:01.480"/>
</kw>
<status status="PASS" starttime="20210730 14:39:01.476" endtime="20210730 14:39:01.480"/>
</iter>
<iter>
<var name="${pid}">25086</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:01.483" level="INFO">Running command 'kill 25086 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:01.480" endtime="20210730 14:39:01.483"/>
</kw>
<status status="PASS" starttime="20210730 14:39:01.480" endtime="20210730 14:39:01.483"/>
</iter>
<iter>
<var name="${pid}">25098</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:01.496" level="INFO">Running command 'kill 25098 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:01.484" endtime="20210730 14:39:01.497"/>
</kw>
<status status="PASS" starttime="20210730 14:39:01.484" endtime="20210730 14:39:01.497"/>
</iter>
<status status="PASS" starttime="20210730 14:39:01.476" endtime="20210730 14:39:01.497"/>
</for>
<status status="PASS" starttime="20210730 14:39:01.475" endtime="20210730 14:39:01.497"/>
</branch>
<status status="PASS" starttime="20210730 14:39:01.475" endtime="20210730 14:39:01.497"/>
</if>
<status status="PASS" starttime="20210730 14:39:01.458" endtime="20210730 14:39:01.497"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": 'haka 12'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:38:59.878" endtime="20210730 14:39:01.498">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t33" name="With Each Valid Token, Updating Username Of Each System User With haka 123 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:01.504" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:01.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:01.515" level="INFO">${pids} = 25127</msg>
<status status="PASS" starttime="20210730 14:39:01.500" endtime="20210730 14:39:01.515"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:01.516" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:01.515" endtime="20210730 14:39:01.516"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:01.517" level="INFO">${pids} = ['25127']</msg>
<status status="PASS" starttime="20210730 14:39:01.516" endtime="20210730 14:39:01.517"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">25127</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:01.523" level="INFO">Running command 'kill 25127 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:01.517" endtime="20210730 14:39:01.524"/>
</kw>
<status status="PASS" starttime="20210730 14:39:01.517" endtime="20210730 14:39:01.524"/>
</iter>
<status status="PASS" starttime="20210730 14:39:01.517" endtime="20210730 14:39:01.525"/>
</for>
<status status="PASS" starttime="20210730 14:39:01.516" endtime="20210730 14:39:01.525"/>
</branch>
<status status="PASS" starttime="20210730 14:39:01.516" endtime="20210730 14:39:01.525"/>
</if>
<status status="PASS" starttime="20210730 14:39:01.500" endtime="20210730 14:39:01.525"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:01.527" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:01.526" endtime="20210730 14:39:01.527"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:01.527" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:01.527" endtime="20210730 14:39:01.527"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:01.528" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:01.527" endtime="20210730 14:39:01.528"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:01.528" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:01.528" endtime="20210730 14:39:01.528"/>
</kw>
<msg timestamp="20210730 14:39:01.528" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:01.527" endtime="20210730 14:39:01.528"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:01.532" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:01.529" endtime="20210730 14:39:01.533"/>
</kw>
<status status="PASS" starttime="20210730 14:39:01.525" endtime="20210730 14:39:01.534"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:01.535" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:01.535" endtime="20210730 14:39:01.555"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:03.068" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:01.555" endtime="20210730 14:39:03.069"/>
</kw>
<status status="PASS" starttime="20210730 14:39:01.534" endtime="20210730 14:39:03.069"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:03.070" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:03.070" endtime="20210730 14:39:03.070"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:03.071" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:03.070" endtime="20210730 14:39:03.071"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:03.071" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:03.071" endtime="20210730 14:39:03.071"/>
</kw>
<msg timestamp="20210730 14:39:03.071" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:03.070" endtime="20210730 14:39:03.071"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:03.072" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:03.072" endtime="20210730 14:39:03.073"/>
</kw>
<status status="PASS" starttime="20210730 14:39:03.069" endtime="20210730 14:39:03.073"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:03.074" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:03.074" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:03.074" endtime="20210730 14:39:03.074"/>
</kw>
<status status="PASS" starttime="20210730 14:39:03.073" endtime="20210730 14:39:03.074"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:03.075" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:03.075" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:03.075" endtime="20210730 14:39:03.076"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:03.076" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:03.076" endtime="20210730 14:39:03.076"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:03.077" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:03.076" endtime="20210730 14:39:03.077"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:03.077" endtime="20210730 14:39:03.078"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:03.078" endtime="20210730 14:39:03.078"/>
</kw>
<status status="PASS" starttime="20210730 14:39:03.076" endtime="20210730 14:39:03.078"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:03.078" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:03.078" endtime="20210730 14:39:03.078"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:03.079" endtime="20210730 14:39:03.079"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:03.079" endtime="20210730 14:39:03.080"/>
</kw>
<status status="PASS" starttime="20210730 14:39:03.078" endtime="20210730 14:39:03.080"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:03.080" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:03.080" endtime="20210730 14:39:03.080"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:03.080" endtime="20210730 14:39:03.081"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:03.081" endtime="20210730 14:39:03.081"/>
</kw>
<status status="PASS" starttime="20210730 14:39:03.080" endtime="20210730 14:39:03.081"/>
</iter>
<status status="PASS" starttime="20210730 14:39:03.076" endtime="20210730 14:39:03.081"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:03.082" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:03.081" endtime="20210730 14:39:03.082"/>
</kw>
<status status="PASS" starttime="20210730 14:39:03.075" endtime="20210730 14:39:03.082"/>
</kw>
<status status="PASS" starttime="20210730 14:39:01.500" endtime="20210730 14:39:03.082"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=haka 123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:03.083" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:03.083" endtime="20210730 14:39:03.083"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:03.084" level="INFO">${payload} = {'username': 'haka 123'}</msg>
<status status="PASS" starttime="20210730 14:39:03.084" endtime="20210730 14:39:03.084"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:03.094" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:03.094" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:03.084" endtime="20210730 14:39:03.094"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:03.094" endtime="20210730 14:39:03.094"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:03.094" endtime="20210730 14:39:03.094"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:03.084" endtime="20210730 14:39:03.094"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:03.084" endtime="20210730 14:39:03.094"/>
</for>
<status status="FAIL" starttime="20210730 14:39:03.083" endtime="20210730 14:39:03.095"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:03.082" endtime="20210730 14:39:03.095"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=haka 123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:03.096" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:03.095" endtime="20210730 14:39:03.096"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:03.096" level="INFO">${payload} = {'username': 'haka 123'}</msg>
<status status="PASS" starttime="20210730 14:39:03.096" endtime="20210730 14:39:03.096"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:03.100" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:03.101" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:03.097" endtime="20210730 14:39:03.101"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:03.101" endtime="20210730 14:39:03.101"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:03.101" endtime="20210730 14:39:03.101"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:03.096" endtime="20210730 14:39:03.101"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:03.096" endtime="20210730 14:39:03.101"/>
</for>
<status status="FAIL" starttime="20210730 14:39:03.095" endtime="20210730 14:39:03.101"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:03.095" endtime="20210730 14:39:03.101"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=haka 123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:03.102" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:03.102" endtime="20210730 14:39:03.102"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:03.103" level="INFO">${payload} = {'username': 'haka 123'}</msg>
<status status="PASS" starttime="20210730 14:39:03.103" endtime="20210730 14:39:03.103"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:03.108" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:03.108" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:03.103" endtime="20210730 14:39:03.108"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:03.109" endtime="20210730 14:39:03.109"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:03.109" endtime="20210730 14:39:03.109"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:03.103" endtime="20210730 14:39:03.109"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:03.103" endtime="20210730 14:39:03.109"/>
</for>
<status status="FAIL" starttime="20210730 14:39:03.102" endtime="20210730 14:39:03.109"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:03.101" endtime="20210730 14:39:03.109"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:03.082" endtime="20210730 14:39:03.109"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:03.114" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:03.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:03.124" level="INFO">${pids} = 25150
25157
25165</msg>
<status status="PASS" starttime="20210730 14:39:03.111" endtime="20210730 14:39:03.124"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:03.125" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:03.125" endtime="20210730 14:39:03.125"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:03.126" level="INFO">${pids} = ['25150', '25157', '25165']</msg>
<status status="PASS" starttime="20210730 14:39:03.126" endtime="20210730 14:39:03.126"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">25150</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:03.129" level="INFO">Running command 'kill 25150 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:03.126" endtime="20210730 14:39:03.130"/>
</kw>
<status status="PASS" starttime="20210730 14:39:03.126" endtime="20210730 14:39:03.130"/>
</iter>
<iter>
<var name="${pid}">25157</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:03.133" level="INFO">Running command 'kill 25157 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:03.130" endtime="20210730 14:39:03.135"/>
</kw>
<status status="PASS" starttime="20210730 14:39:03.130" endtime="20210730 14:39:03.135"/>
</iter>
<iter>
<var name="${pid}">25165</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:03.143" level="INFO">Running command 'kill 25165 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:03.136" endtime="20210730 14:39:03.144"/>
</kw>
<status status="PASS" starttime="20210730 14:39:03.136" endtime="20210730 14:39:03.144"/>
</iter>
<status status="PASS" starttime="20210730 14:39:03.126" endtime="20210730 14:39:03.144"/>
</for>
<status status="PASS" starttime="20210730 14:39:03.126" endtime="20210730 14:39:03.144"/>
</branch>
<status status="PASS" starttime="20210730 14:39:03.125" endtime="20210730 14:39:03.144"/>
</if>
<status status="PASS" starttime="20210730 14:39:03.110" endtime="20210730 14:39:03.144"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": 'haka 123'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:01.499" endtime="20210730 14:39:03.145">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t34" name="With Each Valid Token, Updating Username Of Each System User With haka 123456789123456789 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:03.150" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:03.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:03.160" level="INFO">${pids} = 25195</msg>
<status status="PASS" starttime="20210730 14:39:03.147" endtime="20210730 14:39:03.160"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:03.161" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:03.160" endtime="20210730 14:39:03.161"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:03.162" level="INFO">${pids} = ['25195']</msg>
<status status="PASS" starttime="20210730 14:39:03.161" endtime="20210730 14:39:03.162"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">25195</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:03.165" level="INFO">Running command 'kill 25195 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:03.162" endtime="20210730 14:39:03.165"/>
</kw>
<status status="PASS" starttime="20210730 14:39:03.162" endtime="20210730 14:39:03.165"/>
</iter>
<status status="PASS" starttime="20210730 14:39:03.162" endtime="20210730 14:39:03.165"/>
</for>
<status status="PASS" starttime="20210730 14:39:03.161" endtime="20210730 14:39:03.166"/>
</branch>
<status status="PASS" starttime="20210730 14:39:03.161" endtime="20210730 14:39:03.166"/>
</if>
<status status="PASS" starttime="20210730 14:39:03.147" endtime="20210730 14:39:03.166"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:03.167" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:03.167" endtime="20210730 14:39:03.167"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:03.168" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:03.167" endtime="20210730 14:39:03.168"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:03.168" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:03.168" endtime="20210730 14:39:03.168"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:03.168" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:03.168" endtime="20210730 14:39:03.168"/>
</kw>
<msg timestamp="20210730 14:39:03.169" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:03.167" endtime="20210730 14:39:03.169"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:03.176" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:03.169" endtime="20210730 14:39:03.178"/>
</kw>
<status status="PASS" starttime="20210730 14:39:03.166" endtime="20210730 14:39:03.178"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:03.180" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:03.179" endtime="20210730 14:39:03.184"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:04.687" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:03.184" endtime="20210730 14:39:04.688"/>
</kw>
<status status="PASS" starttime="20210730 14:39:03.179" endtime="20210730 14:39:04.690"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:04.696" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:04.694" endtime="20210730 14:39:04.696"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:04.698" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:04.697" endtime="20210730 14:39:04.698"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:04.699" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:04.698" endtime="20210730 14:39:04.699"/>
</kw>
<msg timestamp="20210730 14:39:04.700" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:04.693" endtime="20210730 14:39:04.700"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:04.701" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:04.700" endtime="20210730 14:39:04.702"/>
</kw>
<status status="PASS" starttime="20210730 14:39:04.691" endtime="20210730 14:39:04.702"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:04.704" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:04.704" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:04.704" endtime="20210730 14:39:04.709"/>
</kw>
<status status="PASS" starttime="20210730 14:39:04.703" endtime="20210730 14:39:04.710"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:04.711" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:04.711" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:04.710" endtime="20210730 14:39:04.711"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:04.711" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:04.711" endtime="20210730 14:39:04.711"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:04.712" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:04.712" endtime="20210730 14:39:04.712"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:04.712" endtime="20210730 14:39:04.713"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:04.713" endtime="20210730 14:39:04.713"/>
</kw>
<status status="PASS" starttime="20210730 14:39:04.711" endtime="20210730 14:39:04.713"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:04.713" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:04.713" endtime="20210730 14:39:04.713"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:04.713" endtime="20210730 14:39:04.714"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:04.714" endtime="20210730 14:39:04.715"/>
</kw>
<status status="PASS" starttime="20210730 14:39:04.713" endtime="20210730 14:39:04.715"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:04.715" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:04.715" endtime="20210730 14:39:04.715"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:04.715" endtime="20210730 14:39:04.716"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:04.716" endtime="20210730 14:39:04.716"/>
</kw>
<status status="PASS" starttime="20210730 14:39:04.715" endtime="20210730 14:39:04.716"/>
</iter>
<status status="PASS" starttime="20210730 14:39:04.711" endtime="20210730 14:39:04.716"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:04.717" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:04.716" endtime="20210730 14:39:04.717"/>
</kw>
<status status="PASS" starttime="20210730 14:39:04.710" endtime="20210730 14:39:04.717"/>
</kw>
<status status="PASS" starttime="20210730 14:39:03.146" endtime="20210730 14:39:04.717"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=haka 123456789123456789</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:04.718" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:04.718" endtime="20210730 14:39:04.718"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:04.719" level="INFO">${payload} = {'username': 'haka 123456789123456789'}</msg>
<status status="PASS" starttime="20210730 14:39:04.719" endtime="20210730 14:39:04.719"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:04.728" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:04.728" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:04.719" endtime="20210730 14:39:04.728"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:04.728" endtime="20210730 14:39:04.728"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:04.728" endtime="20210730 14:39:04.728"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:04.719" endtime="20210730 14:39:04.728"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:04.719" endtime="20210730 14:39:04.729"/>
</for>
<status status="FAIL" starttime="20210730 14:39:04.718" endtime="20210730 14:39:04.729"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:04.718" endtime="20210730 14:39:04.729"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=haka 123456789123456789</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:04.730" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:04.730" endtime="20210730 14:39:04.730"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:04.730" level="INFO">${payload} = {'username': 'haka 123456789123456789'}</msg>
<status status="PASS" starttime="20210730 14:39:04.730" endtime="20210730 14:39:04.730"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:04.734" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:04.735" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:04.731" endtime="20210730 14:39:04.735"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:04.735" endtime="20210730 14:39:04.735"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:04.735" endtime="20210730 14:39:04.735"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:04.731" endtime="20210730 14:39:04.735"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:04.730" endtime="20210730 14:39:04.735"/>
</for>
<status status="FAIL" starttime="20210730 14:39:04.729" endtime="20210730 14:39:04.735"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:04.729" endtime="20210730 14:39:04.735"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=haka 123456789123456789</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:04.736" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:04.736" endtime="20210730 14:39:04.736"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:04.737" level="INFO">${payload} = {'username': 'haka 123456789123456789'}</msg>
<status status="PASS" starttime="20210730 14:39:04.737" endtime="20210730 14:39:04.737"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:04.742" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:04.742" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:04.737" endtime="20210730 14:39:04.742"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:04.742" endtime="20210730 14:39:04.742"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:04.742" endtime="20210730 14:39:04.742"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:04.737" endtime="20210730 14:39:04.742"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:04.737" endtime="20210730 14:39:04.742"/>
</for>
<status status="FAIL" starttime="20210730 14:39:04.735" endtime="20210730 14:39:04.743"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:04.735" endtime="20210730 14:39:04.743"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:04.717" endtime="20210730 14:39:04.743"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:04.748" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:04.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:04.758" level="INFO">${pids} = 25218
25225
25230</msg>
<status status="PASS" starttime="20210730 14:39:04.744" endtime="20210730 14:39:04.758"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:04.759" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:04.758" endtime="20210730 14:39:04.759"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:04.759" level="INFO">${pids} = ['25218', '25225', '25230']</msg>
<status status="PASS" starttime="20210730 14:39:04.759" endtime="20210730 14:39:04.760"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">25218</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:04.763" level="INFO">Running command 'kill 25218 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:04.760" endtime="20210730 14:39:04.763"/>
</kw>
<status status="PASS" starttime="20210730 14:39:04.760" endtime="20210730 14:39:04.763"/>
</iter>
<iter>
<var name="${pid}">25225</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:04.767" level="INFO">Running command 'kill 25225 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:04.764" endtime="20210730 14:39:04.767"/>
</kw>
<status status="PASS" starttime="20210730 14:39:04.763" endtime="20210730 14:39:04.767"/>
</iter>
<iter>
<var name="${pid}">25230</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:04.770" level="INFO">Running command 'kill 25230 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:04.768" endtime="20210730 14:39:04.771"/>
</kw>
<status status="PASS" starttime="20210730 14:39:04.767" endtime="20210730 14:39:04.771"/>
</iter>
<status status="PASS" starttime="20210730 14:39:04.760" endtime="20210730 14:39:04.771"/>
</for>
<status status="PASS" starttime="20210730 14:39:04.759" endtime="20210730 14:39:04.771"/>
</branch>
<status status="PASS" starttime="20210730 14:39:04.759" endtime="20210730 14:39:04.771"/>
</if>
<status status="PASS" starttime="20210730 14:39:04.743" endtime="20210730 14:39:04.771"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": 'haka 123456789123456789'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:03.146" endtime="20210730 14:39:04.771">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t35" name="With Each Valid Token, Updating Username Of Each System User With #¤% 23! Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:04.784" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:04.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:04.795" level="INFO">${pids} = 25259</msg>
<status status="PASS" starttime="20210730 14:39:04.773" endtime="20210730 14:39:04.795"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:04.796" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:04.795" endtime="20210730 14:39:04.796"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:04.797" level="INFO">${pids} = ['25259']</msg>
<status status="PASS" starttime="20210730 14:39:04.796" endtime="20210730 14:39:04.797"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">25259</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:04.815" level="INFO">Running command 'kill 25259 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:04.797" endtime="20210730 14:39:04.816"/>
</kw>
<status status="PASS" starttime="20210730 14:39:04.797" endtime="20210730 14:39:04.816"/>
</iter>
<status status="PASS" starttime="20210730 14:39:04.797" endtime="20210730 14:39:04.816"/>
</for>
<status status="PASS" starttime="20210730 14:39:04.796" endtime="20210730 14:39:04.816"/>
</branch>
<status status="PASS" starttime="20210730 14:39:04.796" endtime="20210730 14:39:04.816"/>
</if>
<status status="PASS" starttime="20210730 14:39:04.773" endtime="20210730 14:39:04.816"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:04.818" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:04.817" endtime="20210730 14:39:04.818"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:04.818" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:04.818" endtime="20210730 14:39:04.818"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:04.819" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:04.819" endtime="20210730 14:39:04.819"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:04.819" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:04.819" endtime="20210730 14:39:04.819"/>
</kw>
<msg timestamp="20210730 14:39:04.819" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:04.818" endtime="20210730 14:39:04.819"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:04.823" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:04.820" endtime="20210730 14:39:04.825"/>
</kw>
<status status="PASS" starttime="20210730 14:39:04.817" endtime="20210730 14:39:04.825"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:04.827" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:04.826" endtime="20210730 14:39:04.830"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:06.332" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:04.830" endtime="20210730 14:39:06.332"/>
</kw>
<status status="PASS" starttime="20210730 14:39:04.826" endtime="20210730 14:39:06.332"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:06.333" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:06.333" endtime="20210730 14:39:06.333"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:06.334" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:06.333" endtime="20210730 14:39:06.334"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:06.334" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:06.334" endtime="20210730 14:39:06.334"/>
</kw>
<msg timestamp="20210730 14:39:06.334" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:06.333" endtime="20210730 14:39:06.334"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:06.335" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:06.334" endtime="20210730 14:39:06.335"/>
</kw>
<status status="PASS" starttime="20210730 14:39:06.332" endtime="20210730 14:39:06.335"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:06.336" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:06.336" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:06.336" endtime="20210730 14:39:06.336"/>
</kw>
<status status="PASS" starttime="20210730 14:39:06.335" endtime="20210730 14:39:06.336"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:06.337" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:06.337" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:06.337" endtime="20210730 14:39:06.337"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:06.337" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:06.337" endtime="20210730 14:39:06.338"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:06.338" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:06.338" endtime="20210730 14:39:06.338"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:06.339" endtime="20210730 14:39:06.340"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:06.340" endtime="20210730 14:39:06.340"/>
</kw>
<status status="PASS" starttime="20210730 14:39:06.338" endtime="20210730 14:39:06.341"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:06.341" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:06.341" endtime="20210730 14:39:06.341"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:06.341" endtime="20210730 14:39:06.342"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:06.342" endtime="20210730 14:39:06.342"/>
</kw>
<status status="PASS" starttime="20210730 14:39:06.341" endtime="20210730 14:39:06.342"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:06.343" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:06.343" endtime="20210730 14:39:06.343"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:06.343" endtime="20210730 14:39:06.344"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:06.344" endtime="20210730 14:39:06.344"/>
</kw>
<status status="PASS" starttime="20210730 14:39:06.343" endtime="20210730 14:39:06.344"/>
</iter>
<status status="PASS" starttime="20210730 14:39:06.338" endtime="20210730 14:39:06.344"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:06.345" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:06.344" endtime="20210730 14:39:06.345"/>
</kw>
<status status="PASS" starttime="20210730 14:39:06.336" endtime="20210730 14:39:06.345"/>
</kw>
<status status="PASS" starttime="20210730 14:39:04.772" endtime="20210730 14:39:06.345"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤% 23!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:06.346" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:06.346" endtime="20210730 14:39:06.346"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:06.346" level="INFO">${payload} = {'username': '#¤% 23!'}</msg>
<status status="PASS" starttime="20210730 14:39:06.346" endtime="20210730 14:39:06.346"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:06.355" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:06.355" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:06.347" endtime="20210730 14:39:06.355"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:06.356" endtime="20210730 14:39:06.356"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:06.356" endtime="20210730 14:39:06.356"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:06.347" endtime="20210730 14:39:06.356"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:06.347" endtime="20210730 14:39:06.356"/>
</for>
<status status="FAIL" starttime="20210730 14:39:06.345" endtime="20210730 14:39:06.356"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:06.345" endtime="20210730 14:39:06.356"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤% 23!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:06.357" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:06.357" endtime="20210730 14:39:06.358"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:06.358" level="INFO">${payload} = {'username': '#¤% 23!'}</msg>
<status status="PASS" starttime="20210730 14:39:06.358" endtime="20210730 14:39:06.358"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:06.362" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:06.362" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:06.358" endtime="20210730 14:39:06.362"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:06.362" endtime="20210730 14:39:06.363"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:06.363" endtime="20210730 14:39:06.363"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:06.358" endtime="20210730 14:39:06.363"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:06.358" endtime="20210730 14:39:06.363"/>
</for>
<status status="FAIL" starttime="20210730 14:39:06.357" endtime="20210730 14:39:06.363"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:06.356" endtime="20210730 14:39:06.363"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤% 23!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:06.364" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:06.364" endtime="20210730 14:39:06.364"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:06.364" level="INFO">${payload} = {'username': '#¤% 23!'}</msg>
<status status="PASS" starttime="20210730 14:39:06.364" endtime="20210730 14:39:06.364"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:06.368" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:06.369" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:06.365" endtime="20210730 14:39:06.369"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:06.369" endtime="20210730 14:39:06.369"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:06.369" endtime="20210730 14:39:06.369"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:06.365" endtime="20210730 14:39:06.369"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:06.364" endtime="20210730 14:39:06.369"/>
</for>
<status status="FAIL" starttime="20210730 14:39:06.363" endtime="20210730 14:39:06.369"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:06.363" endtime="20210730 14:39:06.369"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:06.345" endtime="20210730 14:39:06.369"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:06.377" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:06.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:06.387" level="INFO">${pids} = 25282
25289
25295</msg>
<status status="PASS" starttime="20210730 14:39:06.370" endtime="20210730 14:39:06.387"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:06.389" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:06.388" endtime="20210730 14:39:06.389"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:06.389" level="INFO">${pids} = ['25282', '25289', '25295']</msg>
<status status="PASS" starttime="20210730 14:39:06.389" endtime="20210730 14:39:06.390"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">25282</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:06.393" level="INFO">Running command 'kill 25282 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:06.390" endtime="20210730 14:39:06.393"/>
</kw>
<status status="PASS" starttime="20210730 14:39:06.390" endtime="20210730 14:39:06.394"/>
</iter>
<iter>
<var name="${pid}">25289</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:06.397" level="INFO">Running command 'kill 25289 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:06.394" endtime="20210730 14:39:06.398"/>
</kw>
<status status="PASS" starttime="20210730 14:39:06.394" endtime="20210730 14:39:06.398"/>
</iter>
<iter>
<var name="${pid}">25295</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:06.401" level="INFO">Running command 'kill 25295 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:06.399" endtime="20210730 14:39:06.402"/>
</kw>
<status status="PASS" starttime="20210730 14:39:06.398" endtime="20210730 14:39:06.402"/>
</iter>
<status status="PASS" starttime="20210730 14:39:06.390" endtime="20210730 14:39:06.402"/>
</for>
<status status="PASS" starttime="20210730 14:39:06.389" endtime="20210730 14:39:06.402"/>
</branch>
<status status="PASS" starttime="20210730 14:39:06.389" endtime="20210730 14:39:06.402"/>
</if>
<status status="PASS" starttime="20210730 14:39:06.370" endtime="20210730 14:39:06.402"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤% 23!'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:04.772" endtime="20210730 14:39:06.403">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t36" name="With Each Valid Token, Updating Username Of Each System User With # %123!&amp; Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:06.409" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:06.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:06.423" level="INFO">${pids} = 25324</msg>
<status status="PASS" starttime="20210730 14:39:06.405" endtime="20210730 14:39:06.423"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:06.424" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:06.423" endtime="20210730 14:39:06.424"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:06.425" level="INFO">${pids} = ['25324']</msg>
<status status="PASS" starttime="20210730 14:39:06.424" endtime="20210730 14:39:06.425"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">25324</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:06.430" level="INFO">Running command 'kill 25324 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:06.425" endtime="20210730 14:39:06.430"/>
</kw>
<status status="PASS" starttime="20210730 14:39:06.425" endtime="20210730 14:39:06.430"/>
</iter>
<status status="PASS" starttime="20210730 14:39:06.425" endtime="20210730 14:39:06.430"/>
</for>
<status status="PASS" starttime="20210730 14:39:06.424" endtime="20210730 14:39:06.430"/>
</branch>
<status status="PASS" starttime="20210730 14:39:06.424" endtime="20210730 14:39:06.430"/>
</if>
<status status="PASS" starttime="20210730 14:39:06.404" endtime="20210730 14:39:06.431"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:06.432" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:06.431" endtime="20210730 14:39:06.432"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:06.432" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:06.432" endtime="20210730 14:39:06.432"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:06.433" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:06.433" endtime="20210730 14:39:06.433"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:06.433" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:06.433" endtime="20210730 14:39:06.433"/>
</kw>
<msg timestamp="20210730 14:39:06.434" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:06.432" endtime="20210730 14:39:06.434"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:06.443" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:06.434" endtime="20210730 14:39:06.445"/>
</kw>
<status status="PASS" starttime="20210730 14:39:06.431" endtime="20210730 14:39:06.445"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:06.446" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:06.446" endtime="20210730 14:39:06.450"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:07.951" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:06.450" endtime="20210730 14:39:07.952"/>
</kw>
<status status="PASS" starttime="20210730 14:39:06.445" endtime="20210730 14:39:07.952"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:07.955" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:07.955" endtime="20210730 14:39:07.955"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:07.956" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:07.955" endtime="20210730 14:39:07.956"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:07.956" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:07.956" endtime="20210730 14:39:07.956"/>
</kw>
<msg timestamp="20210730 14:39:07.957" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:07.954" endtime="20210730 14:39:07.957"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:07.957" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:07.957" endtime="20210730 14:39:07.957"/>
</kw>
<status status="PASS" starttime="20210730 14:39:07.953" endtime="20210730 14:39:07.958"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:07.958" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:07.958" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:07.958" endtime="20210730 14:39:07.958"/>
</kw>
<status status="PASS" starttime="20210730 14:39:07.958" endtime="20210730 14:39:07.958"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:07.959" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:07.959" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:07.959" endtime="20210730 14:39:07.959"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:07.959" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:07.959" endtime="20210730 14:39:07.959"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:07.960" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:07.960" endtime="20210730 14:39:07.960"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:07.960" endtime="20210730 14:39:07.961"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:07.961" endtime="20210730 14:39:07.961"/>
</kw>
<status status="PASS" starttime="20210730 14:39:07.960" endtime="20210730 14:39:07.961"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:07.961" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:07.961" endtime="20210730 14:39:07.962"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:07.962" endtime="20210730 14:39:07.962"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:07.962" endtime="20210730 14:39:07.963"/>
</kw>
<status status="PASS" starttime="20210730 14:39:07.961" endtime="20210730 14:39:07.963"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:07.963" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:07.963" endtime="20210730 14:39:07.963"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:07.963" endtime="20210730 14:39:07.964"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:07.964" endtime="20210730 14:39:07.964"/>
</kw>
<status status="PASS" starttime="20210730 14:39:07.963" endtime="20210730 14:39:07.964"/>
</iter>
<status status="PASS" starttime="20210730 14:39:07.960" endtime="20210730 14:39:07.964"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:07.965" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:07.964" endtime="20210730 14:39:07.965"/>
</kw>
<status status="PASS" starttime="20210730 14:39:07.958" endtime="20210730 14:39:07.965"/>
</kw>
<status status="PASS" starttime="20210730 14:39:06.404" endtime="20210730 14:39:07.965"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=# %123!&amp;</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:07.966" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:07.966" endtime="20210730 14:39:07.966"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:07.967" level="INFO">${payload} = {'username': '# %123!&amp;'}</msg>
<status status="PASS" starttime="20210730 14:39:07.966" endtime="20210730 14:39:07.967"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:07.977" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:07.978" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:07.967" endtime="20210730 14:39:07.978"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:07.978" endtime="20210730 14:39:07.978"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:07.978" endtime="20210730 14:39:07.978"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:07.967" endtime="20210730 14:39:07.978"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:07.967" endtime="20210730 14:39:07.978"/>
</for>
<status status="FAIL" starttime="20210730 14:39:07.965" endtime="20210730 14:39:07.979"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:07.965" endtime="20210730 14:39:07.979"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=# %123!&amp;</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:07.980" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:07.979" endtime="20210730 14:39:07.980"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:07.980" level="INFO">${payload} = {'username': '# %123!&amp;'}</msg>
<status status="PASS" starttime="20210730 14:39:07.980" endtime="20210730 14:39:07.980"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:07.985" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:07.985" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:07.980" endtime="20210730 14:39:07.985"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:07.985" endtime="20210730 14:39:07.985"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:07.985" endtime="20210730 14:39:07.985"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:07.980" endtime="20210730 14:39:07.985"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:07.980" endtime="20210730 14:39:07.985"/>
</for>
<status status="FAIL" starttime="20210730 14:39:07.979" endtime="20210730 14:39:07.985"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:07.979" endtime="20210730 14:39:07.986"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=# %123!&amp;</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:07.987" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:07.986" endtime="20210730 14:39:07.987"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:07.987" level="INFO">${payload} = {'username': '# %123!&amp;'}</msg>
<status status="PASS" starttime="20210730 14:39:07.987" endtime="20210730 14:39:07.987"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:07.992" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:07.992" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:07.988" endtime="20210730 14:39:07.992"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:07.992" endtime="20210730 14:39:07.992"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:07.993" endtime="20210730 14:39:07.993"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:07.987" endtime="20210730 14:39:07.993"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:07.987" endtime="20210730 14:39:07.993"/>
</for>
<status status="FAIL" starttime="20210730 14:39:07.986" endtime="20210730 14:39:07.993"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:07.986" endtime="20210730 14:39:07.993"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:07.965" endtime="20210730 14:39:07.993"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:07.999" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:08.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:08.010" level="INFO">${pids} = 25347
25354
25358</msg>
<status status="PASS" starttime="20210730 14:39:07.995" endtime="20210730 14:39:08.010"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:08.011" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:08.011" endtime="20210730 14:39:08.011"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:08.012" level="INFO">${pids} = ['25347', '25354', '25358']</msg>
<status status="PASS" starttime="20210730 14:39:08.012" endtime="20210730 14:39:08.012"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">25347</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:08.016" level="INFO">Running command 'kill 25347 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:08.013" endtime="20210730 14:39:08.016"/>
</kw>
<status status="PASS" starttime="20210730 14:39:08.012" endtime="20210730 14:39:08.016"/>
</iter>
<iter>
<var name="${pid}">25354</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:08.020" level="INFO">Running command 'kill 25354 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:08.017" endtime="20210730 14:39:08.022"/>
</kw>
<status status="PASS" starttime="20210730 14:39:08.017" endtime="20210730 14:39:08.022"/>
</iter>
<iter>
<var name="${pid}">25358</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:08.028" level="INFO">Running command 'kill 25358 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:08.023" endtime="20210730 14:39:08.028"/>
</kw>
<status status="PASS" starttime="20210730 14:39:08.022" endtime="20210730 14:39:08.028"/>
</iter>
<status status="PASS" starttime="20210730 14:39:08.012" endtime="20210730 14:39:08.028"/>
</for>
<status status="PASS" starttime="20210730 14:39:08.012" endtime="20210730 14:39:08.028"/>
</branch>
<status status="PASS" starttime="20210730 14:39:08.011" endtime="20210730 14:39:08.028"/>
</if>
<status status="PASS" starttime="20210730 14:39:07.995" endtime="20210730 14:39:08.028"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '# %123!&amp;'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:06.403" endtime="20210730 14:39:08.029">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t37" name="With Each Valid Token, Updating Username Of Each System User With #¤%123!&amp;7683##() ?@#¤%&amp;34567 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:08.033" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:08.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:08.045" level="INFO">${pids} = 25387</msg>
<status status="PASS" starttime="20210730 14:39:08.031" endtime="20210730 14:39:08.046"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:08.046" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:08.046" endtime="20210730 14:39:08.046"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:08.047" level="INFO">${pids} = ['25387']</msg>
<status status="PASS" starttime="20210730 14:39:08.047" endtime="20210730 14:39:08.047"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">25387</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:08.051" level="INFO">Running command 'kill 25387 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:08.048" endtime="20210730 14:39:08.051"/>
</kw>
<status status="PASS" starttime="20210730 14:39:08.048" endtime="20210730 14:39:08.051"/>
</iter>
<status status="PASS" starttime="20210730 14:39:08.047" endtime="20210730 14:39:08.051"/>
</for>
<status status="PASS" starttime="20210730 14:39:08.047" endtime="20210730 14:39:08.051"/>
</branch>
<status status="PASS" starttime="20210730 14:39:08.047" endtime="20210730 14:39:08.052"/>
</if>
<status status="PASS" starttime="20210730 14:39:08.030" endtime="20210730 14:39:08.052"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:08.053" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:08.053" endtime="20210730 14:39:08.053"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:08.054" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:08.053" endtime="20210730 14:39:08.054"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:08.054" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:08.054" endtime="20210730 14:39:08.054"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:08.055" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:08.054" endtime="20210730 14:39:08.055"/>
</kw>
<msg timestamp="20210730 14:39:08.055" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:08.053" endtime="20210730 14:39:08.055"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:08.061" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:08.055" endtime="20210730 14:39:08.063"/>
</kw>
<status status="PASS" starttime="20210730 14:39:08.052" endtime="20210730 14:39:08.063"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:08.065" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:08.064" endtime="20210730 14:39:08.069"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:09.570" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:08.069" endtime="20210730 14:39:09.570"/>
</kw>
<status status="PASS" starttime="20210730 14:39:08.063" endtime="20210730 14:39:09.570"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:09.572" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:09.572" endtime="20210730 14:39:09.572"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:09.573" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:09.572" endtime="20210730 14:39:09.573"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:09.573" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:09.573" endtime="20210730 14:39:09.573"/>
</kw>
<msg timestamp="20210730 14:39:09.574" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:09.571" endtime="20210730 14:39:09.574"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:09.574" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:09.574" endtime="20210730 14:39:09.575"/>
</kw>
<status status="PASS" starttime="20210730 14:39:09.571" endtime="20210730 14:39:09.575"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:09.576" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:09.576" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:09.576" endtime="20210730 14:39:09.576"/>
</kw>
<status status="PASS" starttime="20210730 14:39:09.575" endtime="20210730 14:39:09.576"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:09.577" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:09.578" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:09.577" endtime="20210730 14:39:09.578"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:09.578" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:09.578" endtime="20210730 14:39:09.578"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:09.578" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:09.578" endtime="20210730 14:39:09.578"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:09.579" endtime="20210730 14:39:09.579"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:09.579" endtime="20210730 14:39:09.580"/>
</kw>
<status status="PASS" starttime="20210730 14:39:09.578" endtime="20210730 14:39:09.580"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:09.580" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:09.580" endtime="20210730 14:39:09.580"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:09.580" endtime="20210730 14:39:09.581"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:09.581" endtime="20210730 14:39:09.581"/>
</kw>
<status status="PASS" starttime="20210730 14:39:09.580" endtime="20210730 14:39:09.581"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:09.582" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:09.582" endtime="20210730 14:39:09.582"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:09.582" endtime="20210730 14:39:09.583"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:09.583" endtime="20210730 14:39:09.583"/>
</kw>
<status status="PASS" starttime="20210730 14:39:09.581" endtime="20210730 14:39:09.583"/>
</iter>
<status status="PASS" starttime="20210730 14:39:09.578" endtime="20210730 14:39:09.583"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:09.584" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:09.583" endtime="20210730 14:39:09.584"/>
</kw>
<status status="PASS" starttime="20210730 14:39:09.577" endtime="20210730 14:39:09.584"/>
</kw>
<status status="PASS" starttime="20210730 14:39:08.030" endtime="20210730 14:39:09.584"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤%123!&amp;7683##() ?@#¤%&amp;34567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:09.585" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:09.585" endtime="20210730 14:39:09.585"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:09.586" level="INFO">${payload} = {'username': '#¤%123!&amp;7683##() ?@#¤%&amp;34567'}</msg>
<status status="PASS" starttime="20210730 14:39:09.585" endtime="20210730 14:39:09.586"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:09.600" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:09.601" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:09.586" endtime="20210730 14:39:09.601"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:09.601" endtime="20210730 14:39:09.601"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:09.601" endtime="20210730 14:39:09.601"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:09.586" endtime="20210730 14:39:09.601"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:09.586" endtime="20210730 14:39:09.601"/>
</for>
<status status="FAIL" starttime="20210730 14:39:09.584" endtime="20210730 14:39:09.602"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:09.584" endtime="20210730 14:39:09.602"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤%123!&amp;7683##() ?@#¤%&amp;34567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:09.603" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:09.602" endtime="20210730 14:39:09.603"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:09.603" level="INFO">${payload} = {'username': '#¤%123!&amp;7683##() ?@#¤%&amp;34567'}</msg>
<status status="PASS" starttime="20210730 14:39:09.603" endtime="20210730 14:39:09.603"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:09.609" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:09.609" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:09.604" endtime="20210730 14:39:09.609"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:09.609" endtime="20210730 14:39:09.609"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:09.609" endtime="20210730 14:39:09.609"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:09.603" endtime="20210730 14:39:09.610"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:09.603" endtime="20210730 14:39:09.610"/>
</for>
<status status="FAIL" starttime="20210730 14:39:09.602" endtime="20210730 14:39:09.610"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:09.602" endtime="20210730 14:39:09.610"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤%123!&amp;7683##() ?@#¤%&amp;34567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:09.611" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:09.611" endtime="20210730 14:39:09.611"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:09.611" level="INFO">${payload} = {'username': '#¤%123!&amp;7683##() ?@#¤%&amp;34567'}</msg>
<status status="PASS" starttime="20210730 14:39:09.611" endtime="20210730 14:39:09.611"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:09.616" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:09.616" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:09.612" endtime="20210730 14:39:09.616"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:09.617" endtime="20210730 14:39:09.617"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:09.617" endtime="20210730 14:39:09.617"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:09.612" endtime="20210730 14:39:09.617"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:09.612" endtime="20210730 14:39:09.617"/>
</for>
<status status="FAIL" starttime="20210730 14:39:09.610" endtime="20210730 14:39:09.617"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:09.610" endtime="20210730 14:39:09.617"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:09.584" endtime="20210730 14:39:09.617"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:09.621" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:09.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:09.632" level="INFO">${pids} = 25410
25417
25423</msg>
<status status="PASS" starttime="20210730 14:39:09.618" endtime="20210730 14:39:09.632"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:09.634" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:09.633" endtime="20210730 14:39:09.634"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:09.634" level="INFO">${pids} = ['25410', '25417', '25423']</msg>
<status status="PASS" starttime="20210730 14:39:09.634" endtime="20210730 14:39:09.634"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">25410</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:09.638" level="INFO">Running command 'kill 25410 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:09.635" endtime="20210730 14:39:09.639"/>
</kw>
<status status="PASS" starttime="20210730 14:39:09.635" endtime="20210730 14:39:09.639"/>
</iter>
<iter>
<var name="${pid}">25417</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:09.643" level="INFO">Running command 'kill 25417 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:09.639" endtime="20210730 14:39:09.646"/>
</kw>
<status status="PASS" starttime="20210730 14:39:09.639" endtime="20210730 14:39:09.647"/>
</iter>
<iter>
<var name="${pid}">25423</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:09.650" level="INFO">Running command 'kill 25423 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:09.647" endtime="20210730 14:39:09.651"/>
</kw>
<status status="PASS" starttime="20210730 14:39:09.647" endtime="20210730 14:39:09.651"/>
</iter>
<status status="PASS" starttime="20210730 14:39:09.635" endtime="20210730 14:39:09.651"/>
</for>
<status status="PASS" starttime="20210730 14:39:09.634" endtime="20210730 14:39:09.651"/>
</branch>
<status status="PASS" starttime="20210730 14:39:09.634" endtime="20210730 14:39:09.651"/>
</if>
<status status="PASS" starttime="20210730 14:39:09.618" endtime="20210730 14:39:09.651"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤%123!&amp;7683##() ?@#¤%&amp;34567'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:08.029" endtime="20210730 14:39:09.652">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t38" name="With Each Valid Token, Updating Username Of Each System User With #¤12 ab Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:09.657" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:09.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:09.668" level="INFO">${pids} = 25452</msg>
<status status="PASS" starttime="20210730 14:39:09.654" endtime="20210730 14:39:09.668"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:09.669" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:09.668" endtime="20210730 14:39:09.669"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:09.670" level="INFO">${pids} = ['25452']</msg>
<status status="PASS" starttime="20210730 14:39:09.669" endtime="20210730 14:39:09.670"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">25452</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:09.674" level="INFO">Running command 'kill 25452 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:09.670" endtime="20210730 14:39:09.674"/>
</kw>
<status status="PASS" starttime="20210730 14:39:09.670" endtime="20210730 14:39:09.674"/>
</iter>
<status status="PASS" starttime="20210730 14:39:09.670" endtime="20210730 14:39:09.674"/>
</for>
<status status="PASS" starttime="20210730 14:39:09.669" endtime="20210730 14:39:09.674"/>
</branch>
<status status="PASS" starttime="20210730 14:39:09.669" endtime="20210730 14:39:09.674"/>
</if>
<status status="PASS" starttime="20210730 14:39:09.653" endtime="20210730 14:39:09.675"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:09.676" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:09.676" endtime="20210730 14:39:09.676"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:09.677" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:09.677" endtime="20210730 14:39:09.677"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:09.677" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:09.677" endtime="20210730 14:39:09.677"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:09.678" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:09.678" endtime="20210730 14:39:09.678"/>
</kw>
<msg timestamp="20210730 14:39:09.678" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:09.676" endtime="20210730 14:39:09.678"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:09.684" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:09.679" endtime="20210730 14:39:09.685"/>
</kw>
<status status="PASS" starttime="20210730 14:39:09.675" endtime="20210730 14:39:09.686"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:09.687" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:09.686" endtime="20210730 14:39:09.691"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:11.195" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:09.692" endtime="20210730 14:39:11.195"/>
</kw>
<status status="PASS" starttime="20210730 14:39:09.686" endtime="20210730 14:39:11.195"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:11.196" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:11.196" endtime="20210730 14:39:11.196"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:11.197" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:11.196" endtime="20210730 14:39:11.197"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:11.197" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:11.197" endtime="20210730 14:39:11.197"/>
</kw>
<msg timestamp="20210730 14:39:11.197" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:11.196" endtime="20210730 14:39:11.197"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:11.198" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:11.197" endtime="20210730 14:39:11.198"/>
</kw>
<status status="PASS" starttime="20210730 14:39:11.195" endtime="20210730 14:39:11.198"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:11.199" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:11.199" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:11.199" endtime="20210730 14:39:11.199"/>
</kw>
<status status="PASS" starttime="20210730 14:39:11.198" endtime="20210730 14:39:11.199"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:11.200" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:11.200" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:11.199" endtime="20210730 14:39:11.200"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:11.200" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:11.200" endtime="20210730 14:39:11.200"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:11.201" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:11.201" endtime="20210730 14:39:11.201"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:11.201" endtime="20210730 14:39:11.202"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:11.202" endtime="20210730 14:39:11.202"/>
</kw>
<status status="PASS" starttime="20210730 14:39:11.200" endtime="20210730 14:39:11.202"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:11.203" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:11.202" endtime="20210730 14:39:11.203"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:11.203" endtime="20210730 14:39:11.203"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:11.203" endtime="20210730 14:39:11.204"/>
</kw>
<status status="PASS" starttime="20210730 14:39:11.202" endtime="20210730 14:39:11.204"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:11.204" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:11.204" endtime="20210730 14:39:11.204"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:11.204" endtime="20210730 14:39:11.205"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:11.205" endtime="20210730 14:39:11.206"/>
</kw>
<status status="PASS" starttime="20210730 14:39:11.204" endtime="20210730 14:39:11.206"/>
</iter>
<status status="PASS" starttime="20210730 14:39:11.200" endtime="20210730 14:39:11.206"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:11.207" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:11.206" endtime="20210730 14:39:11.207"/>
</kw>
<status status="PASS" starttime="20210730 14:39:11.199" endtime="20210730 14:39:11.207"/>
</kw>
<status status="PASS" starttime="20210730 14:39:09.653" endtime="20210730 14:39:11.207"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤12 ab</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:11.209" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:11.208" endtime="20210730 14:39:11.209"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:11.209" level="INFO">${payload} = {'username': '#¤12 ab'}</msg>
<status status="PASS" starttime="20210730 14:39:11.209" endtime="20210730 14:39:11.209"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:11.218" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:11.219" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:11.210" endtime="20210730 14:39:11.219"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:11.219" endtime="20210730 14:39:11.219"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:11.219" endtime="20210730 14:39:11.219"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:11.210" endtime="20210730 14:39:11.219"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:11.209" endtime="20210730 14:39:11.219"/>
</for>
<status status="FAIL" starttime="20210730 14:39:11.208" endtime="20210730 14:39:11.219"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:11.207" endtime="20210730 14:39:11.219"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤12 ab</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:11.220" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:11.220" endtime="20210730 14:39:11.220"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:11.221" level="INFO">${payload} = {'username': '#¤12 ab'}</msg>
<status status="PASS" starttime="20210730 14:39:11.221" endtime="20210730 14:39:11.221"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:11.226" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:11.226" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:11.221" endtime="20210730 14:39:11.226"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:11.226" endtime="20210730 14:39:11.226"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:11.226" endtime="20210730 14:39:11.226"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:11.221" endtime="20210730 14:39:11.226"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:11.221" endtime="20210730 14:39:11.227"/>
</for>
<status status="FAIL" starttime="20210730 14:39:11.219" endtime="20210730 14:39:11.227"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:11.219" endtime="20210730 14:39:11.227"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤12 ab</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:11.228" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:11.228" endtime="20210730 14:39:11.228"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:11.228" level="INFO">${payload} = {'username': '#¤12 ab'}</msg>
<status status="PASS" starttime="20210730 14:39:11.228" endtime="20210730 14:39:11.228"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:11.233" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:11.233" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:11.229" endtime="20210730 14:39:11.233"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:11.233" endtime="20210730 14:39:11.233"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:11.233" endtime="20210730 14:39:11.233"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:11.229" endtime="20210730 14:39:11.233"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:11.228" endtime="20210730 14:39:11.233"/>
</for>
<status status="FAIL" starttime="20210730 14:39:11.227" endtime="20210730 14:39:11.233"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:11.227" endtime="20210730 14:39:11.233"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:11.207" endtime="20210730 14:39:11.233"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:11.238" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:11.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:11.249" level="INFO">${pids} = 25475
25482
25486</msg>
<status status="PASS" starttime="20210730 14:39:11.234" endtime="20210730 14:39:11.249"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:11.250" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:11.249" endtime="20210730 14:39:11.250"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:11.250" level="INFO">${pids} = ['25475', '25482', '25486']</msg>
<status status="PASS" starttime="20210730 14:39:11.250" endtime="20210730 14:39:11.250"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">25475</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:11.254" level="INFO">Running command 'kill 25475 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:11.251" endtime="20210730 14:39:11.254"/>
</kw>
<status status="PASS" starttime="20210730 14:39:11.251" endtime="20210730 14:39:11.254"/>
</iter>
<iter>
<var name="${pid}">25482</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:11.258" level="INFO">Running command 'kill 25482 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:11.255" endtime="20210730 14:39:11.258"/>
</kw>
<status status="PASS" starttime="20210730 14:39:11.254" endtime="20210730 14:39:11.258"/>
</iter>
<iter>
<var name="${pid}">25486</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:11.262" level="INFO">Running command 'kill 25486 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:11.259" endtime="20210730 14:39:11.262"/>
</kw>
<status status="PASS" starttime="20210730 14:39:11.258" endtime="20210730 14:39:11.262"/>
</iter>
<status status="PASS" starttime="20210730 14:39:11.250" endtime="20210730 14:39:11.262"/>
</for>
<status status="PASS" starttime="20210730 14:39:11.250" endtime="20210730 14:39:11.262"/>
</branch>
<status status="PASS" starttime="20210730 14:39:11.250" endtime="20210730 14:39:11.262"/>
</if>
<status status="PASS" starttime="20210730 14:39:11.234" endtime="20210730 14:39:11.263"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤12 ab'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:09.652" endtime="20210730 14:39:11.263">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t39" name="With Each Valid Token, Updating Username Of Each System User With # 123abc Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:11.276" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:11.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:11.287" level="INFO">${pids} = 25515</msg>
<status status="PASS" starttime="20210730 14:39:11.265" endtime="20210730 14:39:11.287"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:11.288" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:11.287" endtime="20210730 14:39:11.288"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:11.289" level="INFO">${pids} = ['25515']</msg>
<status status="PASS" starttime="20210730 14:39:11.288" endtime="20210730 14:39:11.289"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">25515</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:11.310" level="INFO">Running command 'kill 25515 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:11.289" endtime="20210730 14:39:11.311"/>
</kw>
<status status="PASS" starttime="20210730 14:39:11.289" endtime="20210730 14:39:11.311"/>
</iter>
<status status="PASS" starttime="20210730 14:39:11.289" endtime="20210730 14:39:11.311"/>
</for>
<status status="PASS" starttime="20210730 14:39:11.288" endtime="20210730 14:39:11.311"/>
</branch>
<status status="PASS" starttime="20210730 14:39:11.288" endtime="20210730 14:39:11.311"/>
</if>
<status status="PASS" starttime="20210730 14:39:11.264" endtime="20210730 14:39:11.311"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:11.312" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:11.312" endtime="20210730 14:39:11.312"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:11.313" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:11.313" endtime="20210730 14:39:11.313"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:11.314" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:11.313" endtime="20210730 14:39:11.314"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:11.314" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:11.314" endtime="20210730 14:39:11.314"/>
</kw>
<msg timestamp="20210730 14:39:11.314" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:11.313" endtime="20210730 14:39:11.314"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:11.318" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:11.315" endtime="20210730 14:39:11.319"/>
</kw>
<status status="PASS" starttime="20210730 14:39:11.311" endtime="20210730 14:39:11.320"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:11.321" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:11.320" endtime="20210730 14:39:11.326"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:12.827" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:11.326" endtime="20210730 14:39:12.827"/>
</kw>
<status status="PASS" starttime="20210730 14:39:11.320" endtime="20210730 14:39:12.828"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:12.829" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:12.829" endtime="20210730 14:39:12.829"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:12.829" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:12.829" endtime="20210730 14:39:12.829"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:12.830" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:12.829" endtime="20210730 14:39:12.830"/>
</kw>
<msg timestamp="20210730 14:39:12.830" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:12.828" endtime="20210730 14:39:12.830"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:12.830" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:12.830" endtime="20210730 14:39:12.831"/>
</kw>
<status status="PASS" starttime="20210730 14:39:12.828" endtime="20210730 14:39:12.831"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:12.831" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:12.831" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:12.831" endtime="20210730 14:39:12.831"/>
</kw>
<status status="PASS" starttime="20210730 14:39:12.831" endtime="20210730 14:39:12.832"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:12.832" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:12.833" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:12.832" endtime="20210730 14:39:12.833"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:12.833" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:12.833" endtime="20210730 14:39:12.833"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:12.833" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:12.833" endtime="20210730 14:39:12.833"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:12.834" endtime="20210730 14:39:12.835"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:12.835" endtime="20210730 14:39:12.835"/>
</kw>
<status status="PASS" starttime="20210730 14:39:12.833" endtime="20210730 14:39:12.835"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:12.835" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:12.835" endtime="20210730 14:39:12.835"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:12.835" endtime="20210730 14:39:12.836"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:12.836" endtime="20210730 14:39:12.836"/>
</kw>
<status status="PASS" starttime="20210730 14:39:12.835" endtime="20210730 14:39:12.836"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:12.837" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:12.837" endtime="20210730 14:39:12.837"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:12.837" endtime="20210730 14:39:12.838"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:12.838" endtime="20210730 14:39:12.838"/>
</kw>
<status status="PASS" starttime="20210730 14:39:12.836" endtime="20210730 14:39:12.838"/>
</iter>
<status status="PASS" starttime="20210730 14:39:12.833" endtime="20210730 14:39:12.838"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:12.838" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:12.838" endtime="20210730 14:39:12.838"/>
</kw>
<status status="PASS" starttime="20210730 14:39:12.832" endtime="20210730 14:39:12.839"/>
</kw>
<status status="PASS" starttime="20210730 14:39:11.264" endtime="20210730 14:39:12.839"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=# 123abc</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:12.840" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:12.840" endtime="20210730 14:39:12.840"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:12.840" level="INFO">${payload} = {'username': '# 123abc'}</msg>
<status status="PASS" starttime="20210730 14:39:12.840" endtime="20210730 14:39:12.841"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:12.850" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:12.851" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:12.841" endtime="20210730 14:39:12.851"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:12.851" endtime="20210730 14:39:12.851"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:12.851" endtime="20210730 14:39:12.851"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:12.841" endtime="20210730 14:39:12.851"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:12.841" endtime="20210730 14:39:12.851"/>
</for>
<status status="FAIL" starttime="20210730 14:39:12.839" endtime="20210730 14:39:12.851"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:12.839" endtime="20210730 14:39:12.851"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=# 123abc</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:12.853" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:12.852" endtime="20210730 14:39:12.853"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:12.853" level="INFO">${payload} = {'username': '# 123abc'}</msg>
<status status="PASS" starttime="20210730 14:39:12.853" endtime="20210730 14:39:12.853"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:12.858" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:12.858" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:12.853" endtime="20210730 14:39:12.858"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:12.858" endtime="20210730 14:39:12.858"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:12.858" endtime="20210730 14:39:12.858"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:12.853" endtime="20210730 14:39:12.858"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:12.853" endtime="20210730 14:39:12.858"/>
</for>
<status status="FAIL" starttime="20210730 14:39:12.852" endtime="20210730 14:39:12.858"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:12.852" endtime="20210730 14:39:12.858"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=# 123abc</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:12.860" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:12.859" endtime="20210730 14:39:12.860"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:12.860" level="INFO">${payload} = {'username': '# 123abc'}</msg>
<status status="PASS" starttime="20210730 14:39:12.860" endtime="20210730 14:39:12.860"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:12.864" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:12.864" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:12.860" endtime="20210730 14:39:12.864"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:12.864" endtime="20210730 14:39:12.865"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:12.865" endtime="20210730 14:39:12.865"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:12.860" endtime="20210730 14:39:12.865"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:12.860" endtime="20210730 14:39:12.865"/>
</for>
<status status="FAIL" starttime="20210730 14:39:12.859" endtime="20210730 14:39:12.865"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:12.859" endtime="20210730 14:39:12.865"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:12.839" endtime="20210730 14:39:12.865"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:12.870" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:12.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:12.880" level="INFO">${pids} = 25538
25545
25549</msg>
<status status="PASS" starttime="20210730 14:39:12.866" endtime="20210730 14:39:12.880"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:12.881" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:12.880" endtime="20210730 14:39:12.881"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:12.882" level="INFO">${pids} = ['25538', '25545', '25549']</msg>
<status status="PASS" starttime="20210730 14:39:12.881" endtime="20210730 14:39:12.882"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">25538</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:12.885" level="INFO">Running command 'kill 25538 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:12.882" endtime="20210730 14:39:12.885"/>
</kw>
<status status="PASS" starttime="20210730 14:39:12.882" endtime="20210730 14:39:12.885"/>
</iter>
<iter>
<var name="${pid}">25545</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:12.889" level="INFO">Running command 'kill 25545 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:12.886" endtime="20210730 14:39:12.889"/>
</kw>
<status status="PASS" starttime="20210730 14:39:12.886" endtime="20210730 14:39:12.889"/>
</iter>
<iter>
<var name="${pid}">25549</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:12.894" level="INFO">Running command 'kill 25549 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:12.890" endtime="20210730 14:39:12.894"/>
</kw>
<status status="PASS" starttime="20210730 14:39:12.890" endtime="20210730 14:39:12.894"/>
</iter>
<status status="PASS" starttime="20210730 14:39:12.882" endtime="20210730 14:39:12.894"/>
</for>
<status status="PASS" starttime="20210730 14:39:12.881" endtime="20210730 14:39:12.894"/>
</branch>
<status status="PASS" starttime="20210730 14:39:12.881" endtime="20210730 14:39:12.894"/>
</if>
<status status="PASS" starttime="20210730 14:39:12.865" endtime="20210730 14:39:12.895"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '# 123abc'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:11.263" endtime="20210730 14:39:12.895">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t40" name="With Each Valid Token, Updating Username Of Each System User With #¤/&amp;  !123abc456hjk Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:12.901" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:12.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:12.911" level="INFO">${pids} = 25578</msg>
<status status="PASS" starttime="20210730 14:39:12.897" endtime="20210730 14:39:12.911"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:12.912" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:12.912" endtime="20210730 14:39:12.912"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:12.913" level="INFO">${pids} = ['25578']</msg>
<status status="PASS" starttime="20210730 14:39:12.913" endtime="20210730 14:39:12.913"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">25578</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:12.918" level="INFO">Running command 'kill 25578 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:12.914" endtime="20210730 14:39:12.918"/>
</kw>
<status status="PASS" starttime="20210730 14:39:12.914" endtime="20210730 14:39:12.918"/>
</iter>
<status status="PASS" starttime="20210730 14:39:12.913" endtime="20210730 14:39:12.918"/>
</for>
<status status="PASS" starttime="20210730 14:39:12.913" endtime="20210730 14:39:12.919"/>
</branch>
<status status="PASS" starttime="20210730 14:39:12.912" endtime="20210730 14:39:12.919"/>
</if>
<status status="PASS" starttime="20210730 14:39:12.897" endtime="20210730 14:39:12.919"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:12.920" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:12.920" endtime="20210730 14:39:12.920"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:12.921" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:12.920" endtime="20210730 14:39:12.921"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:12.921" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:12.921" endtime="20210730 14:39:12.921"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:12.922" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:12.921" endtime="20210730 14:39:12.922"/>
</kw>
<msg timestamp="20210730 14:39:12.922" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:12.920" endtime="20210730 14:39:12.922"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:12.925" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:12.922" endtime="20210730 14:39:12.927"/>
</kw>
<status status="PASS" starttime="20210730 14:39:12.919" endtime="20210730 14:39:12.927"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:12.929" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:12.928" endtime="20210730 14:39:12.934"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:14.436" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:12.934" endtime="20210730 14:39:14.437"/>
</kw>
<status status="PASS" starttime="20210730 14:39:12.928" endtime="20210730 14:39:14.437"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:14.438" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:14.438" endtime="20210730 14:39:14.438"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:14.439" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:14.438" endtime="20210730 14:39:14.439"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:14.439" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:14.439" endtime="20210730 14:39:14.439"/>
</kw>
<msg timestamp="20210730 14:39:14.440" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:14.437" endtime="20210730 14:39:14.440"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:14.440" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:14.440" endtime="20210730 14:39:14.441"/>
</kw>
<status status="PASS" starttime="20210730 14:39:14.437" endtime="20210730 14:39:14.441"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:14.442" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:14.442" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:14.442" endtime="20210730 14:39:14.442"/>
</kw>
<status status="PASS" starttime="20210730 14:39:14.441" endtime="20210730 14:39:14.443"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:14.444" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:14.444" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:14.443" endtime="20210730 14:39:14.444"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:14.445" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:14.445" endtime="20210730 14:39:14.445"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:14.447" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:14.446" endtime="20210730 14:39:14.447"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:14.447" endtime="20210730 14:39:14.448"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:14.448" endtime="20210730 14:39:14.448"/>
</kw>
<status status="PASS" starttime="20210730 14:39:14.446" endtime="20210730 14:39:14.448"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:14.449" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:14.449" endtime="20210730 14:39:14.449"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:14.449" endtime="20210730 14:39:14.450"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:14.450" endtime="20210730 14:39:14.450"/>
</kw>
<status status="PASS" starttime="20210730 14:39:14.449" endtime="20210730 14:39:14.450"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:14.451" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:14.450" endtime="20210730 14:39:14.451"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:14.451" endtime="20210730 14:39:14.451"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:14.451" endtime="20210730 14:39:14.452"/>
</kw>
<status status="PASS" starttime="20210730 14:39:14.450" endtime="20210730 14:39:14.452"/>
</iter>
<status status="PASS" starttime="20210730 14:39:14.445" endtime="20210730 14:39:14.452"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:14.452" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:14.452" endtime="20210730 14:39:14.452"/>
</kw>
<status status="PASS" starttime="20210730 14:39:14.443" endtime="20210730 14:39:14.452"/>
</kw>
<status status="PASS" starttime="20210730 14:39:12.896" endtime="20210730 14:39:14.452"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/&amp;\ \ !123abc456hjk</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:14.453" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:14.453" endtime="20210730 14:39:14.454"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:14.454" level="INFO">${payload} = {'username': '#¤/&amp;  !123abc456hjk'}</msg>
<status status="PASS" starttime="20210730 14:39:14.454" endtime="20210730 14:39:14.454"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:14.464" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:14.465" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:14.454" endtime="20210730 14:39:14.465"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:14.465" endtime="20210730 14:39:14.465"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:14.465" endtime="20210730 14:39:14.465"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:14.454" endtime="20210730 14:39:14.465"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:14.454" endtime="20210730 14:39:14.465"/>
</for>
<status status="FAIL" starttime="20210730 14:39:14.453" endtime="20210730 14:39:14.466"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:14.453" endtime="20210730 14:39:14.466"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/&amp;\ \ !123abc456hjk</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:14.467" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:14.466" endtime="20210730 14:39:14.467"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:14.467" level="INFO">${payload} = {'username': '#¤/&amp;  !123abc456hjk'}</msg>
<status status="PASS" starttime="20210730 14:39:14.467" endtime="20210730 14:39:14.467"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:14.471" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:14.472" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:14.467" endtime="20210730 14:39:14.472"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:14.472" endtime="20210730 14:39:14.472"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:14.472" endtime="20210730 14:39:14.472"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:14.467" endtime="20210730 14:39:14.472"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:14.467" endtime="20210730 14:39:14.472"/>
</for>
<status status="FAIL" starttime="20210730 14:39:14.466" endtime="20210730 14:39:14.472"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:14.466" endtime="20210730 14:39:14.472"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/&amp;\ \ !123abc456hjk</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:14.474" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:14.473" endtime="20210730 14:39:14.474"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:14.474" level="INFO">${payload} = {'username': '#¤/&amp;  !123abc456hjk'}</msg>
<status status="PASS" starttime="20210730 14:39:14.474" endtime="20210730 14:39:14.474"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:14.479" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:14.480" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:14.475" endtime="20210730 14:39:14.480"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:14.480" endtime="20210730 14:39:14.480"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:14.480" endtime="20210730 14:39:14.480"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:14.475" endtime="20210730 14:39:14.480"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:14.474" endtime="20210730 14:39:14.480"/>
</for>
<status status="FAIL" starttime="20210730 14:39:14.473" endtime="20210730 14:39:14.480"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:14.472" endtime="20210730 14:39:14.480"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:14.452" endtime="20210730 14:39:14.480"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:14.486" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:14.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:14.496" level="INFO">${pids} = 25601
25609
25614</msg>
<status status="PASS" starttime="20210730 14:39:14.482" endtime="20210730 14:39:14.496"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:14.497" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:14.496" endtime="20210730 14:39:14.497"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:14.498" level="INFO">${pids} = ['25601', '25609', '25614']</msg>
<status status="PASS" starttime="20210730 14:39:14.498" endtime="20210730 14:39:14.498"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">25601</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:14.501" level="INFO">Running command 'kill 25601 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:14.498" endtime="20210730 14:39:14.502"/>
</kw>
<status status="PASS" starttime="20210730 14:39:14.498" endtime="20210730 14:39:14.502"/>
</iter>
<iter>
<var name="${pid}">25609</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:14.505" level="INFO">Running command 'kill 25609 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:14.502" endtime="20210730 14:39:14.505"/>
</kw>
<status status="PASS" starttime="20210730 14:39:14.502" endtime="20210730 14:39:14.506"/>
</iter>
<iter>
<var name="${pid}">25614</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:14.512" level="INFO">Running command 'kill 25614 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:14.506" endtime="20210730 14:39:14.513"/>
</kw>
<status status="PASS" starttime="20210730 14:39:14.506" endtime="20210730 14:39:14.513"/>
</iter>
<status status="PASS" starttime="20210730 14:39:14.498" endtime="20210730 14:39:14.513"/>
</for>
<status status="PASS" starttime="20210730 14:39:14.497" endtime="20210730 14:39:14.513"/>
</branch>
<status status="PASS" starttime="20210730 14:39:14.497" endtime="20210730 14:39:14.513"/>
</if>
<status status="PASS" starttime="20210730 14:39:14.481" endtime="20210730 14:39:14.513"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤/&amp; !123abc456hjk'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:12.895" endtime="20210730 14:39:14.513">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t41" name="With Each Valid Token, Updating Username Of Each System User With #¤ abc! Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:14.519" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:14.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:14.529" level="INFO">${pids} = 25643</msg>
<status status="PASS" starttime="20210730 14:39:14.516" endtime="20210730 14:39:14.529"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:14.530" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:14.529" endtime="20210730 14:39:14.530"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:14.531" level="INFO">${pids} = ['25643']</msg>
<status status="PASS" starttime="20210730 14:39:14.530" endtime="20210730 14:39:14.531"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">25643</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:14.534" level="INFO">Running command 'kill 25643 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:14.531" endtime="20210730 14:39:14.535"/>
</kw>
<status status="PASS" starttime="20210730 14:39:14.531" endtime="20210730 14:39:14.535"/>
</iter>
<status status="PASS" starttime="20210730 14:39:14.531" endtime="20210730 14:39:14.535"/>
</for>
<status status="PASS" starttime="20210730 14:39:14.530" endtime="20210730 14:39:14.535"/>
</branch>
<status status="PASS" starttime="20210730 14:39:14.530" endtime="20210730 14:39:14.535"/>
</if>
<status status="PASS" starttime="20210730 14:39:14.515" endtime="20210730 14:39:14.535"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:14.536" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:14.536" endtime="20210730 14:39:14.536"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:14.537" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:14.537" endtime="20210730 14:39:14.537"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:14.537" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:14.537" endtime="20210730 14:39:14.537"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:14.538" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:14.538" endtime="20210730 14:39:14.538"/>
</kw>
<msg timestamp="20210730 14:39:14.538" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:14.536" endtime="20210730 14:39:14.538"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:14.542" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:14.538" endtime="20210730 14:39:14.548"/>
</kw>
<status status="PASS" starttime="20210730 14:39:14.536" endtime="20210730 14:39:14.549"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:14.550" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:14.549" endtime="20210730 14:39:14.554"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:16.055" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:14.554" endtime="20210730 14:39:16.055"/>
</kw>
<status status="PASS" starttime="20210730 14:39:14.549" endtime="20210730 14:39:16.056"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:16.057" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:16.057" endtime="20210730 14:39:16.057"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:16.058" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:16.057" endtime="20210730 14:39:16.058"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:16.058" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:16.058" endtime="20210730 14:39:16.058"/>
</kw>
<msg timestamp="20210730 14:39:16.058" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:16.057" endtime="20210730 14:39:16.058"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:16.059" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:16.058" endtime="20210730 14:39:16.059"/>
</kw>
<status status="PASS" starttime="20210730 14:39:16.056" endtime="20210730 14:39:16.059"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:16.060" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:16.060" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:16.060" endtime="20210730 14:39:16.060"/>
</kw>
<status status="PASS" starttime="20210730 14:39:16.059" endtime="20210730 14:39:16.060"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:16.061" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:16.061" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:16.060" endtime="20210730 14:39:16.061"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:16.061" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:16.061" endtime="20210730 14:39:16.061"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:16.062" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:16.062" endtime="20210730 14:39:16.062"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:16.062" endtime="20210730 14:39:16.063"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:16.063" endtime="20210730 14:39:16.063"/>
</kw>
<status status="PASS" starttime="20210730 14:39:16.061" endtime="20210730 14:39:16.063"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:16.063" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:16.063" endtime="20210730 14:39:16.063"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:16.064" endtime="20210730 14:39:16.064"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:16.064" endtime="20210730 14:39:16.065"/>
</kw>
<status status="PASS" starttime="20210730 14:39:16.063" endtime="20210730 14:39:16.065"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:16.065" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:16.065" endtime="20210730 14:39:16.065"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:16.065" endtime="20210730 14:39:16.066"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:16.066" endtime="20210730 14:39:16.066"/>
</kw>
<status status="PASS" starttime="20210730 14:39:16.065" endtime="20210730 14:39:16.066"/>
</iter>
<status status="PASS" starttime="20210730 14:39:16.061" endtime="20210730 14:39:16.066"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:16.067" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:16.066" endtime="20210730 14:39:16.067"/>
</kw>
<status status="PASS" starttime="20210730 14:39:16.060" endtime="20210730 14:39:16.067"/>
</kw>
<status status="PASS" starttime="20210730 14:39:14.515" endtime="20210730 14:39:16.067"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤ abc!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:16.068" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:16.068" endtime="20210730 14:39:16.068"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:16.069" level="INFO">${payload} = {'username': '#¤ abc!'}</msg>
<status status="PASS" starttime="20210730 14:39:16.068" endtime="20210730 14:39:16.069"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:16.079" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:16.080" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:16.069" endtime="20210730 14:39:16.080"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:16.080" endtime="20210730 14:39:16.080"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:16.080" endtime="20210730 14:39:16.080"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:16.069" endtime="20210730 14:39:16.080"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:16.069" endtime="20210730 14:39:16.080"/>
</for>
<status status="FAIL" starttime="20210730 14:39:16.068" endtime="20210730 14:39:16.080"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:16.067" endtime="20210730 14:39:16.081"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤ abc!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:16.082" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:16.081" endtime="20210730 14:39:16.082"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:16.082" level="INFO">${payload} = {'username': '#¤ abc!'}</msg>
<status status="PASS" starttime="20210730 14:39:16.082" endtime="20210730 14:39:16.082"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:16.086" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:16.087" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:16.082" endtime="20210730 14:39:16.087"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:16.087" endtime="20210730 14:39:16.087"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:16.087" endtime="20210730 14:39:16.087"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:16.082" endtime="20210730 14:39:16.087"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:16.082" endtime="20210730 14:39:16.087"/>
</for>
<status status="FAIL" starttime="20210730 14:39:16.081" endtime="20210730 14:39:16.087"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:16.081" endtime="20210730 14:39:16.087"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤ abc!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:16.088" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:16.088" endtime="20210730 14:39:16.089"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:16.089" level="INFO">${payload} = {'username': '#¤ abc!'}</msg>
<status status="PASS" starttime="20210730 14:39:16.089" endtime="20210730 14:39:16.089"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:16.094" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:16.094" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:16.090" endtime="20210730 14:39:16.094"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:16.095" endtime="20210730 14:39:16.095"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:16.095" endtime="20210730 14:39:16.095"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:16.089" endtime="20210730 14:39:16.095"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:16.089" endtime="20210730 14:39:16.095"/>
</for>
<status status="FAIL" starttime="20210730 14:39:16.088" endtime="20210730 14:39:16.095"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:16.087" endtime="20210730 14:39:16.095"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:16.067" endtime="20210730 14:39:16.095"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:16.102" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:16.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:16.112" level="INFO">${pids} = 25666
25673
25677</msg>
<status status="PASS" starttime="20210730 14:39:16.096" endtime="20210730 14:39:16.112"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:16.113" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:16.113" endtime="20210730 14:39:16.113"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:16.114" level="INFO">${pids} = ['25666', '25673', '25677']</msg>
<status status="PASS" starttime="20210730 14:39:16.114" endtime="20210730 14:39:16.114"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">25666</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:16.118" level="INFO">Running command 'kill 25666 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:16.115" endtime="20210730 14:39:16.118"/>
</kw>
<status status="PASS" starttime="20210730 14:39:16.114" endtime="20210730 14:39:16.118"/>
</iter>
<iter>
<var name="${pid}">25673</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:16.121" level="INFO">Running command 'kill 25673 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:16.118" endtime="20210730 14:39:16.122"/>
</kw>
<status status="PASS" starttime="20210730 14:39:16.118" endtime="20210730 14:39:16.122"/>
</iter>
<iter>
<var name="${pid}">25677</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:16.127" level="INFO">Running command 'kill 25677 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:16.122" endtime="20210730 14:39:16.127"/>
</kw>
<status status="PASS" starttime="20210730 14:39:16.122" endtime="20210730 14:39:16.128"/>
</iter>
<status status="PASS" starttime="20210730 14:39:16.114" endtime="20210730 14:39:16.128"/>
</for>
<status status="PASS" starttime="20210730 14:39:16.113" endtime="20210730 14:39:16.128"/>
</branch>
<status status="PASS" starttime="20210730 14:39:16.113" endtime="20210730 14:39:16.128"/>
</if>
<status status="PASS" starttime="20210730 14:39:16.095" endtime="20210730 14:39:16.128"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤ abc!'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:14.514" endtime="20210730 14:39:16.128">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t42" name="With Each Valid Token, Updating Username Of Each System User With #¤ abc!g Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:16.134" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:16.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:16.145" level="INFO">${pids} = 25706</msg>
<status status="PASS" starttime="20210730 14:39:16.130" endtime="20210730 14:39:16.145"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:16.146" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:16.145" endtime="20210730 14:39:16.146"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:16.147" level="INFO">${pids} = ['25706']</msg>
<status status="PASS" starttime="20210730 14:39:16.146" endtime="20210730 14:39:16.147"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">25706</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:16.150" level="INFO">Running command 'kill 25706 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:16.147" endtime="20210730 14:39:16.151"/>
</kw>
<status status="PASS" starttime="20210730 14:39:16.147" endtime="20210730 14:39:16.151"/>
</iter>
<status status="PASS" starttime="20210730 14:39:16.147" endtime="20210730 14:39:16.151"/>
</for>
<status status="PASS" starttime="20210730 14:39:16.146" endtime="20210730 14:39:16.151"/>
</branch>
<status status="PASS" starttime="20210730 14:39:16.146" endtime="20210730 14:39:16.151"/>
</if>
<status status="PASS" starttime="20210730 14:39:16.130" endtime="20210730 14:39:16.151"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:16.152" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:16.152" endtime="20210730 14:39:16.152"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:16.153" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:16.152" endtime="20210730 14:39:16.153"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:16.153" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:16.153" endtime="20210730 14:39:16.153"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:16.154" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:16.153" endtime="20210730 14:39:16.154"/>
</kw>
<msg timestamp="20210730 14:39:16.154" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:16.152" endtime="20210730 14:39:16.154"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:16.160" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:16.154" endtime="20210730 14:39:16.161"/>
</kw>
<status status="PASS" starttime="20210730 14:39:16.151" endtime="20210730 14:39:16.162"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:16.163" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:16.163" endtime="20210730 14:39:16.167"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:17.692" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:16.168" endtime="20210730 14:39:17.693"/>
</kw>
<status status="PASS" starttime="20210730 14:39:16.162" endtime="20210730 14:39:17.693"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:17.694" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:17.694" endtime="20210730 14:39:17.694"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:17.695" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:17.694" endtime="20210730 14:39:17.695"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:17.695" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:17.695" endtime="20210730 14:39:17.695"/>
</kw>
<msg timestamp="20210730 14:39:17.695" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:17.693" endtime="20210730 14:39:17.695"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:17.696" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:17.695" endtime="20210730 14:39:17.696"/>
</kw>
<status status="PASS" starttime="20210730 14:39:17.693" endtime="20210730 14:39:17.696"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:17.697" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:17.697" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:17.696" endtime="20210730 14:39:17.697"/>
</kw>
<status status="PASS" starttime="20210730 14:39:17.696" endtime="20210730 14:39:17.697"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:17.698" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:17.698" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:17.698" endtime="20210730 14:39:17.698"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:17.698" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:17.698" endtime="20210730 14:39:17.698"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:17.699" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:17.699" endtime="20210730 14:39:17.699"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:17.699" endtime="20210730 14:39:17.700"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:17.700" endtime="20210730 14:39:17.700"/>
</kw>
<status status="PASS" starttime="20210730 14:39:17.699" endtime="20210730 14:39:17.700"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:17.700" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:17.700" endtime="20210730 14:39:17.701"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:17.701" endtime="20210730 14:39:17.701"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:17.701" endtime="20210730 14:39:17.702"/>
</kw>
<status status="PASS" starttime="20210730 14:39:17.700" endtime="20210730 14:39:17.702"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:17.702" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:17.702" endtime="20210730 14:39:17.702"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:17.702" endtime="20210730 14:39:17.703"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:17.703" endtime="20210730 14:39:17.704"/>
</kw>
<status status="PASS" starttime="20210730 14:39:17.702" endtime="20210730 14:39:17.704"/>
</iter>
<status status="PASS" starttime="20210730 14:39:17.698" endtime="20210730 14:39:17.704"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:17.704" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:17.704" endtime="20210730 14:39:17.704"/>
</kw>
<status status="PASS" starttime="20210730 14:39:17.697" endtime="20210730 14:39:17.704"/>
</kw>
<status status="PASS" starttime="20210730 14:39:16.130" endtime="20210730 14:39:17.704"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤ abc!g</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:17.706" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:17.706" endtime="20210730 14:39:17.706"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:17.706" level="INFO">${payload} = {'username': '#¤ abc!g'}</msg>
<status status="PASS" starttime="20210730 14:39:17.706" endtime="20210730 14:39:17.707"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:17.717" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:17.717" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:17.707" endtime="20210730 14:39:17.717"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:17.717" endtime="20210730 14:39:17.717"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:17.717" endtime="20210730 14:39:17.718"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:17.707" endtime="20210730 14:39:17.718"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:17.707" endtime="20210730 14:39:17.718"/>
</for>
<status status="FAIL" starttime="20210730 14:39:17.705" endtime="20210730 14:39:17.718"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:17.705" endtime="20210730 14:39:17.718"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤ abc!g</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:17.719" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:17.719" endtime="20210730 14:39:17.719"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:17.719" level="INFO">${payload} = {'username': '#¤ abc!g'}</msg>
<status status="PASS" starttime="20210730 14:39:17.719" endtime="20210730 14:39:17.719"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:17.724" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:17.724" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:17.720" endtime="20210730 14:39:17.724"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:17.724" endtime="20210730 14:39:17.724"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:17.724" endtime="20210730 14:39:17.724"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:17.720" endtime="20210730 14:39:17.724"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:17.720" endtime="20210730 14:39:17.724"/>
</for>
<status status="FAIL" starttime="20210730 14:39:17.718" endtime="20210730 14:39:17.725"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:17.718" endtime="20210730 14:39:17.725"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤ abc!g</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:17.726" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:17.726" endtime="20210730 14:39:17.726"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:17.726" level="INFO">${payload} = {'username': '#¤ abc!g'}</msg>
<status status="PASS" starttime="20210730 14:39:17.726" endtime="20210730 14:39:17.726"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:17.731" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:17.731" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:17.727" endtime="20210730 14:39:17.731"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:17.732" endtime="20210730 14:39:17.732"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:17.732" endtime="20210730 14:39:17.732"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:17.727" endtime="20210730 14:39:17.732"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:17.726" endtime="20210730 14:39:17.732"/>
</for>
<status status="FAIL" starttime="20210730 14:39:17.725" endtime="20210730 14:39:17.732"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:17.725" endtime="20210730 14:39:17.732"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:17.705" endtime="20210730 14:39:17.732"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:17.738" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:17.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:17.748" level="INFO">${pids} = 25730
25737
25741</msg>
<status status="PASS" starttime="20210730 14:39:17.733" endtime="20210730 14:39:17.748"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:17.749" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:17.748" endtime="20210730 14:39:17.749"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:17.750" level="INFO">${pids} = ['25730', '25737', '25741']</msg>
<status status="PASS" starttime="20210730 14:39:17.749" endtime="20210730 14:39:17.750"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">25730</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:17.753" level="INFO">Running command 'kill 25730 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:17.750" endtime="20210730 14:39:17.754"/>
</kw>
<status status="PASS" starttime="20210730 14:39:17.750" endtime="20210730 14:39:17.754"/>
</iter>
<iter>
<var name="${pid}">25737</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:17.758" level="INFO">Running command 'kill 25737 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:17.754" endtime="20210730 14:39:17.758"/>
</kw>
<status status="PASS" starttime="20210730 14:39:17.754" endtime="20210730 14:39:17.758"/>
</iter>
<iter>
<var name="${pid}">25741</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:17.762" level="INFO">Running command 'kill 25741 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:17.759" endtime="20210730 14:39:17.763"/>
</kw>
<status status="PASS" starttime="20210730 14:39:17.758" endtime="20210730 14:39:17.763"/>
</iter>
<status status="PASS" starttime="20210730 14:39:17.750" endtime="20210730 14:39:17.763"/>
</for>
<status status="PASS" starttime="20210730 14:39:17.749" endtime="20210730 14:39:17.763"/>
</branch>
<status status="PASS" starttime="20210730 14:39:17.749" endtime="20210730 14:39:17.763"/>
</if>
<status status="PASS" starttime="20210730 14:39:17.732" endtime="20210730 14:39:17.763"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤ abc!g'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:16.129" endtime="20210730 14:39:17.764">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t43" name="With Each Valid Token, Updating Username Of Each System User With #¤/abc!g() &amp;%¤fghjklQWERTY Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:17.771" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:17.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:17.782" level="INFO">${pids} = 25770</msg>
<status status="PASS" starttime="20210730 14:39:17.766" endtime="20210730 14:39:17.783"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:17.784" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:17.783" endtime="20210730 14:39:17.784"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:17.785" level="INFO">${pids} = ['25770']</msg>
<status status="PASS" starttime="20210730 14:39:17.784" endtime="20210730 14:39:17.785"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">25770</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:17.788" level="INFO">Running command 'kill 25770 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:17.785" endtime="20210730 14:39:17.789"/>
</kw>
<status status="PASS" starttime="20210730 14:39:17.785" endtime="20210730 14:39:17.789"/>
</iter>
<status status="PASS" starttime="20210730 14:39:17.785" endtime="20210730 14:39:17.790"/>
</for>
<status status="PASS" starttime="20210730 14:39:17.784" endtime="20210730 14:39:17.790"/>
</branch>
<status status="PASS" starttime="20210730 14:39:17.784" endtime="20210730 14:39:17.790"/>
</if>
<status status="PASS" starttime="20210730 14:39:17.766" endtime="20210730 14:39:17.790"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:17.791" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:17.791" endtime="20210730 14:39:17.791"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:17.792" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:17.792" endtime="20210730 14:39:17.792"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:17.792" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:17.792" endtime="20210730 14:39:17.792"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:17.793" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:17.792" endtime="20210730 14:39:17.793"/>
</kw>
<msg timestamp="20210730 14:39:17.793" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:17.791" endtime="20210730 14:39:17.793"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:17.800" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:17.793" endtime="20210730 14:39:17.802"/>
</kw>
<status status="PASS" starttime="20210730 14:39:17.790" endtime="20210730 14:39:17.803"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:17.804" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:17.803" endtime="20210730 14:39:17.816"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:19.318" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:17.817" endtime="20210730 14:39:19.319"/>
</kw>
<status status="PASS" starttime="20210730 14:39:17.803" endtime="20210730 14:39:19.320"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:19.323" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:19.323" endtime="20210730 14:39:19.323"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:19.323" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:19.323" endtime="20210730 14:39:19.323"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:19.324" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:19.324" endtime="20210730 14:39:19.324"/>
</kw>
<msg timestamp="20210730 14:39:19.324" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:19.322" endtime="20210730 14:39:19.324"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:19.325" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:19.324" endtime="20210730 14:39:19.325"/>
</kw>
<status status="PASS" starttime="20210730 14:39:19.321" endtime="20210730 14:39:19.325"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:19.326" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:19.326" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:19.325" endtime="20210730 14:39:19.326"/>
</kw>
<status status="PASS" starttime="20210730 14:39:19.325" endtime="20210730 14:39:19.326"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:19.327" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:19.327" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:19.326" endtime="20210730 14:39:19.327"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:19.327" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:19.327" endtime="20210730 14:39:19.327"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:19.328" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:19.327" endtime="20210730 14:39:19.328"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:19.328" endtime="20210730 14:39:19.329"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:19.329" endtime="20210730 14:39:19.329"/>
</kw>
<status status="PASS" starttime="20210730 14:39:19.327" endtime="20210730 14:39:19.329"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:19.329" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:19.329" endtime="20210730 14:39:19.329"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:19.329" endtime="20210730 14:39:19.330"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:19.330" endtime="20210730 14:39:19.330"/>
</kw>
<status status="PASS" starttime="20210730 14:39:19.329" endtime="20210730 14:39:19.330"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:19.331" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:19.331" endtime="20210730 14:39:19.331"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:19.331" endtime="20210730 14:39:19.332"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:19.332" endtime="20210730 14:39:19.332"/>
</kw>
<status status="PASS" starttime="20210730 14:39:19.330" endtime="20210730 14:39:19.332"/>
</iter>
<status status="PASS" starttime="20210730 14:39:19.327" endtime="20210730 14:39:19.332"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:19.332" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:19.332" endtime="20210730 14:39:19.333"/>
</kw>
<status status="PASS" starttime="20210730 14:39:19.326" endtime="20210730 14:39:19.333"/>
</kw>
<status status="PASS" starttime="20210730 14:39:17.765" endtime="20210730 14:39:19.333"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/abc!g() &amp;%¤fghjklQWERTY</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:19.334" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:19.334" endtime="20210730 14:39:19.334"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:19.334" level="INFO">${payload} = {'username': '#¤/abc!g() &amp;%¤fghjklQWERTY'}</msg>
<status status="PASS" starttime="20210730 14:39:19.334" endtime="20210730 14:39:19.334"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:19.345" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:19.346" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:19.335" endtime="20210730 14:39:19.346"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:19.346" endtime="20210730 14:39:19.346"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:19.346" endtime="20210730 14:39:19.346"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:19.335" endtime="20210730 14:39:19.346"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:19.334" endtime="20210730 14:39:19.346"/>
</for>
<status status="FAIL" starttime="20210730 14:39:19.333" endtime="20210730 14:39:19.347"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:19.333" endtime="20210730 14:39:19.347"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/abc!g() &amp;%¤fghjklQWERTY</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:19.348" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:19.347" endtime="20210730 14:39:19.348"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:19.348" level="INFO">${payload} = {'username': '#¤/abc!g() &amp;%¤fghjklQWERTY'}</msg>
<status status="PASS" starttime="20210730 14:39:19.348" endtime="20210730 14:39:19.348"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:19.352" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:19.352" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:19.348" endtime="20210730 14:39:19.353"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:19.353" endtime="20210730 14:39:19.353"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:19.353" endtime="20210730 14:39:19.353"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:19.348" endtime="20210730 14:39:19.353"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:19.348" endtime="20210730 14:39:19.353"/>
</for>
<status status="FAIL" starttime="20210730 14:39:19.347" endtime="20210730 14:39:19.353"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:19.347" endtime="20210730 14:39:19.353"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username=#¤/abc!g() &amp;%¤fghjklQWERTY</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:19.354" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:19.354" endtime="20210730 14:39:19.354"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:19.355" level="INFO">${payload} = {'username': '#¤/abc!g() &amp;%¤fghjklQWERTY'}</msg>
<status status="PASS" starttime="20210730 14:39:19.354" endtime="20210730 14:39:19.355"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:19.359" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:19.359" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:19.355" endtime="20210730 14:39:19.359"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:19.359" endtime="20210730 14:39:19.359"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:19.359" endtime="20210730 14:39:19.359"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:19.355" endtime="20210730 14:39:19.359"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:19.355" endtime="20210730 14:39:19.359"/>
</for>
<status status="FAIL" starttime="20210730 14:39:19.353" endtime="20210730 14:39:19.360"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:19.353" endtime="20210730 14:39:19.360"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:19.333" endtime="20210730 14:39:19.360"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:19.365" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:19.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:19.375" level="INFO">${pids} = 25793
25800
25804</msg>
<status status="PASS" starttime="20210730 14:39:19.361" endtime="20210730 14:39:19.375"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:19.376" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:19.375" endtime="20210730 14:39:19.376"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:19.377" level="INFO">${pids} = ['25793', '25800', '25804']</msg>
<status status="PASS" starttime="20210730 14:39:19.376" endtime="20210730 14:39:19.377"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">25793</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:19.380" level="INFO">Running command 'kill 25793 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:19.377" endtime="20210730 14:39:19.380"/>
</kw>
<status status="PASS" starttime="20210730 14:39:19.377" endtime="20210730 14:39:19.380"/>
</iter>
<iter>
<var name="${pid}">25800</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:19.383" level="INFO">Running command 'kill 25800 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:19.381" endtime="20210730 14:39:19.383"/>
</kw>
<status status="PASS" starttime="20210730 14:39:19.380" endtime="20210730 14:39:19.383"/>
</iter>
<iter>
<var name="${pid}">25804</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:19.386" level="INFO">Running command 'kill 25804 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:19.384" endtime="20210730 14:39:19.386"/>
</kw>
<status status="PASS" starttime="20210730 14:39:19.383" endtime="20210730 14:39:19.387"/>
</iter>
<status status="PASS" starttime="20210730 14:39:19.377" endtime="20210730 14:39:19.387"/>
</for>
<status status="PASS" starttime="20210730 14:39:19.376" endtime="20210730 14:39:19.387"/>
</branch>
<status status="PASS" starttime="20210730 14:39:19.376" endtime="20210730 14:39:19.387"/>
</if>
<status status="PASS" starttime="20210730 14:39:19.360" endtime="20210730 14:39:19.387"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤/abc!g() &amp;%¤fghjklQWERTY'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:17.765" endtime="20210730 14:39:19.387">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t44" name="With Each Valid Token, Updating Password Of Each System User With '' Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:19.398" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:19.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:19.407" level="INFO">${pids} = 25833</msg>
<status status="PASS" starttime="20210730 14:39:19.389" endtime="20210730 14:39:19.407"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:19.408" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:19.408" endtime="20210730 14:39:19.408"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:19.409" level="INFO">${pids} = ['25833']</msg>
<status status="PASS" starttime="20210730 14:39:19.409" endtime="20210730 14:39:19.409"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">25833</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:19.426" level="INFO">Running command 'kill 25833 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:19.410" endtime="20210730 14:39:19.427"/>
</kw>
<status status="PASS" starttime="20210730 14:39:19.410" endtime="20210730 14:39:19.427"/>
</iter>
<status status="PASS" starttime="20210730 14:39:19.410" endtime="20210730 14:39:19.427"/>
</for>
<status status="PASS" starttime="20210730 14:39:19.409" endtime="20210730 14:39:19.427"/>
</branch>
<status status="PASS" starttime="20210730 14:39:19.409" endtime="20210730 14:39:19.427"/>
</if>
<status status="PASS" starttime="20210730 14:39:19.389" endtime="20210730 14:39:19.428"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:19.429" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:19.428" endtime="20210730 14:39:19.429"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:19.429" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:19.429" endtime="20210730 14:39:19.429"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:19.430" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:19.430" endtime="20210730 14:39:19.430"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:19.430" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:19.430" endtime="20210730 14:39:19.430"/>
</kw>
<msg timestamp="20210730 14:39:19.431" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:19.429" endtime="20210730 14:39:19.431"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:19.434" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:19.431" endtime="20210730 14:39:19.435"/>
</kw>
<status status="PASS" starttime="20210730 14:39:19.428" endtime="20210730 14:39:19.436"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:19.437" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:19.436" endtime="20210730 14:39:19.442"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:20.943" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:19.442" endtime="20210730 14:39:20.944"/>
</kw>
<status status="PASS" starttime="20210730 14:39:19.436" endtime="20210730 14:39:20.944"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:20.945" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:20.945" endtime="20210730 14:39:20.945"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:20.945" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:20.945" endtime="20210730 14:39:20.945"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:20.946" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:20.946" endtime="20210730 14:39:20.946"/>
</kw>
<msg timestamp="20210730 14:39:20.946" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:20.945" endtime="20210730 14:39:20.946"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:20.947" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:20.946" endtime="20210730 14:39:20.947"/>
</kw>
<status status="PASS" starttime="20210730 14:39:20.944" endtime="20210730 14:39:20.947"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:20.947" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:20.947" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:20.947" endtime="20210730 14:39:20.948"/>
</kw>
<status status="PASS" starttime="20210730 14:39:20.947" endtime="20210730 14:39:20.948"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:20.948" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:20.949" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:20.948" endtime="20210730 14:39:20.949"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:20.949" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:20.949" endtime="20210730 14:39:20.949"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:20.949" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:20.949" endtime="20210730 14:39:20.949"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:20.950" endtime="20210730 14:39:20.950"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:20.950" endtime="20210730 14:39:20.951"/>
</kw>
<status status="PASS" starttime="20210730 14:39:20.949" endtime="20210730 14:39:20.951"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:20.951" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:20.951" endtime="20210730 14:39:20.951"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:20.951" endtime="20210730 14:39:20.952"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:20.952" endtime="20210730 14:39:20.952"/>
</kw>
<status status="PASS" starttime="20210730 14:39:20.951" endtime="20210730 14:39:20.952"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:20.953" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:20.952" endtime="20210730 14:39:20.953"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:20.953" endtime="20210730 14:39:20.953"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:20.953" endtime="20210730 14:39:20.954"/>
</kw>
<status status="PASS" starttime="20210730 14:39:20.952" endtime="20210730 14:39:20.954"/>
</iter>
<status status="PASS" starttime="20210730 14:39:20.949" endtime="20210730 14:39:20.954"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:20.954" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:20.954" endtime="20210730 14:39:20.954"/>
</kw>
<status status="PASS" starttime="20210730 14:39:20.948" endtime="20210730 14:39:20.954"/>
</kw>
<status status="PASS" starttime="20210730 14:39:19.388" endtime="20210730 14:39:20.954"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=${EMPTY}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:20.956" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:20.956" endtime="20210730 14:39:20.956"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:20.957" level="INFO">${payload} = {'password': ''}</msg>
<status status="PASS" starttime="20210730 14:39:20.956" endtime="20210730 14:39:20.957"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:20.965" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:20.966" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:20.957" endtime="20210730 14:39:20.966"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:20.966" endtime="20210730 14:39:20.966"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:20.966" endtime="20210730 14:39:20.966"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:20.957" endtime="20210730 14:39:20.966"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:20.957" endtime="20210730 14:39:20.966"/>
</for>
<status status="FAIL" starttime="20210730 14:39:20.955" endtime="20210730 14:39:20.966"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:20.955" endtime="20210730 14:39:20.966"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=${EMPTY}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:20.968" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:20.967" endtime="20210730 14:39:20.968"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:20.968" level="INFO">${payload} = {'password': ''}</msg>
<status status="PASS" starttime="20210730 14:39:20.968" endtime="20210730 14:39:20.968"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:20.972" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:20.973" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:20.969" endtime="20210730 14:39:20.973"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:20.973" endtime="20210730 14:39:20.973"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:20.973" endtime="20210730 14:39:20.973"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:20.968" endtime="20210730 14:39:20.973"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:20.968" endtime="20210730 14:39:20.973"/>
</for>
<status status="FAIL" starttime="20210730 14:39:20.967" endtime="20210730 14:39:20.974"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:20.966" endtime="20210730 14:39:20.974"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=${EMPTY}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:20.975" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:20.975" endtime="20210730 14:39:20.975"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:20.976" level="INFO">${payload} = {'password': ''}</msg>
<status status="PASS" starttime="20210730 14:39:20.975" endtime="20210730 14:39:20.976"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:20.980" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:20.980" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:20.976" endtime="20210730 14:39:20.980"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:20.981" endtime="20210730 14:39:20.981"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:20.981" endtime="20210730 14:39:20.981"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:20.976" endtime="20210730 14:39:20.981"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:20.976" endtime="20210730 14:39:20.981"/>
</for>
<status status="FAIL" starttime="20210730 14:39:20.974" endtime="20210730 14:39:20.981"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:20.974" endtime="20210730 14:39:20.981"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:20.955" endtime="20210730 14:39:20.981"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:20.987" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:20.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:20.998" level="INFO">${pids} = 25857
25864
25869</msg>
<status status="PASS" starttime="20210730 14:39:20.982" endtime="20210730 14:39:20.998"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:20.999" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:20.998" endtime="20210730 14:39:20.999"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:20.999" level="INFO">${pids} = ['25857', '25864', '25869']</msg>
<status status="PASS" starttime="20210730 14:39:20.999" endtime="20210730 14:39:21.000"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">25857</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:21.003" level="INFO">Running command 'kill 25857 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:21.000" endtime="20210730 14:39:21.003"/>
</kw>
<status status="PASS" starttime="20210730 14:39:21.000" endtime="20210730 14:39:21.003"/>
</iter>
<iter>
<var name="${pid}">25864</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:21.007" level="INFO">Running command 'kill 25864 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:21.003" endtime="20210730 14:39:21.010"/>
</kw>
<status status="PASS" starttime="20210730 14:39:21.003" endtime="20210730 14:39:21.010"/>
</iter>
<iter>
<var name="${pid}">25869</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:21.013" level="INFO">Running command 'kill 25869 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:21.010" endtime="20210730 14:39:21.014"/>
</kw>
<status status="PASS" starttime="20210730 14:39:21.010" endtime="20210730 14:39:21.014"/>
</iter>
<status status="PASS" starttime="20210730 14:39:21.000" endtime="20210730 14:39:21.015"/>
</for>
<status status="PASS" starttime="20210730 14:39:20.999" endtime="20210730 14:39:21.015"/>
</branch>
<status status="PASS" starttime="20210730 14:39:20.999" endtime="20210730 14:39:21.015"/>
</if>
<status status="PASS" starttime="20210730 14:39:20.982" endtime="20210730 14:39:21.015"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": ''
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:19.388" endtime="20210730 14:39:21.015">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t45" name="With Each Valid Token, Updating Password Of Each System User With abcdefg Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:21.020" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:21.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:21.030" level="INFO">${pids} = 25898</msg>
<status status="PASS" starttime="20210730 14:39:21.017" endtime="20210730 14:39:21.031"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:21.031" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:21.031" endtime="20210730 14:39:21.031"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:21.032" level="INFO">${pids} = ['25898']</msg>
<status status="PASS" starttime="20210730 14:39:21.032" endtime="20210730 14:39:21.032"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">25898</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:21.036" level="INFO">Running command 'kill 25898 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:21.033" endtime="20210730 14:39:21.036"/>
</kw>
<status status="PASS" starttime="20210730 14:39:21.032" endtime="20210730 14:39:21.036"/>
</iter>
<status status="PASS" starttime="20210730 14:39:21.032" endtime="20210730 14:39:21.036"/>
</for>
<status status="PASS" starttime="20210730 14:39:21.032" endtime="20210730 14:39:21.036"/>
</branch>
<status status="PASS" starttime="20210730 14:39:21.032" endtime="20210730 14:39:21.036"/>
</if>
<status status="PASS" starttime="20210730 14:39:21.017" endtime="20210730 14:39:21.036"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:21.037" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:21.037" endtime="20210730 14:39:21.037"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:21.038" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:21.038" endtime="20210730 14:39:21.038"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:21.038" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:21.038" endtime="20210730 14:39:21.038"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:21.039" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:21.039" endtime="20210730 14:39:21.039"/>
</kw>
<msg timestamp="20210730 14:39:21.039" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:21.038" endtime="20210730 14:39:21.039"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:21.043" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:21.039" endtime="20210730 14:39:21.047"/>
</kw>
<status status="PASS" starttime="20210730 14:39:21.037" endtime="20210730 14:39:21.048"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:21.049" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:21.048" endtime="20210730 14:39:21.053"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:22.555" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:21.053" endtime="20210730 14:39:22.555"/>
</kw>
<status status="PASS" starttime="20210730 14:39:21.048" endtime="20210730 14:39:22.555"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:22.557" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:22.556" endtime="20210730 14:39:22.557"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:22.557" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:22.557" endtime="20210730 14:39:22.557"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:22.557" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:22.557" endtime="20210730 14:39:22.557"/>
</kw>
<msg timestamp="20210730 14:39:22.558" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:22.556" endtime="20210730 14:39:22.558"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:22.558" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:22.558" endtime="20210730 14:39:22.558"/>
</kw>
<status status="PASS" starttime="20210730 14:39:22.555" endtime="20210730 14:39:22.559"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:22.559" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:22.559" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:22.559" endtime="20210730 14:39:22.560"/>
</kw>
<status status="PASS" starttime="20210730 14:39:22.559" endtime="20210730 14:39:22.560"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:22.560" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:22.561" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:22.560" endtime="20210730 14:39:22.561"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:22.561" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:22.561" endtime="20210730 14:39:22.561"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:22.561" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:22.561" endtime="20210730 14:39:22.561"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:22.562" endtime="20210730 14:39:22.562"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:22.562" endtime="20210730 14:39:22.563"/>
</kw>
<status status="PASS" starttime="20210730 14:39:22.561" endtime="20210730 14:39:22.563"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:22.563" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:22.563" endtime="20210730 14:39:22.563"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:22.563" endtime="20210730 14:39:22.564"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:22.564" endtime="20210730 14:39:22.564"/>
</kw>
<status status="PASS" starttime="20210730 14:39:22.563" endtime="20210730 14:39:22.564"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:22.564" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:22.564" endtime="20210730 14:39:22.564"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:22.565" endtime="20210730 14:39:22.565"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:22.565" endtime="20210730 14:39:22.566"/>
</kw>
<status status="PASS" starttime="20210730 14:39:22.564" endtime="20210730 14:39:22.566"/>
</iter>
<status status="PASS" starttime="20210730 14:39:22.561" endtime="20210730 14:39:22.566"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:22.566" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:22.566" endtime="20210730 14:39:22.566"/>
</kw>
<status status="PASS" starttime="20210730 14:39:22.560" endtime="20210730 14:39:22.566"/>
</kw>
<status status="PASS" starttime="20210730 14:39:21.016" endtime="20210730 14:39:22.566"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdefg</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:22.567" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:22.567" endtime="20210730 14:39:22.568"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:22.568" level="INFO">${payload} = {'password': 'abcdefg'}</msg>
<status status="PASS" starttime="20210730 14:39:22.568" endtime="20210730 14:39:22.568"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:22.579" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:22.579" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:22.568" endtime="20210730 14:39:22.579"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:22.579" endtime="20210730 14:39:22.579"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:22.579" endtime="20210730 14:39:22.579"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:22.568" endtime="20210730 14:39:22.579"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:22.568" endtime="20210730 14:39:22.579"/>
</for>
<status status="FAIL" starttime="20210730 14:39:22.567" endtime="20210730 14:39:22.580"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:22.567" endtime="20210730 14:39:22.580"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdefg</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:22.581" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:22.580" endtime="20210730 14:39:22.581"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:22.581" level="INFO">${payload} = {'password': 'abcdefg'}</msg>
<status status="PASS" starttime="20210730 14:39:22.581" endtime="20210730 14:39:22.581"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:22.585" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:22.585" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:22.581" endtime="20210730 14:39:22.585"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:22.586" endtime="20210730 14:39:22.586"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:22.586" endtime="20210730 14:39:22.586"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:22.581" endtime="20210730 14:39:22.586"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:22.581" endtime="20210730 14:39:22.586"/>
</for>
<status status="FAIL" starttime="20210730 14:39:22.580" endtime="20210730 14:39:22.586"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:22.580" endtime="20210730 14:39:22.586"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdefg</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:22.587" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:22.587" endtime="20210730 14:39:22.587"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:22.587" level="INFO">${payload} = {'password': 'abcdefg'}</msg>
<status status="PASS" starttime="20210730 14:39:22.587" endtime="20210730 14:39:22.587"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:22.592" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:22.592" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:22.588" endtime="20210730 14:39:22.592"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:22.592" endtime="20210730 14:39:22.592"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:22.592" endtime="20210730 14:39:22.592"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:22.588" endtime="20210730 14:39:22.592"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:22.588" endtime="20210730 14:39:22.593"/>
</for>
<status status="FAIL" starttime="20210730 14:39:22.586" endtime="20210730 14:39:22.593"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:22.586" endtime="20210730 14:39:22.593"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:22.567" endtime="20210730 14:39:22.593"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:22.598" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:22.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:22.608" level="INFO">${pids} = 25921
25928
25935</msg>
<status status="PASS" starttime="20210730 14:39:22.594" endtime="20210730 14:39:22.609"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:22.610" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:22.609" endtime="20210730 14:39:22.610"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:22.610" level="INFO">${pids} = ['25921', '25928', '25935']</msg>
<status status="PASS" starttime="20210730 14:39:22.610" endtime="20210730 14:39:22.610"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">25921</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:22.614" level="INFO">Running command 'kill 25921 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:22.611" endtime="20210730 14:39:22.614"/>
</kw>
<status status="PASS" starttime="20210730 14:39:22.611" endtime="20210730 14:39:22.614"/>
</iter>
<iter>
<var name="${pid}">25928</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:22.617" level="INFO">Running command 'kill 25928 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:22.615" endtime="20210730 14:39:22.617"/>
</kw>
<status status="PASS" starttime="20210730 14:39:22.614" endtime="20210730 14:39:22.617"/>
</iter>
<iter>
<var name="${pid}">25935</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:22.621" level="INFO">Running command 'kill 25935 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:22.618" endtime="20210730 14:39:22.621"/>
</kw>
<status status="PASS" starttime="20210730 14:39:22.618" endtime="20210730 14:39:22.621"/>
</iter>
<status status="PASS" starttime="20210730 14:39:22.611" endtime="20210730 14:39:22.621"/>
</for>
<status status="PASS" starttime="20210730 14:39:22.610" endtime="20210730 14:39:22.621"/>
</branch>
<status status="PASS" starttime="20210730 14:39:22.610" endtime="20210730 14:39:22.622"/>
</if>
<status status="PASS" starttime="20210730 14:39:22.593" endtime="20210730 14:39:22.622"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcdefg'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:21.016" endtime="20210730 14:39:22.622">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t46" name="With Each Valid Token, Updating Password Of Each System User With abcdefgh Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:22.633" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:22.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:22.643" level="INFO">${pids} = 25964</msg>
<status status="PASS" starttime="20210730 14:39:22.624" endtime="20210730 14:39:22.643"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:22.645" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:22.644" endtime="20210730 14:39:22.645"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:22.646" level="INFO">${pids} = ['25964']</msg>
<status status="PASS" starttime="20210730 14:39:22.645" endtime="20210730 14:39:22.646"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">25964</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:22.660" level="INFO">Running command 'kill 25964 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:22.646" endtime="20210730 14:39:22.660"/>
</kw>
<status status="PASS" starttime="20210730 14:39:22.646" endtime="20210730 14:39:22.660"/>
</iter>
<status status="PASS" starttime="20210730 14:39:22.646" endtime="20210730 14:39:22.660"/>
</for>
<status status="PASS" starttime="20210730 14:39:22.645" endtime="20210730 14:39:22.660"/>
</branch>
<status status="PASS" starttime="20210730 14:39:22.645" endtime="20210730 14:39:22.661"/>
</if>
<status status="PASS" starttime="20210730 14:39:22.624" endtime="20210730 14:39:22.661"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:22.662" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:22.662" endtime="20210730 14:39:22.662"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:22.663" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:22.662" endtime="20210730 14:39:22.663"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:22.663" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:22.663" endtime="20210730 14:39:22.663"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:22.663" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:22.663" endtime="20210730 14:39:22.664"/>
</kw>
<msg timestamp="20210730 14:39:22.664" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:22.662" endtime="20210730 14:39:22.664"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:22.667" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:22.664" endtime="20210730 14:39:22.668"/>
</kw>
<status status="PASS" starttime="20210730 14:39:22.661" endtime="20210730 14:39:22.669"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:22.670" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:22.670" endtime="20210730 14:39:22.676"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:24.177" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:22.677" endtime="20210730 14:39:24.178"/>
</kw>
<status status="PASS" starttime="20210730 14:39:22.669" endtime="20210730 14:39:24.178"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:24.179" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:24.179" endtime="20210730 14:39:24.179"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:24.179" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:24.179" endtime="20210730 14:39:24.179"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:24.180" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:24.179" endtime="20210730 14:39:24.180"/>
</kw>
<msg timestamp="20210730 14:39:24.180" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:24.178" endtime="20210730 14:39:24.180"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:24.180" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:24.180" endtime="20210730 14:39:24.181"/>
</kw>
<status status="PASS" starttime="20210730 14:39:24.178" endtime="20210730 14:39:24.181"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:24.181" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:24.181" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:24.181" endtime="20210730 14:39:24.181"/>
</kw>
<status status="PASS" starttime="20210730 14:39:24.181" endtime="20210730 14:39:24.181"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:24.182" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:24.182" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:24.182" endtime="20210730 14:39:24.183"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:24.183" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:24.183" endtime="20210730 14:39:24.183"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:24.183" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:24.183" endtime="20210730 14:39:24.183"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:24.183" endtime="20210730 14:39:24.184"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:24.184" endtime="20210730 14:39:24.185"/>
</kw>
<status status="PASS" starttime="20210730 14:39:24.183" endtime="20210730 14:39:24.185"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:24.185" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:24.185" endtime="20210730 14:39:24.185"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:24.185" endtime="20210730 14:39:24.186"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:24.186" endtime="20210730 14:39:24.186"/>
</kw>
<status status="PASS" starttime="20210730 14:39:24.185" endtime="20210730 14:39:24.186"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:24.187" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:24.186" endtime="20210730 14:39:24.187"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:24.187" endtime="20210730 14:39:24.187"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:24.188" endtime="20210730 14:39:24.188"/>
</kw>
<status status="PASS" starttime="20210730 14:39:24.186" endtime="20210730 14:39:24.188"/>
</iter>
<status status="PASS" starttime="20210730 14:39:24.183" endtime="20210730 14:39:24.188"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:24.188" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:24.188" endtime="20210730 14:39:24.188"/>
</kw>
<status status="PASS" starttime="20210730 14:39:24.181" endtime="20210730 14:39:24.189"/>
</kw>
<status status="PASS" starttime="20210730 14:39:22.623" endtime="20210730 14:39:24.189"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdefgh</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:24.190" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:24.190" endtime="20210730 14:39:24.190"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:24.190" level="INFO">${payload} = {'password': 'abcdefgh'}</msg>
<status status="PASS" starttime="20210730 14:39:24.190" endtime="20210730 14:39:24.190"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:24.200" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:24.200" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:24.191" endtime="20210730 14:39:24.200"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:24.200" endtime="20210730 14:39:24.200"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:24.201" endtime="20210730 14:39:24.201"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:24.191" endtime="20210730 14:39:24.201"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:24.190" endtime="20210730 14:39:24.201"/>
</for>
<status status="FAIL" starttime="20210730 14:39:24.189" endtime="20210730 14:39:24.201"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:24.189" endtime="20210730 14:39:24.201"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdefgh</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:24.202" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:24.202" endtime="20210730 14:39:24.202"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:24.202" level="INFO">${payload} = {'password': 'abcdefgh'}</msg>
<status status="PASS" starttime="20210730 14:39:24.202" endtime="20210730 14:39:24.202"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:24.207" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:24.208" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:24.203" endtime="20210730 14:39:24.208"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:24.208" endtime="20210730 14:39:24.208"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:24.208" endtime="20210730 14:39:24.208"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:24.203" endtime="20210730 14:39:24.208"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:24.202" endtime="20210730 14:39:24.208"/>
</for>
<status status="FAIL" starttime="20210730 14:39:24.201" endtime="20210730 14:39:24.209"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:24.201" endtime="20210730 14:39:24.209"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdefgh</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:24.210" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:24.210" endtime="20210730 14:39:24.210"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:24.210" level="INFO">${payload} = {'password': 'abcdefgh'}</msg>
<status status="PASS" starttime="20210730 14:39:24.210" endtime="20210730 14:39:24.210"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:24.215" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:24.216" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:24.211" endtime="20210730 14:39:24.216"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:24.216" endtime="20210730 14:39:24.216"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:24.216" endtime="20210730 14:39:24.216"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:24.211" endtime="20210730 14:39:24.216"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:24.211" endtime="20210730 14:39:24.216"/>
</for>
<status status="FAIL" starttime="20210730 14:39:24.209" endtime="20210730 14:39:24.216"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:24.209" endtime="20210730 14:39:24.216"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:24.189" endtime="20210730 14:39:24.216"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:24.222" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:24.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:24.232" level="INFO">${pids} = 25987
25994
25998</msg>
<status status="PASS" starttime="20210730 14:39:24.219" endtime="20210730 14:39:24.232"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:24.233" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:24.232" endtime="20210730 14:39:24.233"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:24.233" level="INFO">${pids} = ['25987', '25994', '25998']</msg>
<status status="PASS" starttime="20210730 14:39:24.233" endtime="20210730 14:39:24.233"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">25987</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:24.236" level="INFO">Running command 'kill 25987 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:24.234" endtime="20210730 14:39:24.237"/>
</kw>
<status status="PASS" starttime="20210730 14:39:24.234" endtime="20210730 14:39:24.237"/>
</iter>
<iter>
<var name="${pid}">25994</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:24.241" level="INFO">Running command 'kill 25994 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:24.237" endtime="20210730 14:39:24.242"/>
</kw>
<status status="PASS" starttime="20210730 14:39:24.237" endtime="20210730 14:39:24.242"/>
</iter>
<iter>
<var name="${pid}">25998</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:24.246" level="INFO">Running command 'kill 25998 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:24.242" endtime="20210730 14:39:24.246"/>
</kw>
<status status="PASS" starttime="20210730 14:39:24.242" endtime="20210730 14:39:24.246"/>
</iter>
<status status="PASS" starttime="20210730 14:39:24.233" endtime="20210730 14:39:24.246"/>
</for>
<status status="PASS" starttime="20210730 14:39:24.233" endtime="20210730 14:39:24.246"/>
</branch>
<status status="PASS" starttime="20210730 14:39:24.233" endtime="20210730 14:39:24.246"/>
</if>
<status status="PASS" starttime="20210730 14:39:24.217" endtime="20210730 14:39:24.247"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcdefgh'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:22.622" endtime="20210730 14:39:24.247">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t47" name="With Each Valid Token, Updating Password Of Each System User With abcdefghjklmnprstoöuüvyz Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:24.252" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:24.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:24.262" level="INFO">${pids} = 26028</msg>
<status status="PASS" starttime="20210730 14:39:24.249" endtime="20210730 14:39:24.262"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:24.263" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:24.263" endtime="20210730 14:39:24.263"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:24.264" level="INFO">${pids} = ['26028']</msg>
<status status="PASS" starttime="20210730 14:39:24.264" endtime="20210730 14:39:24.264"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">26028</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:24.269" level="INFO">Running command 'kill 26028 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:24.264" endtime="20210730 14:39:24.269"/>
</kw>
<status status="PASS" starttime="20210730 14:39:24.264" endtime="20210730 14:39:24.269"/>
</iter>
<status status="PASS" starttime="20210730 14:39:24.264" endtime="20210730 14:39:24.270"/>
</for>
<status status="PASS" starttime="20210730 14:39:24.263" endtime="20210730 14:39:24.270"/>
</branch>
<status status="PASS" starttime="20210730 14:39:24.263" endtime="20210730 14:39:24.270"/>
</if>
<status status="PASS" starttime="20210730 14:39:24.248" endtime="20210730 14:39:24.270"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:24.271" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:24.271" endtime="20210730 14:39:24.271"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:24.272" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:24.271" endtime="20210730 14:39:24.272"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:24.272" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:24.272" endtime="20210730 14:39:24.272"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:24.273" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:24.272" endtime="20210730 14:39:24.273"/>
</kw>
<msg timestamp="20210730 14:39:24.273" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:24.271" endtime="20210730 14:39:24.273"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:24.276" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:24.273" endtime="20210730 14:39:24.282"/>
</kw>
<status status="PASS" starttime="20210730 14:39:24.270" endtime="20210730 14:39:24.282"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:24.283" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:24.283" endtime="20210730 14:39:24.287"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:25.788" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:24.288" endtime="20210730 14:39:25.789"/>
</kw>
<status status="PASS" starttime="20210730 14:39:24.282" endtime="20210730 14:39:25.789"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:25.790" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:25.790" endtime="20210730 14:39:25.790"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:25.791" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:25.791" endtime="20210730 14:39:25.791"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:25.791" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:25.791" endtime="20210730 14:39:25.791"/>
</kw>
<msg timestamp="20210730 14:39:25.791" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:25.790" endtime="20210730 14:39:25.791"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:25.792" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:25.791" endtime="20210730 14:39:25.792"/>
</kw>
<status status="PASS" starttime="20210730 14:39:25.789" endtime="20210730 14:39:25.792"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:25.793" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:25.793" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:25.793" endtime="20210730 14:39:25.794"/>
</kw>
<status status="PASS" starttime="20210730 14:39:25.793" endtime="20210730 14:39:25.794"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:25.795" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:25.795" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:25.794" endtime="20210730 14:39:25.795"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:25.795" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:25.795" endtime="20210730 14:39:25.795"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:25.796" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:25.796" endtime="20210730 14:39:25.796"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:25.796" endtime="20210730 14:39:25.797"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:25.797" endtime="20210730 14:39:25.797"/>
</kw>
<status status="PASS" starttime="20210730 14:39:25.795" endtime="20210730 14:39:25.797"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:25.797" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:25.797" endtime="20210730 14:39:25.797"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:25.797" endtime="20210730 14:39:25.798"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:25.798" endtime="20210730 14:39:25.798"/>
</kw>
<status status="PASS" starttime="20210730 14:39:25.797" endtime="20210730 14:39:25.798"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:25.799" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:25.799" endtime="20210730 14:39:25.799"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:25.799" endtime="20210730 14:39:25.800"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:25.800" endtime="20210730 14:39:25.800"/>
</kw>
<status status="PASS" starttime="20210730 14:39:25.799" endtime="20210730 14:39:25.800"/>
</iter>
<status status="PASS" starttime="20210730 14:39:25.795" endtime="20210730 14:39:25.800"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:25.800" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:25.800" endtime="20210730 14:39:25.800"/>
</kw>
<status status="PASS" starttime="20210730 14:39:25.794" endtime="20210730 14:39:25.801"/>
</kw>
<status status="PASS" starttime="20210730 14:39:24.248" endtime="20210730 14:39:25.801"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdefghjklmnprstoöuüvyz</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:25.802" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:25.802" endtime="20210730 14:39:25.802"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:25.802" level="INFO">${payload} = {'password': 'abcdefghjklmnprstoöuüvyz'}</msg>
<status status="PASS" starttime="20210730 14:39:25.802" endtime="20210730 14:39:25.802"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:25.812" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:25.813" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:25.803" endtime="20210730 14:39:25.813"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:25.813" endtime="20210730 14:39:25.813"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:25.813" endtime="20210730 14:39:25.813"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:25.802" endtime="20210730 14:39:25.813"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:25.802" endtime="20210730 14:39:25.813"/>
</for>
<status status="FAIL" starttime="20210730 14:39:25.801" endtime="20210730 14:39:25.813"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:25.801" endtime="20210730 14:39:25.813"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdefghjklmnprstoöuüvyz</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:25.815" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:25.814" endtime="20210730 14:39:25.815"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:25.815" level="INFO">${payload} = {'password': 'abcdefghjklmnprstoöuüvyz'}</msg>
<status status="PASS" starttime="20210730 14:39:25.815" endtime="20210730 14:39:25.815"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:25.819" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:25.819" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:25.815" endtime="20210730 14:39:25.819"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:25.819" endtime="20210730 14:39:25.820"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:25.820" endtime="20210730 14:39:25.820"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:25.815" endtime="20210730 14:39:25.820"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:25.815" endtime="20210730 14:39:25.820"/>
</for>
<status status="FAIL" starttime="20210730 14:39:25.814" endtime="20210730 14:39:25.820"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:25.813" endtime="20210730 14:39:25.820"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdefghjklmnprstoöuüvyz</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:25.821" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:25.821" endtime="20210730 14:39:25.821"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:25.821" level="INFO">${payload} = {'password': 'abcdefghjklmnprstoöuüvyz'}</msg>
<status status="PASS" starttime="20210730 14:39:25.821" endtime="20210730 14:39:25.821"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:25.826" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:25.826" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:25.822" endtime="20210730 14:39:25.826"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:25.826" endtime="20210730 14:39:25.826"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:25.827" endtime="20210730 14:39:25.827"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:25.822" endtime="20210730 14:39:25.827"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:25.821" endtime="20210730 14:39:25.827"/>
</for>
<status status="FAIL" starttime="20210730 14:39:25.820" endtime="20210730 14:39:25.827"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:25.820" endtime="20210730 14:39:25.827"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:25.801" endtime="20210730 14:39:25.827"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:25.833" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:25.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:25.843" level="INFO">${pids} = 26051
26058
26063</msg>
<status status="PASS" starttime="20210730 14:39:25.828" endtime="20210730 14:39:25.843"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:25.845" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:25.844" endtime="20210730 14:39:25.845"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:25.845" level="INFO">${pids} = ['26051', '26058', '26063']</msg>
<status status="PASS" starttime="20210730 14:39:25.845" endtime="20210730 14:39:25.845"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">26051</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:25.849" level="INFO">Running command 'kill 26051 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:25.846" endtime="20210730 14:39:25.849"/>
</kw>
<status status="PASS" starttime="20210730 14:39:25.846" endtime="20210730 14:39:25.849"/>
</iter>
<iter>
<var name="${pid}">26058</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:25.852" level="INFO">Running command 'kill 26058 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:25.850" endtime="20210730 14:39:25.852"/>
</kw>
<status status="PASS" starttime="20210730 14:39:25.849" endtime="20210730 14:39:25.852"/>
</iter>
<iter>
<var name="${pid}">26063</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:25.856" level="INFO">Running command 'kill 26063 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:25.853" endtime="20210730 14:39:25.857"/>
</kw>
<status status="PASS" starttime="20210730 14:39:25.853" endtime="20210730 14:39:25.857"/>
</iter>
<status status="PASS" starttime="20210730 14:39:25.845" endtime="20210730 14:39:25.857"/>
</for>
<status status="PASS" starttime="20210730 14:39:25.845" endtime="20210730 14:39:25.857"/>
</branch>
<status status="PASS" starttime="20210730 14:39:25.845" endtime="20210730 14:39:25.857"/>
</if>
<status status="PASS" starttime="20210730 14:39:25.827" endtime="20210730 14:39:25.857"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcdefghjklmnprstoöuüvyz'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:24.247" endtime="20210730 14:39:25.858">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t48" name="With Each Valid Token, Updating Password Of Each System User With ABCDEFG Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:25.863" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:25.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:25.873" level="INFO">${pids} = 26092</msg>
<status status="PASS" starttime="20210730 14:39:25.860" endtime="20210730 14:39:25.873"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:25.874" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:25.873" endtime="20210730 14:39:25.874"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:25.875" level="INFO">${pids} = ['26092']</msg>
<status status="PASS" starttime="20210730 14:39:25.874" endtime="20210730 14:39:25.875"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">26092</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:25.880" level="INFO">Running command 'kill 26092 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:25.876" endtime="20210730 14:39:25.880"/>
</kw>
<status status="PASS" starttime="20210730 14:39:25.875" endtime="20210730 14:39:25.880"/>
</iter>
<status status="PASS" starttime="20210730 14:39:25.875" endtime="20210730 14:39:25.880"/>
</for>
<status status="PASS" starttime="20210730 14:39:25.874" endtime="20210730 14:39:25.880"/>
</branch>
<status status="PASS" starttime="20210730 14:39:25.874" endtime="20210730 14:39:25.880"/>
</if>
<status status="PASS" starttime="20210730 14:39:25.859" endtime="20210730 14:39:25.881"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:25.882" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:25.881" endtime="20210730 14:39:25.882"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:25.882" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:25.882" endtime="20210730 14:39:25.883"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:25.883" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:25.883" endtime="20210730 14:39:25.883"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:25.883" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:25.883" endtime="20210730 14:39:25.883"/>
</kw>
<msg timestamp="20210730 14:39:25.884" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:25.882" endtime="20210730 14:39:25.884"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:25.887" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:25.884" endtime="20210730 14:39:25.889"/>
</kw>
<status status="PASS" starttime="20210730 14:39:25.881" endtime="20210730 14:39:25.889"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:25.891" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:25.890" endtime="20210730 14:39:25.902"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:27.404" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:25.903" endtime="20210730 14:39:27.405"/>
</kw>
<status status="PASS" starttime="20210730 14:39:25.889" endtime="20210730 14:39:27.405"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:27.407" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:27.407" endtime="20210730 14:39:27.407"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:27.408" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:27.407" endtime="20210730 14:39:27.408"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:27.408" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:27.408" endtime="20210730 14:39:27.408"/>
</kw>
<msg timestamp="20210730 14:39:27.408" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:27.406" endtime="20210730 14:39:27.408"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:27.409" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:27.408" endtime="20210730 14:39:27.409"/>
</kw>
<status status="PASS" starttime="20210730 14:39:27.405" endtime="20210730 14:39:27.409"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:27.410" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:27.410" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:27.410" endtime="20210730 14:39:27.410"/>
</kw>
<status status="PASS" starttime="20210730 14:39:27.409" endtime="20210730 14:39:27.410"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:27.411" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:27.411" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:27.411" endtime="20210730 14:39:27.411"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:27.412" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:27.411" endtime="20210730 14:39:27.412"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:27.412" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:27.412" endtime="20210730 14:39:27.412"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:27.412" endtime="20210730 14:39:27.413"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:27.413" endtime="20210730 14:39:27.414"/>
</kw>
<status status="PASS" starttime="20210730 14:39:27.412" endtime="20210730 14:39:27.414"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:27.414" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:27.414" endtime="20210730 14:39:27.414"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:27.414" endtime="20210730 14:39:27.415"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:27.415" endtime="20210730 14:39:27.415"/>
</kw>
<status status="PASS" starttime="20210730 14:39:27.414" endtime="20210730 14:39:27.415"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:27.416" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:27.415" endtime="20210730 14:39:27.416"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:27.416" endtime="20210730 14:39:27.417"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:27.417" endtime="20210730 14:39:27.417"/>
</kw>
<status status="PASS" starttime="20210730 14:39:27.415" endtime="20210730 14:39:27.417"/>
</iter>
<status status="PASS" starttime="20210730 14:39:27.412" endtime="20210730 14:39:27.417"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:27.417" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:27.417" endtime="20210730 14:39:27.418"/>
</kw>
<status status="PASS" starttime="20210730 14:39:27.410" endtime="20210730 14:39:27.418"/>
</kw>
<status status="PASS" starttime="20210730 14:39:25.859" endtime="20210730 14:39:27.418"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCDEFG</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:27.419" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:27.419" endtime="20210730 14:39:27.419"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:27.419" level="INFO">${payload} = {'password': 'ABCDEFG'}</msg>
<status status="PASS" starttime="20210730 14:39:27.419" endtime="20210730 14:39:27.419"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:27.430" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:27.430" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:27.420" endtime="20210730 14:39:27.430"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:27.430" endtime="20210730 14:39:27.430"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:27.430" endtime="20210730 14:39:27.430"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:27.420" endtime="20210730 14:39:27.430"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:27.419" endtime="20210730 14:39:27.430"/>
</for>
<status status="FAIL" starttime="20210730 14:39:27.418" endtime="20210730 14:39:27.431"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:27.418" endtime="20210730 14:39:27.431"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCDEFG</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:27.432" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:27.431" endtime="20210730 14:39:27.432"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:27.432" level="INFO">${payload} = {'password': 'ABCDEFG'}</msg>
<status status="PASS" starttime="20210730 14:39:27.432" endtime="20210730 14:39:27.432"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:27.437" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:27.437" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:27.433" endtime="20210730 14:39:27.437"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:27.437" endtime="20210730 14:39:27.437"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:27.437" endtime="20210730 14:39:27.437"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:27.432" endtime="20210730 14:39:27.437"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:27.432" endtime="20210730 14:39:27.437"/>
</for>
<status status="FAIL" starttime="20210730 14:39:27.431" endtime="20210730 14:39:27.438"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:27.431" endtime="20210730 14:39:27.438"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCDEFG</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:27.439" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:27.438" endtime="20210730 14:39:27.439"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:27.439" level="INFO">${payload} = {'password': 'ABCDEFG'}</msg>
<status status="PASS" starttime="20210730 14:39:27.439" endtime="20210730 14:39:27.439"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:27.444" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:27.445" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:27.440" endtime="20210730 14:39:27.445"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:27.445" endtime="20210730 14:39:27.445"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:27.445" endtime="20210730 14:39:27.445"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:27.440" endtime="20210730 14:39:27.445"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:27.440" endtime="20210730 14:39:27.445"/>
</for>
<status status="FAIL" starttime="20210730 14:39:27.438" endtime="20210730 14:39:27.446"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:27.438" endtime="20210730 14:39:27.446"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:27.418" endtime="20210730 14:39:27.446"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:27.451" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:27.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:27.461" level="INFO">${pids} = 26115
26122
26127</msg>
<status status="PASS" starttime="20210730 14:39:27.447" endtime="20210730 14:39:27.461"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:27.462" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:27.461" endtime="20210730 14:39:27.462"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:27.462" level="INFO">${pids} = ['26115', '26122', '26127']</msg>
<status status="PASS" starttime="20210730 14:39:27.462" endtime="20210730 14:39:27.463"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">26115</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:27.474" level="INFO">Running command 'kill 26115 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:27.463" endtime="20210730 14:39:27.475"/>
</kw>
<status status="PASS" starttime="20210730 14:39:27.463" endtime="20210730 14:39:27.475"/>
</iter>
<iter>
<var name="${pid}">26122</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:27.488" level="INFO">Running command 'kill 26122 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:27.476" endtime="20210730 14:39:27.489"/>
</kw>
<status status="PASS" starttime="20210730 14:39:27.475" endtime="20210730 14:39:27.489"/>
</iter>
<iter>
<var name="${pid}">26127</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:27.495" level="INFO">Running command 'kill 26127 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:27.490" endtime="20210730 14:39:27.495"/>
</kw>
<status status="PASS" starttime="20210730 14:39:27.490" endtime="20210730 14:39:27.496"/>
</iter>
<status status="PASS" starttime="20210730 14:39:27.463" endtime="20210730 14:39:27.496"/>
</for>
<status status="PASS" starttime="20210730 14:39:27.462" endtime="20210730 14:39:27.496"/>
</branch>
<status status="PASS" starttime="20210730 14:39:27.462" endtime="20210730 14:39:27.496"/>
</if>
<status status="PASS" starttime="20210730 14:39:27.446" endtime="20210730 14:39:27.496"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCDEFG'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:25.858" endtime="20210730 14:39:27.496">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t49" name="With Each Valid Token, Updating Password Of Each System User With ABCDEFGH Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:27.503" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:27.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:27.530" level="INFO">${pids} = 26156</msg>
<status status="PASS" starttime="20210730 14:39:27.500" endtime="20210730 14:39:27.530"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:27.531" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:27.531" endtime="20210730 14:39:27.531"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:27.532" level="INFO">${pids} = ['26156']</msg>
<status status="PASS" starttime="20210730 14:39:27.532" endtime="20210730 14:39:27.532"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">26156</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:27.546" level="INFO">Running command 'kill 26156 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:27.532" endtime="20210730 14:39:27.547"/>
</kw>
<status status="PASS" starttime="20210730 14:39:27.532" endtime="20210730 14:39:27.547"/>
</iter>
<status status="PASS" starttime="20210730 14:39:27.532" endtime="20210730 14:39:27.547"/>
</for>
<status status="PASS" starttime="20210730 14:39:27.531" endtime="20210730 14:39:27.547"/>
</branch>
<status status="PASS" starttime="20210730 14:39:27.531" endtime="20210730 14:39:27.547"/>
</if>
<status status="PASS" starttime="20210730 14:39:27.499" endtime="20210730 14:39:27.547"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:27.548" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:27.548" endtime="20210730 14:39:27.548"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:27.549" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:27.549" endtime="20210730 14:39:27.549"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:27.550" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:27.549" endtime="20210730 14:39:27.550"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:27.550" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:27.550" endtime="20210730 14:39:27.550"/>
</kw>
<msg timestamp="20210730 14:39:27.550" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:27.549" endtime="20210730 14:39:27.550"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:27.554" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:27.550" endtime="20210730 14:39:27.555"/>
</kw>
<status status="PASS" starttime="20210730 14:39:27.547" endtime="20210730 14:39:27.556"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:27.558" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:27.557" endtime="20210730 14:39:27.562"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:29.063" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:27.562" endtime="20210730 14:39:29.064"/>
</kw>
<status status="PASS" starttime="20210730 14:39:27.556" endtime="20210730 14:39:29.064"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:29.066" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:29.065" endtime="20210730 14:39:29.066"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:29.066" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:29.066" endtime="20210730 14:39:29.066"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:29.067" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:29.066" endtime="20210730 14:39:29.067"/>
</kw>
<msg timestamp="20210730 14:39:29.067" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:29.065" endtime="20210730 14:39:29.067"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:29.067" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:29.067" endtime="20210730 14:39:29.068"/>
</kw>
<status status="PASS" starttime="20210730 14:39:29.065" endtime="20210730 14:39:29.068"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:29.068" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:29.068" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:29.068" endtime="20210730 14:39:29.069"/>
</kw>
<status status="PASS" starttime="20210730 14:39:29.068" endtime="20210730 14:39:29.069"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:29.069" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:29.069" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:29.069" endtime="20210730 14:39:29.069"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:29.070" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:29.069" endtime="20210730 14:39:29.070"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:29.070" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:29.070" endtime="20210730 14:39:29.070"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:29.070" endtime="20210730 14:39:29.071"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:29.071" endtime="20210730 14:39:29.071"/>
</kw>
<status status="PASS" starttime="20210730 14:39:29.070" endtime="20210730 14:39:29.071"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:29.072" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:29.072" endtime="20210730 14:39:29.072"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:29.072" endtime="20210730 14:39:29.073"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:29.073" endtime="20210730 14:39:29.074"/>
</kw>
<status status="PASS" starttime="20210730 14:39:29.071" endtime="20210730 14:39:29.074"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:29.075" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:29.074" endtime="20210730 14:39:29.075"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:29.075" endtime="20210730 14:39:29.075"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:29.076" endtime="20210730 14:39:29.076"/>
</kw>
<status status="PASS" starttime="20210730 14:39:29.074" endtime="20210730 14:39:29.076"/>
</iter>
<status status="PASS" starttime="20210730 14:39:29.070" endtime="20210730 14:39:29.076"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:29.076" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:29.076" endtime="20210730 14:39:29.076"/>
</kw>
<status status="PASS" starttime="20210730 14:39:29.069" endtime="20210730 14:39:29.077"/>
</kw>
<status status="PASS" starttime="20210730 14:39:27.498" endtime="20210730 14:39:29.077"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCDEFGH</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:29.078" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:29.078" endtime="20210730 14:39:29.078"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:29.078" level="INFO">${payload} = {'password': 'ABCDEFGH'}</msg>
<status status="PASS" starttime="20210730 14:39:29.078" endtime="20210730 14:39:29.079"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:29.088" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:29.088" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:29.079" endtime="20210730 14:39:29.088"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:29.088" endtime="20210730 14:39:29.088"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:29.088" endtime="20210730 14:39:29.089"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:29.079" endtime="20210730 14:39:29.089"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:29.079" endtime="20210730 14:39:29.089"/>
</for>
<status status="FAIL" starttime="20210730 14:39:29.077" endtime="20210730 14:39:29.089"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:29.077" endtime="20210730 14:39:29.089"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCDEFGH</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:29.090" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:29.090" endtime="20210730 14:39:29.090"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:29.091" level="INFO">${payload} = {'password': 'ABCDEFGH'}</msg>
<status status="PASS" starttime="20210730 14:39:29.090" endtime="20210730 14:39:29.091"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:29.095" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:29.095" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:29.091" endtime="20210730 14:39:29.095"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:29.095" endtime="20210730 14:39:29.095"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:29.095" endtime="20210730 14:39:29.095"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:29.091" endtime="20210730 14:39:29.096"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:29.091" endtime="20210730 14:39:29.096"/>
</for>
<status status="FAIL" starttime="20210730 14:39:29.089" endtime="20210730 14:39:29.096"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:29.089" endtime="20210730 14:39:29.096"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCDEFGH</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:29.097" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:29.097" endtime="20210730 14:39:29.097"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:29.098" level="INFO">${payload} = {'password': 'ABCDEFGH'}</msg>
<status status="PASS" starttime="20210730 14:39:29.097" endtime="20210730 14:39:29.098"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:29.102" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:29.102" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:29.098" endtime="20210730 14:39:29.102"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:29.103" endtime="20210730 14:39:29.103"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:29.103" endtime="20210730 14:39:29.103"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:29.098" endtime="20210730 14:39:29.103"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:29.098" endtime="20210730 14:39:29.103"/>
</for>
<status status="FAIL" starttime="20210730 14:39:29.096" endtime="20210730 14:39:29.103"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:29.096" endtime="20210730 14:39:29.103"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:29.077" endtime="20210730 14:39:29.103"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:29.109" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:29.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:29.120" level="INFO">${pids} = 26181
26188
26192</msg>
<status status="PASS" starttime="20210730 14:39:29.104" endtime="20210730 14:39:29.120"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:29.121" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:29.121" endtime="20210730 14:39:29.121"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:29.122" level="INFO">${pids} = ['26181', '26188', '26192']</msg>
<status status="PASS" starttime="20210730 14:39:29.122" endtime="20210730 14:39:29.122"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">26181</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:29.126" level="INFO">Running command 'kill 26181 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:29.123" endtime="20210730 14:39:29.126"/>
</kw>
<status status="PASS" starttime="20210730 14:39:29.122" endtime="20210730 14:39:29.126"/>
</iter>
<iter>
<var name="${pid}">26188</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:29.129" level="INFO">Running command 'kill 26188 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:29.127" endtime="20210730 14:39:29.131"/>
</kw>
<status status="PASS" starttime="20210730 14:39:29.127" endtime="20210730 14:39:29.131"/>
</iter>
<iter>
<var name="${pid}">26192</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:29.135" level="INFO">Running command 'kill 26192 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:29.132" endtime="20210730 14:39:29.136"/>
</kw>
<status status="PASS" starttime="20210730 14:39:29.132" endtime="20210730 14:39:29.136"/>
</iter>
<status status="PASS" starttime="20210730 14:39:29.122" endtime="20210730 14:39:29.136"/>
</for>
<status status="PASS" starttime="20210730 14:39:29.122" endtime="20210730 14:39:29.136"/>
</branch>
<status status="PASS" starttime="20210730 14:39:29.121" endtime="20210730 14:39:29.136"/>
</if>
<status status="PASS" starttime="20210730 14:39:29.104" endtime="20210730 14:39:29.136"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCDEFGH'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:27.497" endtime="20210730 14:39:29.137">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t50" name="With Each Valid Token, Updating Password Of Each System User With ABCDEFGHJKLMNPRSTOÖUÜVYZ Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:29.143" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:29.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:29.155" level="INFO">${pids} = 26221</msg>
<status status="PASS" starttime="20210730 14:39:29.139" endtime="20210730 14:39:29.155"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:29.156" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:29.155" endtime="20210730 14:39:29.156"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:29.157" level="INFO">${pids} = ['26221']</msg>
<status status="PASS" starttime="20210730 14:39:29.157" endtime="20210730 14:39:29.157"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">26221</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:29.160" level="INFO">Running command 'kill 26221 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:29.157" endtime="20210730 14:39:29.161"/>
</kw>
<status status="PASS" starttime="20210730 14:39:29.157" endtime="20210730 14:39:29.161"/>
</iter>
<status status="PASS" starttime="20210730 14:39:29.157" endtime="20210730 14:39:29.161"/>
</for>
<status status="PASS" starttime="20210730 14:39:29.156" endtime="20210730 14:39:29.161"/>
</branch>
<status status="PASS" starttime="20210730 14:39:29.156" endtime="20210730 14:39:29.161"/>
</if>
<status status="PASS" starttime="20210730 14:39:29.138" endtime="20210730 14:39:29.161"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:29.162" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:29.162" endtime="20210730 14:39:29.162"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:29.163" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:29.163" endtime="20210730 14:39:29.163"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:29.163" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:29.163" endtime="20210730 14:39:29.163"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:29.164" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:29.163" endtime="20210730 14:39:29.164"/>
</kw>
<msg timestamp="20210730 14:39:29.164" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:29.162" endtime="20210730 14:39:29.164"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:29.169" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:29.164" endtime="20210730 14:39:29.172"/>
</kw>
<status status="PASS" starttime="20210730 14:39:29.161" endtime="20210730 14:39:29.172"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:29.174" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:29.174" endtime="20210730 14:39:29.178"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:30.685" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:29.179" endtime="20210730 14:39:30.685"/>
</kw>
<status status="PASS" starttime="20210730 14:39:29.173" endtime="20210730 14:39:30.686"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:30.687" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:30.686" endtime="20210730 14:39:30.687"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:30.687" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:30.687" endtime="20210730 14:39:30.687"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:30.688" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:30.687" endtime="20210730 14:39:30.688"/>
</kw>
<msg timestamp="20210730 14:39:30.688" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:30.686" endtime="20210730 14:39:30.688"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:30.688" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:30.688" endtime="20210730 14:39:30.689"/>
</kw>
<status status="PASS" starttime="20210730 14:39:30.686" endtime="20210730 14:39:30.689"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:30.689" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:30.689" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:30.689" endtime="20210730 14:39:30.689"/>
</kw>
<status status="PASS" starttime="20210730 14:39:30.689" endtime="20210730 14:39:30.689"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:30.690" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:30.690" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:30.690" endtime="20210730 14:39:30.690"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:30.691" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:30.691" endtime="20210730 14:39:30.691"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:30.691" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:30.691" endtime="20210730 14:39:30.691"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:30.691" endtime="20210730 14:39:30.692"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:30.692" endtime="20210730 14:39:30.693"/>
</kw>
<status status="PASS" starttime="20210730 14:39:30.691" endtime="20210730 14:39:30.693"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:30.693" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:30.693" endtime="20210730 14:39:30.693"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:30.693" endtime="20210730 14:39:30.694"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:30.694" endtime="20210730 14:39:30.694"/>
</kw>
<status status="PASS" starttime="20210730 14:39:30.693" endtime="20210730 14:39:30.694"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:30.695" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:30.695" endtime="20210730 14:39:30.695"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:30.695" endtime="20210730 14:39:30.696"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:30.696" endtime="20210730 14:39:30.696"/>
</kw>
<status status="PASS" starttime="20210730 14:39:30.694" endtime="20210730 14:39:30.696"/>
</iter>
<status status="PASS" starttime="20210730 14:39:30.691" endtime="20210730 14:39:30.696"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:30.697" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:30.696" endtime="20210730 14:39:30.697"/>
</kw>
<status status="PASS" starttime="20210730 14:39:30.690" endtime="20210730 14:39:30.697"/>
</kw>
<status status="PASS" starttime="20210730 14:39:29.138" endtime="20210730 14:39:30.697"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCDEFGHJKLMNPRSTOÖUÜVYZ</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:30.698" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:30.698" endtime="20210730 14:39:30.698"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:30.699" level="INFO">${payload} = {'password': 'ABCDEFGHJKLMNPRSTOÖUÜVYZ'}</msg>
<status status="PASS" starttime="20210730 14:39:30.698" endtime="20210730 14:39:30.699"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:30.710" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:30.710" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:30.699" endtime="20210730 14:39:30.710"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:30.710" endtime="20210730 14:39:30.710"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:30.710" endtime="20210730 14:39:30.710"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:30.699" endtime="20210730 14:39:30.711"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:30.699" endtime="20210730 14:39:30.711"/>
</for>
<status status="FAIL" starttime="20210730 14:39:30.697" endtime="20210730 14:39:30.711"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:30.697" endtime="20210730 14:39:30.711"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCDEFGHJKLMNPRSTOÖUÜVYZ</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:30.712" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:30.712" endtime="20210730 14:39:30.712"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:30.713" level="INFO">${payload} = {'password': 'ABCDEFGHJKLMNPRSTOÖUÜVYZ'}</msg>
<status status="PASS" starttime="20210730 14:39:30.712" endtime="20210730 14:39:30.713"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:30.717" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:30.717" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:30.713" endtime="20210730 14:39:30.717"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:30.718" endtime="20210730 14:39:30.718"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:30.718" endtime="20210730 14:39:30.718"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:30.713" endtime="20210730 14:39:30.718"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:30.713" endtime="20210730 14:39:30.718"/>
</for>
<status status="FAIL" starttime="20210730 14:39:30.711" endtime="20210730 14:39:30.718"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:30.711" endtime="20210730 14:39:30.718"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCDEFGHJKLMNPRSTOÖUÜVYZ</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:30.719" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:30.719" endtime="20210730 14:39:30.719"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:30.719" level="INFO">${payload} = {'password': 'ABCDEFGHJKLMNPRSTOÖUÜVYZ'}</msg>
<status status="PASS" starttime="20210730 14:39:30.719" endtime="20210730 14:39:30.719"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:30.724" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:30.724" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:30.720" endtime="20210730 14:39:30.724"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:30.724" endtime="20210730 14:39:30.724"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:30.724" endtime="20210730 14:39:30.724"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:30.720" endtime="20210730 14:39:30.724"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:30.719" endtime="20210730 14:39:30.725"/>
</for>
<status status="FAIL" starttime="20210730 14:39:30.718" endtime="20210730 14:39:30.725"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:30.718" endtime="20210730 14:39:30.725"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:30.697" endtime="20210730 14:39:30.725"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:30.730" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:30.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:30.740" level="INFO">${pids} = 26244
26251
26256</msg>
<status status="PASS" starttime="20210730 14:39:30.726" endtime="20210730 14:39:30.740"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:30.741" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:30.741" endtime="20210730 14:39:30.741"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:30.742" level="INFO">${pids} = ['26244', '26251', '26256']</msg>
<status status="PASS" starttime="20210730 14:39:30.742" endtime="20210730 14:39:30.742"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">26244</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:30.746" level="INFO">Running command 'kill 26244 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:30.743" endtime="20210730 14:39:30.746"/>
</kw>
<status status="PASS" starttime="20210730 14:39:30.742" endtime="20210730 14:39:30.746"/>
</iter>
<iter>
<var name="${pid}">26251</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:30.749" level="INFO">Running command 'kill 26251 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:30.747" endtime="20210730 14:39:30.749"/>
</kw>
<status status="PASS" starttime="20210730 14:39:30.746" endtime="20210730 14:39:30.749"/>
</iter>
<iter>
<var name="${pid}">26256</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:30.753" level="INFO">Running command 'kill 26256 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:30.750" endtime="20210730 14:39:30.753"/>
</kw>
<status status="PASS" starttime="20210730 14:39:30.750" endtime="20210730 14:39:30.753"/>
</iter>
<status status="PASS" starttime="20210730 14:39:30.742" endtime="20210730 14:39:30.753"/>
</for>
<status status="PASS" starttime="20210730 14:39:30.742" endtime="20210730 14:39:30.753"/>
</branch>
<status status="PASS" starttime="20210730 14:39:30.741" endtime="20210730 14:39:30.754"/>
</if>
<status status="PASS" starttime="20210730 14:39:30.725" endtime="20210730 14:39:30.754"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCDEFGHJKLMNPRSTOÖUÜVYZ'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:29.137" endtime="20210730 14:39:30.754">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t51" name="With Each Valid Token, Updating Password Of Each System User With 0123456 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:30.761" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:30.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:30.771" level="INFO">${pids} = 26286</msg>
<status status="PASS" starttime="20210730 14:39:30.757" endtime="20210730 14:39:30.771"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:30.772" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:30.771" endtime="20210730 14:39:30.772"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:30.773" level="INFO">${pids} = ['26286']</msg>
<status status="PASS" starttime="20210730 14:39:30.772" endtime="20210730 14:39:30.773"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">26286</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:30.777" level="INFO">Running command 'kill 26286 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:30.773" endtime="20210730 14:39:30.777"/>
</kw>
<status status="PASS" starttime="20210730 14:39:30.773" endtime="20210730 14:39:30.777"/>
</iter>
<status status="PASS" starttime="20210730 14:39:30.773" endtime="20210730 14:39:30.777"/>
</for>
<status status="PASS" starttime="20210730 14:39:30.772" endtime="20210730 14:39:30.777"/>
</branch>
<status status="PASS" starttime="20210730 14:39:30.772" endtime="20210730 14:39:30.777"/>
</if>
<status status="PASS" starttime="20210730 14:39:30.756" endtime="20210730 14:39:30.778"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:30.779" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:30.778" endtime="20210730 14:39:30.779"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:30.780" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:30.779" endtime="20210730 14:39:30.780"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:30.780" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:30.780" endtime="20210730 14:39:30.780"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:30.780" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:30.780" endtime="20210730 14:39:30.780"/>
</kw>
<msg timestamp="20210730 14:39:30.781" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:30.779" endtime="20210730 14:39:30.781"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:30.783" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:30.781" endtime="20210730 14:39:30.785"/>
</kw>
<status status="PASS" starttime="20210730 14:39:30.778" endtime="20210730 14:39:30.785"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:30.787" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:30.786" endtime="20210730 14:39:30.792"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:32.295" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:30.793" endtime="20210730 14:39:32.295"/>
</kw>
<status status="PASS" starttime="20210730 14:39:30.786" endtime="20210730 14:39:32.295"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:32.297" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:32.296" endtime="20210730 14:39:32.297"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:32.297" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:32.297" endtime="20210730 14:39:32.297"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:32.297" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:32.297" endtime="20210730 14:39:32.298"/>
</kw>
<msg timestamp="20210730 14:39:32.298" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:32.296" endtime="20210730 14:39:32.298"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:32.298" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:32.298" endtime="20210730 14:39:32.299"/>
</kw>
<status status="PASS" starttime="20210730 14:39:32.296" endtime="20210730 14:39:32.299"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:32.299" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:32.299" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:32.299" endtime="20210730 14:39:32.299"/>
</kw>
<status status="PASS" starttime="20210730 14:39:32.299" endtime="20210730 14:39:32.300"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:32.300" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:32.300" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:32.300" endtime="20210730 14:39:32.300"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:32.300" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:32.300" endtime="20210730 14:39:32.301"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:32.301" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:32.301" endtime="20210730 14:39:32.301"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:32.301" endtime="20210730 14:39:32.302"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:32.302" endtime="20210730 14:39:32.302"/>
</kw>
<status status="PASS" starttime="20210730 14:39:32.301" endtime="20210730 14:39:32.302"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:32.303" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:32.303" endtime="20210730 14:39:32.303"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:32.303" endtime="20210730 14:39:32.304"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:32.304" endtime="20210730 14:39:32.304"/>
</kw>
<status status="PASS" starttime="20210730 14:39:32.302" endtime="20210730 14:39:32.304"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:32.304" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:32.304" endtime="20210730 14:39:32.304"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:32.304" endtime="20210730 14:39:32.305"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:32.306" endtime="20210730 14:39:32.306"/>
</kw>
<status status="PASS" starttime="20210730 14:39:32.304" endtime="20210730 14:39:32.306"/>
</iter>
<status status="PASS" starttime="20210730 14:39:32.301" endtime="20210730 14:39:32.306"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:32.307" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:32.306" endtime="20210730 14:39:32.307"/>
</kw>
<status status="PASS" starttime="20210730 14:39:32.300" endtime="20210730 14:39:32.307"/>
</kw>
<status status="PASS" starttime="20210730 14:39:30.756" endtime="20210730 14:39:32.307"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=0123456</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:32.309" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:32.308" endtime="20210730 14:39:32.309"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:32.309" level="INFO">${payload} = {'password': '0123456'}</msg>
<status status="PASS" starttime="20210730 14:39:32.309" endtime="20210730 14:39:32.309"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:32.319" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:32.319" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:32.310" endtime="20210730 14:39:32.319"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:32.319" endtime="20210730 14:39:32.320"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:32.320" endtime="20210730 14:39:32.320"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:32.310" endtime="20210730 14:39:32.320"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:32.309" endtime="20210730 14:39:32.320"/>
</for>
<status status="FAIL" starttime="20210730 14:39:32.308" endtime="20210730 14:39:32.320"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:32.308" endtime="20210730 14:39:32.320"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=0123456</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:32.321" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:32.321" endtime="20210730 14:39:32.321"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:32.322" level="INFO">${payload} = {'password': '0123456'}</msg>
<status status="PASS" starttime="20210730 14:39:32.321" endtime="20210730 14:39:32.322"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:32.326" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:32.327" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:32.322" endtime="20210730 14:39:32.327"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:32.327" endtime="20210730 14:39:32.327"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:32.327" endtime="20210730 14:39:32.327"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:32.322" endtime="20210730 14:39:32.327"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:32.322" endtime="20210730 14:39:32.327"/>
</for>
<status status="FAIL" starttime="20210730 14:39:32.320" endtime="20210730 14:39:32.327"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:32.320" endtime="20210730 14:39:32.327"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=0123456</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:32.328" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:32.328" endtime="20210730 14:39:32.328"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:32.329" level="INFO">${payload} = {'password': '0123456'}</msg>
<status status="PASS" starttime="20210730 14:39:32.328" endtime="20210730 14:39:32.329"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:32.333" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:32.333" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:32.329" endtime="20210730 14:39:32.333"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:32.334" endtime="20210730 14:39:32.334"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:32.334" endtime="20210730 14:39:32.334"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:32.329" endtime="20210730 14:39:32.334"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:32.329" endtime="20210730 14:39:32.334"/>
</for>
<status status="FAIL" starttime="20210730 14:39:32.327" endtime="20210730 14:39:32.334"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:32.327" endtime="20210730 14:39:32.334"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:32.307" endtime="20210730 14:39:32.334"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:32.341" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:32.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:32.351" level="INFO">${pids} = 26309
26316
26324</msg>
<status status="PASS" starttime="20210730 14:39:32.335" endtime="20210730 14:39:32.351"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:32.352" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:32.351" endtime="20210730 14:39:32.352"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:32.352" level="INFO">${pids} = ['26309', '26316', '26324']</msg>
<status status="PASS" starttime="20210730 14:39:32.352" endtime="20210730 14:39:32.352"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">26309</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:32.356" level="INFO">Running command 'kill 26309 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:32.353" endtime="20210730 14:39:32.356"/>
</kw>
<status status="PASS" starttime="20210730 14:39:32.353" endtime="20210730 14:39:32.356"/>
</iter>
<iter>
<var name="${pid}">26316</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:32.360" level="INFO">Running command 'kill 26316 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:32.357" endtime="20210730 14:39:32.360"/>
</kw>
<status status="PASS" starttime="20210730 14:39:32.357" endtime="20210730 14:39:32.361"/>
</iter>
<iter>
<var name="${pid}">26324</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:32.364" level="INFO">Running command 'kill 26324 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:32.361" endtime="20210730 14:39:32.365"/>
</kw>
<status status="PASS" starttime="20210730 14:39:32.361" endtime="20210730 14:39:32.365"/>
</iter>
<status status="PASS" starttime="20210730 14:39:32.352" endtime="20210730 14:39:32.365"/>
</for>
<status status="PASS" starttime="20210730 14:39:32.352" endtime="20210730 14:39:32.366"/>
</branch>
<status status="PASS" starttime="20210730 14:39:32.352" endtime="20210730 14:39:32.366"/>
</if>
<status status="PASS" starttime="20210730 14:39:32.335" endtime="20210730 14:39:32.366"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": '0123456'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:30.755" endtime="20210730 14:39:32.366">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t52" name="With Each Valid Token, Updating Password Of Each System User With 01234567 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:32.373" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:32.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:32.388" level="INFO">${pids} = 26353</msg>
<status status="PASS" starttime="20210730 14:39:32.369" endtime="20210730 14:39:32.388"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:32.389" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:32.388" endtime="20210730 14:39:32.389"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:32.389" level="INFO">${pids} = ['26353']</msg>
<status status="PASS" starttime="20210730 14:39:32.389" endtime="20210730 14:39:32.389"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">26353</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:32.394" level="INFO">Running command 'kill 26353 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:32.391" endtime="20210730 14:39:32.395"/>
</kw>
<status status="PASS" starttime="20210730 14:39:32.390" endtime="20210730 14:39:32.395"/>
</iter>
<status status="PASS" starttime="20210730 14:39:32.389" endtime="20210730 14:39:32.395"/>
</for>
<status status="PASS" starttime="20210730 14:39:32.389" endtime="20210730 14:39:32.395"/>
</branch>
<status status="PASS" starttime="20210730 14:39:32.389" endtime="20210730 14:39:32.395"/>
</if>
<status status="PASS" starttime="20210730 14:39:32.369" endtime="20210730 14:39:32.396"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:32.398" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:32.398" endtime="20210730 14:39:32.398"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:32.399" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:32.399" endtime="20210730 14:39:32.399"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:32.399" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:32.399" endtime="20210730 14:39:32.399"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:32.400" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:32.400" endtime="20210730 14:39:32.400"/>
</kw>
<msg timestamp="20210730 14:39:32.400" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:32.398" endtime="20210730 14:39:32.400"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:32.404" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:32.400" endtime="20210730 14:39:32.406"/>
</kw>
<status status="PASS" starttime="20210730 14:39:32.397" endtime="20210730 14:39:32.406"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:32.408" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:32.407" endtime="20210730 14:39:32.412"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:33.920" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:32.412" endtime="20210730 14:39:33.921"/>
</kw>
<status status="PASS" starttime="20210730 14:39:32.407" endtime="20210730 14:39:33.921"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:33.922" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:33.922" endtime="20210730 14:39:33.922"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:33.923" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:33.922" endtime="20210730 14:39:33.923"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:33.923" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:33.923" endtime="20210730 14:39:33.923"/>
</kw>
<msg timestamp="20210730 14:39:33.923" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:33.922" endtime="20210730 14:39:33.923"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:33.924" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:33.924" endtime="20210730 14:39:33.925"/>
</kw>
<status status="PASS" starttime="20210730 14:39:33.921" endtime="20210730 14:39:33.925"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:33.926" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:33.926" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:33.925" endtime="20210730 14:39:33.926"/>
</kw>
<status status="PASS" starttime="20210730 14:39:33.925" endtime="20210730 14:39:33.926"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:33.926" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:33.927" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:33.926" endtime="20210730 14:39:33.927"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:33.927" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:33.927" endtime="20210730 14:39:33.927"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:33.928" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:33.927" endtime="20210730 14:39:33.928"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:33.928" endtime="20210730 14:39:33.929"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:33.929" endtime="20210730 14:39:33.929"/>
</kw>
<status status="PASS" starttime="20210730 14:39:33.927" endtime="20210730 14:39:33.929"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:33.929" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:33.929" endtime="20210730 14:39:33.929"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:33.929" endtime="20210730 14:39:33.930"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:33.930" endtime="20210730 14:39:33.930"/>
</kw>
<status status="PASS" starttime="20210730 14:39:33.929" endtime="20210730 14:39:33.930"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:33.931" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:33.931" endtime="20210730 14:39:33.931"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:33.931" endtime="20210730 14:39:33.932"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:33.932" endtime="20210730 14:39:33.932"/>
</kw>
<status status="PASS" starttime="20210730 14:39:33.930" endtime="20210730 14:39:33.932"/>
</iter>
<status status="PASS" starttime="20210730 14:39:33.927" endtime="20210730 14:39:33.932"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:33.932" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:33.932" endtime="20210730 14:39:33.933"/>
</kw>
<status status="PASS" starttime="20210730 14:39:33.926" endtime="20210730 14:39:33.933"/>
</kw>
<status status="PASS" starttime="20210730 14:39:32.368" endtime="20210730 14:39:33.933"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=01234567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:33.934" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:33.934" endtime="20210730 14:39:33.934"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:33.934" level="INFO">${payload} = {'password': '01234567'}</msg>
<status status="PASS" starttime="20210730 14:39:33.934" endtime="20210730 14:39:33.934"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:33.962" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:33.962" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:33.935" endtime="20210730 14:39:33.962"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:33.962" endtime="20210730 14:39:33.963"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:33.963" endtime="20210730 14:39:33.963"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:33.935" endtime="20210730 14:39:33.963"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:33.934" endtime="20210730 14:39:33.963"/>
</for>
<status status="FAIL" starttime="20210730 14:39:33.933" endtime="20210730 14:39:33.963"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:33.933" endtime="20210730 14:39:33.963"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=01234567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:33.964" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:33.964" endtime="20210730 14:39:33.964"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:33.964" level="INFO">${payload} = {'password': '01234567'}</msg>
<status status="PASS" starttime="20210730 14:39:33.964" endtime="20210730 14:39:33.964"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:33.969" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:33.969" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:33.965" endtime="20210730 14:39:33.969"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:33.969" endtime="20210730 14:39:33.969"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:33.969" endtime="20210730 14:39:33.970"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:33.965" endtime="20210730 14:39:33.970"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:33.965" endtime="20210730 14:39:33.970"/>
</for>
<status status="FAIL" starttime="20210730 14:39:33.963" endtime="20210730 14:39:33.970"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:33.963" endtime="20210730 14:39:33.970"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=01234567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:33.971" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:33.971" endtime="20210730 14:39:33.971"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:33.971" level="INFO">${payload} = {'password': '01234567'}</msg>
<status status="PASS" starttime="20210730 14:39:33.971" endtime="20210730 14:39:33.971"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:33.977" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:33.977" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:33.972" endtime="20210730 14:39:33.977"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:33.977" endtime="20210730 14:39:33.977"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:33.977" endtime="20210730 14:39:33.977"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:33.972" endtime="20210730 14:39:33.977"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:33.971" endtime="20210730 14:39:33.977"/>
</for>
<status status="FAIL" starttime="20210730 14:39:33.970" endtime="20210730 14:39:33.978"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:33.970" endtime="20210730 14:39:33.978"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:33.933" endtime="20210730 14:39:33.978"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:33.982" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:33.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:33.993" level="INFO">${pids} = 26376
26383
26389</msg>
<status status="PASS" starttime="20210730 14:39:33.979" endtime="20210730 14:39:33.993"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:33.994" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:33.993" endtime="20210730 14:39:33.994"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:33.995" level="INFO">${pids} = ['26376', '26383', '26389']</msg>
<status status="PASS" starttime="20210730 14:39:33.995" endtime="20210730 14:39:33.995"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">26376</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:33.999" level="INFO">Running command 'kill 26376 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:33.996" endtime="20210730 14:39:34.000"/>
</kw>
<status status="PASS" starttime="20210730 14:39:33.995" endtime="20210730 14:39:34.000"/>
</iter>
<iter>
<var name="${pid}">26383</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:34.004" level="INFO">Running command 'kill 26383 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:34.000" endtime="20210730 14:39:34.006"/>
</kw>
<status status="PASS" starttime="20210730 14:39:34.000" endtime="20210730 14:39:34.006"/>
</iter>
<iter>
<var name="${pid}">26389</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:34.011" level="INFO">Running command 'kill 26389 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:34.006" endtime="20210730 14:39:34.011"/>
</kw>
<status status="PASS" starttime="20210730 14:39:34.006" endtime="20210730 14:39:34.012"/>
</iter>
<status status="PASS" starttime="20210730 14:39:33.995" endtime="20210730 14:39:34.012"/>
</for>
<status status="PASS" starttime="20210730 14:39:33.994" endtime="20210730 14:39:34.012"/>
</branch>
<status status="PASS" starttime="20210730 14:39:33.994" endtime="20210730 14:39:34.012"/>
</if>
<status status="PASS" starttime="20210730 14:39:33.978" endtime="20210730 14:39:34.012"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": '01234567'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:32.367" endtime="20210730 14:39:34.012">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t53" name="With Each Valid Token, Updating Password Of Each System User With 01234567890123456789 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:34.017" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:34.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:34.028" level="INFO">${pids} = 26418</msg>
<status status="PASS" starttime="20210730 14:39:34.014" endtime="20210730 14:39:34.028"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:34.029" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:34.029" endtime="20210730 14:39:34.029"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:34.030" level="INFO">${pids} = ['26418']</msg>
<status status="PASS" starttime="20210730 14:39:34.030" endtime="20210730 14:39:34.030"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">26418</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:34.034" level="INFO">Running command 'kill 26418 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:34.030" endtime="20210730 14:39:34.034"/>
</kw>
<status status="PASS" starttime="20210730 14:39:34.030" endtime="20210730 14:39:34.034"/>
</iter>
<status status="PASS" starttime="20210730 14:39:34.030" endtime="20210730 14:39:34.034"/>
</for>
<status status="PASS" starttime="20210730 14:39:34.030" endtime="20210730 14:39:34.034"/>
</branch>
<status status="PASS" starttime="20210730 14:39:34.029" endtime="20210730 14:39:34.034"/>
</if>
<status status="PASS" starttime="20210730 14:39:34.014" endtime="20210730 14:39:34.034"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:34.035" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:34.035" endtime="20210730 14:39:34.035"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:34.036" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:34.036" endtime="20210730 14:39:34.036"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:34.036" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:34.036" endtime="20210730 14:39:34.036"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:34.037" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:34.036" endtime="20210730 14:39:34.037"/>
</kw>
<msg timestamp="20210730 14:39:34.037" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:34.035" endtime="20210730 14:39:34.037"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:34.041" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:34.037" endtime="20210730 14:39:34.043"/>
</kw>
<status status="PASS" starttime="20210730 14:39:34.035" endtime="20210730 14:39:34.043"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:34.044" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:34.044" endtime="20210730 14:39:34.066"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:35.570" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:34.066" endtime="20210730 14:39:35.570"/>
</kw>
<status status="PASS" starttime="20210730 14:39:34.043" endtime="20210730 14:39:35.571"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:35.576" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:35.575" endtime="20210730 14:39:35.576"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:35.576" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:35.576" endtime="20210730 14:39:35.576"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:35.577" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:35.576" endtime="20210730 14:39:35.577"/>
</kw>
<msg timestamp="20210730 14:39:35.577" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:35.574" endtime="20210730 14:39:35.577"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:35.577" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:35.577" endtime="20210730 14:39:35.578"/>
</kw>
<status status="PASS" starttime="20210730 14:39:35.572" endtime="20210730 14:39:35.578"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:35.578" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:35.579" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:35.578" endtime="20210730 14:39:35.579"/>
</kw>
<status status="PASS" starttime="20210730 14:39:35.578" endtime="20210730 14:39:35.579"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:35.579" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:35.579" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:35.579" endtime="20210730 14:39:35.579"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:35.580" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:35.580" endtime="20210730 14:39:35.580"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:35.580" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:35.580" endtime="20210730 14:39:35.580"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:35.580" endtime="20210730 14:39:35.581"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:35.581" endtime="20210730 14:39:35.581"/>
</kw>
<status status="PASS" starttime="20210730 14:39:35.580" endtime="20210730 14:39:35.581"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:35.582" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:35.582" endtime="20210730 14:39:35.582"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:35.582" endtime="20210730 14:39:35.583"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:35.583" endtime="20210730 14:39:35.583"/>
</kw>
<status status="PASS" starttime="20210730 14:39:35.582" endtime="20210730 14:39:35.583"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:35.583" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:35.583" endtime="20210730 14:39:35.583"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:35.583" endtime="20210730 14:39:35.584"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:35.584" endtime="20210730 14:39:35.585"/>
</kw>
<status status="PASS" starttime="20210730 14:39:35.583" endtime="20210730 14:39:35.585"/>
</iter>
<status status="PASS" starttime="20210730 14:39:35.580" endtime="20210730 14:39:35.585"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:35.585" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:35.585" endtime="20210730 14:39:35.585"/>
</kw>
<status status="PASS" starttime="20210730 14:39:35.579" endtime="20210730 14:39:35.585"/>
</kw>
<status status="PASS" starttime="20210730 14:39:34.014" endtime="20210730 14:39:35.585"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=01234567890123456789</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:35.587" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:35.586" endtime="20210730 14:39:35.587"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:35.587" level="INFO">${payload} = {'password': '01234567890123456789'}</msg>
<status status="PASS" starttime="20210730 14:39:35.587" endtime="20210730 14:39:35.587"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:35.599" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:35.599" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:35.590" endtime="20210730 14:39:35.599"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:35.599" endtime="20210730 14:39:35.599"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:35.599" endtime="20210730 14:39:35.599"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:35.590" endtime="20210730 14:39:35.599"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:35.587" endtime="20210730 14:39:35.600"/>
</for>
<status status="FAIL" starttime="20210730 14:39:35.586" endtime="20210730 14:39:35.600"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:35.586" endtime="20210730 14:39:35.600"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=01234567890123456789</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:35.601" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:35.600" endtime="20210730 14:39:35.601"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:35.601" level="INFO">${payload} = {'password': '01234567890123456789'}</msg>
<status status="PASS" starttime="20210730 14:39:35.601" endtime="20210730 14:39:35.601"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:35.606" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:35.606" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:35.602" endtime="20210730 14:39:35.606"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:35.606" endtime="20210730 14:39:35.606"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:35.606" endtime="20210730 14:39:35.606"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:35.601" endtime="20210730 14:39:35.607"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:35.601" endtime="20210730 14:39:35.607"/>
</for>
<status status="FAIL" starttime="20210730 14:39:35.600" endtime="20210730 14:39:35.607"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:35.600" endtime="20210730 14:39:35.607"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=01234567890123456789</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:35.608" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:35.608" endtime="20210730 14:39:35.608"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:35.609" level="INFO">${payload} = {'password': '01234567890123456789'}</msg>
<status status="PASS" starttime="20210730 14:39:35.608" endtime="20210730 14:39:35.609"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:35.613" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:35.613" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:35.609" endtime="20210730 14:39:35.613"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:35.614" endtime="20210730 14:39:35.614"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:35.614" endtime="20210730 14:39:35.614"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:35.609" endtime="20210730 14:39:35.614"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:35.609" endtime="20210730 14:39:35.614"/>
</for>
<status status="FAIL" starttime="20210730 14:39:35.607" endtime="20210730 14:39:35.614"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:35.607" endtime="20210730 14:39:35.614"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:35.585" endtime="20210730 14:39:35.614"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:35.619" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:35.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:35.628" level="INFO">${pids} = 26441
26448
26453</msg>
<status status="PASS" starttime="20210730 14:39:35.615" endtime="20210730 14:39:35.628"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:35.629" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:35.629" endtime="20210730 14:39:35.629"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:35.630" level="INFO">${pids} = ['26441', '26448', '26453']</msg>
<status status="PASS" starttime="20210730 14:39:35.630" endtime="20210730 14:39:35.630"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">26441</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:35.633" level="INFO">Running command 'kill 26441 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:35.630" endtime="20210730 14:39:35.634"/>
</kw>
<status status="PASS" starttime="20210730 14:39:35.630" endtime="20210730 14:39:35.634"/>
</iter>
<iter>
<var name="${pid}">26448</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:35.637" level="INFO">Running command 'kill 26448 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:35.634" endtime="20210730 14:39:35.638"/>
</kw>
<status status="PASS" starttime="20210730 14:39:35.634" endtime="20210730 14:39:35.638"/>
</iter>
<iter>
<var name="${pid}">26453</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:35.643" level="INFO">Running command 'kill 26453 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:35.639" endtime="20210730 14:39:35.643"/>
</kw>
<status status="PASS" starttime="20210730 14:39:35.638" endtime="20210730 14:39:35.644"/>
</iter>
<status status="PASS" starttime="20210730 14:39:35.630" endtime="20210730 14:39:35.644"/>
</for>
<status status="PASS" starttime="20210730 14:39:35.630" endtime="20210730 14:39:35.644"/>
</branch>
<status status="PASS" starttime="20210730 14:39:35.629" endtime="20210730 14:39:35.644"/>
</if>
<status status="PASS" starttime="20210730 14:39:35.615" endtime="20210730 14:39:35.644"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": '01234567890123456789'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:34.013" endtime="20210730 14:39:35.644">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t54" name="With Each Valid Token, Updating Password Of Each System User With !?.?!.! Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:35.649" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:35.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:35.664" level="INFO">${pids} = 26482</msg>
<status status="PASS" starttime="20210730 14:39:35.646" endtime="20210730 14:39:35.664"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:35.665" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:35.664" endtime="20210730 14:39:35.665"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:35.666" level="INFO">${pids} = ['26482']</msg>
<status status="PASS" starttime="20210730 14:39:35.666" endtime="20210730 14:39:35.666"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">26482</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:35.685" level="INFO">Running command 'kill 26482 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:35.666" endtime="20210730 14:39:35.686"/>
</kw>
<status status="PASS" starttime="20210730 14:39:35.666" endtime="20210730 14:39:35.686"/>
</iter>
<status status="PASS" starttime="20210730 14:39:35.666" endtime="20210730 14:39:35.686"/>
</for>
<status status="PASS" starttime="20210730 14:39:35.665" endtime="20210730 14:39:35.686"/>
</branch>
<status status="PASS" starttime="20210730 14:39:35.665" endtime="20210730 14:39:35.686"/>
</if>
<status status="PASS" starttime="20210730 14:39:35.646" endtime="20210730 14:39:35.686"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:35.687" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:35.687" endtime="20210730 14:39:35.688"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:35.689" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:35.688" endtime="20210730 14:39:35.689"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:35.689" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:35.689" endtime="20210730 14:39:35.689"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:35.690" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:35.689" endtime="20210730 14:39:35.690"/>
</kw>
<msg timestamp="20210730 14:39:35.690" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:35.688" endtime="20210730 14:39:35.690"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:35.720" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:35.691" endtime="20210730 14:39:35.722"/>
</kw>
<status status="PASS" starttime="20210730 14:39:35.687" endtime="20210730 14:39:35.723"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:35.725" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:35.724" endtime="20210730 14:39:35.729"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:37.236" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:35.730" endtime="20210730 14:39:37.236"/>
</kw>
<status status="PASS" starttime="20210730 14:39:35.723" endtime="20210730 14:39:37.237"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:37.240" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:37.238" endtime="20210730 14:39:37.240"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:37.241" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:37.240" endtime="20210730 14:39:37.241"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:37.243" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:37.241" endtime="20210730 14:39:37.243"/>
</kw>
<msg timestamp="20210730 14:39:37.243" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:37.238" endtime="20210730 14:39:37.243"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:37.244" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:37.243" endtime="20210730 14:39:37.244"/>
</kw>
<status status="PASS" starttime="20210730 14:39:37.237" endtime="20210730 14:39:37.244"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:37.246" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:37.246" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:37.245" endtime="20210730 14:39:37.246"/>
</kw>
<status status="PASS" starttime="20210730 14:39:37.244" endtime="20210730 14:39:37.248"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:37.249" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:37.249" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:37.248" endtime="20210730 14:39:37.249"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:37.249" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:37.249" endtime="20210730 14:39:37.249"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:37.250" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:37.250" endtime="20210730 14:39:37.250"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:37.250" endtime="20210730 14:39:37.251"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:37.251" endtime="20210730 14:39:37.251"/>
</kw>
<status status="PASS" starttime="20210730 14:39:37.249" endtime="20210730 14:39:37.251"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:37.252" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:37.252" endtime="20210730 14:39:37.252"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:37.252" endtime="20210730 14:39:37.254"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:37.254" endtime="20210730 14:39:37.254"/>
</kw>
<status status="PASS" starttime="20210730 14:39:37.252" endtime="20210730 14:39:37.254"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:37.255" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:37.255" endtime="20210730 14:39:37.255"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:37.255" endtime="20210730 14:39:37.256"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:37.257" endtime="20210730 14:39:37.257"/>
</kw>
<status status="PASS" starttime="20210730 14:39:37.254" endtime="20210730 14:39:37.257"/>
</iter>
<status status="PASS" starttime="20210730 14:39:37.249" endtime="20210730 14:39:37.257"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:37.257" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:37.257" endtime="20210730 14:39:37.258"/>
</kw>
<status status="PASS" starttime="20210730 14:39:37.248" endtime="20210730 14:39:37.258"/>
</kw>
<status status="PASS" starttime="20210730 14:39:35.646" endtime="20210730 14:39:37.258"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=!?.?!.!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:37.259" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:37.259" endtime="20210730 14:39:37.259"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:37.259" level="INFO">${payload} = {'password': '!?.?!.!'}</msg>
<status status="PASS" starttime="20210730 14:39:37.259" endtime="20210730 14:39:37.259"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:37.268" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:37.269" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:37.260" endtime="20210730 14:39:37.269"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:37.269" endtime="20210730 14:39:37.269"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:37.269" endtime="20210730 14:39:37.269"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:37.260" endtime="20210730 14:39:37.269"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:37.259" endtime="20210730 14:39:37.269"/>
</for>
<status status="FAIL" starttime="20210730 14:39:37.258" endtime="20210730 14:39:37.269"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:37.258" endtime="20210730 14:39:37.270"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=!?.?!.!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:37.271" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:37.271" endtime="20210730 14:39:37.271"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:37.272" level="INFO">${payload} = {'password': '!?.?!.!'}</msg>
<status status="PASS" starttime="20210730 14:39:37.271" endtime="20210730 14:39:37.272"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:37.276" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:37.277" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:37.272" endtime="20210730 14:39:37.277"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:37.277" endtime="20210730 14:39:37.277"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:37.277" endtime="20210730 14:39:37.277"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:37.272" endtime="20210730 14:39:37.277"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:37.272" endtime="20210730 14:39:37.277"/>
</for>
<status status="FAIL" starttime="20210730 14:39:37.270" endtime="20210730 14:39:37.277"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:37.270" endtime="20210730 14:39:37.277"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=!?.?!.!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:37.278" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:37.278" endtime="20210730 14:39:37.278"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:37.279" level="INFO">${payload} = {'password': '!?.?!.!'}</msg>
<status status="PASS" starttime="20210730 14:39:37.279" endtime="20210730 14:39:37.279"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:37.283" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:37.283" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:37.279" endtime="20210730 14:39:37.283"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:37.283" endtime="20210730 14:39:37.283"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:37.284" endtime="20210730 14:39:37.284"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:37.279" endtime="20210730 14:39:37.284"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:37.279" endtime="20210730 14:39:37.284"/>
</for>
<status status="FAIL" starttime="20210730 14:39:37.278" endtime="20210730 14:39:37.284"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:37.277" endtime="20210730 14:39:37.284"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:37.258" endtime="20210730 14:39:37.284"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:37.290" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:37.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:37.300" level="INFO">${pids} = 26509
26516
26520</msg>
<status status="PASS" starttime="20210730 14:39:37.285" endtime="20210730 14:39:37.300"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:37.301" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:37.301" endtime="20210730 14:39:37.301"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:37.302" level="INFO">${pids} = ['26509', '26516', '26520']</msg>
<status status="PASS" starttime="20210730 14:39:37.302" endtime="20210730 14:39:37.302"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">26509</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:37.306" level="INFO">Running command 'kill 26509 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:37.302" endtime="20210730 14:39:37.307"/>
</kw>
<status status="PASS" starttime="20210730 14:39:37.302" endtime="20210730 14:39:37.307"/>
</iter>
<iter>
<var name="${pid}">26516</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:37.311" level="INFO">Running command 'kill 26516 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:37.308" endtime="20210730 14:39:37.311"/>
</kw>
<status status="PASS" starttime="20210730 14:39:37.307" endtime="20210730 14:39:37.312"/>
</iter>
<iter>
<var name="${pid}">26520</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:37.315" level="INFO">Running command 'kill 26520 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:37.312" endtime="20210730 14:39:37.316"/>
</kw>
<status status="PASS" starttime="20210730 14:39:37.312" endtime="20210730 14:39:37.316"/>
</iter>
<status status="PASS" starttime="20210730 14:39:37.302" endtime="20210730 14:39:37.316"/>
</for>
<status status="PASS" starttime="20210730 14:39:37.301" endtime="20210730 14:39:37.316"/>
</branch>
<status status="PASS" starttime="20210730 14:39:37.301" endtime="20210730 14:39:37.316"/>
</if>
<status status="PASS" starttime="20210730 14:39:37.284" endtime="20210730 14:39:37.316"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": '!?.?!.!'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:35.645" endtime="20210730 14:39:37.317">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t55" name="With Each Valid Token, Updating Password Of Each System User With !?.?!.!? Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:37.322" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:37.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:37.332" level="INFO">${pids} = 26549</msg>
<status status="PASS" starttime="20210730 14:39:37.319" endtime="20210730 14:39:37.332"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:37.333" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:37.332" endtime="20210730 14:39:37.333"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:37.333" level="INFO">${pids} = ['26549']</msg>
<status status="PASS" starttime="20210730 14:39:37.333" endtime="20210730 14:39:37.333"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">26549</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:37.337" level="INFO">Running command 'kill 26549 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:37.334" endtime="20210730 14:39:37.337"/>
</kw>
<status status="PASS" starttime="20210730 14:39:37.334" endtime="20210730 14:39:37.337"/>
</iter>
<status status="PASS" starttime="20210730 14:39:37.334" endtime="20210730 14:39:37.337"/>
</for>
<status status="PASS" starttime="20210730 14:39:37.333" endtime="20210730 14:39:37.337"/>
</branch>
<status status="PASS" starttime="20210730 14:39:37.333" endtime="20210730 14:39:37.338"/>
</if>
<status status="PASS" starttime="20210730 14:39:37.318" endtime="20210730 14:39:37.338"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:37.339" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:37.338" endtime="20210730 14:39:37.339"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:37.340" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:37.339" endtime="20210730 14:39:37.340"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:37.340" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:37.340" endtime="20210730 14:39:37.340"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:37.341" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:37.340" endtime="20210730 14:39:37.341"/>
</kw>
<msg timestamp="20210730 14:39:37.341" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:37.339" endtime="20210730 14:39:37.341"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:37.345" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:37.341" endtime="20210730 14:39:37.351"/>
</kw>
<status status="PASS" starttime="20210730 14:39:37.338" endtime="20210730 14:39:37.351"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:37.353" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:37.352" endtime="20210730 14:39:37.357"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:38.858" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:37.357" endtime="20210730 14:39:38.859"/>
</kw>
<status status="PASS" starttime="20210730 14:39:37.352" endtime="20210730 14:39:38.859"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:38.860" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:38.860" endtime="20210730 14:39:38.860"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:38.860" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:38.860" endtime="20210730 14:39:38.860"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:38.861" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:38.860" endtime="20210730 14:39:38.861"/>
</kw>
<msg timestamp="20210730 14:39:38.861" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:38.859" endtime="20210730 14:39:38.861"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:38.861" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:38.861" endtime="20210730 14:39:38.862"/>
</kw>
<status status="PASS" starttime="20210730 14:39:38.859" endtime="20210730 14:39:38.862"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:38.862" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:38.862" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:38.862" endtime="20210730 14:39:38.862"/>
</kw>
<status status="PASS" starttime="20210730 14:39:38.862" endtime="20210730 14:39:38.863"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:38.863" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:38.863" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:38.863" endtime="20210730 14:39:38.863"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:38.863" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:38.863" endtime="20210730 14:39:38.863"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:38.864" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:38.864" endtime="20210730 14:39:38.864"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:38.865" endtime="20210730 14:39:38.865"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:38.866" endtime="20210730 14:39:38.866"/>
</kw>
<status status="PASS" starttime="20210730 14:39:38.864" endtime="20210730 14:39:38.866"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:38.866" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:38.866" endtime="20210730 14:39:38.866"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:38.866" endtime="20210730 14:39:38.867"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:38.867" endtime="20210730 14:39:38.867"/>
</kw>
<status status="PASS" starttime="20210730 14:39:38.866" endtime="20210730 14:39:38.867"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:38.868" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:38.868" endtime="20210730 14:39:38.868"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:38.868" endtime="20210730 14:39:38.869"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:38.869" endtime="20210730 14:39:38.869"/>
</kw>
<status status="PASS" starttime="20210730 14:39:38.868" endtime="20210730 14:39:38.869"/>
</iter>
<status status="PASS" starttime="20210730 14:39:38.864" endtime="20210730 14:39:38.869"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:38.870" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:38.869" endtime="20210730 14:39:38.870"/>
</kw>
<status status="PASS" starttime="20210730 14:39:38.863" endtime="20210730 14:39:38.870"/>
</kw>
<status status="PASS" starttime="20210730 14:39:37.318" endtime="20210730 14:39:38.870"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=!?.?!.!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:38.872" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:38.871" endtime="20210730 14:39:38.872"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:38.872" level="INFO">${payload} = {'password': '!?.?!.!?'}</msg>
<status status="PASS" starttime="20210730 14:39:38.872" endtime="20210730 14:39:38.872"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:38.882" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:38.882" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:38.873" endtime="20210730 14:39:38.882"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:38.882" endtime="20210730 14:39:38.883"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:38.883" endtime="20210730 14:39:38.883"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:38.872" endtime="20210730 14:39:38.883"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:38.872" endtime="20210730 14:39:38.883"/>
</for>
<status status="FAIL" starttime="20210730 14:39:38.871" endtime="20210730 14:39:38.883"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:38.870" endtime="20210730 14:39:38.883"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=!?.?!.!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:38.884" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:38.884" endtime="20210730 14:39:38.884"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:38.885" level="INFO">${payload} = {'password': '!?.?!.!?'}</msg>
<status status="PASS" starttime="20210730 14:39:38.884" endtime="20210730 14:39:38.885"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:38.889" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:38.889" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:38.885" endtime="20210730 14:39:38.889"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:38.889" endtime="20210730 14:39:38.889"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:38.889" endtime="20210730 14:39:38.890"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:38.885" endtime="20210730 14:39:38.890"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:38.885" endtime="20210730 14:39:38.890"/>
</for>
<status status="FAIL" starttime="20210730 14:39:38.883" endtime="20210730 14:39:38.890"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:38.883" endtime="20210730 14:39:38.890"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=!?.?!.!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:38.891" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:38.891" endtime="20210730 14:39:38.891"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:38.891" level="INFO">${payload} = {'password': '!?.?!.!?'}</msg>
<status status="PASS" starttime="20210730 14:39:38.891" endtime="20210730 14:39:38.891"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:38.896" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:38.896" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:38.892" endtime="20210730 14:39:38.896"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:38.896" endtime="20210730 14:39:38.896"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:38.896" endtime="20210730 14:39:38.896"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:38.892" endtime="20210730 14:39:38.896"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:38.891" endtime="20210730 14:39:38.896"/>
</for>
<status status="FAIL" starttime="20210730 14:39:38.890" endtime="20210730 14:39:38.897"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:38.890" endtime="20210730 14:39:38.897"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:38.870" endtime="20210730 14:39:38.897"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:38.902" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:38.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:38.913" level="INFO">${pids} = 26572
26579
26583</msg>
<status status="PASS" starttime="20210730 14:39:38.897" endtime="20210730 14:39:38.913"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:38.914" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:38.913" endtime="20210730 14:39:38.914"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:38.915" level="INFO">${pids} = ['26572', '26579', '26583']</msg>
<status status="PASS" starttime="20210730 14:39:38.914" endtime="20210730 14:39:38.915"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">26572</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:38.919" level="INFO">Running command 'kill 26572 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:38.916" endtime="20210730 14:39:38.919"/>
</kw>
<status status="PASS" starttime="20210730 14:39:38.915" endtime="20210730 14:39:38.919"/>
</iter>
<iter>
<var name="${pid}">26579</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:38.922" level="INFO">Running command 'kill 26579 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:38.920" endtime="20210730 14:39:38.925"/>
</kw>
<status status="PASS" starttime="20210730 14:39:38.919" endtime="20210730 14:39:38.925"/>
</iter>
<iter>
<var name="${pid}">26583</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:38.931" level="INFO">Running command 'kill 26583 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:38.925" endtime="20210730 14:39:38.932"/>
</kw>
<status status="PASS" starttime="20210730 14:39:38.925" endtime="20210730 14:39:38.932"/>
</iter>
<status status="PASS" starttime="20210730 14:39:38.915" endtime="20210730 14:39:38.932"/>
</for>
<status status="PASS" starttime="20210730 14:39:38.914" endtime="20210730 14:39:38.932"/>
</branch>
<status status="PASS" starttime="20210730 14:39:38.914" endtime="20210730 14:39:38.932"/>
</if>
<status status="PASS" starttime="20210730 14:39:38.897" endtime="20210730 14:39:38.933"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": '!?.?!.!?'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:37.317" endtime="20210730 14:39:38.933">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t56" name="With Each Valid Token, Updating Password Of Each System User With !?.?!.!?!?.?!.!?!.!. Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:38.938" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:38.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:38.949" level="INFO">${pids} = 26612</msg>
<status status="PASS" starttime="20210730 14:39:38.935" endtime="20210730 14:39:38.949"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:38.950" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:38.950" endtime="20210730 14:39:38.950"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:38.951" level="INFO">${pids} = ['26612']</msg>
<status status="PASS" starttime="20210730 14:39:38.950" endtime="20210730 14:39:38.951"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">26612</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:38.954" level="INFO">Running command 'kill 26612 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:38.951" endtime="20210730 14:39:38.954"/>
</kw>
<status status="PASS" starttime="20210730 14:39:38.951" endtime="20210730 14:39:38.955"/>
</iter>
<status status="PASS" starttime="20210730 14:39:38.951" endtime="20210730 14:39:38.955"/>
</for>
<status status="PASS" starttime="20210730 14:39:38.950" endtime="20210730 14:39:38.955"/>
</branch>
<status status="PASS" starttime="20210730 14:39:38.950" endtime="20210730 14:39:38.955"/>
</if>
<status status="PASS" starttime="20210730 14:39:38.935" endtime="20210730 14:39:38.955"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:38.956" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:38.956" endtime="20210730 14:39:38.956"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:38.957" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:38.956" endtime="20210730 14:39:38.957"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:38.957" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:38.957" endtime="20210730 14:39:38.957"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:38.958" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:38.957" endtime="20210730 14:39:38.958"/>
</kw>
<msg timestamp="20210730 14:39:38.958" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:38.956" endtime="20210730 14:39:38.958"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:38.963" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:38.958" endtime="20210730 14:39:38.964"/>
</kw>
<status status="PASS" starttime="20210730 14:39:38.955" endtime="20210730 14:39:38.965"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:38.966" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:38.966" endtime="20210730 14:39:38.970"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:40.482" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:38.970" endtime="20210730 14:39:40.482"/>
</kw>
<status status="PASS" starttime="20210730 14:39:38.965" endtime="20210730 14:39:40.482"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:40.483" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:40.483" endtime="20210730 14:39:40.483"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:40.484" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:40.483" endtime="20210730 14:39:40.484"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:40.484" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:40.484" endtime="20210730 14:39:40.484"/>
</kw>
<msg timestamp="20210730 14:39:40.484" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:40.483" endtime="20210730 14:39:40.484"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:40.485" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:40.484" endtime="20210730 14:39:40.485"/>
</kw>
<status status="PASS" starttime="20210730 14:39:40.482" endtime="20210730 14:39:40.485"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:40.486" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:40.486" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:40.486" endtime="20210730 14:39:40.486"/>
</kw>
<status status="PASS" starttime="20210730 14:39:40.485" endtime="20210730 14:39:40.486"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:40.487" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:40.487" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:40.487" endtime="20210730 14:39:40.487"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:40.487" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:40.487" endtime="20210730 14:39:40.487"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:40.488" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:40.488" endtime="20210730 14:39:40.488"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:40.488" endtime="20210730 14:39:40.489"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:40.489" endtime="20210730 14:39:40.489"/>
</kw>
<status status="PASS" starttime="20210730 14:39:40.488" endtime="20210730 14:39:40.489"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:40.490" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:40.489" endtime="20210730 14:39:40.490"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:40.490" endtime="20210730 14:39:40.490"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:40.491" endtime="20210730 14:39:40.491"/>
</kw>
<status status="PASS" starttime="20210730 14:39:40.489" endtime="20210730 14:39:40.491"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:40.491" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:40.491" endtime="20210730 14:39:40.491"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:40.491" endtime="20210730 14:39:40.492"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:40.492" endtime="20210730 14:39:40.492"/>
</kw>
<status status="PASS" starttime="20210730 14:39:40.491" endtime="20210730 14:39:40.492"/>
</iter>
<status status="PASS" starttime="20210730 14:39:40.487" endtime="20210730 14:39:40.492"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:40.493" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:40.492" endtime="20210730 14:39:40.493"/>
</kw>
<status status="PASS" starttime="20210730 14:39:40.486" endtime="20210730 14:39:40.493"/>
</kw>
<status status="PASS" starttime="20210730 14:39:38.934" endtime="20210730 14:39:40.493"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=!?.?!.!?!?.?!.!?!.!.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:40.494" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:40.494" endtime="20210730 14:39:40.494"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:40.495" level="INFO">${payload} = {'password': '!?.?!.!?!?.?!.!?!.!.'}</msg>
<status status="PASS" starttime="20210730 14:39:40.494" endtime="20210730 14:39:40.495"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:40.503" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:40.503" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:40.495" endtime="20210730 14:39:40.503"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:40.504" endtime="20210730 14:39:40.504"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:40.504" endtime="20210730 14:39:40.504"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:40.495" endtime="20210730 14:39:40.504"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:40.495" endtime="20210730 14:39:40.504"/>
</for>
<status status="FAIL" starttime="20210730 14:39:40.493" endtime="20210730 14:39:40.504"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:40.493" endtime="20210730 14:39:40.504"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=!?.?!.!?!?.?!.!?!.!.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:40.506" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:40.505" endtime="20210730 14:39:40.506"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:40.507" level="INFO">${payload} = {'password': '!?.?!.!?!?.?!.!?!.!.'}</msg>
<status status="PASS" starttime="20210730 14:39:40.507" endtime="20210730 14:39:40.507"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:40.525" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:40.526" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:40.508" endtime="20210730 14:39:40.526"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:40.526" endtime="20210730 14:39:40.526"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:40.526" endtime="20210730 14:39:40.526"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:40.507" endtime="20210730 14:39:40.526"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:40.507" endtime="20210730 14:39:40.526"/>
</for>
<status status="FAIL" starttime="20210730 14:39:40.504" endtime="20210730 14:39:40.527"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:40.504" endtime="20210730 14:39:40.527"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=!?.?!.!?!?.?!.!?!.!.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:40.533" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:40.528" endtime="20210730 14:39:40.533"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:40.534" level="INFO">${payload} = {'password': '!?.?!.!?!?.?!.!?!.!.'}</msg>
<status status="PASS" starttime="20210730 14:39:40.533" endtime="20210730 14:39:40.534"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:40.539" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:40.539" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:40.534" endtime="20210730 14:39:40.539"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:40.539" endtime="20210730 14:39:40.539"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:40.539" endtime="20210730 14:39:40.539"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:40.534" endtime="20210730 14:39:40.539"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:40.534" endtime="20210730 14:39:40.540"/>
</for>
<status status="FAIL" starttime="20210730 14:39:40.527" endtime="20210730 14:39:40.540"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:40.527" endtime="20210730 14:39:40.540"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:40.493" endtime="20210730 14:39:40.540"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:40.544" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:40.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:40.557" level="INFO">${pids} = 26635
26642
26647</msg>
<status status="PASS" starttime="20210730 14:39:40.541" endtime="20210730 14:39:40.557"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:40.558" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:40.557" endtime="20210730 14:39:40.558"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:40.559" level="INFO">${pids} = ['26635', '26642', '26647']</msg>
<status status="PASS" starttime="20210730 14:39:40.558" endtime="20210730 14:39:40.559"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">26635</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:40.562" level="INFO">Running command 'kill 26635 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:40.559" endtime="20210730 14:39:40.562"/>
</kw>
<status status="PASS" starttime="20210730 14:39:40.559" endtime="20210730 14:39:40.562"/>
</iter>
<iter>
<var name="${pid}">26642</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:40.566" level="INFO">Running command 'kill 26642 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:40.563" endtime="20210730 14:39:40.566"/>
</kw>
<status status="PASS" starttime="20210730 14:39:40.562" endtime="20210730 14:39:40.566"/>
</iter>
<iter>
<var name="${pid}">26647</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:40.571" level="INFO">Running command 'kill 26647 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:40.567" endtime="20210730 14:39:40.572"/>
</kw>
<status status="PASS" starttime="20210730 14:39:40.567" endtime="20210730 14:39:40.572"/>
</iter>
<status status="PASS" starttime="20210730 14:39:40.559" endtime="20210730 14:39:40.572"/>
</for>
<status status="PASS" starttime="20210730 14:39:40.558" endtime="20210730 14:39:40.572"/>
</branch>
<status status="PASS" starttime="20210730 14:39:40.558" endtime="20210730 14:39:40.572"/>
</if>
<status status="PASS" starttime="20210730 14:39:40.541" endtime="20210730 14:39:40.572"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": '!?.?!.!?!?.?!.!?!.!.'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:38.934" endtime="20210730 14:39:40.572">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t57" name="With Each Valid Token, Updating Password Of Each System User With abcdABC Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:40.578" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:40.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:40.590" level="INFO">${pids} = 26676</msg>
<status status="PASS" starttime="20210730 14:39:40.575" endtime="20210730 14:39:40.590"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:40.591" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:40.590" endtime="20210730 14:39:40.591"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:40.592" level="INFO">${pids} = ['26676']</msg>
<status status="PASS" starttime="20210730 14:39:40.591" endtime="20210730 14:39:40.592"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">26676</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:40.595" level="INFO">Running command 'kill 26676 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:40.592" endtime="20210730 14:39:40.595"/>
</kw>
<status status="PASS" starttime="20210730 14:39:40.592" endtime="20210730 14:39:40.595"/>
</iter>
<status status="PASS" starttime="20210730 14:39:40.592" endtime="20210730 14:39:40.595"/>
</for>
<status status="PASS" starttime="20210730 14:39:40.591" endtime="20210730 14:39:40.595"/>
</branch>
<status status="PASS" starttime="20210730 14:39:40.591" endtime="20210730 14:39:40.596"/>
</if>
<status status="PASS" starttime="20210730 14:39:40.574" endtime="20210730 14:39:40.596"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:40.597" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:40.596" endtime="20210730 14:39:40.597"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:40.598" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:40.597" endtime="20210730 14:39:40.598"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:40.598" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:40.598" endtime="20210730 14:39:40.598"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:40.598" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:40.598" endtime="20210730 14:39:40.599"/>
</kw>
<msg timestamp="20210730 14:39:40.599" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:40.597" endtime="20210730 14:39:40.599"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:40.604" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:40.599" endtime="20210730 14:39:40.610"/>
</kw>
<status status="PASS" starttime="20210730 14:39:40.596" endtime="20210730 14:39:40.610"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:40.612" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:40.611" endtime="20210730 14:39:40.619"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:42.149" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:40.620" endtime="20210730 14:39:42.149"/>
</kw>
<status status="PASS" starttime="20210730 14:39:40.611" endtime="20210730 14:39:42.149"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:42.150" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:42.150" endtime="20210730 14:39:42.150"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:42.151" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:42.151" endtime="20210730 14:39:42.151"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:42.151" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:42.151" endtime="20210730 14:39:42.151"/>
</kw>
<msg timestamp="20210730 14:39:42.151" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:42.150" endtime="20210730 14:39:42.151"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:42.152" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:42.151" endtime="20210730 14:39:42.152"/>
</kw>
<status status="PASS" starttime="20210730 14:39:42.149" endtime="20210730 14:39:42.152"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:42.153" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:42.153" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:42.153" endtime="20210730 14:39:42.153"/>
</kw>
<status status="PASS" starttime="20210730 14:39:42.152" endtime="20210730 14:39:42.153"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:42.153" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:42.154" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:42.153" endtime="20210730 14:39:42.154"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:42.154" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:42.154" endtime="20210730 14:39:42.154"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:42.155" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:42.154" endtime="20210730 14:39:42.155"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:42.155" endtime="20210730 14:39:42.156"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:42.156" endtime="20210730 14:39:42.157"/>
</kw>
<status status="PASS" starttime="20210730 14:39:42.154" endtime="20210730 14:39:42.157"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:42.157" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:42.157" endtime="20210730 14:39:42.157"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:42.157" endtime="20210730 14:39:42.158"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:42.158" endtime="20210730 14:39:42.158"/>
</kw>
<status status="PASS" starttime="20210730 14:39:42.157" endtime="20210730 14:39:42.158"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:42.159" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:42.158" endtime="20210730 14:39:42.159"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:42.159" endtime="20210730 14:39:42.159"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:42.160" endtime="20210730 14:39:42.160"/>
</kw>
<status status="PASS" starttime="20210730 14:39:42.158" endtime="20210730 14:39:42.160"/>
</iter>
<status status="PASS" starttime="20210730 14:39:42.154" endtime="20210730 14:39:42.160"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:42.160" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:42.160" endtime="20210730 14:39:42.160"/>
</kw>
<status status="PASS" starttime="20210730 14:39:42.153" endtime="20210730 14:39:42.161"/>
</kw>
<status status="PASS" starttime="20210730 14:39:40.574" endtime="20210730 14:39:42.161"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdABC</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:42.162" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:42.162" endtime="20210730 14:39:42.162"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:42.162" level="INFO">${payload} = {'password': 'abcdABC'}</msg>
<status status="PASS" starttime="20210730 14:39:42.162" endtime="20210730 14:39:42.163"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:42.172" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:42.173" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:42.163" endtime="20210730 14:39:42.173"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:42.173" endtime="20210730 14:39:42.174"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:42.174" endtime="20210730 14:39:42.174"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:42.163" endtime="20210730 14:39:42.174"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:42.163" endtime="20210730 14:39:42.174"/>
</for>
<status status="FAIL" starttime="20210730 14:39:42.161" endtime="20210730 14:39:42.174"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:42.161" endtime="20210730 14:39:42.174"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdABC</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:42.176" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:42.175" endtime="20210730 14:39:42.176"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:42.176" level="INFO">${payload} = {'password': 'abcdABC'}</msg>
<status status="PASS" starttime="20210730 14:39:42.176" endtime="20210730 14:39:42.176"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:42.181" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:42.182" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:42.177" endtime="20210730 14:39:42.182"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:42.183" endtime="20210730 14:39:42.183"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:42.183" endtime="20210730 14:39:42.183"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:42.176" endtime="20210730 14:39:42.183"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:42.176" endtime="20210730 14:39:42.183"/>
</for>
<status status="FAIL" starttime="20210730 14:39:42.175" endtime="20210730 14:39:42.183"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:42.174" endtime="20210730 14:39:42.183"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdABC</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:42.184" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:42.184" endtime="20210730 14:39:42.184"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:42.185" level="INFO">${payload} = {'password': 'abcdABC'}</msg>
<status status="PASS" starttime="20210730 14:39:42.184" endtime="20210730 14:39:42.185"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:42.189" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:42.190" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:42.185" endtime="20210730 14:39:42.190"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:42.190" endtime="20210730 14:39:42.190"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:42.190" endtime="20210730 14:39:42.190"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:42.185" endtime="20210730 14:39:42.190"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:42.185" endtime="20210730 14:39:42.190"/>
</for>
<status status="FAIL" starttime="20210730 14:39:42.183" endtime="20210730 14:39:42.190"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:42.183" endtime="20210730 14:39:42.190"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:42.161" endtime="20210730 14:39:42.191"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:42.195" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:42.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:42.205" level="INFO">${pids} = 26699
26706
26710</msg>
<status status="PASS" starttime="20210730 14:39:42.191" endtime="20210730 14:39:42.205"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:42.206" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:42.206" endtime="20210730 14:39:42.206"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:42.208" level="INFO">${pids} = ['26699', '26706', '26710']</msg>
<status status="PASS" starttime="20210730 14:39:42.207" endtime="20210730 14:39:42.208"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">26699</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:42.211" level="INFO">Running command 'kill 26699 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:42.208" endtime="20210730 14:39:42.212"/>
</kw>
<status status="PASS" starttime="20210730 14:39:42.208" endtime="20210730 14:39:42.212"/>
</iter>
<iter>
<var name="${pid}">26706</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:42.215" level="INFO">Running command 'kill 26706 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:42.212" endtime="20210730 14:39:42.217"/>
</kw>
<status status="PASS" starttime="20210730 14:39:42.212" endtime="20210730 14:39:42.217"/>
</iter>
<iter>
<var name="${pid}">26710</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:42.222" level="INFO">Running command 'kill 26710 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:42.218" endtime="20210730 14:39:42.222"/>
</kw>
<status status="PASS" starttime="20210730 14:39:42.217" endtime="20210730 14:39:42.222"/>
</iter>
<status status="PASS" starttime="20210730 14:39:42.208" endtime="20210730 14:39:42.222"/>
</for>
<status status="PASS" starttime="20210730 14:39:42.207" endtime="20210730 14:39:42.222"/>
</branch>
<status status="PASS" starttime="20210730 14:39:42.207" endtime="20210730 14:39:42.222"/>
</if>
<status status="PASS" starttime="20210730 14:39:42.191" endtime="20210730 14:39:42.223"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcdABC'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:40.573" endtime="20210730 14:39:42.223">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t58" name="With Each Valid Token, Updating Password Of Each System User With abcdABCD Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:42.229" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:42.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:42.241" level="INFO">${pids} = 26739</msg>
<status status="PASS" starttime="20210730 14:39:42.226" endtime="20210730 14:39:42.241"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:42.242" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:42.241" endtime="20210730 14:39:42.242"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:42.243" level="INFO">${pids} = ['26739']</msg>
<status status="PASS" starttime="20210730 14:39:42.242" endtime="20210730 14:39:42.243"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">26739</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:42.246" level="INFO">Running command 'kill 26739 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:42.243" endtime="20210730 14:39:42.247"/>
</kw>
<status status="PASS" starttime="20210730 14:39:42.243" endtime="20210730 14:39:42.247"/>
</iter>
<status status="PASS" starttime="20210730 14:39:42.243" endtime="20210730 14:39:42.247"/>
</for>
<status status="PASS" starttime="20210730 14:39:42.242" endtime="20210730 14:39:42.247"/>
</branch>
<status status="PASS" starttime="20210730 14:39:42.242" endtime="20210730 14:39:42.247"/>
</if>
<status status="PASS" starttime="20210730 14:39:42.225" endtime="20210730 14:39:42.247"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:42.249" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:42.248" endtime="20210730 14:39:42.249"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:42.249" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:42.249" endtime="20210730 14:39:42.249"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:42.250" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:42.250" endtime="20210730 14:39:42.250"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:42.250" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:42.250" endtime="20210730 14:39:42.250"/>
</kw>
<msg timestamp="20210730 14:39:42.251" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:42.249" endtime="20210730 14:39:42.251"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:42.258" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:42.251" endtime="20210730 14:39:42.260"/>
</kw>
<status status="PASS" starttime="20210730 14:39:42.248" endtime="20210730 14:39:42.260"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:42.262" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:42.261" endtime="20210730 14:39:42.266"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:43.767" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:42.266" endtime="20210730 14:39:43.768"/>
</kw>
<status status="PASS" starttime="20210730 14:39:42.261" endtime="20210730 14:39:43.768"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:43.769" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:43.769" endtime="20210730 14:39:43.769"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:43.769" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:43.769" endtime="20210730 14:39:43.769"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:43.770" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:43.769" endtime="20210730 14:39:43.770"/>
</kw>
<msg timestamp="20210730 14:39:43.770" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:43.768" endtime="20210730 14:39:43.770"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:43.771" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:43.770" endtime="20210730 14:39:43.771"/>
</kw>
<status status="PASS" starttime="20210730 14:39:43.768" endtime="20210730 14:39:43.771"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:43.772" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:43.772" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:43.771" endtime="20210730 14:39:43.772"/>
</kw>
<status status="PASS" starttime="20210730 14:39:43.771" endtime="20210730 14:39:43.772"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:43.773" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:43.773" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:43.772" endtime="20210730 14:39:43.773"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:43.773" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:43.773" endtime="20210730 14:39:43.773"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:43.774" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:43.774" endtime="20210730 14:39:43.774"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:43.774" endtime="20210730 14:39:43.775"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:43.776" endtime="20210730 14:39:43.776"/>
</kw>
<status status="PASS" starttime="20210730 14:39:43.774" endtime="20210730 14:39:43.776"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:43.776" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:43.776" endtime="20210730 14:39:43.776"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:43.777" endtime="20210730 14:39:43.777"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:43.777" endtime="20210730 14:39:43.778"/>
</kw>
<status status="PASS" starttime="20210730 14:39:43.776" endtime="20210730 14:39:43.778"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:43.778" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:43.778" endtime="20210730 14:39:43.778"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:43.778" endtime="20210730 14:39:43.779"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:43.779" endtime="20210730 14:39:43.779"/>
</kw>
<status status="PASS" starttime="20210730 14:39:43.778" endtime="20210730 14:39:43.779"/>
</iter>
<status status="PASS" starttime="20210730 14:39:43.773" endtime="20210730 14:39:43.779"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:43.780" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:43.779" endtime="20210730 14:39:43.780"/>
</kw>
<status status="PASS" starttime="20210730 14:39:43.772" endtime="20210730 14:39:43.780"/>
</kw>
<status status="PASS" starttime="20210730 14:39:42.225" endtime="20210730 14:39:43.780"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdABCD</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:43.781" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:43.781" endtime="20210730 14:39:43.781"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:43.782" level="INFO">${payload} = {'password': 'abcdABCD'}</msg>
<status status="PASS" starttime="20210730 14:39:43.781" endtime="20210730 14:39:43.782"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:43.791" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:43.791" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:43.782" endtime="20210730 14:39:43.791"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:43.791" endtime="20210730 14:39:43.791"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:43.791" endtime="20210730 14:39:43.791"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:43.782" endtime="20210730 14:39:43.791"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:43.782" endtime="20210730 14:39:43.791"/>
</for>
<status status="FAIL" starttime="20210730 14:39:43.780" endtime="20210730 14:39:43.792"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:43.780" endtime="20210730 14:39:43.792"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdABCD</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:43.793" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:43.792" endtime="20210730 14:39:43.793"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:43.793" level="INFO">${payload} = {'password': 'abcdABCD'}</msg>
<status status="PASS" starttime="20210730 14:39:43.793" endtime="20210730 14:39:43.793"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:43.797" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:43.798" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:43.793" endtime="20210730 14:39:43.798"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:43.798" endtime="20210730 14:39:43.798"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:43.798" endtime="20210730 14:39:43.798"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:43.793" endtime="20210730 14:39:43.798"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:43.793" endtime="20210730 14:39:43.798"/>
</for>
<status status="FAIL" starttime="20210730 14:39:43.792" endtime="20210730 14:39:43.798"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:43.792" endtime="20210730 14:39:43.798"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdABCD</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:43.799" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:43.799" endtime="20210730 14:39:43.799"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:43.800" level="INFO">${payload} = {'password': 'abcdABCD'}</msg>
<status status="PASS" starttime="20210730 14:39:43.800" endtime="20210730 14:39:43.800"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:43.804" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:43.804" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:43.800" endtime="20210730 14:39:43.804"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:43.804" endtime="20210730 14:39:43.804"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:43.804" endtime="20210730 14:39:43.804"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:43.800" endtime="20210730 14:39:43.805"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:43.800" endtime="20210730 14:39:43.805"/>
</for>
<status status="FAIL" starttime="20210730 14:39:43.798" endtime="20210730 14:39:43.805"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:43.798" endtime="20210730 14:39:43.805"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:43.780" endtime="20210730 14:39:43.805"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:43.812" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:43.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:43.823" level="INFO">${pids} = 26762
26769
26775</msg>
<status status="PASS" starttime="20210730 14:39:43.806" endtime="20210730 14:39:43.823"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:43.825" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:43.824" endtime="20210730 14:39:43.825"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:43.825" level="INFO">${pids} = ['26762', '26769', '26775']</msg>
<status status="PASS" starttime="20210730 14:39:43.825" endtime="20210730 14:39:43.825"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">26762</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:43.829" level="INFO">Running command 'kill 26762 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:43.826" endtime="20210730 14:39:43.829"/>
</kw>
<status status="PASS" starttime="20210730 14:39:43.826" endtime="20210730 14:39:43.829"/>
</iter>
<iter>
<var name="${pid}">26769</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:43.832" level="INFO">Running command 'kill 26769 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:43.829" endtime="20210730 14:39:43.832"/>
</kw>
<status status="PASS" starttime="20210730 14:39:43.829" endtime="20210730 14:39:43.832"/>
</iter>
<iter>
<var name="${pid}">26775</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:43.836" level="INFO">Running command 'kill 26775 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:43.833" endtime="20210730 14:39:43.836"/>
</kw>
<status status="PASS" starttime="20210730 14:39:43.832" endtime="20210730 14:39:43.836"/>
</iter>
<status status="PASS" starttime="20210730 14:39:43.825" endtime="20210730 14:39:43.836"/>
</for>
<status status="PASS" starttime="20210730 14:39:43.825" endtime="20210730 14:39:43.836"/>
</branch>
<status status="PASS" starttime="20210730 14:39:43.825" endtime="20210730 14:39:43.836"/>
</if>
<status status="PASS" starttime="20210730 14:39:43.805" endtime="20210730 14:39:43.836"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcdABCD'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:42.224" endtime="20210730 14:39:43.837">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t59" name="With Each Valid Token, Updating Password Of Each System User With abcdABCDefgjklmnprstoö Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:43.849" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:43.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:43.862" level="INFO">${pids} = 26804</msg>
<status status="PASS" starttime="20210730 14:39:43.839" endtime="20210730 14:39:43.862"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:43.863" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:43.862" endtime="20210730 14:39:43.863"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:43.863" level="INFO">${pids} = ['26804']</msg>
<status status="PASS" starttime="20210730 14:39:43.863" endtime="20210730 14:39:43.864"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">26804</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:43.882" level="INFO">Running command 'kill 26804 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:43.864" endtime="20210730 14:39:43.882"/>
</kw>
<status status="PASS" starttime="20210730 14:39:43.864" endtime="20210730 14:39:43.882"/>
</iter>
<status status="PASS" starttime="20210730 14:39:43.864" endtime="20210730 14:39:43.882"/>
</for>
<status status="PASS" starttime="20210730 14:39:43.863" endtime="20210730 14:39:43.882"/>
</branch>
<status status="PASS" starttime="20210730 14:39:43.863" endtime="20210730 14:39:43.882"/>
</if>
<status status="PASS" starttime="20210730 14:39:43.838" endtime="20210730 14:39:43.883"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:43.884" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:43.883" endtime="20210730 14:39:43.884"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:43.884" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:43.884" endtime="20210730 14:39:43.885"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:43.885" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:43.885" endtime="20210730 14:39:43.885"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:43.885" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:43.885" endtime="20210730 14:39:43.885"/>
</kw>
<msg timestamp="20210730 14:39:43.886" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:43.884" endtime="20210730 14:39:43.886"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:43.889" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:43.886" endtime="20210730 14:39:43.891"/>
</kw>
<status status="PASS" starttime="20210730 14:39:43.883" endtime="20210730 14:39:43.891"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:43.893" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:43.892" endtime="20210730 14:39:43.897"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:45.402" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:43.898" endtime="20210730 14:39:45.403"/>
</kw>
<status status="PASS" starttime="20210730 14:39:43.892" endtime="20210730 14:39:45.403"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:45.404" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:45.404" endtime="20210730 14:39:45.404"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:45.405" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:45.404" endtime="20210730 14:39:45.405"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:45.405" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:45.405" endtime="20210730 14:39:45.405"/>
</kw>
<msg timestamp="20210730 14:39:45.406" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:45.403" endtime="20210730 14:39:45.406"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:45.406" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:45.406" endtime="20210730 14:39:45.407"/>
</kw>
<status status="PASS" starttime="20210730 14:39:45.403" endtime="20210730 14:39:45.407"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:45.408" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:45.408" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:45.408" endtime="20210730 14:39:45.408"/>
</kw>
<status status="PASS" starttime="20210730 14:39:45.407" endtime="20210730 14:39:45.408"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:45.409" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:45.410" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:45.409" endtime="20210730 14:39:45.410"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:45.410" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:45.410" endtime="20210730 14:39:45.410"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:45.411" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:45.410" endtime="20210730 14:39:45.411"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:45.411" endtime="20210730 14:39:45.411"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:45.412" endtime="20210730 14:39:45.412"/>
</kw>
<status status="PASS" starttime="20210730 14:39:45.410" endtime="20210730 14:39:45.412"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:45.412" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:45.412" endtime="20210730 14:39:45.412"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:45.413" endtime="20210730 14:39:45.413"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:45.413" endtime="20210730 14:39:45.414"/>
</kw>
<status status="PASS" starttime="20210730 14:39:45.412" endtime="20210730 14:39:45.414"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:45.414" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:45.414" endtime="20210730 14:39:45.414"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:45.414" endtime="20210730 14:39:45.415"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:45.415" endtime="20210730 14:39:45.415"/>
</kw>
<status status="PASS" starttime="20210730 14:39:45.414" endtime="20210730 14:39:45.415"/>
</iter>
<status status="PASS" starttime="20210730 14:39:45.410" endtime="20210730 14:39:45.415"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:45.416" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:45.415" endtime="20210730 14:39:45.416"/>
</kw>
<status status="PASS" starttime="20210730 14:39:45.409" endtime="20210730 14:39:45.416"/>
</kw>
<status status="PASS" starttime="20210730 14:39:43.838" endtime="20210730 14:39:45.416"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdABCDefgjklmnprstoö</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:45.417" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:45.417" endtime="20210730 14:39:45.417"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:45.417" level="INFO">${payload} = {'password': 'abcdABCDefgjklmnprstoö'}</msg>
<status status="PASS" starttime="20210730 14:39:45.417" endtime="20210730 14:39:45.418"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:45.427" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:45.428" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:45.418" endtime="20210730 14:39:45.428"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:45.428" endtime="20210730 14:39:45.428"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:45.428" endtime="20210730 14:39:45.428"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:45.418" endtime="20210730 14:39:45.428"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:45.418" endtime="20210730 14:39:45.428"/>
</for>
<status status="FAIL" starttime="20210730 14:39:45.416" endtime="20210730 14:39:45.428"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:45.416" endtime="20210730 14:39:45.428"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdABCDefgjklmnprstoö</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:45.430" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:45.429" endtime="20210730 14:39:45.430"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:45.430" level="INFO">${payload} = {'password': 'abcdABCDefgjklmnprstoö'}</msg>
<status status="PASS" starttime="20210730 14:39:45.430" endtime="20210730 14:39:45.430"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:45.434" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:45.435" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:45.430" endtime="20210730 14:39:45.435"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:45.435" endtime="20210730 14:39:45.435"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:45.435" endtime="20210730 14:39:45.435"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:45.430" endtime="20210730 14:39:45.435"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:45.430" endtime="20210730 14:39:45.435"/>
</for>
<status status="FAIL" starttime="20210730 14:39:45.429" endtime="20210730 14:39:45.435"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:45.428" endtime="20210730 14:39:45.435"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdABCDefgjklmnprstoö</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:45.436" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:45.436" endtime="20210730 14:39:45.436"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:45.437" level="INFO">${payload} = {'password': 'abcdABCDefgjklmnprstoö'}</msg>
<status status="PASS" starttime="20210730 14:39:45.436" endtime="20210730 14:39:45.437"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:45.441" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:45.441" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:45.437" endtime="20210730 14:39:45.441"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:45.442" endtime="20210730 14:39:45.442"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:45.442" endtime="20210730 14:39:45.442"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:45.437" endtime="20210730 14:39:45.442"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:45.437" endtime="20210730 14:39:45.442"/>
</for>
<status status="FAIL" starttime="20210730 14:39:45.435" endtime="20210730 14:39:45.442"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:45.435" endtime="20210730 14:39:45.442"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:45.416" endtime="20210730 14:39:45.442"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:45.448" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:45.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:45.458" level="INFO">${pids} = 26827
26834
26839</msg>
<status status="PASS" starttime="20210730 14:39:45.443" endtime="20210730 14:39:45.458"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:45.459" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:45.458" endtime="20210730 14:39:45.459"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:45.459" level="INFO">${pids} = ['26827', '26834', '26839']</msg>
<status status="PASS" starttime="20210730 14:39:45.459" endtime="20210730 14:39:45.459"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">26827</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:45.463" level="INFO">Running command 'kill 26827 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:45.460" endtime="20210730 14:39:45.464"/>
</kw>
<status status="PASS" starttime="20210730 14:39:45.460" endtime="20210730 14:39:45.464"/>
</iter>
<iter>
<var name="${pid}">26834</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:45.468" level="INFO">Running command 'kill 26834 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:45.465" endtime="20210730 14:39:45.468"/>
</kw>
<status status="PASS" starttime="20210730 14:39:45.465" endtime="20210730 14:39:45.468"/>
</iter>
<iter>
<var name="${pid}">26839</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:45.471" level="INFO">Running command 'kill 26839 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:45.469" endtime="20210730 14:39:45.472"/>
</kw>
<status status="PASS" starttime="20210730 14:39:45.468" endtime="20210730 14:39:45.472"/>
</iter>
<status status="PASS" starttime="20210730 14:39:45.459" endtime="20210730 14:39:45.472"/>
</for>
<status status="PASS" starttime="20210730 14:39:45.459" endtime="20210730 14:39:45.472"/>
</branch>
<status status="PASS" starttime="20210730 14:39:45.459" endtime="20210730 14:39:45.472"/>
</if>
<status status="PASS" starttime="20210730 14:39:45.443" endtime="20210730 14:39:45.472"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcdABCDefgjklmnprstoö'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:43.837" endtime="20210730 14:39:45.472">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t60" name="With Each Valid Token, Updating Password Of Each System User With abcd012 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:45.479" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:45.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:45.489" level="INFO">${pids} = 26868</msg>
<status status="PASS" starttime="20210730 14:39:45.475" endtime="20210730 14:39:45.489"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:45.489" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:45.489" endtime="20210730 14:39:45.490"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:45.490" level="INFO">${pids} = ['26868']</msg>
<status status="PASS" starttime="20210730 14:39:45.490" endtime="20210730 14:39:45.490"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">26868</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:45.494" level="INFO">Running command 'kill 26868 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:45.491" endtime="20210730 14:39:45.494"/>
</kw>
<status status="PASS" starttime="20210730 14:39:45.491" endtime="20210730 14:39:45.494"/>
</iter>
<status status="PASS" starttime="20210730 14:39:45.490" endtime="20210730 14:39:45.494"/>
</for>
<status status="PASS" starttime="20210730 14:39:45.490" endtime="20210730 14:39:45.494"/>
</branch>
<status status="PASS" starttime="20210730 14:39:45.490" endtime="20210730 14:39:45.494"/>
</if>
<status status="PASS" starttime="20210730 14:39:45.475" endtime="20210730 14:39:45.495"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:45.496" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:45.495" endtime="20210730 14:39:45.496"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:45.497" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:45.496" endtime="20210730 14:39:45.497"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:45.497" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:45.497" endtime="20210730 14:39:45.497"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:45.498" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:45.497" endtime="20210730 14:39:45.498"/>
</kw>
<msg timestamp="20210730 14:39:45.498" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:45.496" endtime="20210730 14:39:45.498"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:45.501" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:45.498" endtime="20210730 14:39:45.503"/>
</kw>
<status status="PASS" starttime="20210730 14:39:45.495" endtime="20210730 14:39:45.503"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:45.504" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:45.504" endtime="20210730 14:39:45.514"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:47.015" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:45.514" endtime="20210730 14:39:47.015"/>
</kw>
<status status="PASS" starttime="20210730 14:39:45.503" endtime="20210730 14:39:47.016"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:47.017" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:47.016" endtime="20210730 14:39:47.017"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:47.017" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:47.017" endtime="20210730 14:39:47.017"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:47.017" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:47.017" endtime="20210730 14:39:47.017"/>
</kw>
<msg timestamp="20210730 14:39:47.018" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:47.016" endtime="20210730 14:39:47.018"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:47.018" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:47.018" endtime="20210730 14:39:47.018"/>
</kw>
<status status="PASS" starttime="20210730 14:39:47.016" endtime="20210730 14:39:47.018"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:47.019" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:47.019" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:47.019" endtime="20210730 14:39:47.019"/>
</kw>
<status status="PASS" starttime="20210730 14:39:47.019" endtime="20210730 14:39:47.019"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:47.020" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:47.020" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:47.020" endtime="20210730 14:39:47.020"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:47.020" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:47.020" endtime="20210730 14:39:47.020"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:47.021" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:47.021" endtime="20210730 14:39:47.021"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:47.021" endtime="20210730 14:39:47.022"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:47.022" endtime="20210730 14:39:47.022"/>
</kw>
<status status="PASS" starttime="20210730 14:39:47.020" endtime="20210730 14:39:47.022"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:47.022" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:47.022" endtime="20210730 14:39:47.022"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:47.023" endtime="20210730 14:39:47.023"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:47.023" endtime="20210730 14:39:47.024"/>
</kw>
<status status="PASS" starttime="20210730 14:39:47.022" endtime="20210730 14:39:47.024"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:47.024" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:47.024" endtime="20210730 14:39:47.024"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:47.024" endtime="20210730 14:39:47.025"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:47.025" endtime="20210730 14:39:47.025"/>
</kw>
<status status="PASS" starttime="20210730 14:39:47.024" endtime="20210730 14:39:47.025"/>
</iter>
<status status="PASS" starttime="20210730 14:39:47.020" endtime="20210730 14:39:47.025"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:47.026" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:47.025" endtime="20210730 14:39:47.026"/>
</kw>
<status status="PASS" starttime="20210730 14:39:47.019" endtime="20210730 14:39:47.026"/>
</kw>
<status status="PASS" starttime="20210730 14:39:45.474" endtime="20210730 14:39:47.026"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd012</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:47.027" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:47.027" endtime="20210730 14:39:47.027"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:47.028" level="INFO">${payload} = {'password': 'abcd012'}</msg>
<status status="PASS" starttime="20210730 14:39:47.027" endtime="20210730 14:39:47.028"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:47.037" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:47.037" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:47.028" endtime="20210730 14:39:47.037"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:47.038" endtime="20210730 14:39:47.038"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:47.038" endtime="20210730 14:39:47.038"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:47.028" endtime="20210730 14:39:47.038"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:47.028" endtime="20210730 14:39:47.038"/>
</for>
<status status="FAIL" starttime="20210730 14:39:47.026" endtime="20210730 14:39:47.038"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:47.026" endtime="20210730 14:39:47.038"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd012</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:47.040" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:47.039" endtime="20210730 14:39:47.041"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:47.041" level="INFO">${payload} = {'password': 'abcd012'}</msg>
<status status="PASS" starttime="20210730 14:39:47.041" endtime="20210730 14:39:47.041"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:47.046" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:47.046" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:47.042" endtime="20210730 14:39:47.046"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:47.046" endtime="20210730 14:39:47.046"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:47.046" endtime="20210730 14:39:47.046"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:47.041" endtime="20210730 14:39:47.046"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:47.041" endtime="20210730 14:39:47.046"/>
</for>
<status status="FAIL" starttime="20210730 14:39:47.038" endtime="20210730 14:39:47.047"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:47.038" endtime="20210730 14:39:47.047"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd012</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:47.048" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:47.047" endtime="20210730 14:39:47.048"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:47.048" level="INFO">${payload} = {'password': 'abcd012'}</msg>
<status status="PASS" starttime="20210730 14:39:47.048" endtime="20210730 14:39:47.048"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:47.052" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:47.052" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:47.048" endtime="20210730 14:39:47.052"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:47.052" endtime="20210730 14:39:47.052"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:47.052" endtime="20210730 14:39:47.052"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:47.048" endtime="20210730 14:39:47.053"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:47.048" endtime="20210730 14:39:47.053"/>
</for>
<status status="FAIL" starttime="20210730 14:39:47.047" endtime="20210730 14:39:47.053"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:47.047" endtime="20210730 14:39:47.053"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:47.026" endtime="20210730 14:39:47.053"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:47.057" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:47.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:47.069" level="INFO">${pids} = 26891
26898
26902</msg>
<status status="PASS" starttime="20210730 14:39:47.054" endtime="20210730 14:39:47.069"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:47.070" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:47.069" endtime="20210730 14:39:47.070"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:47.070" level="INFO">${pids} = ['26891', '26898', '26902']</msg>
<status status="PASS" starttime="20210730 14:39:47.070" endtime="20210730 14:39:47.070"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">26891</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:47.075" level="INFO">Running command 'kill 26891 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:47.071" endtime="20210730 14:39:47.075"/>
</kw>
<status status="PASS" starttime="20210730 14:39:47.071" endtime="20210730 14:39:47.076"/>
</iter>
<iter>
<var name="${pid}">26898</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:47.079" level="INFO">Running command 'kill 26898 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:47.076" endtime="20210730 14:39:47.079"/>
</kw>
<status status="PASS" starttime="20210730 14:39:47.076" endtime="20210730 14:39:47.079"/>
</iter>
<iter>
<var name="${pid}">26902</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:47.082" level="INFO">Running command 'kill 26902 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:47.080" endtime="20210730 14:39:47.083"/>
</kw>
<status status="PASS" starttime="20210730 14:39:47.080" endtime="20210730 14:39:47.083"/>
</iter>
<status status="PASS" starttime="20210730 14:39:47.071" endtime="20210730 14:39:47.083"/>
</for>
<status status="PASS" starttime="20210730 14:39:47.070" endtime="20210730 14:39:47.083"/>
</branch>
<status status="PASS" starttime="20210730 14:39:47.070" endtime="20210730 14:39:47.083"/>
</if>
<status status="PASS" starttime="20210730 14:39:47.053" endtime="20210730 14:39:47.083"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcd012'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:45.473" endtime="20210730 14:39:47.083">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t61" name="With Each Valid Token, Updating Password Of Each System User With abcd0123 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:47.089" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:47.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:47.100" level="INFO">${pids} = 26931</msg>
<status status="PASS" starttime="20210730 14:39:47.085" endtime="20210730 14:39:47.100"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:47.101" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:47.100" endtime="20210730 14:39:47.101"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:47.102" level="INFO">${pids} = ['26931']</msg>
<status status="PASS" starttime="20210730 14:39:47.102" endtime="20210730 14:39:47.102"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">26931</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:47.106" level="INFO">Running command 'kill 26931 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:47.103" endtime="20210730 14:39:47.107"/>
</kw>
<status status="PASS" starttime="20210730 14:39:47.102" endtime="20210730 14:39:47.107"/>
</iter>
<status status="PASS" starttime="20210730 14:39:47.102" endtime="20210730 14:39:47.107"/>
</for>
<status status="PASS" starttime="20210730 14:39:47.101" endtime="20210730 14:39:47.107"/>
</branch>
<status status="PASS" starttime="20210730 14:39:47.101" endtime="20210730 14:39:47.107"/>
</if>
<status status="PASS" starttime="20210730 14:39:47.085" endtime="20210730 14:39:47.108"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:47.109" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:47.109" endtime="20210730 14:39:47.109"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:47.110" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:47.109" endtime="20210730 14:39:47.110"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:47.110" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:47.110" endtime="20210730 14:39:47.110"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:47.111" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:47.110" endtime="20210730 14:39:47.111"/>
</kw>
<msg timestamp="20210730 14:39:47.111" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:47.109" endtime="20210730 14:39:47.111"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:47.116" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:47.111" endtime="20210730 14:39:47.119"/>
</kw>
<status status="PASS" starttime="20210730 14:39:47.108" endtime="20210730 14:39:47.119"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:47.121" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:47.120" endtime="20210730 14:39:47.125"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:48.627" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:47.125" endtime="20210730 14:39:48.627"/>
</kw>
<status status="PASS" starttime="20210730 14:39:47.120" endtime="20210730 14:39:48.627"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:48.629" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:48.628" endtime="20210730 14:39:48.629"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:48.629" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:48.629" endtime="20210730 14:39:48.629"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:48.629" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:48.629" endtime="20210730 14:39:48.629"/>
</kw>
<msg timestamp="20210730 14:39:48.630" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:48.628" endtime="20210730 14:39:48.630"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:48.630" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:48.630" endtime="20210730 14:39:48.630"/>
</kw>
<status status="PASS" starttime="20210730 14:39:48.628" endtime="20210730 14:39:48.631"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:48.631" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:48.631" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:48.631" endtime="20210730 14:39:48.631"/>
</kw>
<status status="PASS" starttime="20210730 14:39:48.631" endtime="20210730 14:39:48.631"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:48.632" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:48.632" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:48.632" endtime="20210730 14:39:48.632"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:48.632" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:48.632" endtime="20210730 14:39:48.632"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:48.633" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:48.633" endtime="20210730 14:39:48.633"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:48.633" endtime="20210730 14:39:48.634"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:48.634" endtime="20210730 14:39:48.634"/>
</kw>
<status status="PASS" starttime="20210730 14:39:48.632" endtime="20210730 14:39:48.634"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:48.634" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:48.634" endtime="20210730 14:39:48.634"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:48.635" endtime="20210730 14:39:48.635"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:48.636" endtime="20210730 14:39:48.636"/>
</kw>
<status status="PASS" starttime="20210730 14:39:48.634" endtime="20210730 14:39:48.636"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:48.636" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:48.636" endtime="20210730 14:39:48.636"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:48.637" endtime="20210730 14:39:48.637"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:48.637" endtime="20210730 14:39:48.638"/>
</kw>
<status status="PASS" starttime="20210730 14:39:48.636" endtime="20210730 14:39:48.638"/>
</iter>
<status status="PASS" starttime="20210730 14:39:48.632" endtime="20210730 14:39:48.638"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:48.638" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:48.638" endtime="20210730 14:39:48.638"/>
</kw>
<status status="PASS" starttime="20210730 14:39:48.631" endtime="20210730 14:39:48.638"/>
</kw>
<status status="PASS" starttime="20210730 14:39:47.085" endtime="20210730 14:39:48.638"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd0123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:48.640" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:48.640" endtime="20210730 14:39:48.640"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:48.641" level="INFO">${payload} = {'password': 'abcd0123'}</msg>
<status status="PASS" starttime="20210730 14:39:48.640" endtime="20210730 14:39:48.641"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:48.651" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:48.651" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:48.641" endtime="20210730 14:39:48.651"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:48.652" endtime="20210730 14:39:48.652"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:48.652" endtime="20210730 14:39:48.652"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:48.641" endtime="20210730 14:39:48.652"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:48.641" endtime="20210730 14:39:48.652"/>
</for>
<status status="FAIL" starttime="20210730 14:39:48.639" endtime="20210730 14:39:48.652"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:48.639" endtime="20210730 14:39:48.652"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd0123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:48.653" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:48.653" endtime="20210730 14:39:48.653"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:48.654" level="INFO">${payload} = {'password': 'abcd0123'}</msg>
<status status="PASS" starttime="20210730 14:39:48.653" endtime="20210730 14:39:48.654"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:48.658" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:48.658" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:48.654" endtime="20210730 14:39:48.659"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:48.659" endtime="20210730 14:39:48.659"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:48.659" endtime="20210730 14:39:48.659"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:48.654" endtime="20210730 14:39:48.659"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:48.654" endtime="20210730 14:39:48.659"/>
</for>
<status status="FAIL" starttime="20210730 14:39:48.652" endtime="20210730 14:39:48.659"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:48.652" endtime="20210730 14:39:48.659"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd0123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:48.660" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:48.660" endtime="20210730 14:39:48.660"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:48.661" level="INFO">${payload} = {'password': 'abcd0123'}</msg>
<status status="PASS" starttime="20210730 14:39:48.660" endtime="20210730 14:39:48.661"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:48.665" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:48.665" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:48.661" endtime="20210730 14:39:48.665"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:48.665" endtime="20210730 14:39:48.665"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:48.665" endtime="20210730 14:39:48.665"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:48.661" endtime="20210730 14:39:48.665"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:48.661" endtime="20210730 14:39:48.665"/>
</for>
<status status="FAIL" starttime="20210730 14:39:48.659" endtime="20210730 14:39:48.665"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:48.659" endtime="20210730 14:39:48.666"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:48.639" endtime="20210730 14:39:48.666"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:48.671" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:48.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:48.682" level="INFO">${pids} = 26954
26961
26965</msg>
<status status="PASS" starttime="20210730 14:39:48.666" endtime="20210730 14:39:48.682"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:48.683" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:48.682" endtime="20210730 14:39:48.683"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:48.683" level="INFO">${pids} = ['26954', '26961', '26965']</msg>
<status status="PASS" starttime="20210730 14:39:48.683" endtime="20210730 14:39:48.683"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">26954</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:48.687" level="INFO">Running command 'kill 26954 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:48.684" endtime="20210730 14:39:48.687"/>
</kw>
<status status="PASS" starttime="20210730 14:39:48.684" endtime="20210730 14:39:48.687"/>
</iter>
<iter>
<var name="${pid}">26961</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:48.691" level="INFO">Running command 'kill 26961 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:48.688" endtime="20210730 14:39:48.691"/>
</kw>
<status status="PASS" starttime="20210730 14:39:48.687" endtime="20210730 14:39:48.691"/>
</iter>
<iter>
<var name="${pid}">26965</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:48.695" level="INFO">Running command 'kill 26965 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:48.692" endtime="20210730 14:39:48.695"/>
</kw>
<status status="PASS" starttime="20210730 14:39:48.691" endtime="20210730 14:39:48.695"/>
</iter>
<status status="PASS" starttime="20210730 14:39:48.683" endtime="20210730 14:39:48.695"/>
</for>
<status status="PASS" starttime="20210730 14:39:48.683" endtime="20210730 14:39:48.696"/>
</branch>
<status status="PASS" starttime="20210730 14:39:48.683" endtime="20210730 14:39:48.696"/>
</if>
<status status="PASS" starttime="20210730 14:39:48.666" endtime="20210730 14:39:48.696"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcd0123'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:47.084" endtime="20210730 14:39:48.696">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t62" name="With Each Valid Token, Updating Password Of Each System User With abcd0123456789defghjk4 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:48.701" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:48.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:48.713" level="INFO">${pids} = 26994</msg>
<status status="PASS" starttime="20210730 14:39:48.698" endtime="20210730 14:39:48.713"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:48.714" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:48.713" endtime="20210730 14:39:48.714"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:48.715" level="INFO">${pids} = ['26994']</msg>
<status status="PASS" starttime="20210730 14:39:48.714" endtime="20210730 14:39:48.715"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">26994</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:48.720" level="INFO">Running command 'kill 26994 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:48.715" endtime="20210730 14:39:48.720"/>
</kw>
<status status="PASS" starttime="20210730 14:39:48.715" endtime="20210730 14:39:48.720"/>
</iter>
<status status="PASS" starttime="20210730 14:39:48.715" endtime="20210730 14:39:48.720"/>
</for>
<status status="PASS" starttime="20210730 14:39:48.714" endtime="20210730 14:39:48.720"/>
</branch>
<status status="PASS" starttime="20210730 14:39:48.714" endtime="20210730 14:39:48.720"/>
</if>
<status status="PASS" starttime="20210730 14:39:48.698" endtime="20210730 14:39:48.721"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:48.722" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:48.721" endtime="20210730 14:39:48.722"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:48.722" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:48.722" endtime="20210730 14:39:48.722"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:48.723" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:48.723" endtime="20210730 14:39:48.723"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:48.723" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:48.723" endtime="20210730 14:39:48.723"/>
</kw>
<msg timestamp="20210730 14:39:48.724" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:48.722" endtime="20210730 14:39:48.724"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:48.727" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:48.724" endtime="20210730 14:39:48.731"/>
</kw>
<status status="PASS" starttime="20210730 14:39:48.721" endtime="20210730 14:39:48.731"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:48.732" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:48.732" endtime="20210730 14:39:48.737"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:50.239" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:48.738" endtime="20210730 14:39:50.239"/>
</kw>
<status status="PASS" starttime="20210730 14:39:48.731" endtime="20210730 14:39:50.239"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:50.241" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:50.241" endtime="20210730 14:39:50.241"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:50.242" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:50.241" endtime="20210730 14:39:50.242"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:50.242" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:50.242" endtime="20210730 14:39:50.242"/>
</kw>
<msg timestamp="20210730 14:39:50.243" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:50.240" endtime="20210730 14:39:50.243"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:50.243" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:50.243" endtime="20210730 14:39:50.244"/>
</kw>
<status status="PASS" starttime="20210730 14:39:50.239" endtime="20210730 14:39:50.244"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:50.245" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:50.245" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:50.244" endtime="20210730 14:39:50.245"/>
</kw>
<status status="PASS" starttime="20210730 14:39:50.244" endtime="20210730 14:39:50.245"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:50.246" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:50.246" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:50.246" endtime="20210730 14:39:50.246"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:50.246" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:50.246" endtime="20210730 14:39:50.246"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:50.247" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:50.246" endtime="20210730 14:39:50.247"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:50.247" endtime="20210730 14:39:50.248"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:50.248" endtime="20210730 14:39:50.248"/>
</kw>
<status status="PASS" starttime="20210730 14:39:50.246" endtime="20210730 14:39:50.248"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:50.248" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:50.248" endtime="20210730 14:39:50.248"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:50.249" endtime="20210730 14:39:50.249"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:50.249" endtime="20210730 14:39:50.250"/>
</kw>
<status status="PASS" starttime="20210730 14:39:50.248" endtime="20210730 14:39:50.250"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:50.250" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:50.250" endtime="20210730 14:39:50.250"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:50.250" endtime="20210730 14:39:50.251"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:50.251" endtime="20210730 14:39:50.251"/>
</kw>
<status status="PASS" starttime="20210730 14:39:50.250" endtime="20210730 14:39:50.251"/>
</iter>
<status status="PASS" starttime="20210730 14:39:50.246" endtime="20210730 14:39:50.251"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:50.252" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:50.252" endtime="20210730 14:39:50.252"/>
</kw>
<status status="PASS" starttime="20210730 14:39:50.245" endtime="20210730 14:39:50.252"/>
</kw>
<status status="PASS" starttime="20210730 14:39:48.697" endtime="20210730 14:39:50.252"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd0123456789defghjk4</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:50.253" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:50.253" endtime="20210730 14:39:50.253"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:50.254" level="INFO">${payload} = {'password': 'abcd0123456789defghjk4'}</msg>
<status status="PASS" starttime="20210730 14:39:50.254" endtime="20210730 14:39:50.254"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:50.264" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:50.265" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:50.254" endtime="20210730 14:39:50.265"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:50.265" endtime="20210730 14:39:50.265"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:50.265" endtime="20210730 14:39:50.265"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:50.254" endtime="20210730 14:39:50.265"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:50.254" endtime="20210730 14:39:50.266"/>
</for>
<status status="FAIL" starttime="20210730 14:39:50.253" endtime="20210730 14:39:50.266"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:50.252" endtime="20210730 14:39:50.266"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd0123456789defghjk4</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:50.267" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:50.267" endtime="20210730 14:39:50.267"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:50.267" level="INFO">${payload} = {'password': 'abcd0123456789defghjk4'}</msg>
<status status="PASS" starttime="20210730 14:39:50.267" endtime="20210730 14:39:50.267"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:50.272" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:50.272" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:50.268" endtime="20210730 14:39:50.272"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:50.272" endtime="20210730 14:39:50.273"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:50.273" endtime="20210730 14:39:50.273"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:50.268" endtime="20210730 14:39:50.273"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:50.267" endtime="20210730 14:39:50.273"/>
</for>
<status status="FAIL" starttime="20210730 14:39:50.266" endtime="20210730 14:39:50.273"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:50.266" endtime="20210730 14:39:50.273"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd0123456789defghjk4</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:50.275" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:50.274" endtime="20210730 14:39:50.275"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:50.275" level="INFO">${payload} = {'password': 'abcd0123456789defghjk4'}</msg>
<status status="PASS" starttime="20210730 14:39:50.275" endtime="20210730 14:39:50.275"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:50.281" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:50.281" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:50.276" endtime="20210730 14:39:50.281"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:50.281" endtime="20210730 14:39:50.282"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:50.282" endtime="20210730 14:39:50.282"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:50.275" endtime="20210730 14:39:50.282"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:50.275" endtime="20210730 14:39:50.282"/>
</for>
<status status="FAIL" starttime="20210730 14:39:50.273" endtime="20210730 14:39:50.282"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:50.273" endtime="20210730 14:39:50.282"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:50.252" endtime="20210730 14:39:50.282"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:50.287" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:50.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:50.297" level="INFO">${pids} = 27017
27024
27029</msg>
<status status="PASS" starttime="20210730 14:39:50.283" endtime="20210730 14:39:50.297"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:50.298" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:50.297" endtime="20210730 14:39:50.298"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:50.299" level="INFO">${pids} = ['27017', '27024', '27029']</msg>
<status status="PASS" starttime="20210730 14:39:50.298" endtime="20210730 14:39:50.299"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">27017</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:50.302" level="INFO">Running command 'kill 27017 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:50.299" endtime="20210730 14:39:50.303"/>
</kw>
<status status="PASS" starttime="20210730 14:39:50.299" endtime="20210730 14:39:50.303"/>
</iter>
<iter>
<var name="${pid}">27024</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:50.307" level="INFO">Running command 'kill 27024 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:50.303" endtime="20210730 14:39:50.309"/>
</kw>
<status status="PASS" starttime="20210730 14:39:50.303" endtime="20210730 14:39:50.310"/>
</iter>
<iter>
<var name="${pid}">27029</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:50.314" level="INFO">Running command 'kill 27029 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:50.310" endtime="20210730 14:39:50.315"/>
</kw>
<status status="PASS" starttime="20210730 14:39:50.310" endtime="20210730 14:39:50.315"/>
</iter>
<status status="PASS" starttime="20210730 14:39:50.299" endtime="20210730 14:39:50.315"/>
</for>
<status status="PASS" starttime="20210730 14:39:50.298" endtime="20210730 14:39:50.315"/>
</branch>
<status status="PASS" starttime="20210730 14:39:50.298" endtime="20210730 14:39:50.315"/>
</if>
<status status="PASS" starttime="20210730 14:39:50.282" endtime="20210730 14:39:50.315"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcd0123456789defghjk4'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:48.696" endtime="20210730 14:39:50.316">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t63" name="With Each Valid Token, Updating Password Of Each System User With abcd!?. Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:50.320" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:50.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:50.331" level="INFO">${pids} = 27058</msg>
<status status="PASS" starttime="20210730 14:39:50.317" endtime="20210730 14:39:50.331"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:50.332" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:50.331" endtime="20210730 14:39:50.332"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:50.332" level="INFO">${pids} = ['27058']</msg>
<status status="PASS" starttime="20210730 14:39:50.332" endtime="20210730 14:39:50.332"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">27058</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:50.336" level="INFO">Running command 'kill 27058 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:50.333" endtime="20210730 14:39:50.336"/>
</kw>
<status status="PASS" starttime="20210730 14:39:50.332" endtime="20210730 14:39:50.336"/>
</iter>
<status status="PASS" starttime="20210730 14:39:50.332" endtime="20210730 14:39:50.336"/>
</for>
<status status="PASS" starttime="20210730 14:39:50.332" endtime="20210730 14:39:50.336"/>
</branch>
<status status="PASS" starttime="20210730 14:39:50.332" endtime="20210730 14:39:50.336"/>
</if>
<status status="PASS" starttime="20210730 14:39:50.317" endtime="20210730 14:39:50.336"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:50.338" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:50.337" endtime="20210730 14:39:50.338"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:50.338" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:50.338" endtime="20210730 14:39:50.338"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:50.339" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:50.338" endtime="20210730 14:39:50.339"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:50.339" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:50.339" endtime="20210730 14:39:50.339"/>
</kw>
<msg timestamp="20210730 14:39:50.339" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:50.338" endtime="20210730 14:39:50.339"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:50.343" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:50.339" endtime="20210730 14:39:50.346"/>
</kw>
<status status="PASS" starttime="20210730 14:39:50.337" endtime="20210730 14:39:50.347"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:50.348" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:50.347" endtime="20210730 14:39:50.353"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:51.855" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:50.354" endtime="20210730 14:39:51.855"/>
</kw>
<status status="PASS" starttime="20210730 14:39:50.347" endtime="20210730 14:39:51.855"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:51.857" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:51.856" endtime="20210730 14:39:51.857"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:51.857" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:51.857" endtime="20210730 14:39:51.857"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:51.858" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:51.857" endtime="20210730 14:39:51.858"/>
</kw>
<msg timestamp="20210730 14:39:51.858" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:51.856" endtime="20210730 14:39:51.858"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:51.858" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:51.858" endtime="20210730 14:39:51.859"/>
</kw>
<status status="PASS" starttime="20210730 14:39:51.856" endtime="20210730 14:39:51.859"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:51.859" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:51.859" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:51.859" endtime="20210730 14:39:51.860"/>
</kw>
<status status="PASS" starttime="20210730 14:39:51.859" endtime="20210730 14:39:51.860"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:51.861" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:51.862" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:51.860" endtime="20210730 14:39:51.862"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:51.862" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:51.862" endtime="20210730 14:39:51.862"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:51.862" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:51.862" endtime="20210730 14:39:51.862"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:51.862" endtime="20210730 14:39:51.863"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:51.863" endtime="20210730 14:39:51.863"/>
</kw>
<status status="PASS" starttime="20210730 14:39:51.862" endtime="20210730 14:39:51.864"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:51.864" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:51.864" endtime="20210730 14:39:51.864"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:51.864" endtime="20210730 14:39:51.865"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:51.865" endtime="20210730 14:39:51.865"/>
</kw>
<status status="PASS" starttime="20210730 14:39:51.864" endtime="20210730 14:39:51.865"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:51.865" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:51.865" endtime="20210730 14:39:51.865"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:51.866" endtime="20210730 14:39:51.866"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:51.866" endtime="20210730 14:39:51.867"/>
</kw>
<status status="PASS" starttime="20210730 14:39:51.865" endtime="20210730 14:39:51.867"/>
</iter>
<status status="PASS" starttime="20210730 14:39:51.862" endtime="20210730 14:39:51.867"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:51.867" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:51.867" endtime="20210730 14:39:51.867"/>
</kw>
<status status="PASS" starttime="20210730 14:39:51.860" endtime="20210730 14:39:51.867"/>
</kw>
<status status="PASS" starttime="20210730 14:39:50.317" endtime="20210730 14:39:51.867"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:51.869" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:51.868" endtime="20210730 14:39:51.869"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:51.869" level="INFO">${payload} = {'password': 'abcd!?.'}</msg>
<status status="PASS" starttime="20210730 14:39:51.869" endtime="20210730 14:39:51.869"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:51.882" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:51.883" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:51.870" endtime="20210730 14:39:51.883"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:51.883" endtime="20210730 14:39:51.883"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:51.883" endtime="20210730 14:39:51.883"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:51.870" endtime="20210730 14:39:51.883"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:51.869" endtime="20210730 14:39:51.883"/>
</for>
<status status="FAIL" starttime="20210730 14:39:51.868" endtime="20210730 14:39:51.883"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:51.868" endtime="20210730 14:39:51.883"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:51.884" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:51.884" endtime="20210730 14:39:51.884"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:51.885" level="INFO">${payload} = {'password': 'abcd!?.'}</msg>
<status status="PASS" starttime="20210730 14:39:51.884" endtime="20210730 14:39:51.885"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:51.889" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:51.889" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:51.885" endtime="20210730 14:39:51.889"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:51.889" endtime="20210730 14:39:51.889"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:51.889" endtime="20210730 14:39:51.889"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:51.885" endtime="20210730 14:39:51.889"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:51.885" endtime="20210730 14:39:51.889"/>
</for>
<status status="FAIL" starttime="20210730 14:39:51.883" endtime="20210730 14:39:51.889"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:51.883" endtime="20210730 14:39:51.889"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:51.890" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:51.890" endtime="20210730 14:39:51.891"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:51.891" level="INFO">${payload} = {'password': 'abcd!?.'}</msg>
<status status="PASS" starttime="20210730 14:39:51.891" endtime="20210730 14:39:51.891"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:51.895" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:51.896" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:51.891" endtime="20210730 14:39:51.896"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:51.896" endtime="20210730 14:39:51.896"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:51.896" endtime="20210730 14:39:51.896"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:51.891" endtime="20210730 14:39:51.896"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:51.891" endtime="20210730 14:39:51.896"/>
</for>
<status status="FAIL" starttime="20210730 14:39:51.890" endtime="20210730 14:39:51.896"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:51.890" endtime="20210730 14:39:51.897"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:51.868" endtime="20210730 14:39:51.897"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:51.901" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:51.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:51.912" level="INFO">${pids} = 27081
27088
27092</msg>
<status status="PASS" starttime="20210730 14:39:51.898" endtime="20210730 14:39:51.912"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:51.913" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:51.912" endtime="20210730 14:39:51.913"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:51.914" level="INFO">${pids} = ['27081', '27088', '27092']</msg>
<status status="PASS" starttime="20210730 14:39:51.913" endtime="20210730 14:39:51.914"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">27081</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:51.917" level="INFO">Running command 'kill 27081 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:51.914" endtime="20210730 14:39:51.917"/>
</kw>
<status status="PASS" starttime="20210730 14:39:51.914" endtime="20210730 14:39:51.917"/>
</iter>
<iter>
<var name="${pid}">27088</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:51.920" level="INFO">Running command 'kill 27088 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:51.918" endtime="20210730 14:39:51.921"/>
</kw>
<status status="PASS" starttime="20210730 14:39:51.918" endtime="20210730 14:39:51.921"/>
</iter>
<iter>
<var name="${pid}">27092</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:51.925" level="INFO">Running command 'kill 27092 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:51.921" endtime="20210730 14:39:51.925"/>
</kw>
<status status="PASS" starttime="20210730 14:39:51.921" endtime="20210730 14:39:51.925"/>
</iter>
<status status="PASS" starttime="20210730 14:39:51.914" endtime="20210730 14:39:51.925"/>
</for>
<status status="PASS" starttime="20210730 14:39:51.913" endtime="20210730 14:39:51.925"/>
</branch>
<status status="PASS" starttime="20210730 14:39:51.913" endtime="20210730 14:39:51.925"/>
</if>
<status status="PASS" starttime="20210730 14:39:51.897" endtime="20210730 14:39:51.926"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcd!?.'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:50.316" endtime="20210730 14:39:51.926">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t64" name="With Each Valid Token, Updating Password Of Each System User With abcd!?.! Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:51.931" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:51.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:51.942" level="INFO">${pids} = 27121</msg>
<status status="PASS" starttime="20210730 14:39:51.928" endtime="20210730 14:39:51.942"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:51.943" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:51.942" endtime="20210730 14:39:51.943"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:51.943" level="INFO">${pids} = ['27121']</msg>
<status status="PASS" starttime="20210730 14:39:51.943" endtime="20210730 14:39:51.943"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">27121</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:51.947" level="INFO">Running command 'kill 27121 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:51.944" endtime="20210730 14:39:51.948"/>
</kw>
<status status="PASS" starttime="20210730 14:39:51.944" endtime="20210730 14:39:51.948"/>
</iter>
<status status="PASS" starttime="20210730 14:39:51.943" endtime="20210730 14:39:51.948"/>
</for>
<status status="PASS" starttime="20210730 14:39:51.943" endtime="20210730 14:39:51.948"/>
</branch>
<status status="PASS" starttime="20210730 14:39:51.943" endtime="20210730 14:39:51.948"/>
</if>
<status status="PASS" starttime="20210730 14:39:51.928" endtime="20210730 14:39:51.948"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:51.949" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:51.949" endtime="20210730 14:39:51.949"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:51.950" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:51.950" endtime="20210730 14:39:51.950"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:51.950" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:51.950" endtime="20210730 14:39:51.950"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:51.951" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:51.951" endtime="20210730 14:39:51.951"/>
</kw>
<msg timestamp="20210730 14:39:51.951" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:51.950" endtime="20210730 14:39:51.951"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:51.954" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:51.951" endtime="20210730 14:39:51.956"/>
</kw>
<status status="PASS" starttime="20210730 14:39:51.949" endtime="20210730 14:39:51.956"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:51.959" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:51.958" endtime="20210730 14:39:51.965"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:53.467" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:51.965" endtime="20210730 14:39:53.468"/>
</kw>
<status status="PASS" starttime="20210730 14:39:51.957" endtime="20210730 14:39:53.468"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:53.469" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:53.469" endtime="20210730 14:39:53.469"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:53.469" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:53.469" endtime="20210730 14:39:53.469"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:53.470" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:53.469" endtime="20210730 14:39:53.470"/>
</kw>
<msg timestamp="20210730 14:39:53.470" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:53.468" endtime="20210730 14:39:53.470"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:53.470" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:53.470" endtime="20210730 14:39:53.471"/>
</kw>
<status status="PASS" starttime="20210730 14:39:53.468" endtime="20210730 14:39:53.471"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:53.471" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:53.471" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:53.471" endtime="20210730 14:39:53.471"/>
</kw>
<status status="PASS" starttime="20210730 14:39:53.471" endtime="20210730 14:39:53.472"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:53.472" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:53.473" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:53.472" endtime="20210730 14:39:53.473"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:53.473" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:53.473" endtime="20210730 14:39:53.473"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:53.474" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:53.474" endtime="20210730 14:39:53.475"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:53.475" endtime="20210730 14:39:53.476"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:53.476" endtime="20210730 14:39:53.476"/>
</kw>
<status status="PASS" starttime="20210730 14:39:53.474" endtime="20210730 14:39:53.476"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:53.477" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:53.477" endtime="20210730 14:39:53.477"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:53.477" endtime="20210730 14:39:53.478"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:53.478" endtime="20210730 14:39:53.478"/>
</kw>
<status status="PASS" starttime="20210730 14:39:53.477" endtime="20210730 14:39:53.478"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:53.479" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:53.479" endtime="20210730 14:39:53.479"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:53.479" endtime="20210730 14:39:53.480"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:53.480" endtime="20210730 14:39:53.480"/>
</kw>
<status status="PASS" starttime="20210730 14:39:53.479" endtime="20210730 14:39:53.480"/>
</iter>
<status status="PASS" starttime="20210730 14:39:53.473" endtime="20210730 14:39:53.480"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:53.480" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:53.480" endtime="20210730 14:39:53.481"/>
</kw>
<status status="PASS" starttime="20210730 14:39:53.472" endtime="20210730 14:39:53.481"/>
</kw>
<status status="PASS" starttime="20210730 14:39:51.927" endtime="20210730 14:39:53.481"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd!?.!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:53.482" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:53.482" endtime="20210730 14:39:53.482"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:53.482" level="INFO">${payload} = {'password': 'abcd!?.!'}</msg>
<status status="PASS" starttime="20210730 14:39:53.482" endtime="20210730 14:39:53.482"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:53.491" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:53.491" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:53.483" endtime="20210730 14:39:53.491"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:53.493" endtime="20210730 14:39:53.494"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:53.494" endtime="20210730 14:39:53.494"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:53.483" endtime="20210730 14:39:53.494"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:53.482" endtime="20210730 14:39:53.494"/>
</for>
<status status="FAIL" starttime="20210730 14:39:53.481" endtime="20210730 14:39:53.494"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:53.481" endtime="20210730 14:39:53.494"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd!?.!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:53.495" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:53.495" endtime="20210730 14:39:53.495"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:53.496" level="INFO">${payload} = {'password': 'abcd!?.!'}</msg>
<status status="PASS" starttime="20210730 14:39:53.495" endtime="20210730 14:39:53.496"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:53.500" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:53.500" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:53.496" endtime="20210730 14:39:53.500"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:53.500" endtime="20210730 14:39:53.500"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:53.500" endtime="20210730 14:39:53.500"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:53.496" endtime="20210730 14:39:53.500"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:53.496" endtime="20210730 14:39:53.500"/>
</for>
<status status="FAIL" starttime="20210730 14:39:53.494" endtime="20210730 14:39:53.501"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:53.494" endtime="20210730 14:39:53.501"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd!?.!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:53.502" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:53.501" endtime="20210730 14:39:53.502"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:53.502" level="INFO">${payload} = {'password': 'abcd!?.!'}</msg>
<status status="PASS" starttime="20210730 14:39:53.502" endtime="20210730 14:39:53.502"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:53.507" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:53.507" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:53.502" endtime="20210730 14:39:53.507"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:53.507" endtime="20210730 14:39:53.507"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:53.508" endtime="20210730 14:39:53.508"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:53.502" endtime="20210730 14:39:53.508"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:53.502" endtime="20210730 14:39:53.508"/>
</for>
<status status="FAIL" starttime="20210730 14:39:53.501" endtime="20210730 14:39:53.508"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:53.501" endtime="20210730 14:39:53.508"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:53.481" endtime="20210730 14:39:53.508"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:53.515" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:53.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:53.525" level="INFO">${pids} = 27144
27151
27155</msg>
<status status="PASS" starttime="20210730 14:39:53.510" endtime="20210730 14:39:53.525"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:53.526" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:53.525" endtime="20210730 14:39:53.526"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:53.527" level="INFO">${pids} = ['27144', '27151', '27155']</msg>
<status status="PASS" starttime="20210730 14:39:53.526" endtime="20210730 14:39:53.527"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">27144</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:53.530" level="INFO">Running command 'kill 27144 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:53.527" endtime="20210730 14:39:53.530"/>
</kw>
<status status="PASS" starttime="20210730 14:39:53.527" endtime="20210730 14:39:53.530"/>
</iter>
<iter>
<var name="${pid}">27151</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:53.533" level="INFO">Running command 'kill 27151 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:53.531" endtime="20210730 14:39:53.533"/>
</kw>
<status status="PASS" starttime="20210730 14:39:53.530" endtime="20210730 14:39:53.534"/>
</iter>
<iter>
<var name="${pid}">27155</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:53.539" level="INFO">Running command 'kill 27155 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:53.534" endtime="20210730 14:39:53.543"/>
</kw>
<status status="PASS" starttime="20210730 14:39:53.534" endtime="20210730 14:39:53.543"/>
</iter>
<status status="PASS" starttime="20210730 14:39:53.527" endtime="20210730 14:39:53.543"/>
</for>
<status status="PASS" starttime="20210730 14:39:53.526" endtime="20210730 14:39:53.543"/>
</branch>
<status status="PASS" starttime="20210730 14:39:53.526" endtime="20210730 14:39:53.543"/>
</if>
<status status="PASS" starttime="20210730 14:39:53.508" endtime="20210730 14:39:53.544"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcd!?.!'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:51.926" endtime="20210730 14:39:53.544">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t65" name="With Each Valid Token, Updating Password Of Each System User With abcd!?.!abcd!?.!abcd?? Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:53.549" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:53.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:53.559" level="INFO">${pids} = 27184</msg>
<status status="PASS" starttime="20210730 14:39:53.546" endtime="20210730 14:39:53.559"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:53.560" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:53.560" endtime="20210730 14:39:53.560"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:53.561" level="INFO">${pids} = ['27184']</msg>
<status status="PASS" starttime="20210730 14:39:53.561" endtime="20210730 14:39:53.561"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">27184</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:53.569" level="INFO">Running command 'kill 27184 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:53.562" endtime="20210730 14:39:53.570"/>
</kw>
<status status="PASS" starttime="20210730 14:39:53.562" endtime="20210730 14:39:53.570"/>
</iter>
<status status="PASS" starttime="20210730 14:39:53.561" endtime="20210730 14:39:53.570"/>
</for>
<status status="PASS" starttime="20210730 14:39:53.561" endtime="20210730 14:39:53.570"/>
</branch>
<status status="PASS" starttime="20210730 14:39:53.561" endtime="20210730 14:39:53.570"/>
</if>
<status status="PASS" starttime="20210730 14:39:53.546" endtime="20210730 14:39:53.571"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:53.572" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:53.572" endtime="20210730 14:39:53.572"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:53.573" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:53.573" endtime="20210730 14:39:53.573"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:53.574" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:53.573" endtime="20210730 14:39:53.574"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:53.575" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:53.574" endtime="20210730 14:39:53.575"/>
</kw>
<msg timestamp="20210730 14:39:53.575" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:53.572" endtime="20210730 14:39:53.575"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:53.580" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:53.575" endtime="20210730 14:39:53.582"/>
</kw>
<status status="PASS" starttime="20210730 14:39:53.571" endtime="20210730 14:39:53.582"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:53.584" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:53.583" endtime="20210730 14:39:53.587"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:55.090" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:53.588" endtime="20210730 14:39:55.090"/>
</kw>
<status status="PASS" starttime="20210730 14:39:53.583" endtime="20210730 14:39:55.090"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:55.092" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:55.092" endtime="20210730 14:39:55.092"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:55.092" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:55.092" endtime="20210730 14:39:55.092"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:55.093" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:55.092" endtime="20210730 14:39:55.093"/>
</kw>
<msg timestamp="20210730 14:39:55.093" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:55.091" endtime="20210730 14:39:55.093"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:55.094" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:55.093" endtime="20210730 14:39:55.094"/>
</kw>
<status status="PASS" starttime="20210730 14:39:55.091" endtime="20210730 14:39:55.094"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:55.095" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:55.095" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:55.094" endtime="20210730 14:39:55.095"/>
</kw>
<status status="PASS" starttime="20210730 14:39:55.094" endtime="20210730 14:39:55.095"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:55.096" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:55.096" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:55.095" endtime="20210730 14:39:55.096"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:55.096" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:55.096" endtime="20210730 14:39:55.096"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:55.097" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:55.096" endtime="20210730 14:39:55.097"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:55.097" endtime="20210730 14:39:55.098"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:55.098" endtime="20210730 14:39:55.098"/>
</kw>
<status status="PASS" starttime="20210730 14:39:55.096" endtime="20210730 14:39:55.098"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:55.098" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:55.098" endtime="20210730 14:39:55.098"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:55.098" endtime="20210730 14:39:55.099"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:55.099" endtime="20210730 14:39:55.099"/>
</kw>
<status status="PASS" starttime="20210730 14:39:55.098" endtime="20210730 14:39:55.099"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:55.100" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:55.100" endtime="20210730 14:39:55.100"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:55.100" endtime="20210730 14:39:55.101"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:55.101" endtime="20210730 14:39:55.101"/>
</kw>
<status status="PASS" starttime="20210730 14:39:55.099" endtime="20210730 14:39:55.101"/>
</iter>
<status status="PASS" starttime="20210730 14:39:55.096" endtime="20210730 14:39:55.101"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:55.101" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:55.101" endtime="20210730 14:39:55.101"/>
</kw>
<status status="PASS" starttime="20210730 14:39:55.095" endtime="20210730 14:39:55.102"/>
</kw>
<status status="PASS" starttime="20210730 14:39:53.545" endtime="20210730 14:39:55.102"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd!?.!abcd!?.!abcd??</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:55.103" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:55.103" endtime="20210730 14:39:55.103"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:55.103" level="INFO">${payload} = {'password': 'abcd!?.!abcd!?.!abcd??'}</msg>
<status status="PASS" starttime="20210730 14:39:55.103" endtime="20210730 14:39:55.104"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:55.114" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:55.114" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:55.104" endtime="20210730 14:39:55.115"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:55.115" endtime="20210730 14:39:55.115"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:55.115" endtime="20210730 14:39:55.115"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:55.104" endtime="20210730 14:39:55.115"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:55.104" endtime="20210730 14:39:55.115"/>
</for>
<status status="FAIL" starttime="20210730 14:39:55.102" endtime="20210730 14:39:55.116"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:55.102" endtime="20210730 14:39:55.116"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd!?.!abcd!?.!abcd??</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:55.117" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:55.116" endtime="20210730 14:39:55.117"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:55.117" level="INFO">${payload} = {'password': 'abcd!?.!abcd!?.!abcd??'}</msg>
<status status="PASS" starttime="20210730 14:39:55.117" endtime="20210730 14:39:55.117"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:55.121" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:55.122" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:55.117" endtime="20210730 14:39:55.122"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:55.122" endtime="20210730 14:39:55.122"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:55.122" endtime="20210730 14:39:55.122"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:55.117" endtime="20210730 14:39:55.122"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:55.117" endtime="20210730 14:39:55.122"/>
</for>
<status status="FAIL" starttime="20210730 14:39:55.116" endtime="20210730 14:39:55.122"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:55.116" endtime="20210730 14:39:55.122"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcd!?.!abcd!?.!abcd??</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:55.123" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:55.123" endtime="20210730 14:39:55.123"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:55.124" level="INFO">${payload} = {'password': 'abcd!?.!abcd!?.!abcd??'}</msg>
<status status="PASS" starttime="20210730 14:39:55.123" endtime="20210730 14:39:55.124"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:55.128" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:55.128" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:55.124" endtime="20210730 14:39:55.128"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:55.129" endtime="20210730 14:39:55.129"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:55.129" endtime="20210730 14:39:55.129"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:55.124" endtime="20210730 14:39:55.129"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:55.124" endtime="20210730 14:39:55.129"/>
</for>
<status status="FAIL" starttime="20210730 14:39:55.122" endtime="20210730 14:39:55.129"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:55.122" endtime="20210730 14:39:55.129"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:55.102" endtime="20210730 14:39:55.129"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:55.135" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:55.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:55.145" level="INFO">${pids} = 27207
27214
27219</msg>
<status status="PASS" starttime="20210730 14:39:55.130" endtime="20210730 14:39:55.145"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:55.146" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:55.146" endtime="20210730 14:39:55.146"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:55.147" level="INFO">${pids} = ['27207', '27214', '27219']</msg>
<status status="PASS" starttime="20210730 14:39:55.147" endtime="20210730 14:39:55.147"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">27207</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:55.150" level="INFO">Running command 'kill 27207 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:55.148" endtime="20210730 14:39:55.151"/>
</kw>
<status status="PASS" starttime="20210730 14:39:55.147" endtime="20210730 14:39:55.151"/>
</iter>
<iter>
<var name="${pid}">27214</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:55.154" level="INFO">Running command 'kill 27214 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:55.151" endtime="20210730 14:39:55.154"/>
</kw>
<status status="PASS" starttime="20210730 14:39:55.151" endtime="20210730 14:39:55.154"/>
</iter>
<iter>
<var name="${pid}">27219</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:55.158" level="INFO">Running command 'kill 27219 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:55.155" endtime="20210730 14:39:55.159"/>
</kw>
<status status="PASS" starttime="20210730 14:39:55.155" endtime="20210730 14:39:55.159"/>
</iter>
<status status="PASS" starttime="20210730 14:39:55.147" endtime="20210730 14:39:55.159"/>
</for>
<status status="PASS" starttime="20210730 14:39:55.147" endtime="20210730 14:39:55.159"/>
</branch>
<status status="PASS" starttime="20210730 14:39:55.147" endtime="20210730 14:39:55.159"/>
</if>
<status status="PASS" starttime="20210730 14:39:55.130" endtime="20210730 14:39:55.159"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcd!?.!abcd!?.!abcd??'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:53.545" endtime="20210730 14:39:55.160">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t66" name="With Each Valid Token, Updating Password Of Each System User With ABCD012 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:55.165" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:55.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:55.176" level="INFO">${pids} = 27248</msg>
<status status="PASS" starttime="20210730 14:39:55.162" endtime="20210730 14:39:55.176"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:55.177" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:55.176" endtime="20210730 14:39:55.177"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:55.178" level="INFO">${pids} = ['27248']</msg>
<status status="PASS" starttime="20210730 14:39:55.177" endtime="20210730 14:39:55.178"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">27248</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:55.181" level="INFO">Running command 'kill 27248 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:55.178" endtime="20210730 14:39:55.181"/>
</kw>
<status status="PASS" starttime="20210730 14:39:55.178" endtime="20210730 14:39:55.181"/>
</iter>
<status status="PASS" starttime="20210730 14:39:55.178" endtime="20210730 14:39:55.181"/>
</for>
<status status="PASS" starttime="20210730 14:39:55.177" endtime="20210730 14:39:55.181"/>
</branch>
<status status="PASS" starttime="20210730 14:39:55.177" endtime="20210730 14:39:55.182"/>
</if>
<status status="PASS" starttime="20210730 14:39:55.161" endtime="20210730 14:39:55.182"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:55.183" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:55.182" endtime="20210730 14:39:55.183"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:55.183" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:55.183" endtime="20210730 14:39:55.183"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:55.184" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:55.183" endtime="20210730 14:39:55.184"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:55.184" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:55.184" endtime="20210730 14:39:55.184"/>
</kw>
<msg timestamp="20210730 14:39:55.184" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:55.183" endtime="20210730 14:39:55.184"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:55.187" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:55.184" endtime="20210730 14:39:55.189"/>
</kw>
<status status="PASS" starttime="20210730 14:39:55.182" endtime="20210730 14:39:55.189"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:55.190" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:55.190" endtime="20210730 14:39:55.198"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:56.700" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:55.198" endtime="20210730 14:39:56.700"/>
</kw>
<status status="PASS" starttime="20210730 14:39:55.189" endtime="20210730 14:39:56.700"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:56.701" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:56.701" endtime="20210730 14:39:56.701"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:56.701" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:56.701" endtime="20210730 14:39:56.701"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:56.702" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:56.702" endtime="20210730 14:39:56.702"/>
</kw>
<msg timestamp="20210730 14:39:56.702" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:56.701" endtime="20210730 14:39:56.702"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:56.702" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:56.702" endtime="20210730 14:39:56.703"/>
</kw>
<status status="PASS" starttime="20210730 14:39:56.700" endtime="20210730 14:39:56.703"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:56.703" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:56.703" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:56.703" endtime="20210730 14:39:56.704"/>
</kw>
<status status="PASS" starttime="20210730 14:39:56.703" endtime="20210730 14:39:56.704"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:56.705" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:56.705" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:56.704" endtime="20210730 14:39:56.705"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:56.705" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:56.705" endtime="20210730 14:39:56.705"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:56.706" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:56.706" endtime="20210730 14:39:56.706"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:56.706" endtime="20210730 14:39:56.707"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:56.708" endtime="20210730 14:39:56.708"/>
</kw>
<status status="PASS" starttime="20210730 14:39:56.706" endtime="20210730 14:39:56.708"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:56.709" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:56.708" endtime="20210730 14:39:56.709"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:56.709" endtime="20210730 14:39:56.710"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:56.710" endtime="20210730 14:39:56.711"/>
</kw>
<status status="PASS" starttime="20210730 14:39:56.708" endtime="20210730 14:39:56.711"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:56.711" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:56.711" endtime="20210730 14:39:56.711"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:56.711" endtime="20210730 14:39:56.712"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:56.712" endtime="20210730 14:39:56.712"/>
</kw>
<status status="PASS" starttime="20210730 14:39:56.711" endtime="20210730 14:39:56.712"/>
</iter>
<status status="PASS" starttime="20210730 14:39:56.705" endtime="20210730 14:39:56.712"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:56.713" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:56.713" endtime="20210730 14:39:56.713"/>
</kw>
<status status="PASS" starttime="20210730 14:39:56.704" endtime="20210730 14:39:56.713"/>
</kw>
<status status="PASS" starttime="20210730 14:39:55.161" endtime="20210730 14:39:56.713"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD012</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:56.714" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:56.714" endtime="20210730 14:39:56.714"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:56.715" level="INFO">${payload} = {'password': 'ABCD012'}</msg>
<status status="PASS" starttime="20210730 14:39:56.715" endtime="20210730 14:39:56.715"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:56.724" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:56.725" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:56.715" endtime="20210730 14:39:56.725"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:56.725" endtime="20210730 14:39:56.725"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:56.725" endtime="20210730 14:39:56.725"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:56.715" endtime="20210730 14:39:56.725"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:56.715" endtime="20210730 14:39:56.725"/>
</for>
<status status="FAIL" starttime="20210730 14:39:56.714" endtime="20210730 14:39:56.726"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:56.714" endtime="20210730 14:39:56.726"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD012</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:56.727" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:56.727" endtime="20210730 14:39:56.727"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:56.727" level="INFO">${payload} = {'password': 'ABCD012'}</msg>
<status status="PASS" starttime="20210730 14:39:56.727" endtime="20210730 14:39:56.727"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:56.732" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:56.732" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:56.728" endtime="20210730 14:39:56.733"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:56.733" endtime="20210730 14:39:56.733"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:56.733" endtime="20210730 14:39:56.733"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:56.728" endtime="20210730 14:39:56.733"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:56.728" endtime="20210730 14:39:56.733"/>
</for>
<status status="FAIL" starttime="20210730 14:39:56.726" endtime="20210730 14:39:56.733"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:56.726" endtime="20210730 14:39:56.733"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD012</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:56.734" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:56.734" endtime="20210730 14:39:56.734"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:56.735" level="INFO">${payload} = {'password': 'ABCD012'}</msg>
<status status="PASS" starttime="20210730 14:39:56.735" endtime="20210730 14:39:56.735"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:56.740" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:56.740" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:56.735" endtime="20210730 14:39:56.740"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:56.740" endtime="20210730 14:39:56.740"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:56.740" endtime="20210730 14:39:56.741"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:56.735" endtime="20210730 14:39:56.741"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:56.735" endtime="20210730 14:39:56.741"/>
</for>
<status status="FAIL" starttime="20210730 14:39:56.733" endtime="20210730 14:39:56.741"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:56.733" endtime="20210730 14:39:56.741"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:56.713" endtime="20210730 14:39:56.741"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:56.746" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:56.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:56.756" level="INFO">${pids} = 27271
27278
27282</msg>
<status status="PASS" starttime="20210730 14:39:56.742" endtime="20210730 14:39:56.756"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:56.757" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:56.757" endtime="20210730 14:39:56.757"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:56.758" level="INFO">${pids} = ['27271', '27278', '27282']</msg>
<status status="PASS" starttime="20210730 14:39:56.758" endtime="20210730 14:39:56.758"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">27271</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:56.762" level="INFO">Running command 'kill 27271 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:56.759" endtime="20210730 14:39:56.762"/>
</kw>
<status status="PASS" starttime="20210730 14:39:56.758" endtime="20210730 14:39:56.762"/>
</iter>
<iter>
<var name="${pid}">27278</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:56.766" level="INFO">Running command 'kill 27278 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:56.763" endtime="20210730 14:39:56.767"/>
</kw>
<status status="PASS" starttime="20210730 14:39:56.762" endtime="20210730 14:39:56.767"/>
</iter>
<iter>
<var name="${pid}">27282</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:56.770" level="INFO">Running command 'kill 27282 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:56.767" endtime="20210730 14:39:56.771"/>
</kw>
<status status="PASS" starttime="20210730 14:39:56.767" endtime="20210730 14:39:56.771"/>
</iter>
<status status="PASS" starttime="20210730 14:39:56.758" endtime="20210730 14:39:56.771"/>
</for>
<status status="PASS" starttime="20210730 14:39:56.758" endtime="20210730 14:39:56.771"/>
</branch>
<status status="PASS" starttime="20210730 14:39:56.758" endtime="20210730 14:39:56.771"/>
</if>
<status status="PASS" starttime="20210730 14:39:56.742" endtime="20210730 14:39:56.771"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCD012'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:55.160" endtime="20210730 14:39:56.772">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t67" name="With Each Valid Token, Updating Password Of Each System User With ABCD0123 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:56.778" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:56.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:56.788" level="INFO">${pids} = 27311</msg>
<status status="PASS" starttime="20210730 14:39:56.775" endtime="20210730 14:39:56.788"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:56.789" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:56.789" endtime="20210730 14:39:56.789"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:56.790" level="INFO">${pids} = ['27311']</msg>
<status status="PASS" starttime="20210730 14:39:56.790" endtime="20210730 14:39:56.790"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">27311</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:56.795" level="INFO">Running command 'kill 27311 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:56.791" endtime="20210730 14:39:56.795"/>
</kw>
<status status="PASS" starttime="20210730 14:39:56.791" endtime="20210730 14:39:56.795"/>
</iter>
<status status="PASS" starttime="20210730 14:39:56.790" endtime="20210730 14:39:56.795"/>
</for>
<status status="PASS" starttime="20210730 14:39:56.790" endtime="20210730 14:39:56.795"/>
</branch>
<status status="PASS" starttime="20210730 14:39:56.790" endtime="20210730 14:39:56.795"/>
</if>
<status status="PASS" starttime="20210730 14:39:56.775" endtime="20210730 14:39:56.796"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:56.797" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:56.796" endtime="20210730 14:39:56.797"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:56.798" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:56.797" endtime="20210730 14:39:56.798"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:56.798" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:56.798" endtime="20210730 14:39:56.798"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:56.799" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:56.798" endtime="20210730 14:39:56.799"/>
</kw>
<msg timestamp="20210730 14:39:56.799" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:56.797" endtime="20210730 14:39:56.799"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:56.802" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:56.799" endtime="20210730 14:39:56.804"/>
</kw>
<status status="PASS" starttime="20210730 14:39:56.796" endtime="20210730 14:39:56.805"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:56.807" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:56.806" endtime="20210730 14:39:56.813"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:58.316" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:56.814" endtime="20210730 14:39:58.316"/>
</kw>
<status status="PASS" starttime="20210730 14:39:56.805" endtime="20210730 14:39:58.316"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:58.317" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:58.317" endtime="20210730 14:39:58.317"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:58.318" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:58.318" endtime="20210730 14:39:58.318"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:58.318" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:58.318" endtime="20210730 14:39:58.318"/>
</kw>
<msg timestamp="20210730 14:39:58.319" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:58.317" endtime="20210730 14:39:58.319"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:58.319" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:58.319" endtime="20210730 14:39:58.319"/>
</kw>
<status status="PASS" starttime="20210730 14:39:58.316" endtime="20210730 14:39:58.320"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:58.320" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:58.320" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:58.320" endtime="20210730 14:39:58.320"/>
</kw>
<status status="PASS" starttime="20210730 14:39:58.320" endtime="20210730 14:39:58.320"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:58.321" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:58.321" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:58.321" endtime="20210730 14:39:58.321"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:58.321" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:58.321" endtime="20210730 14:39:58.321"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:58.322" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:58.322" endtime="20210730 14:39:58.322"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:58.322" endtime="20210730 14:39:58.323"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:58.323" endtime="20210730 14:39:58.323"/>
</kw>
<status status="PASS" starttime="20210730 14:39:58.322" endtime="20210730 14:39:58.323"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:58.323" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:58.323" endtime="20210730 14:39:58.323"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:58.324" endtime="20210730 14:39:58.324"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:58.325" endtime="20210730 14:39:58.325"/>
</kw>
<status status="PASS" starttime="20210730 14:39:58.323" endtime="20210730 14:39:58.325"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:58.325" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:58.325" endtime="20210730 14:39:58.325"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:58.325" endtime="20210730 14:39:58.326"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:58.326" endtime="20210730 14:39:58.326"/>
</kw>
<status status="PASS" starttime="20210730 14:39:58.325" endtime="20210730 14:39:58.326"/>
</iter>
<status status="PASS" starttime="20210730 14:39:58.321" endtime="20210730 14:39:58.326"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:58.327" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:58.327" endtime="20210730 14:39:58.327"/>
</kw>
<status status="PASS" starttime="20210730 14:39:58.320" endtime="20210730 14:39:58.327"/>
</kw>
<status status="PASS" starttime="20210730 14:39:56.774" endtime="20210730 14:39:58.327"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD0123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:58.328" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:58.328" endtime="20210730 14:39:58.328"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:58.329" level="INFO">${payload} = {'password': 'ABCD0123'}</msg>
<status status="PASS" starttime="20210730 14:39:58.329" endtime="20210730 14:39:58.329"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:58.338" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:58.339" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:58.329" endtime="20210730 14:39:58.339"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:58.339" endtime="20210730 14:39:58.339"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:58.339" endtime="20210730 14:39:58.339"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:58.329" endtime="20210730 14:39:58.339"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:58.329" endtime="20210730 14:39:58.339"/>
</for>
<status status="FAIL" starttime="20210730 14:39:58.328" endtime="20210730 14:39:58.339"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:58.328" endtime="20210730 14:39:58.339"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD0123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:58.341" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:58.341" endtime="20210730 14:39:58.341"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:58.342" level="INFO">${payload} = {'password': 'ABCD0123'}</msg>
<status status="PASS" starttime="20210730 14:39:58.341" endtime="20210730 14:39:58.342"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:58.346" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:58.347" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:58.342" endtime="20210730 14:39:58.347"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:58.347" endtime="20210730 14:39:58.347"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:58.347" endtime="20210730 14:39:58.347"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:58.342" endtime="20210730 14:39:58.347"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:58.342" endtime="20210730 14:39:58.347"/>
</for>
<status status="FAIL" starttime="20210730 14:39:58.340" endtime="20210730 14:39:58.347"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:58.340" endtime="20210730 14:39:58.347"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD0123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:58.348" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:58.348" endtime="20210730 14:39:58.348"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:58.349" level="INFO">${payload} = {'password': 'ABCD0123'}</msg>
<status status="PASS" starttime="20210730 14:39:58.348" endtime="20210730 14:39:58.349"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:58.353" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:58.354" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:58.349" endtime="20210730 14:39:58.354"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:58.354" endtime="20210730 14:39:58.354"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:58.354" endtime="20210730 14:39:58.354"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:58.349" endtime="20210730 14:39:58.354"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:58.349" endtime="20210730 14:39:58.354"/>
</for>
<status status="FAIL" starttime="20210730 14:39:58.347" endtime="20210730 14:39:58.354"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:58.347" endtime="20210730 14:39:58.354"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:58.327" endtime="20210730 14:39:58.354"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:58.361" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:58.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:58.372" level="INFO">${pids} = 27334
27341
27346</msg>
<status status="PASS" starttime="20210730 14:39:58.355" endtime="20210730 14:39:58.372"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:58.373" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:58.372" endtime="20210730 14:39:58.373"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:58.373" level="INFO">${pids} = ['27334', '27341', '27346']</msg>
<status status="PASS" starttime="20210730 14:39:58.373" endtime="20210730 14:39:58.373"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">27334</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:58.378" level="INFO">Running command 'kill 27334 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:58.374" endtime="20210730 14:39:58.378"/>
</kw>
<status status="PASS" starttime="20210730 14:39:58.374" endtime="20210730 14:39:58.378"/>
</iter>
<iter>
<var name="${pid}">27341</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:58.381" level="INFO">Running command 'kill 27341 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:58.379" endtime="20210730 14:39:58.383"/>
</kw>
<status status="PASS" starttime="20210730 14:39:58.378" endtime="20210730 14:39:58.383"/>
</iter>
<iter>
<var name="${pid}">27346</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:58.389" level="INFO">Running command 'kill 27346 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:58.384" endtime="20210730 14:39:58.389"/>
</kw>
<status status="PASS" starttime="20210730 14:39:58.384" endtime="20210730 14:39:58.390"/>
</iter>
<status status="PASS" starttime="20210730 14:39:58.374" endtime="20210730 14:39:58.390"/>
</for>
<status status="PASS" starttime="20210730 14:39:58.373" endtime="20210730 14:39:58.390"/>
</branch>
<status status="PASS" starttime="20210730 14:39:58.373" endtime="20210730 14:39:58.390"/>
</if>
<status status="PASS" starttime="20210730 14:39:58.355" endtime="20210730 14:39:58.390"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCD0123'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:56.772" endtime="20210730 14:39:58.390">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t68" name="With Each Valid Token, Updating Password Of Each System User With ABCD0123ABCD0123ABCD01 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:58.395" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:58.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:58.407" level="INFO">${pids} = 27375</msg>
<status status="PASS" starttime="20210730 14:39:58.392" endtime="20210730 14:39:58.407"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:58.408" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:58.407" endtime="20210730 14:39:58.408"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:58.409" level="INFO">${pids} = ['27375']</msg>
<status status="PASS" starttime="20210730 14:39:58.408" endtime="20210730 14:39:58.409"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">27375</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:58.412" level="INFO">Running command 'kill 27375 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:58.409" endtime="20210730 14:39:58.413"/>
</kw>
<status status="PASS" starttime="20210730 14:39:58.409" endtime="20210730 14:39:58.413"/>
</iter>
<status status="PASS" starttime="20210730 14:39:58.409" endtime="20210730 14:39:58.413"/>
</for>
<status status="PASS" starttime="20210730 14:39:58.408" endtime="20210730 14:39:58.413"/>
</branch>
<status status="PASS" starttime="20210730 14:39:58.408" endtime="20210730 14:39:58.413"/>
</if>
<status status="PASS" starttime="20210730 14:39:58.392" endtime="20210730 14:39:58.413"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:58.414" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:58.414" endtime="20210730 14:39:58.414"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:58.415" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:58.415" endtime="20210730 14:39:58.415"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:58.415" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:58.415" endtime="20210730 14:39:58.415"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:58.416" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:58.416" endtime="20210730 14:39:58.416"/>
</kw>
<msg timestamp="20210730 14:39:58.416" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:58.414" endtime="20210730 14:39:58.416"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:58.423" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:58.416" endtime="20210730 14:39:58.425"/>
</kw>
<status status="PASS" starttime="20210730 14:39:58.413" endtime="20210730 14:39:58.425"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:39:58.426" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:39:58.426" endtime="20210730 14:39:58.430"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:39:59.933" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:39:58.430" endtime="20210730 14:39:59.933"/>
</kw>
<status status="PASS" starttime="20210730 14:39:58.425" endtime="20210730 14:39:59.933"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:59.935" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:39:59.934" endtime="20210730 14:39:59.935"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:39:59.935" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:39:59.935" endtime="20210730 14:39:59.935"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:39:59.935" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:59.935" endtime="20210730 14:39:59.935"/>
</kw>
<msg timestamp="20210730 14:39:59.936" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:39:59.934" endtime="20210730 14:39:59.936"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:39:59.936" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:39:59.936" endtime="20210730 14:39:59.936"/>
</kw>
<status status="PASS" starttime="20210730 14:39:59.934" endtime="20210730 14:39:59.937"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:39:59.937" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:39:59.937" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:39:59.937" endtime="20210730 14:39:59.937"/>
</kw>
<status status="PASS" starttime="20210730 14:39:59.937" endtime="20210730 14:39:59.937"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:39:59.938" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:39:59.938" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:39:59.938" endtime="20210730 14:39:59.938"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:39:59.939" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:39:59.938" endtime="20210730 14:39:59.939"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:59.940" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:59.940" endtime="20210730 14:39:59.940"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:59.941" endtime="20210730 14:39:59.942"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:59.942" endtime="20210730 14:39:59.942"/>
</kw>
<status status="PASS" starttime="20210730 14:39:59.939" endtime="20210730 14:39:59.942"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:59.943" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:59.943" endtime="20210730 14:39:59.943"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:59.943" endtime="20210730 14:39:59.944"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:59.944" endtime="20210730 14:39:59.944"/>
</kw>
<status status="PASS" starttime="20210730 14:39:59.942" endtime="20210730 14:39:59.944"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:59.945" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:39:59.944" endtime="20210730 14:39:59.945"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:39:59.945" endtime="20210730 14:39:59.945"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:39:59.945" endtime="20210730 14:39:59.946"/>
</kw>
<status status="PASS" starttime="20210730 14:39:59.944" endtime="20210730 14:39:59.946"/>
</iter>
<status status="PASS" starttime="20210730 14:39:59.939" endtime="20210730 14:39:59.946"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:39:59.946" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:39:59.946" endtime="20210730 14:39:59.946"/>
</kw>
<status status="PASS" starttime="20210730 14:39:59.937" endtime="20210730 14:39:59.946"/>
</kw>
<status status="PASS" starttime="20210730 14:39:58.392" endtime="20210730 14:39:59.946"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD0123ABCD0123ABCD01</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:59.948" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:39:59.947" endtime="20210730 14:39:59.948"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:59.948" level="INFO">${payload} = {'password': 'ABCD0123ABCD0123ABCD01'}</msg>
<status status="PASS" starttime="20210730 14:39:59.948" endtime="20210730 14:39:59.948"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:59.957" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:59.958" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:59.948" endtime="20210730 14:39:59.958"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:59.958" endtime="20210730 14:39:59.958"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:59.958" endtime="20210730 14:39:59.958"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:59.948" endtime="20210730 14:39:59.958"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:59.948" endtime="20210730 14:39:59.958"/>
</for>
<status status="FAIL" starttime="20210730 14:39:59.947" endtime="20210730 14:39:59.958"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:59.947" endtime="20210730 14:39:59.958"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD0123ABCD0123ABCD01</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:59.960" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:39:59.959" endtime="20210730 14:39:59.960"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:59.960" level="INFO">${payload} = {'password': 'ABCD0123ABCD0123ABCD01'}</msg>
<status status="PASS" starttime="20210730 14:39:59.960" endtime="20210730 14:39:59.960"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:59.964" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:59.964" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:59.960" endtime="20210730 14:39:59.964"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:59.965" endtime="20210730 14:39:59.965"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:59.965" endtime="20210730 14:39:59.965"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:59.960" endtime="20210730 14:39:59.965"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:59.960" endtime="20210730 14:39:59.965"/>
</for>
<status status="FAIL" starttime="20210730 14:39:59.959" endtime="20210730 14:39:59.965"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:59.958" endtime="20210730 14:39:59.965"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD0123ABCD0123ABCD01</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:59.966" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:39:59.966" endtime="20210730 14:39:59.966"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:39:59.966" level="INFO">${payload} = {'password': 'ABCD0123ABCD0123ABCD01'}</msg>
<status status="PASS" starttime="20210730 14:39:59.966" endtime="20210730 14:39:59.966"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:39:59.971" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:39:59.971" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:39:59.967" endtime="20210730 14:39:59.971"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:39:59.971" endtime="20210730 14:39:59.971"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:39:59.971" endtime="20210730 14:39:59.971"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:59.967" endtime="20210730 14:39:59.971"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:59.966" endtime="20210730 14:39:59.971"/>
</for>
<status status="FAIL" starttime="20210730 14:39:59.965" endtime="20210730 14:39:59.971"/>
</kw>
<status status="FAIL" starttime="20210730 14:39:59.965" endtime="20210730 14:39:59.971"/>
</iter>
<status status="FAIL" starttime="20210730 14:39:59.947" endtime="20210730 14:39:59.971"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:39:59.978" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:39:59.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:39:59.989" level="INFO">${pids} = 27398
27405
27410</msg>
<status status="PASS" starttime="20210730 14:39:59.973" endtime="20210730 14:39:59.989"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:59.990" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:39:59.989" endtime="20210730 14:39:59.990"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:39:59.991" level="INFO">${pids} = ['27398', '27405', '27410']</msg>
<status status="PASS" starttime="20210730 14:39:59.990" endtime="20210730 14:39:59.991"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">27398</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:59.994" level="INFO">Running command 'kill 27398 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:59.991" endtime="20210730 14:39:59.995"/>
</kw>
<status status="PASS" starttime="20210730 14:39:59.991" endtime="20210730 14:39:59.995"/>
</iter>
<iter>
<var name="${pid}">27405</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:39:59.998" level="INFO">Running command 'kill 27405 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:59.995" endtime="20210730 14:39:59.998"/>
</kw>
<status status="PASS" starttime="20210730 14:39:59.995" endtime="20210730 14:39:59.998"/>
</iter>
<iter>
<var name="${pid}">27410</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:00.002" level="INFO">Running command 'kill 27410 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:39:59.999" endtime="20210730 14:40:00.002"/>
</kw>
<status status="PASS" starttime="20210730 14:39:59.999" endtime="20210730 14:40:00.002"/>
</iter>
<status status="PASS" starttime="20210730 14:39:59.991" endtime="20210730 14:40:00.002"/>
</for>
<status status="PASS" starttime="20210730 14:39:59.990" endtime="20210730 14:40:00.002"/>
</branch>
<status status="PASS" starttime="20210730 14:39:59.990" endtime="20210730 14:40:00.003"/>
</if>
<status status="PASS" starttime="20210730 14:39:59.972" endtime="20210730 14:40:00.003"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCD0123ABCD0123ABCD01'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:39:58.391" endtime="20210730 14:40:00.003">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t69" name="With Each Valid Token, Updating Password Of Each System User With ABCD!?. Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:00.010" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:00.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:00.021" level="INFO">${pids} = 27439</msg>
<status status="PASS" starttime="20210730 14:40:00.006" endtime="20210730 14:40:00.021"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:00.022" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:00.022" endtime="20210730 14:40:00.022"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:00.023" level="INFO">${pids} = ['27439']</msg>
<status status="PASS" starttime="20210730 14:40:00.023" endtime="20210730 14:40:00.023"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">27439</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:00.026" level="INFO">Running command 'kill 27439 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:00.023" endtime="20210730 14:40:00.027"/>
</kw>
<status status="PASS" starttime="20210730 14:40:00.023" endtime="20210730 14:40:00.027"/>
</iter>
<status status="PASS" starttime="20210730 14:40:00.023" endtime="20210730 14:40:00.027"/>
</for>
<status status="PASS" starttime="20210730 14:40:00.022" endtime="20210730 14:40:00.027"/>
</branch>
<status status="PASS" starttime="20210730 14:40:00.022" endtime="20210730 14:40:00.027"/>
</if>
<status status="PASS" starttime="20210730 14:40:00.006" endtime="20210730 14:40:00.027"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:00.028" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:00.028" endtime="20210730 14:40:00.028"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:00.029" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:00.029" endtime="20210730 14:40:00.029"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:00.029" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:00.029" endtime="20210730 14:40:00.029"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:00.030" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:00.030" endtime="20210730 14:40:00.030"/>
</kw>
<msg timestamp="20210730 14:40:00.030" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:00.029" endtime="20210730 14:40:00.030"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:00.033" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:00.030" endtime="20210730 14:40:00.035"/>
</kw>
<status status="PASS" starttime="20210730 14:40:00.028" endtime="20210730 14:40:00.035"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:00.037" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:00.036" endtime="20210730 14:40:00.047"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:01.549" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:00.048" endtime="20210730 14:40:01.549"/>
</kw>
<status status="PASS" starttime="20210730 14:40:00.035" endtime="20210730 14:40:01.549"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:01.550" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:01.550" endtime="20210730 14:40:01.550"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:01.551" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:01.550" endtime="20210730 14:40:01.551"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:01.551" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:01.551" endtime="20210730 14:40:01.551"/>
</kw>
<msg timestamp="20210730 14:40:01.551" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:01.550" endtime="20210730 14:40:01.551"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:01.552" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:01.551" endtime="20210730 14:40:01.552"/>
</kw>
<status status="PASS" starttime="20210730 14:40:01.549" endtime="20210730 14:40:01.552"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:01.553" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:01.553" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:01.553" endtime="20210730 14:40:01.553"/>
</kw>
<status status="PASS" starttime="20210730 14:40:01.552" endtime="20210730 14:40:01.553"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:01.554" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:01.554" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:01.553" endtime="20210730 14:40:01.554"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:01.554" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:01.554" endtime="20210730 14:40:01.555"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:01.555" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:01.555" endtime="20210730 14:40:01.555"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:01.555" endtime="20210730 14:40:01.556"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:01.556" endtime="20210730 14:40:01.556"/>
</kw>
<status status="PASS" starttime="20210730 14:40:01.555" endtime="20210730 14:40:01.556"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:01.557" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:01.557" endtime="20210730 14:40:01.557"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:01.557" endtime="20210730 14:40:01.558"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:01.558" endtime="20210730 14:40:01.558"/>
</kw>
<status status="PASS" starttime="20210730 14:40:01.556" endtime="20210730 14:40:01.558"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:01.559" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:01.558" endtime="20210730 14:40:01.559"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:01.559" endtime="20210730 14:40:01.559"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:01.559" endtime="20210730 14:40:01.560"/>
</kw>
<status status="PASS" starttime="20210730 14:40:01.558" endtime="20210730 14:40:01.560"/>
</iter>
<status status="PASS" starttime="20210730 14:40:01.555" endtime="20210730 14:40:01.560"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:01.560" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:01.560" endtime="20210730 14:40:01.560"/>
</kw>
<status status="PASS" starttime="20210730 14:40:01.553" endtime="20210730 14:40:01.560"/>
</kw>
<status status="PASS" starttime="20210730 14:40:00.005" endtime="20210730 14:40:01.560"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:01.562" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:01.561" endtime="20210730 14:40:01.562"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:01.562" level="INFO">${payload} = {'password': 'ABCD!?.'}</msg>
<status status="PASS" starttime="20210730 14:40:01.562" endtime="20210730 14:40:01.562"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:01.572" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:01.572" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:01.562" endtime="20210730 14:40:01.572"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:01.572" endtime="20210730 14:40:01.572"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:01.573" endtime="20210730 14:40:01.573"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:01.562" endtime="20210730 14:40:01.573"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:01.562" endtime="20210730 14:40:01.573"/>
</for>
<status status="FAIL" starttime="20210730 14:40:01.561" endtime="20210730 14:40:01.573"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:01.561" endtime="20210730 14:40:01.573"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:01.574" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:40:01.574" endtime="20210730 14:40:01.574"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:01.575" level="INFO">${payload} = {'password': 'ABCD!?.'}</msg>
<status status="PASS" starttime="20210730 14:40:01.574" endtime="20210730 14:40:01.575"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:01.580" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:01.580" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:01.575" endtime="20210730 14:40:01.580"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:01.580" endtime="20210730 14:40:01.580"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:01.581" endtime="20210730 14:40:01.581"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:01.575" endtime="20210730 14:40:01.581"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:01.575" endtime="20210730 14:40:01.581"/>
</for>
<status status="FAIL" starttime="20210730 14:40:01.573" endtime="20210730 14:40:01.581"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:01.573" endtime="20210730 14:40:01.581"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:01.584" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:40:01.583" endtime="20210730 14:40:01.584"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:01.585" level="INFO">${payload} = {'password': 'ABCD!?.'}</msg>
<status status="PASS" starttime="20210730 14:40:01.584" endtime="20210730 14:40:01.585"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:01.590" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:01.591" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:01.585" endtime="20210730 14:40:01.591"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:01.591" endtime="20210730 14:40:01.591"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:01.591" endtime="20210730 14:40:01.591"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:01.585" endtime="20210730 14:40:01.591"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:01.585" endtime="20210730 14:40:01.591"/>
</for>
<status status="FAIL" starttime="20210730 14:40:01.581" endtime="20210730 14:40:01.592"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:01.581" endtime="20210730 14:40:01.592"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:01.561" endtime="20210730 14:40:01.592"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:01.596" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:01.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:01.607" level="INFO">${pids} = 27462
27469
27481</msg>
<status status="PASS" starttime="20210730 14:40:01.593" endtime="20210730 14:40:01.607"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:01.608" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:01.608" endtime="20210730 14:40:01.609"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:01.609" level="INFO">${pids} = ['27462', '27469', '27481']</msg>
<status status="PASS" starttime="20210730 14:40:01.609" endtime="20210730 14:40:01.610"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">27462</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:01.613" level="INFO">Running command 'kill 27462 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:01.610" endtime="20210730 14:40:01.614"/>
</kw>
<status status="PASS" starttime="20210730 14:40:01.610" endtime="20210730 14:40:01.614"/>
</iter>
<iter>
<var name="${pid}">27469</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:01.618" level="INFO">Running command 'kill 27469 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:01.614" endtime="20210730 14:40:01.619"/>
</kw>
<status status="PASS" starttime="20210730 14:40:01.614" endtime="20210730 14:40:01.619"/>
</iter>
<iter>
<var name="${pid}">27481</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:01.624" level="INFO">Running command 'kill 27481 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:01.619" endtime="20210730 14:40:01.625"/>
</kw>
<status status="PASS" starttime="20210730 14:40:01.619" endtime="20210730 14:40:01.625"/>
</iter>
<status status="PASS" starttime="20210730 14:40:01.610" endtime="20210730 14:40:01.625"/>
</for>
<status status="PASS" starttime="20210730 14:40:01.609" endtime="20210730 14:40:01.625"/>
</branch>
<status status="PASS" starttime="20210730 14:40:01.609" endtime="20210730 14:40:01.625"/>
</if>
<status status="PASS" starttime="20210730 14:40:01.592" endtime="20210730 14:40:01.625"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCD!?.'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:00.004" endtime="20210730 14:40:01.625">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t70" name="With Each Valid Token, Updating Password Of Each System User With ABCD!?.. Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:01.630" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:01.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:01.642" level="INFO">${pids} = 27510</msg>
<status status="PASS" starttime="20210730 14:40:01.627" endtime="20210730 14:40:01.642"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:01.643" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:01.643" endtime="20210730 14:40:01.643"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:01.644" level="INFO">${pids} = ['27510']</msg>
<status status="PASS" starttime="20210730 14:40:01.644" endtime="20210730 14:40:01.644"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">27510</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:01.648" level="INFO">Running command 'kill 27510 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:01.644" endtime="20210730 14:40:01.648"/>
</kw>
<status status="PASS" starttime="20210730 14:40:01.644" endtime="20210730 14:40:01.648"/>
</iter>
<status status="PASS" starttime="20210730 14:40:01.644" endtime="20210730 14:40:01.648"/>
</for>
<status status="PASS" starttime="20210730 14:40:01.644" endtime="20210730 14:40:01.648"/>
</branch>
<status status="PASS" starttime="20210730 14:40:01.643" endtime="20210730 14:40:01.648"/>
</if>
<status status="PASS" starttime="20210730 14:40:01.627" endtime="20210730 14:40:01.648"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:01.650" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:01.649" endtime="20210730 14:40:01.650"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:01.650" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:01.650" endtime="20210730 14:40:01.650"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:01.651" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:01.651" endtime="20210730 14:40:01.651"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:01.651" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:01.651" endtime="20210730 14:40:01.651"/>
</kw>
<msg timestamp="20210730 14:40:01.652" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:01.650" endtime="20210730 14:40:01.652"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:01.657" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:01.652" endtime="20210730 14:40:01.659"/>
</kw>
<status status="PASS" starttime="20210730 14:40:01.649" endtime="20210730 14:40:01.660"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:01.661" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:01.661" endtime="20210730 14:40:01.665"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:03.168" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:01.666" endtime="20210730 14:40:03.169"/>
</kw>
<status status="PASS" starttime="20210730 14:40:01.660" endtime="20210730 14:40:03.169"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:03.170" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:03.170" endtime="20210730 14:40:03.170"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:03.170" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:03.170" endtime="20210730 14:40:03.170"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:03.171" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:03.171" endtime="20210730 14:40:03.171"/>
</kw>
<msg timestamp="20210730 14:40:03.171" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:03.170" endtime="20210730 14:40:03.171"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:03.171" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:03.171" endtime="20210730 14:40:03.172"/>
</kw>
<status status="PASS" starttime="20210730 14:40:03.169" endtime="20210730 14:40:03.172"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:03.172" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:03.173" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:03.172" endtime="20210730 14:40:03.173"/>
</kw>
<status status="PASS" starttime="20210730 14:40:03.172" endtime="20210730 14:40:03.173"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:03.175" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:03.175" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:03.174" endtime="20210730 14:40:03.175"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:03.175" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:03.175" endtime="20210730 14:40:03.175"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:03.176" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:03.176" endtime="20210730 14:40:03.176"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:03.176" endtime="20210730 14:40:03.177"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:03.177" endtime="20210730 14:40:03.177"/>
</kw>
<status status="PASS" starttime="20210730 14:40:03.176" endtime="20210730 14:40:03.177"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:03.178" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:03.178" endtime="20210730 14:40:03.178"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:03.178" endtime="20210730 14:40:03.179"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:03.179" endtime="20210730 14:40:03.179"/>
</kw>
<status status="PASS" starttime="20210730 14:40:03.178" endtime="20210730 14:40:03.179"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:03.179" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:03.179" endtime="20210730 14:40:03.179"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:03.180" endtime="20210730 14:40:03.180"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:03.180" endtime="20210730 14:40:03.181"/>
</kw>
<status status="PASS" starttime="20210730 14:40:03.179" endtime="20210730 14:40:03.181"/>
</iter>
<status status="PASS" starttime="20210730 14:40:03.175" endtime="20210730 14:40:03.181"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:03.181" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:03.181" endtime="20210730 14:40:03.181"/>
</kw>
<status status="PASS" starttime="20210730 14:40:03.173" endtime="20210730 14:40:03.181"/>
</kw>
<status status="PASS" starttime="20210730 14:40:01.627" endtime="20210730 14:40:03.181"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD!?..</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:03.183" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:03.182" endtime="20210730 14:40:03.183"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:03.183" level="INFO">${payload} = {'password': 'ABCD!?..'}</msg>
<status status="PASS" starttime="20210730 14:40:03.183" endtime="20210730 14:40:03.183"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:03.193" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:03.193" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:03.183" endtime="20210730 14:40:03.193"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:03.194" endtime="20210730 14:40:03.194"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:03.194" endtime="20210730 14:40:03.194"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:03.183" endtime="20210730 14:40:03.194"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:03.183" endtime="20210730 14:40:03.194"/>
</for>
<status status="FAIL" starttime="20210730 14:40:03.182" endtime="20210730 14:40:03.194"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:03.182" endtime="20210730 14:40:03.194"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD!?..</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:03.195" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:40:03.195" endtime="20210730 14:40:03.195"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:03.196" level="INFO">${payload} = {'password': 'ABCD!?..'}</msg>
<status status="PASS" starttime="20210730 14:40:03.196" endtime="20210730 14:40:03.196"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:03.200" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:03.200" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:03.196" endtime="20210730 14:40:03.200"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:03.201" endtime="20210730 14:40:03.201"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:03.201" endtime="20210730 14:40:03.201"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:03.196" endtime="20210730 14:40:03.201"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:03.196" endtime="20210730 14:40:03.201"/>
</for>
<status status="FAIL" starttime="20210730 14:40:03.194" endtime="20210730 14:40:03.201"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:03.194" endtime="20210730 14:40:03.201"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD!?..</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:03.202" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:40:03.202" endtime="20210730 14:40:03.202"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:03.203" level="INFO">${payload} = {'password': 'ABCD!?..'}</msg>
<status status="PASS" starttime="20210730 14:40:03.202" endtime="20210730 14:40:03.203"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:03.208" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:03.208" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:03.203" endtime="20210730 14:40:03.208"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:03.209" endtime="20210730 14:40:03.209"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:03.209" endtime="20210730 14:40:03.209"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:03.203" endtime="20210730 14:40:03.209"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:03.203" endtime="20210730 14:40:03.209"/>
</for>
<status status="FAIL" starttime="20210730 14:40:03.201" endtime="20210730 14:40:03.209"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:03.201" endtime="20210730 14:40:03.209"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:03.182" endtime="20210730 14:40:03.209"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:03.215" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:03.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:03.225" level="INFO">${pids} = 27533
27540
27546</msg>
<status status="PASS" starttime="20210730 14:40:03.212" endtime="20210730 14:40:03.225"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:03.226" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:03.226" endtime="20210730 14:40:03.226"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:03.227" level="INFO">${pids} = ['27533', '27540', '27546']</msg>
<status status="PASS" starttime="20210730 14:40:03.227" endtime="20210730 14:40:03.227"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">27533</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:03.231" level="INFO">Running command 'kill 27533 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:03.227" endtime="20210730 14:40:03.231"/>
</kw>
<status status="PASS" starttime="20210730 14:40:03.227" endtime="20210730 14:40:03.231"/>
</iter>
<iter>
<var name="${pid}">27540</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:03.234" level="INFO">Running command 'kill 27540 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:03.232" endtime="20210730 14:40:03.235"/>
</kw>
<status status="PASS" starttime="20210730 14:40:03.231" endtime="20210730 14:40:03.235"/>
</iter>
<iter>
<var name="${pid}">27546</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:03.244" level="INFO">Running command 'kill 27546 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:03.235" endtime="20210730 14:40:03.245"/>
</kw>
<status status="PASS" starttime="20210730 14:40:03.235" endtime="20210730 14:40:03.245"/>
</iter>
<status status="PASS" starttime="20210730 14:40:03.227" endtime="20210730 14:40:03.245"/>
</for>
<status status="PASS" starttime="20210730 14:40:03.227" endtime="20210730 14:40:03.245"/>
</branch>
<status status="PASS" starttime="20210730 14:40:03.226" endtime="20210730 14:40:03.245"/>
</if>
<status status="PASS" starttime="20210730 14:40:03.211" endtime="20210730 14:40:03.246"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCD!?..'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:01.626" endtime="20210730 14:40:03.246">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t71" name="With Each Valid Token, Updating Password Of Each System User With ABCD!?..ABCD!?..ABCD!? Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:03.252" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:03.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:03.263" level="INFO">${pids} = 27575</msg>
<status status="PASS" starttime="20210730 14:40:03.249" endtime="20210730 14:40:03.263"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:03.264" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:03.263" endtime="20210730 14:40:03.264"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:03.264" level="INFO">${pids} = ['27575']</msg>
<status status="PASS" starttime="20210730 14:40:03.264" endtime="20210730 14:40:03.264"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">27575</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:03.268" level="INFO">Running command 'kill 27575 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:03.265" endtime="20210730 14:40:03.269"/>
</kw>
<status status="PASS" starttime="20210730 14:40:03.265" endtime="20210730 14:40:03.269"/>
</iter>
<status status="PASS" starttime="20210730 14:40:03.265" endtime="20210730 14:40:03.269"/>
</for>
<status status="PASS" starttime="20210730 14:40:03.264" endtime="20210730 14:40:03.269"/>
</branch>
<status status="PASS" starttime="20210730 14:40:03.264" endtime="20210730 14:40:03.269"/>
</if>
<status status="PASS" starttime="20210730 14:40:03.248" endtime="20210730 14:40:03.269"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:03.270" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:03.270" endtime="20210730 14:40:03.270"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:03.271" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:03.271" endtime="20210730 14:40:03.271"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:03.271" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:03.271" endtime="20210730 14:40:03.271"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:03.272" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:03.272" endtime="20210730 14:40:03.272"/>
</kw>
<msg timestamp="20210730 14:40:03.272" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:03.270" endtime="20210730 14:40:03.272"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:03.279" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:03.272" endtime="20210730 14:40:03.281"/>
</kw>
<status status="PASS" starttime="20210730 14:40:03.269" endtime="20210730 14:40:03.282"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:03.283" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:03.283" endtime="20210730 14:40:03.287"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:04.789" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:03.288" endtime="20210730 14:40:04.789"/>
</kw>
<status status="PASS" starttime="20210730 14:40:03.282" endtime="20210730 14:40:04.789"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:04.790" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:04.790" endtime="20210730 14:40:04.790"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:04.791" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:04.791" endtime="20210730 14:40:04.791"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:04.791" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:04.791" endtime="20210730 14:40:04.791"/>
</kw>
<msg timestamp="20210730 14:40:04.792" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:04.790" endtime="20210730 14:40:04.792"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:04.792" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:04.792" endtime="20210730 14:40:04.792"/>
</kw>
<status status="PASS" starttime="20210730 14:40:04.789" endtime="20210730 14:40:04.793"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:04.793" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:04.793" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:04.793" endtime="20210730 14:40:04.793"/>
</kw>
<status status="PASS" starttime="20210730 14:40:04.793" endtime="20210730 14:40:04.793"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:04.795" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:04.795" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:04.794" endtime="20210730 14:40:04.795"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:04.796" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:04.795" endtime="20210730 14:40:04.796"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:04.797" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:04.796" endtime="20210730 14:40:04.797"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:04.797" endtime="20210730 14:40:04.797"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:04.797" endtime="20210730 14:40:04.798"/>
</kw>
<status status="PASS" starttime="20210730 14:40:04.796" endtime="20210730 14:40:04.798"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:04.798" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:04.798" endtime="20210730 14:40:04.798"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:04.798" endtime="20210730 14:40:04.799"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:04.799" endtime="20210730 14:40:04.799"/>
</kw>
<status status="PASS" starttime="20210730 14:40:04.798" endtime="20210730 14:40:04.799"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:04.800" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:04.799" endtime="20210730 14:40:04.800"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:04.800" endtime="20210730 14:40:04.801"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:04.801" endtime="20210730 14:40:04.801"/>
</kw>
<status status="PASS" starttime="20210730 14:40:04.799" endtime="20210730 14:40:04.801"/>
</iter>
<status status="PASS" starttime="20210730 14:40:04.796" endtime="20210730 14:40:04.801"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:04.801" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:04.801" endtime="20210730 14:40:04.801"/>
</kw>
<status status="PASS" starttime="20210730 14:40:04.794" endtime="20210730 14:40:04.802"/>
</kw>
<status status="PASS" starttime="20210730 14:40:03.248" endtime="20210730 14:40:04.802"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD!?..ABCD!?..ABCD!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:04.803" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:04.803" endtime="20210730 14:40:04.803"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:04.803" level="INFO">${payload} = {'password': 'ABCD!?..ABCD!?..ABCD!?'}</msg>
<status status="PASS" starttime="20210730 14:40:04.803" endtime="20210730 14:40:04.803"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:04.814" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:04.814" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:04.804" endtime="20210730 14:40:04.814"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:04.814" endtime="20210730 14:40:04.814"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:04.814" endtime="20210730 14:40:04.815"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:04.804" endtime="20210730 14:40:04.815"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:04.803" endtime="20210730 14:40:04.815"/>
</for>
<status status="FAIL" starttime="20210730 14:40:04.802" endtime="20210730 14:40:04.815"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:04.802" endtime="20210730 14:40:04.815"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD!?..ABCD!?..ABCD!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:04.816" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:40:04.816" endtime="20210730 14:40:04.816"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:04.816" level="INFO">${payload} = {'password': 'ABCD!?..ABCD!?..ABCD!?'}</msg>
<status status="PASS" starttime="20210730 14:40:04.816" endtime="20210730 14:40:04.816"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:04.821" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:04.821" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:04.817" endtime="20210730 14:40:04.821"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:04.822" endtime="20210730 14:40:04.822"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:04.822" endtime="20210730 14:40:04.822"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:04.817" endtime="20210730 14:40:04.822"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:04.817" endtime="20210730 14:40:04.822"/>
</for>
<status status="FAIL" starttime="20210730 14:40:04.815" endtime="20210730 14:40:04.822"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:04.815" endtime="20210730 14:40:04.822"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCD!?..ABCD!?..ABCD!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:04.823" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:40:04.823" endtime="20210730 14:40:04.823"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:04.824" level="INFO">${payload} = {'password': 'ABCD!?..ABCD!?..ABCD!?'}</msg>
<status status="PASS" starttime="20210730 14:40:04.823" endtime="20210730 14:40:04.824"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:04.828" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:04.829" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:04.824" endtime="20210730 14:40:04.829"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:04.829" endtime="20210730 14:40:04.829"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:04.829" endtime="20210730 14:40:04.829"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:04.824" endtime="20210730 14:40:04.829"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:04.824" endtime="20210730 14:40:04.829"/>
</for>
<status status="FAIL" starttime="20210730 14:40:04.822" endtime="20210730 14:40:04.829"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:04.822" endtime="20210730 14:40:04.829"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:04.802" endtime="20210730 14:40:04.830"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:04.836" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:04.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:04.848" level="INFO">${pids} = 27598
27605
27610</msg>
<status status="PASS" starttime="20210730 14:40:04.831" endtime="20210730 14:40:04.848"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:04.849" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:04.848" endtime="20210730 14:40:04.849"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:04.849" level="INFO">${pids} = ['27598', '27605', '27610']</msg>
<status status="PASS" starttime="20210730 14:40:04.849" endtime="20210730 14:40:04.850"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">27598</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:04.853" level="INFO">Running command 'kill 27598 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:04.850" endtime="20210730 14:40:04.853"/>
</kw>
<status status="PASS" starttime="20210730 14:40:04.850" endtime="20210730 14:40:04.853"/>
</iter>
<iter>
<var name="${pid}">27605</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:04.856" level="INFO">Running command 'kill 27605 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:04.854" endtime="20210730 14:40:04.859"/>
</kw>
<status status="PASS" starttime="20210730 14:40:04.854" endtime="20210730 14:40:04.859"/>
</iter>
<iter>
<var name="${pid}">27610</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:04.864" level="INFO">Running command 'kill 27610 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:04.859" endtime="20210730 14:40:04.864"/>
</kw>
<status status="PASS" starttime="20210730 14:40:04.859" endtime="20210730 14:40:04.864"/>
</iter>
<status status="PASS" starttime="20210730 14:40:04.850" endtime="20210730 14:40:04.864"/>
</for>
<status status="PASS" starttime="20210730 14:40:04.849" endtime="20210730 14:40:04.865"/>
</branch>
<status status="PASS" starttime="20210730 14:40:04.849" endtime="20210730 14:40:04.865"/>
</if>
<status status="PASS" starttime="20210730 14:40:04.830" endtime="20210730 14:40:04.865"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCD!?..ABCD!?..ABCD!?'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:03.247" endtime="20210730 14:40:04.865">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t72" name="With Each Valid Token, Updating Password Of Each System User With 0123!?. Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:04.870" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:04.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:04.881" level="INFO">${pids} = 27639</msg>
<status status="PASS" starttime="20210730 14:40:04.867" endtime="20210730 14:40:04.881"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:04.882" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:04.882" endtime="20210730 14:40:04.882"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:04.883" level="INFO">${pids} = ['27639']</msg>
<status status="PASS" starttime="20210730 14:40:04.883" endtime="20210730 14:40:04.883"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">27639</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:04.887" level="INFO">Running command 'kill 27639 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:04.883" endtime="20210730 14:40:04.887"/>
</kw>
<status status="PASS" starttime="20210730 14:40:04.883" endtime="20210730 14:40:04.887"/>
</iter>
<status status="PASS" starttime="20210730 14:40:04.883" endtime="20210730 14:40:04.887"/>
</for>
<status status="PASS" starttime="20210730 14:40:04.883" endtime="20210730 14:40:04.887"/>
</branch>
<status status="PASS" starttime="20210730 14:40:04.882" endtime="20210730 14:40:04.887"/>
</if>
<status status="PASS" starttime="20210730 14:40:04.867" endtime="20210730 14:40:04.888"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:04.889" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:04.889" endtime="20210730 14:40:04.889"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:04.890" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:04.889" endtime="20210730 14:40:04.890"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:04.890" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:04.890" endtime="20210730 14:40:04.890"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:04.891" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:04.891" endtime="20210730 14:40:04.891"/>
</kw>
<msg timestamp="20210730 14:40:04.891" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:04.889" endtime="20210730 14:40:04.891"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:04.899" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:04.891" endtime="20210730 14:40:04.901"/>
</kw>
<status status="PASS" starttime="20210730 14:40:04.888" endtime="20210730 14:40:04.901"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:04.902" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:04.902" endtime="20210730 14:40:04.906"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:06.408" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:04.907" endtime="20210730 14:40:06.408"/>
</kw>
<status status="PASS" starttime="20210730 14:40:04.901" endtime="20210730 14:40:06.408"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:06.410" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:06.409" endtime="20210730 14:40:06.410"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:06.410" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:06.410" endtime="20210730 14:40:06.410"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:06.410" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:06.410" endtime="20210730 14:40:06.410"/>
</kw>
<msg timestamp="20210730 14:40:06.411" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:06.409" endtime="20210730 14:40:06.411"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:06.411" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:06.411" endtime="20210730 14:40:06.412"/>
</kw>
<status status="PASS" starttime="20210730 14:40:06.408" endtime="20210730 14:40:06.412"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:06.412" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:06.412" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:06.412" endtime="20210730 14:40:06.412"/>
</kw>
<status status="PASS" starttime="20210730 14:40:06.412" endtime="20210730 14:40:06.412"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:06.413" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:06.413" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:06.413" endtime="20210730 14:40:06.413"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:06.414" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:06.414" endtime="20210730 14:40:06.414"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:06.414" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:06.414" endtime="20210730 14:40:06.414"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:06.414" endtime="20210730 14:40:06.415"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:06.415" endtime="20210730 14:40:06.416"/>
</kw>
<status status="PASS" starttime="20210730 14:40:06.414" endtime="20210730 14:40:06.416"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:06.416" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:06.416" endtime="20210730 14:40:06.416"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:06.416" endtime="20210730 14:40:06.417"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:06.417" endtime="20210730 14:40:06.417"/>
</kw>
<status status="PASS" starttime="20210730 14:40:06.416" endtime="20210730 14:40:06.417"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:06.418" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:06.417" endtime="20210730 14:40:06.418"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:06.418" endtime="20210730 14:40:06.418"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:06.419" endtime="20210730 14:40:06.419"/>
</kw>
<status status="PASS" starttime="20210730 14:40:06.417" endtime="20210730 14:40:06.419"/>
</iter>
<status status="PASS" starttime="20210730 14:40:06.414" endtime="20210730 14:40:06.419"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:06.419" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:06.419" endtime="20210730 14:40:06.419"/>
</kw>
<status status="PASS" starttime="20210730 14:40:06.413" endtime="20210730 14:40:06.419"/>
</kw>
<status status="PASS" starttime="20210730 14:40:04.866" endtime="20210730 14:40:06.419"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=0123!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:06.421" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:06.420" endtime="20210730 14:40:06.421"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:06.421" level="INFO">${payload} = {'password': '0123!?.'}</msg>
<status status="PASS" starttime="20210730 14:40:06.421" endtime="20210730 14:40:06.421"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:06.431" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:06.431" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:06.421" endtime="20210730 14:40:06.431"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:06.431" endtime="20210730 14:40:06.431"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:06.431" endtime="20210730 14:40:06.431"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:06.421" endtime="20210730 14:40:06.431"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:06.421" endtime="20210730 14:40:06.432"/>
</for>
<status status="FAIL" starttime="20210730 14:40:06.420" endtime="20210730 14:40:06.432"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:06.420" endtime="20210730 14:40:06.432"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=0123!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:06.433" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:40:06.433" endtime="20210730 14:40:06.433"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:06.434" level="INFO">${payload} = {'password': '0123!?.'}</msg>
<status status="PASS" starttime="20210730 14:40:06.433" endtime="20210730 14:40:06.434"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:06.438" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:06.438" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:06.434" endtime="20210730 14:40:06.438"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:06.438" endtime="20210730 14:40:06.439"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:06.439" endtime="20210730 14:40:06.439"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:06.434" endtime="20210730 14:40:06.439"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:06.434" endtime="20210730 14:40:06.439"/>
</for>
<status status="FAIL" starttime="20210730 14:40:06.432" endtime="20210730 14:40:06.439"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:06.432" endtime="20210730 14:40:06.439"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=0123!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:06.440" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:40:06.440" endtime="20210730 14:40:06.440"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:06.441" level="INFO">${payload} = {'password': '0123!?.'}</msg>
<status status="PASS" starttime="20210730 14:40:06.440" endtime="20210730 14:40:06.441"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:06.445" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:06.446" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:06.441" endtime="20210730 14:40:06.446"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:06.446" endtime="20210730 14:40:06.446"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:06.446" endtime="20210730 14:40:06.446"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:06.441" endtime="20210730 14:40:06.446"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:06.441" endtime="20210730 14:40:06.446"/>
</for>
<status status="FAIL" starttime="20210730 14:40:06.439" endtime="20210730 14:40:06.447"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:06.439" endtime="20210730 14:40:06.447"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:06.420" endtime="20210730 14:40:06.447"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:06.452" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:06.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:06.462" level="INFO">${pids} = 27662
27669
27675</msg>
<status status="PASS" starttime="20210730 14:40:06.448" endtime="20210730 14:40:06.462"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:06.463" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:06.462" endtime="20210730 14:40:06.463"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:06.463" level="INFO">${pids} = ['27662', '27669', '27675']</msg>
<status status="PASS" starttime="20210730 14:40:06.463" endtime="20210730 14:40:06.463"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">27662</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:06.467" level="INFO">Running command 'kill 27662 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:06.464" endtime="20210730 14:40:06.469"/>
</kw>
<status status="PASS" starttime="20210730 14:40:06.464" endtime="20210730 14:40:06.469"/>
</iter>
<iter>
<var name="${pid}">27669</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:06.473" level="INFO">Running command 'kill 27669 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:06.469" endtime="20210730 14:40:06.474"/>
</kw>
<status status="PASS" starttime="20210730 14:40:06.469" endtime="20210730 14:40:06.474"/>
</iter>
<iter>
<var name="${pid}">27675</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:06.479" level="INFO">Running command 'kill 27675 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:06.475" endtime="20210730 14:40:06.480"/>
</kw>
<status status="PASS" starttime="20210730 14:40:06.475" endtime="20210730 14:40:06.480"/>
</iter>
<status status="PASS" starttime="20210730 14:40:06.463" endtime="20210730 14:40:06.480"/>
</for>
<status status="PASS" starttime="20210730 14:40:06.463" endtime="20210730 14:40:06.480"/>
</branch>
<status status="PASS" starttime="20210730 14:40:06.463" endtime="20210730 14:40:06.480"/>
</if>
<status status="PASS" starttime="20210730 14:40:06.447" endtime="20210730 14:40:06.480"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": '0123!?.'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:04.866" endtime="20210730 14:40:06.480">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t73" name="With Each Valid Token, Updating Password Of Each System User With 0123!?.0 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:06.487" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:06.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:06.497" level="INFO">${pids} = 27704</msg>
<status status="PASS" starttime="20210730 14:40:06.483" endtime="20210730 14:40:06.497"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:06.498" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:06.497" endtime="20210730 14:40:06.498"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:06.499" level="INFO">${pids} = ['27704']</msg>
<status status="PASS" starttime="20210730 14:40:06.498" endtime="20210730 14:40:06.499"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">27704</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:06.503" level="INFO">Running command 'kill 27704 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:06.499" endtime="20210730 14:40:06.503"/>
</kw>
<status status="PASS" starttime="20210730 14:40:06.499" endtime="20210730 14:40:06.503"/>
</iter>
<status status="PASS" starttime="20210730 14:40:06.499" endtime="20210730 14:40:06.504"/>
</for>
<status status="PASS" starttime="20210730 14:40:06.498" endtime="20210730 14:40:06.504"/>
</branch>
<status status="PASS" starttime="20210730 14:40:06.498" endtime="20210730 14:40:06.504"/>
</if>
<status status="PASS" starttime="20210730 14:40:06.482" endtime="20210730 14:40:06.504"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:06.505" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:06.505" endtime="20210730 14:40:06.505"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:06.506" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:06.505" endtime="20210730 14:40:06.506"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:06.506" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:06.506" endtime="20210730 14:40:06.506"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:06.506" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:06.506" endtime="20210730 14:40:06.506"/>
</kw>
<msg timestamp="20210730 14:40:06.507" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:06.505" endtime="20210730 14:40:06.507"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:06.513" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:06.507" endtime="20210730 14:40:06.515"/>
</kw>
<status status="PASS" starttime="20210730 14:40:06.504" endtime="20210730 14:40:06.515"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:06.517" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:06.516" endtime="20210730 14:40:06.521"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:08.023" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:06.521" endtime="20210730 14:40:08.023"/>
</kw>
<status status="PASS" starttime="20210730 14:40:06.516" endtime="20210730 14:40:08.023"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:08.025" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:08.024" endtime="20210730 14:40:08.025"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:08.025" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:08.025" endtime="20210730 14:40:08.025"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:08.026" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:08.026" endtime="20210730 14:40:08.026"/>
</kw>
<msg timestamp="20210730 14:40:08.026" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:08.024" endtime="20210730 14:40:08.026"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:08.027" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:08.026" endtime="20210730 14:40:08.027"/>
</kw>
<status status="PASS" starttime="20210730 14:40:08.024" endtime="20210730 14:40:08.027"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:08.028" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:08.028" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:08.028" endtime="20210730 14:40:08.028"/>
</kw>
<status status="PASS" starttime="20210730 14:40:08.027" endtime="20210730 14:40:08.028"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:08.029" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:08.029" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:08.028" endtime="20210730 14:40:08.029"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:08.029" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:08.029" endtime="20210730 14:40:08.029"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:08.030" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:08.030" endtime="20210730 14:40:08.030"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:08.030" endtime="20210730 14:40:08.031"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:08.031" endtime="20210730 14:40:08.031"/>
</kw>
<status status="PASS" starttime="20210730 14:40:08.030" endtime="20210730 14:40:08.031"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:08.032" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:08.031" endtime="20210730 14:40:08.032"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:08.032" endtime="20210730 14:40:08.033"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:08.033" endtime="20210730 14:40:08.033"/>
</kw>
<status status="PASS" starttime="20210730 14:40:08.031" endtime="20210730 14:40:08.033"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:08.033" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:08.033" endtime="20210730 14:40:08.033"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:08.034" endtime="20210730 14:40:08.034"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:08.035" endtime="20210730 14:40:08.035"/>
</kw>
<status status="PASS" starttime="20210730 14:40:08.033" endtime="20210730 14:40:08.035"/>
</iter>
<status status="PASS" starttime="20210730 14:40:08.029" endtime="20210730 14:40:08.035"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:08.035" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:08.035" endtime="20210730 14:40:08.035"/>
</kw>
<status status="PASS" starttime="20210730 14:40:08.028" endtime="20210730 14:40:08.036"/>
</kw>
<status status="PASS" starttime="20210730 14:40:06.482" endtime="20210730 14:40:08.036"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=0123!?.0</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:08.037" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:08.037" endtime="20210730 14:40:08.037"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:08.038" level="INFO">${payload} = {'password': '0123!?.0'}</msg>
<status status="PASS" starttime="20210730 14:40:08.037" endtime="20210730 14:40:08.038"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:08.048" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:08.049" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:08.038" endtime="20210730 14:40:08.049"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:08.049" endtime="20210730 14:40:08.049"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:08.049" endtime="20210730 14:40:08.049"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:08.038" endtime="20210730 14:40:08.049"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:08.038" endtime="20210730 14:40:08.049"/>
</for>
<status status="FAIL" starttime="20210730 14:40:08.036" endtime="20210730 14:40:08.049"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:08.036" endtime="20210730 14:40:08.049"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=0123!?.0</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:08.050" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:40:08.050" endtime="20210730 14:40:08.050"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:08.051" level="INFO">${payload} = {'password': '0123!?.0'}</msg>
<status status="PASS" starttime="20210730 14:40:08.051" endtime="20210730 14:40:08.051"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:08.056" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:08.056" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:08.052" endtime="20210730 14:40:08.056"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:08.056" endtime="20210730 14:40:08.056"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:08.056" endtime="20210730 14:40:08.056"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:08.051" endtime="20210730 14:40:08.056"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:08.051" endtime="20210730 14:40:08.056"/>
</for>
<status status="FAIL" starttime="20210730 14:40:08.049" endtime="20210730 14:40:08.056"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:08.049" endtime="20210730 14:40:08.057"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=0123!?.0</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:08.058" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:40:08.058" endtime="20210730 14:40:08.058"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:08.058" level="INFO">${payload} = {'password': '0123!?.0'}</msg>
<status status="PASS" starttime="20210730 14:40:08.058" endtime="20210730 14:40:08.058"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:08.063" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:08.064" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:08.059" endtime="20210730 14:40:08.064"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:08.064" endtime="20210730 14:40:08.064"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:08.064" endtime="20210730 14:40:08.064"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:08.059" endtime="20210730 14:40:08.064"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:08.059" endtime="20210730 14:40:08.064"/>
</for>
<status status="FAIL" starttime="20210730 14:40:08.057" endtime="20210730 14:40:08.064"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:08.057" endtime="20210730 14:40:08.065"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:08.036" endtime="20210730 14:40:08.065"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:08.070" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:08.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:08.081" level="INFO">${pids} = 27727
27734
27738</msg>
<status status="PASS" starttime="20210730 14:40:08.066" endtime="20210730 14:40:08.081"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:08.082" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:08.082" endtime="20210730 14:40:08.082"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:08.083" level="INFO">${pids} = ['27727', '27734', '27738']</msg>
<status status="PASS" starttime="20210730 14:40:08.083" endtime="20210730 14:40:08.083"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">27727</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:08.087" level="INFO">Running command 'kill 27727 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:08.084" endtime="20210730 14:40:08.087"/>
</kw>
<status status="PASS" starttime="20210730 14:40:08.083" endtime="20210730 14:40:08.087"/>
</iter>
<iter>
<var name="${pid}">27734</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:08.094" level="INFO">Running command 'kill 27734 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:08.088" endtime="20210730 14:40:08.096"/>
</kw>
<status status="PASS" starttime="20210730 14:40:08.088" endtime="20210730 14:40:08.096"/>
</iter>
<iter>
<var name="${pid}">27738</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:08.100" level="INFO">Running command 'kill 27738 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:08.097" endtime="20210730 14:40:08.101"/>
</kw>
<status status="PASS" starttime="20210730 14:40:08.096" endtime="20210730 14:40:08.101"/>
</iter>
<status status="PASS" starttime="20210730 14:40:08.083" endtime="20210730 14:40:08.101"/>
</for>
<status status="PASS" starttime="20210730 14:40:08.083" endtime="20210730 14:40:08.101"/>
</branch>
<status status="PASS" starttime="20210730 14:40:08.082" endtime="20210730 14:40:08.101"/>
</if>
<status status="PASS" starttime="20210730 14:40:08.065" endtime="20210730 14:40:08.101"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": '0123!?.0'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:06.481" endtime="20210730 14:40:08.102">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t74" name="With Each Valid Token, Updating Password Of Each System User With 0123!?.00123!?.00123!? Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:08.107" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:08.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:08.118" level="INFO">${pids} = 27767</msg>
<status status="PASS" starttime="20210730 14:40:08.104" endtime="20210730 14:40:08.118"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:08.119" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:08.119" endtime="20210730 14:40:08.119"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:08.120" level="INFO">${pids} = ['27767']</msg>
<status status="PASS" starttime="20210730 14:40:08.120" endtime="20210730 14:40:08.120"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">27767</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:08.125" level="INFO">Running command 'kill 27767 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:08.121" endtime="20210730 14:40:08.126"/>
</kw>
<status status="PASS" starttime="20210730 14:40:08.121" endtime="20210730 14:40:08.126"/>
</iter>
<status status="PASS" starttime="20210730 14:40:08.120" endtime="20210730 14:40:08.126"/>
</for>
<status status="PASS" starttime="20210730 14:40:08.120" endtime="20210730 14:40:08.126"/>
</branch>
<status status="PASS" starttime="20210730 14:40:08.120" endtime="20210730 14:40:08.126"/>
</if>
<status status="PASS" starttime="20210730 14:40:08.103" endtime="20210730 14:40:08.127"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:08.129" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:08.128" endtime="20210730 14:40:08.129"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:08.129" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:08.129" endtime="20210730 14:40:08.129"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:08.130" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:08.130" endtime="20210730 14:40:08.130"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:08.131" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:08.131" endtime="20210730 14:40:08.131"/>
</kw>
<msg timestamp="20210730 14:40:08.132" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:08.129" endtime="20210730 14:40:08.132"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:08.136" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:08.132" endtime="20210730 14:40:08.138"/>
</kw>
<status status="PASS" starttime="20210730 14:40:08.127" endtime="20210730 14:40:08.139"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:08.140" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:08.139" endtime="20210730 14:40:08.147"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:09.650" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:08.147" endtime="20210730 14:40:09.650"/>
</kw>
<status status="PASS" starttime="20210730 14:40:08.139" endtime="20210730 14:40:09.650"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:09.651" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:09.651" endtime="20210730 14:40:09.651"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:09.651" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:09.651" endtime="20210730 14:40:09.651"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:09.652" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:09.651" endtime="20210730 14:40:09.652"/>
</kw>
<msg timestamp="20210730 14:40:09.652" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:09.650" endtime="20210730 14:40:09.652"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:09.652" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:09.652" endtime="20210730 14:40:09.653"/>
</kw>
<status status="PASS" starttime="20210730 14:40:09.650" endtime="20210730 14:40:09.653"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:09.653" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:09.653" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:09.653" endtime="20210730 14:40:09.653"/>
</kw>
<status status="PASS" starttime="20210730 14:40:09.653" endtime="20210730 14:40:09.654"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:09.654" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:09.655" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:09.654" endtime="20210730 14:40:09.655"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:09.655" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:09.655" endtime="20210730 14:40:09.655"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:09.656" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:09.655" endtime="20210730 14:40:09.656"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:09.656" endtime="20210730 14:40:09.656"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:09.657" endtime="20210730 14:40:09.657"/>
</kw>
<status status="PASS" starttime="20210730 14:40:09.655" endtime="20210730 14:40:09.657"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:09.657" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:09.657" endtime="20210730 14:40:09.657"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:09.658" endtime="20210730 14:40:09.658"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:09.658" endtime="20210730 14:40:09.659"/>
</kw>
<status status="PASS" starttime="20210730 14:40:09.657" endtime="20210730 14:40:09.659"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:09.659" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:09.659" endtime="20210730 14:40:09.659"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:09.659" endtime="20210730 14:40:09.660"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:09.660" endtime="20210730 14:40:09.660"/>
</kw>
<status status="PASS" starttime="20210730 14:40:09.659" endtime="20210730 14:40:09.660"/>
</iter>
<status status="PASS" starttime="20210730 14:40:09.655" endtime="20210730 14:40:09.661"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:09.661" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:09.661" endtime="20210730 14:40:09.661"/>
</kw>
<status status="PASS" starttime="20210730 14:40:09.654" endtime="20210730 14:40:09.661"/>
</kw>
<status status="PASS" starttime="20210730 14:40:08.103" endtime="20210730 14:40:09.661"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=0123!?.00123!?.00123!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:09.663" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:09.662" endtime="20210730 14:40:09.663"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:09.663" level="INFO">${payload} = {'password': '0123!?.00123!?.00123!?'}</msg>
<status status="PASS" starttime="20210730 14:40:09.663" endtime="20210730 14:40:09.663"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:09.673" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:09.673" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:09.663" endtime="20210730 14:40:09.673"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:09.673" endtime="20210730 14:40:09.674"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:09.674" endtime="20210730 14:40:09.674"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:09.663" endtime="20210730 14:40:09.674"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:09.663" endtime="20210730 14:40:09.674"/>
</for>
<status status="FAIL" starttime="20210730 14:40:09.662" endtime="20210730 14:40:09.674"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:09.662" endtime="20210730 14:40:09.674"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=0123!?.00123!?.00123!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:09.676" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:40:09.676" endtime="20210730 14:40:09.676"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:09.676" level="INFO">${payload} = {'password': '0123!?.00123!?.00123!?'}</msg>
<status status="PASS" starttime="20210730 14:40:09.676" endtime="20210730 14:40:09.676"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:09.681" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:09.681" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:09.677" endtime="20210730 14:40:09.681"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:09.681" endtime="20210730 14:40:09.681"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:09.681" endtime="20210730 14:40:09.682"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:09.677" endtime="20210730 14:40:09.682"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:09.676" endtime="20210730 14:40:09.682"/>
</for>
<status status="FAIL" starttime="20210730 14:40:09.675" endtime="20210730 14:40:09.682"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:09.675" endtime="20210730 14:40:09.682"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=0123!?.00123!?.00123!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:09.683" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:40:09.683" endtime="20210730 14:40:09.683"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:09.683" level="INFO">${payload} = {'password': '0123!?.00123!?.00123!?'}</msg>
<status status="PASS" starttime="20210730 14:40:09.683" endtime="20210730 14:40:09.683"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:09.687" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:09.688" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:09.684" endtime="20210730 14:40:09.688"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:09.688" endtime="20210730 14:40:09.688"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:09.688" endtime="20210730 14:40:09.688"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:09.684" endtime="20210730 14:40:09.688"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:09.683" endtime="20210730 14:40:09.688"/>
</for>
<status status="FAIL" starttime="20210730 14:40:09.682" endtime="20210730 14:40:09.688"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:09.682" endtime="20210730 14:40:09.688"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:09.662" endtime="20210730 14:40:09.688"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:09.694" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:09.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:09.705" level="INFO">${pids} = 27790
27797
27804</msg>
<status status="PASS" starttime="20210730 14:40:09.689" endtime="20210730 14:40:09.705"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:09.706" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:09.705" endtime="20210730 14:40:09.706"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:09.707" level="INFO">${pids} = ['27790', '27797', '27804']</msg>
<status status="PASS" starttime="20210730 14:40:09.706" endtime="20210730 14:40:09.707"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">27790</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:09.713" level="INFO">Running command 'kill 27790 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:09.707" endtime="20210730 14:40:09.714"/>
</kw>
<status status="PASS" starttime="20210730 14:40:09.707" endtime="20210730 14:40:09.714"/>
</iter>
<iter>
<var name="${pid}">27797</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:09.718" level="INFO">Running command 'kill 27797 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:09.715" endtime="20210730 14:40:09.718"/>
</kw>
<status status="PASS" starttime="20210730 14:40:09.714" endtime="20210730 14:40:09.719"/>
</iter>
<iter>
<var name="${pid}">27804</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:09.726" level="INFO">Running command 'kill 27804 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:09.720" endtime="20210730 14:40:09.726"/>
</kw>
<status status="PASS" starttime="20210730 14:40:09.719" endtime="20210730 14:40:09.727"/>
</iter>
<status status="PASS" starttime="20210730 14:40:09.707" endtime="20210730 14:40:09.727"/>
</for>
<status status="PASS" starttime="20210730 14:40:09.706" endtime="20210730 14:40:09.727"/>
</branch>
<status status="PASS" starttime="20210730 14:40:09.706" endtime="20210730 14:40:09.727"/>
</if>
<status status="PASS" starttime="20210730 14:40:09.689" endtime="20210730 14:40:09.727"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": '0123!?.00123!?.00123!?'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:08.102" endtime="20210730 14:40:09.727">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t75" name="With Each Valid Token, Updating Password Of Each System User With abcdAB9 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:09.732" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:09.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:09.744" level="INFO">${pids} = 27833</msg>
<status status="PASS" starttime="20210730 14:40:09.729" endtime="20210730 14:40:09.744"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:09.745" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:09.744" endtime="20210730 14:40:09.745"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:09.746" level="INFO">${pids} = ['27833']</msg>
<status status="PASS" starttime="20210730 14:40:09.745" endtime="20210730 14:40:09.746"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">27833</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:09.749" level="INFO">Running command 'kill 27833 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:09.746" endtime="20210730 14:40:09.750"/>
</kw>
<status status="PASS" starttime="20210730 14:40:09.746" endtime="20210730 14:40:09.750"/>
</iter>
<status status="PASS" starttime="20210730 14:40:09.746" endtime="20210730 14:40:09.750"/>
</for>
<status status="PASS" starttime="20210730 14:40:09.745" endtime="20210730 14:40:09.750"/>
</branch>
<status status="PASS" starttime="20210730 14:40:09.745" endtime="20210730 14:40:09.750"/>
</if>
<status status="PASS" starttime="20210730 14:40:09.729" endtime="20210730 14:40:09.750"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:09.752" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:09.751" endtime="20210730 14:40:09.752"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:09.752" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:09.752" endtime="20210730 14:40:09.752"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:09.753" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:09.753" endtime="20210730 14:40:09.753"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:09.753" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:09.753" endtime="20210730 14:40:09.753"/>
</kw>
<msg timestamp="20210730 14:40:09.754" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:09.752" endtime="20210730 14:40:09.754"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:09.758" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:09.754" endtime="20210730 14:40:09.760"/>
</kw>
<status status="PASS" starttime="20210730 14:40:09.751" endtime="20210730 14:40:09.761"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:09.762" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:09.761" endtime="20210730 14:40:09.767"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:11.270" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:09.767" endtime="20210730 14:40:11.270"/>
</kw>
<status status="PASS" starttime="20210730 14:40:09.761" endtime="20210730 14:40:11.271"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:11.277" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:11.275" endtime="20210730 14:40:11.277"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:11.277" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:11.277" endtime="20210730 14:40:11.277"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:11.278" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:11.277" endtime="20210730 14:40:11.278"/>
</kw>
<msg timestamp="20210730 14:40:11.278" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:11.274" endtime="20210730 14:40:11.278"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:11.279" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:11.278" endtime="20210730 14:40:11.279"/>
</kw>
<status status="PASS" starttime="20210730 14:40:11.272" endtime="20210730 14:40:11.279"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:11.280" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:11.280" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:11.280" endtime="20210730 14:40:11.280"/>
</kw>
<status status="PASS" starttime="20210730 14:40:11.279" endtime="20210730 14:40:11.280"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:11.281" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:11.281" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:11.280" endtime="20210730 14:40:11.281"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:11.281" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:11.281" endtime="20210730 14:40:11.282"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:11.282" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:11.282" endtime="20210730 14:40:11.282"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:11.282" endtime="20210730 14:40:11.283"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:11.283" endtime="20210730 14:40:11.283"/>
</kw>
<status status="PASS" starttime="20210730 14:40:11.282" endtime="20210730 14:40:11.283"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:11.284" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:11.283" endtime="20210730 14:40:11.284"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:11.284" endtime="20210730 14:40:11.284"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:11.284" endtime="20210730 14:40:11.285"/>
</kw>
<status status="PASS" starttime="20210730 14:40:11.283" endtime="20210730 14:40:11.285"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:11.285" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:11.285" endtime="20210730 14:40:11.285"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:11.285" endtime="20210730 14:40:11.286"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:11.286" endtime="20210730 14:40:11.286"/>
</kw>
<status status="PASS" starttime="20210730 14:40:11.285" endtime="20210730 14:40:11.286"/>
</iter>
<status status="PASS" starttime="20210730 14:40:11.282" endtime="20210730 14:40:11.286"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:11.287" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:11.286" endtime="20210730 14:40:11.287"/>
</kw>
<status status="PASS" starttime="20210730 14:40:11.280" endtime="20210730 14:40:11.287"/>
</kw>
<status status="PASS" starttime="20210730 14:40:09.729" endtime="20210730 14:40:11.287"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdAB9</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:11.288" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:11.288" endtime="20210730 14:40:11.288"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:11.289" level="INFO">${payload} = {'password': 'abcdAB9'}</msg>
<status status="PASS" starttime="20210730 14:40:11.288" endtime="20210730 14:40:11.289"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:11.301" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:11.301" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:11.289" endtime="20210730 14:40:11.302"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:11.302" endtime="20210730 14:40:11.302"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:11.302" endtime="20210730 14:40:11.302"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:11.289" endtime="20210730 14:40:11.302"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:11.289" endtime="20210730 14:40:11.302"/>
</for>
<status status="FAIL" starttime="20210730 14:40:11.287" endtime="20210730 14:40:11.302"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:11.287" endtime="20210730 14:40:11.302"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdAB9</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:11.303" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:40:11.303" endtime="20210730 14:40:11.303"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:11.303" level="INFO">${payload} = {'password': 'abcdAB9'}</msg>
<status status="PASS" starttime="20210730 14:40:11.303" endtime="20210730 14:40:11.304"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:11.308" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:11.309" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:11.304" endtime="20210730 14:40:11.309"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:11.309" endtime="20210730 14:40:11.309"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:11.309" endtime="20210730 14:40:11.309"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:11.304" endtime="20210730 14:40:11.309"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:11.304" endtime="20210730 14:40:11.309"/>
</for>
<status status="FAIL" starttime="20210730 14:40:11.302" endtime="20210730 14:40:11.309"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:11.302" endtime="20210730 14:40:11.309"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdAB9</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:11.310" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:40:11.310" endtime="20210730 14:40:11.310"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:11.311" level="INFO">${payload} = {'password': 'abcdAB9'}</msg>
<status status="PASS" starttime="20210730 14:40:11.311" endtime="20210730 14:40:11.311"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:11.315" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:11.315" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:11.311" endtime="20210730 14:40:11.315"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:11.316" endtime="20210730 14:40:11.317"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:11.317" endtime="20210730 14:40:11.317"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:11.311" endtime="20210730 14:40:11.317"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:11.311" endtime="20210730 14:40:11.317"/>
</for>
<status status="FAIL" starttime="20210730 14:40:11.310" endtime="20210730 14:40:11.317"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:11.309" endtime="20210730 14:40:11.317"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:11.287" endtime="20210730 14:40:11.317"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:11.322" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:11.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:11.332" level="INFO">${pids} = 27856
27863
27867</msg>
<status status="PASS" starttime="20210730 14:40:11.319" endtime="20210730 14:40:11.332"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:11.333" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:11.333" endtime="20210730 14:40:11.333"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:11.334" level="INFO">${pids} = ['27856', '27863', '27867']</msg>
<status status="PASS" starttime="20210730 14:40:11.334" endtime="20210730 14:40:11.334"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">27856</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:11.338" level="INFO">Running command 'kill 27856 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:11.334" endtime="20210730 14:40:11.338"/>
</kw>
<status status="PASS" starttime="20210730 14:40:11.334" endtime="20210730 14:40:11.338"/>
</iter>
<iter>
<var name="${pid}">27863</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:11.342" level="INFO">Running command 'kill 27863 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:11.338" endtime="20210730 14:40:11.345"/>
</kw>
<status status="PASS" starttime="20210730 14:40:11.338" endtime="20210730 14:40:11.345"/>
</iter>
<iter>
<var name="${pid}">27867</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:11.349" level="INFO">Running command 'kill 27867 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:11.345" endtime="20210730 14:40:11.349"/>
</kw>
<status status="PASS" starttime="20210730 14:40:11.345" endtime="20210730 14:40:11.349"/>
</iter>
<status status="PASS" starttime="20210730 14:40:11.334" endtime="20210730 14:40:11.349"/>
</for>
<status status="PASS" starttime="20210730 14:40:11.334" endtime="20210730 14:40:11.350"/>
</branch>
<status status="PASS" starttime="20210730 14:40:11.333" endtime="20210730 14:40:11.350"/>
</if>
<status status="PASS" starttime="20210730 14:40:11.318" endtime="20210730 14:40:11.350"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcdAB9'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:09.728" endtime="20210730 14:40:11.350">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t76" name="With Each Valid Token, Updating Password Of Each System User With abcdAB90 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:11.354" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:11.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:11.367" level="INFO">${pids} = 27913</msg>
<status status="PASS" starttime="20210730 14:40:11.352" endtime="20210730 14:40:11.367"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:11.368" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:11.367" endtime="20210730 14:40:11.368"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:11.369" level="INFO">${pids} = ['27913']</msg>
<status status="PASS" starttime="20210730 14:40:11.368" endtime="20210730 14:40:11.369"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">27913</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:11.372" level="INFO">Running command 'kill 27913 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:11.369" endtime="20210730 14:40:11.373"/>
</kw>
<status status="PASS" starttime="20210730 14:40:11.369" endtime="20210730 14:40:11.373"/>
</iter>
<status status="PASS" starttime="20210730 14:40:11.369" endtime="20210730 14:40:11.373"/>
</for>
<status status="PASS" starttime="20210730 14:40:11.368" endtime="20210730 14:40:11.373"/>
</branch>
<status status="PASS" starttime="20210730 14:40:11.368" endtime="20210730 14:40:11.373"/>
</if>
<status status="PASS" starttime="20210730 14:40:11.351" endtime="20210730 14:40:11.373"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:11.374" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:11.374" endtime="20210730 14:40:11.374"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:11.376" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:11.375" endtime="20210730 14:40:11.376"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:11.382" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:11.376" endtime="20210730 14:40:11.382"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:11.383" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:11.382" endtime="20210730 14:40:11.383"/>
</kw>
<msg timestamp="20210730 14:40:11.383" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:11.375" endtime="20210730 14:40:11.383"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:11.386" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:11.383" endtime="20210730 14:40:11.388"/>
</kw>
<status status="PASS" starttime="20210730 14:40:11.373" endtime="20210730 14:40:11.388"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:11.390" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:11.389" endtime="20210730 14:40:11.394"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:12.897" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:11.394" endtime="20210730 14:40:12.897"/>
</kw>
<status status="PASS" starttime="20210730 14:40:11.389" endtime="20210730 14:40:12.897"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:12.899" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:12.899" endtime="20210730 14:40:12.899"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:12.900" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:12.899" endtime="20210730 14:40:12.900"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:12.900" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:12.900" endtime="20210730 14:40:12.900"/>
</kw>
<msg timestamp="20210730 14:40:12.900" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:12.898" endtime="20210730 14:40:12.900"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:12.901" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:12.900" endtime="20210730 14:40:12.901"/>
</kw>
<status status="PASS" starttime="20210730 14:40:12.898" endtime="20210730 14:40:12.901"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:12.902" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:12.902" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:12.902" endtime="20210730 14:40:12.902"/>
</kw>
<status status="PASS" starttime="20210730 14:40:12.902" endtime="20210730 14:40:12.902"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:12.903" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:12.903" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:12.903" endtime="20210730 14:40:12.903"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:12.903" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:12.903" endtime="20210730 14:40:12.903"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:12.904" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:12.904" endtime="20210730 14:40:12.904"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:12.904" endtime="20210730 14:40:12.905"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:12.905" endtime="20210730 14:40:12.906"/>
</kw>
<status status="PASS" starttime="20210730 14:40:12.904" endtime="20210730 14:40:12.906"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:12.907" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:12.906" endtime="20210730 14:40:12.907"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:12.907" endtime="20210730 14:40:12.908"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:12.908" endtime="20210730 14:40:12.909"/>
</kw>
<status status="PASS" starttime="20210730 14:40:12.906" endtime="20210730 14:40:12.909"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:12.909" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:12.909" endtime="20210730 14:40:12.909"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:12.909" endtime="20210730 14:40:12.910"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:12.910" endtime="20210730 14:40:12.910"/>
</kw>
<status status="PASS" starttime="20210730 14:40:12.909" endtime="20210730 14:40:12.911"/>
</iter>
<status status="PASS" starttime="20210730 14:40:12.903" endtime="20210730 14:40:12.911"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:12.911" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:12.911" endtime="20210730 14:40:12.911"/>
</kw>
<status status="PASS" starttime="20210730 14:40:12.902" endtime="20210730 14:40:12.911"/>
</kw>
<status status="PASS" starttime="20210730 14:40:11.351" endtime="20210730 14:40:12.911"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdAB90</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:12.912" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:12.912" endtime="20210730 14:40:12.912"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:12.913" level="INFO">${payload} = {'password': 'abcdAB90'}</msg>
<status status="PASS" starttime="20210730 14:40:12.912" endtime="20210730 14:40:12.913"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:12.921" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:12.922" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:12.913" endtime="20210730 14:40:12.922"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:12.922" endtime="20210730 14:40:12.922"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:12.922" endtime="20210730 14:40:12.922"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:12.913" endtime="20210730 14:40:12.922"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:12.913" endtime="20210730 14:40:12.923"/>
</for>
<status status="FAIL" starttime="20210730 14:40:12.912" endtime="20210730 14:40:12.923"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:12.912" endtime="20210730 14:40:12.923"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdAB90</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:12.924" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:40:12.924" endtime="20210730 14:40:12.924"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:12.924" level="INFO">${payload} = {'password': 'abcdAB90'}</msg>
<status status="PASS" starttime="20210730 14:40:12.924" endtime="20210730 14:40:12.925"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:12.930" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:12.930" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:12.925" endtime="20210730 14:40:12.930"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:12.930" endtime="20210730 14:40:12.930"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:12.930" endtime="20210730 14:40:12.930"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:12.925" endtime="20210730 14:40:12.930"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:12.925" endtime="20210730 14:40:12.930"/>
</for>
<status status="FAIL" starttime="20210730 14:40:12.923" endtime="20210730 14:40:12.931"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:12.923" endtime="20210730 14:40:12.931"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdAB90</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:12.932" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:40:12.931" endtime="20210730 14:40:12.932"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:12.932" level="INFO">${payload} = {'password': 'abcdAB90'}</msg>
<status status="PASS" starttime="20210730 14:40:12.932" endtime="20210730 14:40:12.932"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:12.936" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:12.936" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:12.932" endtime="20210730 14:40:12.936"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:12.936" endtime="20210730 14:40:12.936"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:12.937" endtime="20210730 14:40:12.937"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:12.932" endtime="20210730 14:40:12.937"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:12.932" endtime="20210730 14:40:12.937"/>
</for>
<status status="FAIL" starttime="20210730 14:40:12.931" endtime="20210730 14:40:12.937"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:12.931" endtime="20210730 14:40:12.937"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:12.911" endtime="20210730 14:40:12.937"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:12.942" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:12.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:12.953" level="INFO">${pids} = 27936
27943
27948</msg>
<status status="PASS" starttime="20210730 14:40:12.938" endtime="20210730 14:40:12.953"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:12.954" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:12.954" endtime="20210730 14:40:12.954"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:12.955" level="INFO">${pids} = ['27936', '27943', '27948']</msg>
<status status="PASS" starttime="20210730 14:40:12.955" endtime="20210730 14:40:12.955"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">27936</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:12.960" level="INFO">Running command 'kill 27936 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:12.955" endtime="20210730 14:40:12.960"/>
</kw>
<status status="PASS" starttime="20210730 14:40:12.955" endtime="20210730 14:40:12.960"/>
</iter>
<iter>
<var name="${pid}">27943</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:12.964" level="INFO">Running command 'kill 27943 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:12.961" endtime="20210730 14:40:12.964"/>
</kw>
<status status="PASS" starttime="20210730 14:40:12.960" endtime="20210730 14:40:12.964"/>
</iter>
<iter>
<var name="${pid}">27948</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:12.968" level="INFO">Running command 'kill 27948 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:12.964" endtime="20210730 14:40:12.968"/>
</kw>
<status status="PASS" starttime="20210730 14:40:12.964" endtime="20210730 14:40:12.968"/>
</iter>
<status status="PASS" starttime="20210730 14:40:12.955" endtime="20210730 14:40:12.968"/>
</for>
<status status="PASS" starttime="20210730 14:40:12.955" endtime="20210730 14:40:12.968"/>
</branch>
<status status="PASS" starttime="20210730 14:40:12.955" endtime="20210730 14:40:12.968"/>
</if>
<status status="PASS" starttime="20210730 14:40:12.937" endtime="20210730 14:40:12.969"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcdAB90'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:11.350" endtime="20210730 14:40:12.969">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t77" name="With Each Valid Token, Updating Password Of Each System User With abcdAB90abcdAB90abcdAB Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:12.976" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:12.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:12.986" level="INFO">${pids} = 27977</msg>
<status status="PASS" starttime="20210730 14:40:12.971" endtime="20210730 14:40:12.986"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:12.987" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:12.987" endtime="20210730 14:40:12.987"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:12.988" level="INFO">${pids} = ['27977']</msg>
<status status="PASS" starttime="20210730 14:40:12.988" endtime="20210730 14:40:12.988"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">27977</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:12.992" level="INFO">Running command 'kill 27977 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:12.989" endtime="20210730 14:40:12.993"/>
</kw>
<status status="PASS" starttime="20210730 14:40:12.989" endtime="20210730 14:40:12.993"/>
</iter>
<status status="PASS" starttime="20210730 14:40:12.988" endtime="20210730 14:40:12.993"/>
</for>
<status status="PASS" starttime="20210730 14:40:12.988" endtime="20210730 14:40:12.993"/>
</branch>
<status status="PASS" starttime="20210730 14:40:12.988" endtime="20210730 14:40:12.993"/>
</if>
<status status="PASS" starttime="20210730 14:40:12.971" endtime="20210730 14:40:12.993"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:12.995" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:12.994" endtime="20210730 14:40:12.995"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:12.995" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:12.995" endtime="20210730 14:40:12.996"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:12.996" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:12.996" endtime="20210730 14:40:12.996"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:12.996" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:12.996" endtime="20210730 14:40:12.996"/>
</kw>
<msg timestamp="20210730 14:40:12.997" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:12.995" endtime="20210730 14:40:12.997"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:13.000" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:12.997" endtime="20210730 14:40:13.002"/>
</kw>
<status status="PASS" starttime="20210730 14:40:12.994" endtime="20210730 14:40:13.003"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:13.004" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:13.003" endtime="20210730 14:40:13.010"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:14.511" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:13.010" endtime="20210730 14:40:14.511"/>
</kw>
<status status="PASS" starttime="20210730 14:40:13.003" endtime="20210730 14:40:14.511"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:14.512" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:14.512" endtime="20210730 14:40:14.512"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:14.513" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:14.512" endtime="20210730 14:40:14.513"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:14.513" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:14.513" endtime="20210730 14:40:14.513"/>
</kw>
<msg timestamp="20210730 14:40:14.513" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:14.512" endtime="20210730 14:40:14.513"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:14.514" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:14.513" endtime="20210730 14:40:14.514"/>
</kw>
<status status="PASS" starttime="20210730 14:40:14.511" endtime="20210730 14:40:14.514"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:14.515" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:14.515" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:14.515" endtime="20210730 14:40:14.515"/>
</kw>
<status status="PASS" starttime="20210730 14:40:14.514" endtime="20210730 14:40:14.515"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:14.516" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:14.516" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:14.515" endtime="20210730 14:40:14.516"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:14.516" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:14.516" endtime="20210730 14:40:14.516"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:14.517" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:14.517" endtime="20210730 14:40:14.517"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:14.517" endtime="20210730 14:40:14.518"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:14.518" endtime="20210730 14:40:14.518"/>
</kw>
<status status="PASS" starttime="20210730 14:40:14.516" endtime="20210730 14:40:14.518"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:14.518" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:14.518" endtime="20210730 14:40:14.518"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:14.519" endtime="20210730 14:40:14.519"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:14.519" endtime="20210730 14:40:14.520"/>
</kw>
<status status="PASS" starttime="20210730 14:40:14.518" endtime="20210730 14:40:14.520"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:14.520" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:14.520" endtime="20210730 14:40:14.520"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:14.520" endtime="20210730 14:40:14.521"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:14.521" endtime="20210730 14:40:14.521"/>
</kw>
<status status="PASS" starttime="20210730 14:40:14.520" endtime="20210730 14:40:14.521"/>
</iter>
<status status="PASS" starttime="20210730 14:40:14.516" endtime="20210730 14:40:14.521"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:14.522" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:14.521" endtime="20210730 14:40:14.522"/>
</kw>
<status status="PASS" starttime="20210730 14:40:14.515" endtime="20210730 14:40:14.522"/>
</kw>
<status status="PASS" starttime="20210730 14:40:12.970" endtime="20210730 14:40:14.522"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdAB90abcdAB90abcdAB</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:14.523" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:14.523" endtime="20210730 14:40:14.523"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:14.524" level="INFO">${payload} = {'password': 'abcdAB90abcdAB90abcdAB'}</msg>
<status status="PASS" starttime="20210730 14:40:14.523" endtime="20210730 14:40:14.524"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:14.532" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:14.533" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:14.524" endtime="20210730 14:40:14.533"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:14.533" endtime="20210730 14:40:14.533"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:14.533" endtime="20210730 14:40:14.533"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:14.524" endtime="20210730 14:40:14.533"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:14.524" endtime="20210730 14:40:14.533"/>
</for>
<status status="FAIL" starttime="20210730 14:40:14.522" endtime="20210730 14:40:14.533"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:14.522" endtime="20210730 14:40:14.533"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdAB90abcdAB90abcdAB</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:14.534" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:40:14.534" endtime="20210730 14:40:14.534"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:14.535" level="INFO">${payload} = {'password': 'abcdAB90abcdAB90abcdAB'}</msg>
<status status="PASS" starttime="20210730 14:40:14.535" endtime="20210730 14:40:14.535"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:14.539" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:14.539" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:14.535" endtime="20210730 14:40:14.539"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:14.539" endtime="20210730 14:40:14.540"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:14.540" endtime="20210730 14:40:14.540"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:14.535" endtime="20210730 14:40:14.540"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:14.535" endtime="20210730 14:40:14.540"/>
</for>
<status status="FAIL" starttime="20210730 14:40:14.534" endtime="20210730 14:40:14.540"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:14.533" endtime="20210730 14:40:14.540"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abcdAB90abcdAB90abcdAB</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:14.541" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:40:14.541" endtime="20210730 14:40:14.541"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:14.542" level="INFO">${payload} = {'password': 'abcdAB90abcdAB90abcdAB'}</msg>
<status status="PASS" starttime="20210730 14:40:14.542" endtime="20210730 14:40:14.542"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:14.547" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:14.547" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:14.542" endtime="20210730 14:40:14.547"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:14.547" endtime="20210730 14:40:14.547"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:14.547" endtime="20210730 14:40:14.547"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:14.542" endtime="20210730 14:40:14.547"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:14.542" endtime="20210730 14:40:14.547"/>
</for>
<status status="FAIL" starttime="20210730 14:40:14.540" endtime="20210730 14:40:14.547"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:14.540" endtime="20210730 14:40:14.548"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:14.522" endtime="20210730 14:40:14.548"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:14.552" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:14.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:14.563" level="INFO">${pids} = 28000
28007
28012</msg>
<status status="PASS" starttime="20210730 14:40:14.549" endtime="20210730 14:40:14.564"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:14.565" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:14.564" endtime="20210730 14:40:14.565"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:14.565" level="INFO">${pids} = ['28000', '28007', '28012']</msg>
<status status="PASS" starttime="20210730 14:40:14.565" endtime="20210730 14:40:14.565"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">28000</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:14.569" level="INFO">Running command 'kill 28000 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:14.566" endtime="20210730 14:40:14.569"/>
</kw>
<status status="PASS" starttime="20210730 14:40:14.566" endtime="20210730 14:40:14.569"/>
</iter>
<iter>
<var name="${pid}">28007</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:14.573" level="INFO">Running command 'kill 28007 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:14.570" endtime="20210730 14:40:14.573"/>
</kw>
<status status="PASS" starttime="20210730 14:40:14.570" endtime="20210730 14:40:14.573"/>
</iter>
<iter>
<var name="${pid}">28012</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:14.578" level="INFO">Running command 'kill 28012 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:14.574" endtime="20210730 14:40:14.579"/>
</kw>
<status status="PASS" starttime="20210730 14:40:14.574" endtime="20210730 14:40:14.579"/>
</iter>
<status status="PASS" starttime="20210730 14:40:14.565" endtime="20210730 14:40:14.579"/>
</for>
<status status="PASS" starttime="20210730 14:40:14.565" endtime="20210730 14:40:14.579"/>
</branch>
<status status="PASS" starttime="20210730 14:40:14.565" endtime="20210730 14:40:14.579"/>
</if>
<status status="PASS" starttime="20210730 14:40:14.548" endtime="20210730 14:40:14.579"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcdAB90abcdAB90abcdAB'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:12.970" endtime="20210730 14:40:14.579">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t78" name="With Each Valid Token, Updating Password Of Each System User With ABCabc! Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:14.586" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:14.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:14.596" level="INFO">${pids} = 28041</msg>
<status status="PASS" starttime="20210730 14:40:14.581" endtime="20210730 14:40:14.596"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:14.597" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:14.597" endtime="20210730 14:40:14.597"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:14.598" level="INFO">${pids} = ['28041']</msg>
<status status="PASS" starttime="20210730 14:40:14.598" endtime="20210730 14:40:14.598"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">28041</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:14.602" level="INFO">Running command 'kill 28041 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:14.599" endtime="20210730 14:40:14.602"/>
</kw>
<status status="PASS" starttime="20210730 14:40:14.598" endtime="20210730 14:40:14.602"/>
</iter>
<status status="PASS" starttime="20210730 14:40:14.598" endtime="20210730 14:40:14.602"/>
</for>
<status status="PASS" starttime="20210730 14:40:14.598" endtime="20210730 14:40:14.602"/>
</branch>
<status status="PASS" starttime="20210730 14:40:14.597" endtime="20210730 14:40:14.602"/>
</if>
<status status="PASS" starttime="20210730 14:40:14.581" endtime="20210730 14:40:14.603"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:14.604" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:14.603" endtime="20210730 14:40:14.604"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:14.605" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:14.604" endtime="20210730 14:40:14.605"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:14.605" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:14.605" endtime="20210730 14:40:14.605"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:14.606" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:14.605" endtime="20210730 14:40:14.606"/>
</kw>
<msg timestamp="20210730 14:40:14.606" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:14.604" endtime="20210730 14:40:14.606"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:14.610" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:14.606" endtime="20210730 14:40:14.620"/>
</kw>
<status status="PASS" starttime="20210730 14:40:14.603" endtime="20210730 14:40:14.621"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:14.623" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:14.622" endtime="20210730 14:40:14.631"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:16.133" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:14.632" endtime="20210730 14:40:16.134"/>
</kw>
<status status="PASS" starttime="20210730 14:40:14.621" endtime="20210730 14:40:16.135"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:16.140" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:16.139" endtime="20210730 14:40:16.140"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:16.141" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:16.140" endtime="20210730 14:40:16.141"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:16.142" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:16.141" endtime="20210730 14:40:16.142"/>
</kw>
<msg timestamp="20210730 14:40:16.142" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:16.138" endtime="20210730 14:40:16.142"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:16.143" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:16.142" endtime="20210730 14:40:16.143"/>
</kw>
<status status="PASS" starttime="20210730 14:40:16.136" endtime="20210730 14:40:16.143"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:16.144" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:16.144" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:16.144" endtime="20210730 14:40:16.144"/>
</kw>
<status status="PASS" starttime="20210730 14:40:16.143" endtime="20210730 14:40:16.144"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:16.145" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:16.145" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:16.145" endtime="20210730 14:40:16.145"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:16.146" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:16.146" endtime="20210730 14:40:16.146"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:16.146" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:16.146" endtime="20210730 14:40:16.146"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:16.146" endtime="20210730 14:40:16.147"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:16.147" endtime="20210730 14:40:16.147"/>
</kw>
<status status="PASS" starttime="20210730 14:40:16.146" endtime="20210730 14:40:16.147"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:16.148" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:16.148" endtime="20210730 14:40:16.148"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:16.148" endtime="20210730 14:40:16.149"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:16.149" endtime="20210730 14:40:16.149"/>
</kw>
<status status="PASS" starttime="20210730 14:40:16.148" endtime="20210730 14:40:16.149"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:16.149" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:16.149" endtime="20210730 14:40:16.149"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:16.149" endtime="20210730 14:40:16.150"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:16.150" endtime="20210730 14:40:16.150"/>
</kw>
<status status="PASS" starttime="20210730 14:40:16.149" endtime="20210730 14:40:16.150"/>
</iter>
<status status="PASS" starttime="20210730 14:40:16.146" endtime="20210730 14:40:16.150"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:16.151" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:16.151" endtime="20210730 14:40:16.151"/>
</kw>
<status status="PASS" starttime="20210730 14:40:16.144" endtime="20210730 14:40:16.151"/>
</kw>
<status status="PASS" starttime="20210730 14:40:14.581" endtime="20210730 14:40:16.151"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCabc!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:16.152" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:16.152" endtime="20210730 14:40:16.152"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:16.153" level="INFO">${payload} = {'password': 'ABCabc!'}</msg>
<status status="PASS" starttime="20210730 14:40:16.152" endtime="20210730 14:40:16.153"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:16.162" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:16.162" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:16.153" endtime="20210730 14:40:16.162"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:16.162" endtime="20210730 14:40:16.163"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:16.163" endtime="20210730 14:40:16.163"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:16.153" endtime="20210730 14:40:16.163"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:16.153" endtime="20210730 14:40:16.163"/>
</for>
<status status="FAIL" starttime="20210730 14:40:16.151" endtime="20210730 14:40:16.163"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:16.151" endtime="20210730 14:40:16.163"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCabc!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:16.164" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:40:16.164" endtime="20210730 14:40:16.164"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:16.165" level="INFO">${payload} = {'password': 'ABCabc!'}</msg>
<status status="PASS" starttime="20210730 14:40:16.164" endtime="20210730 14:40:16.165"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:16.169" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:16.170" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:16.165" endtime="20210730 14:40:16.170"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:16.170" endtime="20210730 14:40:16.170"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:16.170" endtime="20210730 14:40:16.170"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:16.165" endtime="20210730 14:40:16.170"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:16.165" endtime="20210730 14:40:16.170"/>
</for>
<status status="FAIL" starttime="20210730 14:40:16.163" endtime="20210730 14:40:16.170"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:16.163" endtime="20210730 14:40:16.170"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCabc!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:16.171" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:40:16.171" endtime="20210730 14:40:16.171"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:16.172" level="INFO">${payload} = {'password': 'ABCabc!'}</msg>
<status status="PASS" starttime="20210730 14:40:16.171" endtime="20210730 14:40:16.172"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:16.177" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:16.177" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:16.172" endtime="20210730 14:40:16.177"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:16.178" endtime="20210730 14:40:16.178"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:16.178" endtime="20210730 14:40:16.178"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:16.172" endtime="20210730 14:40:16.178"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:16.172" endtime="20210730 14:40:16.178"/>
</for>
<status status="FAIL" starttime="20210730 14:40:16.170" endtime="20210730 14:40:16.178"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:16.170" endtime="20210730 14:40:16.178"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:16.151" endtime="20210730 14:40:16.178"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:16.184" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:16.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:16.195" level="INFO">${pids} = 28064
28071
28075</msg>
<status status="PASS" starttime="20210730 14:40:16.180" endtime="20210730 14:40:16.195"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:16.196" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:16.195" endtime="20210730 14:40:16.196"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:16.196" level="INFO">${pids} = ['28064', '28071', '28075']</msg>
<status status="PASS" starttime="20210730 14:40:16.196" endtime="20210730 14:40:16.196"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">28064</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:16.200" level="INFO">Running command 'kill 28064 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:16.197" endtime="20210730 14:40:16.200"/>
</kw>
<status status="PASS" starttime="20210730 14:40:16.197" endtime="20210730 14:40:16.200"/>
</iter>
<iter>
<var name="${pid}">28071</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:16.204" level="INFO">Running command 'kill 28071 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:16.201" endtime="20210730 14:40:16.204"/>
</kw>
<status status="PASS" starttime="20210730 14:40:16.200" endtime="20210730 14:40:16.204"/>
</iter>
<iter>
<var name="${pid}">28075</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:16.209" level="INFO">Running command 'kill 28075 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:16.205" endtime="20210730 14:40:16.210"/>
</kw>
<status status="PASS" starttime="20210730 14:40:16.204" endtime="20210730 14:40:16.210"/>
</iter>
<status status="PASS" starttime="20210730 14:40:16.196" endtime="20210730 14:40:16.210"/>
</for>
<status status="PASS" starttime="20210730 14:40:16.196" endtime="20210730 14:40:16.210"/>
</branch>
<status status="PASS" starttime="20210730 14:40:16.196" endtime="20210730 14:40:16.210"/>
</if>
<status status="PASS" starttime="20210730 14:40:16.179" endtime="20210730 14:40:16.210"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCabc!'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:14.580" endtime="20210730 14:40:16.211">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t79" name="With Each Valid Token, Updating Password Of Each System User With ABCabc!? Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:16.216" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:16.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:16.227" level="INFO">${pids} = 28104</msg>
<status status="PASS" starttime="20210730 14:40:16.213" endtime="20210730 14:40:16.227"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:16.228" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:16.228" endtime="20210730 14:40:16.228"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:16.229" level="INFO">${pids} = ['28104']</msg>
<status status="PASS" starttime="20210730 14:40:16.229" endtime="20210730 14:40:16.229"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">28104</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:16.233" level="INFO">Running command 'kill 28104 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:16.230" endtime="20210730 14:40:16.233"/>
</kw>
<status status="PASS" starttime="20210730 14:40:16.229" endtime="20210730 14:40:16.233"/>
</iter>
<status status="PASS" starttime="20210730 14:40:16.229" endtime="20210730 14:40:16.233"/>
</for>
<status status="PASS" starttime="20210730 14:40:16.229" endtime="20210730 14:40:16.233"/>
</branch>
<status status="PASS" starttime="20210730 14:40:16.229" endtime="20210730 14:40:16.233"/>
</if>
<status status="PASS" starttime="20210730 14:40:16.212" endtime="20210730 14:40:16.234"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:16.235" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:16.234" endtime="20210730 14:40:16.235"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:16.235" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:16.235" endtime="20210730 14:40:16.235"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:16.236" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:16.236" endtime="20210730 14:40:16.236"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:16.236" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:16.236" endtime="20210730 14:40:16.236"/>
</kw>
<msg timestamp="20210730 14:40:16.237" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:16.235" endtime="20210730 14:40:16.237"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:16.245" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:16.237" endtime="20210730 14:40:16.247"/>
</kw>
<status status="PASS" starttime="20210730 14:40:16.234" endtime="20210730 14:40:16.248"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:16.249" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:16.248" endtime="20210730 14:40:16.253"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:17.754" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:16.253" endtime="20210730 14:40:17.754"/>
</kw>
<status status="PASS" starttime="20210730 14:40:16.248" endtime="20210730 14:40:17.754"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:17.757" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:17.756" endtime="20210730 14:40:17.757"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:17.757" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:17.757" endtime="20210730 14:40:17.757"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:17.758" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:17.757" endtime="20210730 14:40:17.758"/>
</kw>
<msg timestamp="20210730 14:40:17.758" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:17.756" endtime="20210730 14:40:17.758"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:17.758" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:17.758" endtime="20210730 14:40:17.759"/>
</kw>
<status status="PASS" starttime="20210730 14:40:17.755" endtime="20210730 14:40:17.759"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:17.759" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:17.759" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:17.759" endtime="20210730 14:40:17.760"/>
</kw>
<status status="PASS" starttime="20210730 14:40:17.759" endtime="20210730 14:40:17.760"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:17.760" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:17.761" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:17.760" endtime="20210730 14:40:17.761"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:17.761" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:17.761" endtime="20210730 14:40:17.761"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:17.762" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:17.761" endtime="20210730 14:40:17.762"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:17.762" endtime="20210730 14:40:17.763"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:17.763" endtime="20210730 14:40:17.763"/>
</kw>
<status status="PASS" starttime="20210730 14:40:17.761" endtime="20210730 14:40:17.763"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:17.763" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:17.763" endtime="20210730 14:40:17.763"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:17.764" endtime="20210730 14:40:17.764"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:17.764" endtime="20210730 14:40:17.764"/>
</kw>
<status status="PASS" starttime="20210730 14:40:17.763" endtime="20210730 14:40:17.765"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:17.765" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:17.765" endtime="20210730 14:40:17.765"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:17.765" endtime="20210730 14:40:17.766"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:17.766" endtime="20210730 14:40:17.766"/>
</kw>
<status status="PASS" starttime="20210730 14:40:17.765" endtime="20210730 14:40:17.766"/>
</iter>
<status status="PASS" starttime="20210730 14:40:17.761" endtime="20210730 14:40:17.766"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:17.767" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:17.766" endtime="20210730 14:40:17.767"/>
</kw>
<status status="PASS" starttime="20210730 14:40:17.760" endtime="20210730 14:40:17.767"/>
</kw>
<status status="PASS" starttime="20210730 14:40:16.212" endtime="20210730 14:40:17.767"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCabc!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:17.768" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:17.768" endtime="20210730 14:40:17.768"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:17.769" level="INFO">${payload} = {'password': 'ABCabc!?'}</msg>
<status status="PASS" starttime="20210730 14:40:17.768" endtime="20210730 14:40:17.769"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:17.779" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:17.779" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:17.769" endtime="20210730 14:40:17.779"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:17.779" endtime="20210730 14:40:17.779"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:17.779" endtime="20210730 14:40:17.779"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:17.769" endtime="20210730 14:40:17.779"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:17.769" endtime="20210730 14:40:17.780"/>
</for>
<status status="FAIL" starttime="20210730 14:40:17.767" endtime="20210730 14:40:17.780"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:17.767" endtime="20210730 14:40:17.780"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCabc!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:17.781" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:40:17.780" endtime="20210730 14:40:17.781"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:17.781" level="INFO">${payload} = {'password': 'ABCabc!?'}</msg>
<status status="PASS" starttime="20210730 14:40:17.781" endtime="20210730 14:40:17.781"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:17.786" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:17.786" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:17.782" endtime="20210730 14:40:17.786"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:17.786" endtime="20210730 14:40:17.786"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:17.786" endtime="20210730 14:40:17.786"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:17.781" endtime="20210730 14:40:17.786"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:17.781" endtime="20210730 14:40:17.787"/>
</for>
<status status="FAIL" starttime="20210730 14:40:17.780" endtime="20210730 14:40:17.787"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:17.780" endtime="20210730 14:40:17.787"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCabc!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:17.788" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:40:17.787" endtime="20210730 14:40:17.788"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:17.788" level="INFO">${payload} = {'password': 'ABCabc!?'}</msg>
<status status="PASS" starttime="20210730 14:40:17.788" endtime="20210730 14:40:17.788"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:17.793" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:17.794" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:17.789" endtime="20210730 14:40:17.794"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:17.794" endtime="20210730 14:40:17.794"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:17.794" endtime="20210730 14:40:17.794"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:17.789" endtime="20210730 14:40:17.794"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:17.788" endtime="20210730 14:40:17.794"/>
</for>
<status status="FAIL" starttime="20210730 14:40:17.787" endtime="20210730 14:40:17.794"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:17.787" endtime="20210730 14:40:17.795"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:17.767" endtime="20210730 14:40:17.795"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:17.800" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:17.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:17.811" level="INFO">${pids} = 28127
28134
28138</msg>
<status status="PASS" starttime="20210730 14:40:17.796" endtime="20210730 14:40:17.811"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:17.812" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:17.812" endtime="20210730 14:40:17.812"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:17.813" level="INFO">${pids} = ['28127', '28134', '28138']</msg>
<status status="PASS" starttime="20210730 14:40:17.813" endtime="20210730 14:40:17.813"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">28127</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:17.817" level="INFO">Running command 'kill 28127 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:17.814" endtime="20210730 14:40:17.818"/>
</kw>
<status status="PASS" starttime="20210730 14:40:17.813" endtime="20210730 14:40:17.818"/>
</iter>
<iter>
<var name="${pid}">28134</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:17.822" level="INFO">Running command 'kill 28134 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:17.819" endtime="20210730 14:40:17.822"/>
</kw>
<status status="PASS" starttime="20210730 14:40:17.818" endtime="20210730 14:40:17.822"/>
</iter>
<iter>
<var name="${pid}">28138</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:17.827" level="INFO">Running command 'kill 28138 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:17.823" endtime="20210730 14:40:17.828"/>
</kw>
<status status="PASS" starttime="20210730 14:40:17.822" endtime="20210730 14:40:17.828"/>
</iter>
<status status="PASS" starttime="20210730 14:40:17.813" endtime="20210730 14:40:17.828"/>
</for>
<status status="PASS" starttime="20210730 14:40:17.813" endtime="20210730 14:40:17.828"/>
</branch>
<status status="PASS" starttime="20210730 14:40:17.812" endtime="20210730 14:40:17.828"/>
</if>
<status status="PASS" starttime="20210730 14:40:17.795" endtime="20210730 14:40:17.828"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCabc!?'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:16.211" endtime="20210730 14:40:17.829">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t80" name="With Each Valid Token, Updating Password Of Each System User With ABCabc!?ABCabc!?ABCab. Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:17.834" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:17.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:17.844" level="INFO">${pids} = 28167</msg>
<status status="PASS" starttime="20210730 14:40:17.831" endtime="20210730 14:40:17.844"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:17.845" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:17.845" endtime="20210730 14:40:17.845"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:17.846" level="INFO">${pids} = ['28167']</msg>
<status status="PASS" starttime="20210730 14:40:17.846" endtime="20210730 14:40:17.846"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">28167</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:17.849" level="INFO">Running command 'kill 28167 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:17.846" endtime="20210730 14:40:17.850"/>
</kw>
<status status="PASS" starttime="20210730 14:40:17.846" endtime="20210730 14:40:17.850"/>
</iter>
<status status="PASS" starttime="20210730 14:40:17.846" endtime="20210730 14:40:17.850"/>
</for>
<status status="PASS" starttime="20210730 14:40:17.845" endtime="20210730 14:40:17.850"/>
</branch>
<status status="PASS" starttime="20210730 14:40:17.845" endtime="20210730 14:40:17.850"/>
</if>
<status status="PASS" starttime="20210730 14:40:17.830" endtime="20210730 14:40:17.850"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:17.851" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:17.851" endtime="20210730 14:40:17.851"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:17.852" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:17.852" endtime="20210730 14:40:17.852"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:17.852" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:17.852" endtime="20210730 14:40:17.852"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:17.853" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:17.853" endtime="20210730 14:40:17.853"/>
</kw>
<msg timestamp="20210730 14:40:17.853" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:17.851" endtime="20210730 14:40:17.853"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:17.856" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:17.853" endtime="20210730 14:40:17.859"/>
</kw>
<status status="PASS" starttime="20210730 14:40:17.850" endtime="20210730 14:40:17.860"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:17.861" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:17.860" endtime="20210730 14:40:17.865"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:19.367" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:17.866" endtime="20210730 14:40:19.367"/>
</kw>
<status status="PASS" starttime="20210730 14:40:17.860" endtime="20210730 14:40:19.367"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:19.369" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:19.368" endtime="20210730 14:40:19.369"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:19.369" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:19.369" endtime="20210730 14:40:19.369"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:19.370" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:19.369" endtime="20210730 14:40:19.370"/>
</kw>
<msg timestamp="20210730 14:40:19.370" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:19.368" endtime="20210730 14:40:19.370"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:19.371" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:19.370" endtime="20210730 14:40:19.371"/>
</kw>
<status status="PASS" starttime="20210730 14:40:19.367" endtime="20210730 14:40:19.371"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:19.372" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:19.372" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:19.372" endtime="20210730 14:40:19.372"/>
</kw>
<status status="PASS" starttime="20210730 14:40:19.371" endtime="20210730 14:40:19.372"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:19.374" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:19.374" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:19.373" endtime="20210730 14:40:19.374"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:19.374" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:19.374" endtime="20210730 14:40:19.374"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:19.375" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:19.375" endtime="20210730 14:40:19.375"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:19.376" endtime="20210730 14:40:19.377"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:19.377" endtime="20210730 14:40:19.378"/>
</kw>
<status status="PASS" starttime="20210730 14:40:19.375" endtime="20210730 14:40:19.378"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:19.378" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:19.378" endtime="20210730 14:40:19.378"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:19.378" endtime="20210730 14:40:19.379"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:19.379" endtime="20210730 14:40:19.380"/>
</kw>
<status status="PASS" starttime="20210730 14:40:19.378" endtime="20210730 14:40:19.380"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:19.380" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:19.380" endtime="20210730 14:40:19.380"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:19.381" endtime="20210730 14:40:19.382"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:19.382" endtime="20210730 14:40:19.382"/>
</kw>
<status status="PASS" starttime="20210730 14:40:19.380" endtime="20210730 14:40:19.382"/>
</iter>
<status status="PASS" starttime="20210730 14:40:19.374" endtime="20210730 14:40:19.382"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:19.383" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:19.382" endtime="20210730 14:40:19.383"/>
</kw>
<status status="PASS" starttime="20210730 14:40:19.373" endtime="20210730 14:40:19.383"/>
</kw>
<status status="PASS" starttime="20210730 14:40:17.830" endtime="20210730 14:40:19.383"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCabc!?ABCabc!?ABCab.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:19.385" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:19.384" endtime="20210730 14:40:19.385"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:19.385" level="INFO">${payload} = {'password': 'ABCabc!?ABCabc!?ABCab.'}</msg>
<status status="PASS" starttime="20210730 14:40:19.385" endtime="20210730 14:40:19.385"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:19.398" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:19.398" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:19.386" endtime="20210730 14:40:19.398"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:19.399" endtime="20210730 14:40:19.399"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:19.399" endtime="20210730 14:40:19.399"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:19.386" endtime="20210730 14:40:19.399"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:19.385" endtime="20210730 14:40:19.399"/>
</for>
<status status="FAIL" starttime="20210730 14:40:19.384" endtime="20210730 14:40:19.399"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:19.383" endtime="20210730 14:40:19.399"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCabc!?ABCabc!?ABCab.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:19.401" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:40:19.400" endtime="20210730 14:40:19.401"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:19.402" level="INFO">${payload} = {'password': 'ABCabc!?ABCabc!?ABCab.'}</msg>
<status status="PASS" starttime="20210730 14:40:19.401" endtime="20210730 14:40:19.402"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:19.407" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:19.407" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:19.402" endtime="20210730 14:40:19.408"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:19.408" endtime="20210730 14:40:19.408"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:19.408" endtime="20210730 14:40:19.408"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:19.402" endtime="20210730 14:40:19.408"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:19.402" endtime="20210730 14:40:19.408"/>
</for>
<status status="FAIL" starttime="20210730 14:40:19.400" endtime="20210730 14:40:19.409"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:19.400" endtime="20210730 14:40:19.409"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABCabc!?ABCabc!?ABCab.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:19.411" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:40:19.410" endtime="20210730 14:40:19.411"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:19.412" level="INFO">${payload} = {'password': 'ABCabc!?ABCabc!?ABCab.'}</msg>
<status status="PASS" starttime="20210730 14:40:19.412" endtime="20210730 14:40:19.412"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:19.420" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:19.420" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:19.413" endtime="20210730 14:40:19.420"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:19.420" endtime="20210730 14:40:19.420"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:19.420" endtime="20210730 14:40:19.421"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:19.413" endtime="20210730 14:40:19.421"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:19.412" endtime="20210730 14:40:19.421"/>
</for>
<status status="FAIL" starttime="20210730 14:40:19.409" endtime="20210730 14:40:19.421"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:19.409" endtime="20210730 14:40:19.421"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:19.383" endtime="20210730 14:40:19.421"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:19.426" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:19.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:19.439" level="INFO">${pids} = 28190
28197
28203</msg>
<status status="PASS" starttime="20210730 14:40:19.422" endtime="20210730 14:40:19.439"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:19.444" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:19.440" endtime="20210730 14:40:19.444"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:19.447" level="INFO">${pids} = ['28190', '28197', '28203']</msg>
<status status="PASS" starttime="20210730 14:40:19.447" endtime="20210730 14:40:19.447"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">28190</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:19.451" level="INFO">Running command 'kill 28190 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:19.448" endtime="20210730 14:40:19.451"/>
</kw>
<status status="PASS" starttime="20210730 14:40:19.447" endtime="20210730 14:40:19.452"/>
</iter>
<iter>
<var name="${pid}">28197</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:19.455" level="INFO">Running command 'kill 28197 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:19.452" endtime="20210730 14:40:19.456"/>
</kw>
<status status="PASS" starttime="20210730 14:40:19.452" endtime="20210730 14:40:19.456"/>
</iter>
<iter>
<var name="${pid}">28203</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:19.460" level="INFO">Running command 'kill 28203 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:19.456" endtime="20210730 14:40:19.461"/>
</kw>
<status status="PASS" starttime="20210730 14:40:19.456" endtime="20210730 14:40:19.461"/>
</iter>
<status status="PASS" starttime="20210730 14:40:19.447" endtime="20210730 14:40:19.461"/>
</for>
<status status="PASS" starttime="20210730 14:40:19.446" endtime="20210730 14:40:19.461"/>
</branch>
<status status="PASS" starttime="20210730 14:40:19.445" endtime="20210730 14:40:19.461"/>
</if>
<status status="PASS" starttime="20210730 14:40:19.421" endtime="20210730 14:40:19.461"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCabc!?ABCabc!?ABCab.'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:17.829" endtime="20210730 14:40:19.461">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t81" name="With Each Valid Token, Updating Password Of Each System User With abc012. Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:19.467" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:19.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:19.488" level="INFO">${pids} = 28232</msg>
<status status="PASS" starttime="20210730 14:40:19.464" endtime="20210730 14:40:19.488"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:19.489" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:19.488" endtime="20210730 14:40:19.489"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:19.490" level="INFO">${pids} = ['28232']</msg>
<status status="PASS" starttime="20210730 14:40:19.490" endtime="20210730 14:40:19.490"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">28232</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:19.498" level="INFO">Running command 'kill 28232 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:19.491" endtime="20210730 14:40:19.506"/>
</kw>
<status status="PASS" starttime="20210730 14:40:19.491" endtime="20210730 14:40:19.506"/>
</iter>
<status status="PASS" starttime="20210730 14:40:19.490" endtime="20210730 14:40:19.506"/>
</for>
<status status="PASS" starttime="20210730 14:40:19.490" endtime="20210730 14:40:19.507"/>
</branch>
<status status="PASS" starttime="20210730 14:40:19.489" endtime="20210730 14:40:19.507"/>
</if>
<status status="PASS" starttime="20210730 14:40:19.463" endtime="20210730 14:40:19.507"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:19.509" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:19.508" endtime="20210730 14:40:19.509"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:19.510" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:19.509" endtime="20210730 14:40:19.510"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:19.510" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:19.510" endtime="20210730 14:40:19.510"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:19.511" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:19.510" endtime="20210730 14:40:19.511"/>
</kw>
<msg timestamp="20210730 14:40:19.511" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:19.509" endtime="20210730 14:40:19.511"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:19.521" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:19.512" endtime="20210730 14:40:19.523"/>
</kw>
<status status="PASS" starttime="20210730 14:40:19.507" endtime="20210730 14:40:19.523"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:19.526" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:19.524" endtime="20210730 14:40:19.550"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:21.055" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:19.551" endtime="20210730 14:40:21.055"/>
</kw>
<status status="PASS" starttime="20210730 14:40:19.524" endtime="20210730 14:40:21.056"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:21.057" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:21.057" endtime="20210730 14:40:21.057"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:21.057" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:21.057" endtime="20210730 14:40:21.057"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:21.058" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:21.057" endtime="20210730 14:40:21.058"/>
</kw>
<msg timestamp="20210730 14:40:21.058" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:21.056" endtime="20210730 14:40:21.058"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:21.059" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:21.058" endtime="20210730 14:40:21.059"/>
</kw>
<status status="PASS" starttime="20210730 14:40:21.056" endtime="20210730 14:40:21.059"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:21.060" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:21.060" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:21.059" endtime="20210730 14:40:21.060"/>
</kw>
<status status="PASS" starttime="20210730 14:40:21.059" endtime="20210730 14:40:21.060"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:21.061" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:21.061" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:21.060" endtime="20210730 14:40:21.061"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:21.062" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:21.061" endtime="20210730 14:40:21.062"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:21.062" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:21.062" endtime="20210730 14:40:21.062"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:21.062" endtime="20210730 14:40:21.063"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:21.063" endtime="20210730 14:40:21.063"/>
</kw>
<status status="PASS" starttime="20210730 14:40:21.062" endtime="20210730 14:40:21.063"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:21.064" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:21.063" endtime="20210730 14:40:21.064"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:21.064" endtime="20210730 14:40:21.064"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:21.065" endtime="20210730 14:40:21.065"/>
</kw>
<status status="PASS" starttime="20210730 14:40:21.063" endtime="20210730 14:40:21.065"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:21.065" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:21.065" endtime="20210730 14:40:21.065"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:21.065" endtime="20210730 14:40:21.066"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:21.066" endtime="20210730 14:40:21.066"/>
</kw>
<status status="PASS" starttime="20210730 14:40:21.065" endtime="20210730 14:40:21.066"/>
</iter>
<status status="PASS" starttime="20210730 14:40:21.062" endtime="20210730 14:40:21.066"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:21.067" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:21.067" endtime="20210730 14:40:21.067"/>
</kw>
<status status="PASS" starttime="20210730 14:40:21.060" endtime="20210730 14:40:21.067"/>
</kw>
<status status="PASS" starttime="20210730 14:40:19.463" endtime="20210730 14:40:21.067"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc012.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:21.069" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:21.068" endtime="20210730 14:40:21.069"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:21.069" level="INFO">${payload} = {'password': 'abc012.'}</msg>
<status status="PASS" starttime="20210730 14:40:21.069" endtime="20210730 14:40:21.069"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:21.080" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:21.081" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:21.069" endtime="20210730 14:40:21.081"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:21.081" endtime="20210730 14:40:21.081"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:21.081" endtime="20210730 14:40:21.081"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:21.069" endtime="20210730 14:40:21.081"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:21.069" endtime="20210730 14:40:21.081"/>
</for>
<status status="FAIL" starttime="20210730 14:40:21.068" endtime="20210730 14:40:21.081"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:21.068" endtime="20210730 14:40:21.081"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc012.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:21.082" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:40:21.082" endtime="20210730 14:40:21.082"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:21.083" level="INFO">${payload} = {'password': 'abc012.'}</msg>
<status status="PASS" starttime="20210730 14:40:21.083" endtime="20210730 14:40:21.083"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:21.087" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:21.087" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:21.083" endtime="20210730 14:40:21.087"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:21.087" endtime="20210730 14:40:21.087"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:21.087" endtime="20210730 14:40:21.087"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:21.083" endtime="20210730 14:40:21.087"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:21.083" endtime="20210730 14:40:21.087"/>
</for>
<status status="FAIL" starttime="20210730 14:40:21.082" endtime="20210730 14:40:21.088"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:21.081" endtime="20210730 14:40:21.088"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc012.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:21.089" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:40:21.088" endtime="20210730 14:40:21.089"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:21.089" level="INFO">${payload} = {'password': 'abc012.'}</msg>
<status status="PASS" starttime="20210730 14:40:21.089" endtime="20210730 14:40:21.089"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:21.094" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:21.094" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:21.089" endtime="20210730 14:40:21.094"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:21.094" endtime="20210730 14:40:21.094"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:21.094" endtime="20210730 14:40:21.094"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:21.089" endtime="20210730 14:40:21.094"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:21.089" endtime="20210730 14:40:21.094"/>
</for>
<status status="FAIL" starttime="20210730 14:40:21.088" endtime="20210730 14:40:21.095"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:21.088" endtime="20210730 14:40:21.095"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:21.067" endtime="20210730 14:40:21.095"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:21.100" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:21.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:21.110" level="INFO">${pids} = 28255
28262
28266</msg>
<status status="PASS" starttime="20210730 14:40:21.096" endtime="20210730 14:40:21.110"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:21.111" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:21.111" endtime="20210730 14:40:21.111"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:21.112" level="INFO">${pids} = ['28255', '28262', '28266']</msg>
<status status="PASS" starttime="20210730 14:40:21.112" endtime="20210730 14:40:21.112"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">28255</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:21.116" level="INFO">Running command 'kill 28255 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:21.113" endtime="20210730 14:40:21.116"/>
</kw>
<status status="PASS" starttime="20210730 14:40:21.112" endtime="20210730 14:40:21.116"/>
</iter>
<iter>
<var name="${pid}">28262</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:21.119" level="INFO">Running command 'kill 28262 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:21.117" endtime="20210730 14:40:21.120"/>
</kw>
<status status="PASS" starttime="20210730 14:40:21.116" endtime="20210730 14:40:21.120"/>
</iter>
<iter>
<var name="${pid}">28266</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:21.123" level="INFO">Running command 'kill 28266 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:21.120" endtime="20210730 14:40:21.124"/>
</kw>
<status status="PASS" starttime="20210730 14:40:21.120" endtime="20210730 14:40:21.124"/>
</iter>
<status status="PASS" starttime="20210730 14:40:21.112" endtime="20210730 14:40:21.124"/>
</for>
<status status="PASS" starttime="20210730 14:40:21.112" endtime="20210730 14:40:21.124"/>
</branch>
<status status="PASS" starttime="20210730 14:40:21.111" endtime="20210730 14:40:21.124"/>
</if>
<status status="PASS" starttime="20210730 14:40:21.096" endtime="20210730 14:40:21.124"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abc012.'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:19.462" endtime="20210730 14:40:21.125">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t82" name="With Each Valid Token, Updating Password Of Each System User With abc012!? Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:21.130" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:21.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:21.140" level="INFO">${pids} = 28295</msg>
<status status="PASS" starttime="20210730 14:40:21.127" endtime="20210730 14:40:21.140"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:21.141" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:21.141" endtime="20210730 14:40:21.142"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:21.143" level="INFO">${pids} = ['28295']</msg>
<status status="PASS" starttime="20210730 14:40:21.142" endtime="20210730 14:40:21.143"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">28295</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:21.147" level="INFO">Running command 'kill 28295 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:21.144" endtime="20210730 14:40:21.147"/>
</kw>
<status status="PASS" starttime="20210730 14:40:21.143" endtime="20210730 14:40:21.147"/>
</iter>
<status status="PASS" starttime="20210730 14:40:21.143" endtime="20210730 14:40:21.147"/>
</for>
<status status="PASS" starttime="20210730 14:40:21.142" endtime="20210730 14:40:21.147"/>
</branch>
<status status="PASS" starttime="20210730 14:40:21.142" endtime="20210730 14:40:21.147"/>
</if>
<status status="PASS" starttime="20210730 14:40:21.126" endtime="20210730 14:40:21.148"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:21.149" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:21.148" endtime="20210730 14:40:21.149"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:21.149" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:21.149" endtime="20210730 14:40:21.150"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:21.150" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:21.150" endtime="20210730 14:40:21.150"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:21.150" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:21.150" endtime="20210730 14:40:21.150"/>
</kw>
<msg timestamp="20210730 14:40:21.151" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:21.149" endtime="20210730 14:40:21.151"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:21.154" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:21.151" endtime="20210730 14:40:21.155"/>
</kw>
<status status="PASS" starttime="20210730 14:40:21.148" endtime="20210730 14:40:21.156"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:21.157" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:21.156" endtime="20210730 14:40:21.166"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:22.667" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:21.167" endtime="20210730 14:40:22.668"/>
</kw>
<status status="PASS" starttime="20210730 14:40:21.156" endtime="20210730 14:40:22.668"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:22.669" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:22.669" endtime="20210730 14:40:22.669"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:22.669" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:22.669" endtime="20210730 14:40:22.669"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:22.670" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:22.669" endtime="20210730 14:40:22.670"/>
</kw>
<msg timestamp="20210730 14:40:22.670" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:22.668" endtime="20210730 14:40:22.670"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:22.670" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:22.670" endtime="20210730 14:40:22.671"/>
</kw>
<status status="PASS" starttime="20210730 14:40:22.668" endtime="20210730 14:40:22.671"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:22.671" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:22.671" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:22.671" endtime="20210730 14:40:22.671"/>
</kw>
<status status="PASS" starttime="20210730 14:40:22.671" endtime="20210730 14:40:22.672"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:22.673" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:22.673" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:22.672" endtime="20210730 14:40:22.673"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:22.673" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:22.673" endtime="20210730 14:40:22.673"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:22.675" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:22.674" endtime="20210730 14:40:22.675"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:22.675" endtime="20210730 14:40:22.676"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:22.676" endtime="20210730 14:40:22.676"/>
</kw>
<status status="PASS" starttime="20210730 14:40:22.674" endtime="20210730 14:40:22.676"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:22.677" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:22.677" endtime="20210730 14:40:22.677"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:22.677" endtime="20210730 14:40:22.678"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:22.678" endtime="20210730 14:40:22.678"/>
</kw>
<status status="PASS" starttime="20210730 14:40:22.676" endtime="20210730 14:40:22.678"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:22.679" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:22.678" endtime="20210730 14:40:22.679"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:22.679" endtime="20210730 14:40:22.679"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:22.680" endtime="20210730 14:40:22.680"/>
</kw>
<status status="PASS" starttime="20210730 14:40:22.678" endtime="20210730 14:40:22.680"/>
</iter>
<status status="PASS" starttime="20210730 14:40:22.674" endtime="20210730 14:40:22.680"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:22.680" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:22.680" endtime="20210730 14:40:22.680"/>
</kw>
<status status="PASS" starttime="20210730 14:40:22.672" endtime="20210730 14:40:22.680"/>
</kw>
<status status="PASS" starttime="20210730 14:40:21.126" endtime="20210730 14:40:22.681"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc012!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:22.682" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:22.682" endtime="20210730 14:40:22.682"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:22.682" level="INFO">${payload} = {'password': 'abc012!?'}</msg>
<status status="PASS" starttime="20210730 14:40:22.682" endtime="20210730 14:40:22.682"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:22.692" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:22.692" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:22.683" endtime="20210730 14:40:22.693"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:22.693" endtime="20210730 14:40:22.693"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:22.693" endtime="20210730 14:40:22.693"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:22.683" endtime="20210730 14:40:22.693"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:22.682" endtime="20210730 14:40:22.693"/>
</for>
<status status="FAIL" starttime="20210730 14:40:22.681" endtime="20210730 14:40:22.693"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:22.681" endtime="20210730 14:40:22.693"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc012!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:22.694" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:40:22.694" endtime="20210730 14:40:22.694"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:22.695" level="INFO">${payload} = {'password': 'abc012!?'}</msg>
<status status="PASS" starttime="20210730 14:40:22.694" endtime="20210730 14:40:22.695"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:22.699" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:22.700" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:22.695" endtime="20210730 14:40:22.700"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:22.700" endtime="20210730 14:40:22.700"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:22.700" endtime="20210730 14:40:22.700"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:22.695" endtime="20210730 14:40:22.700"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:22.695" endtime="20210730 14:40:22.700"/>
</for>
<status status="FAIL" starttime="20210730 14:40:22.693" endtime="20210730 14:40:22.700"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:22.693" endtime="20210730 14:40:22.700"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc012!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:22.702" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:40:22.701" endtime="20210730 14:40:22.702"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:22.702" level="INFO">${payload} = {'password': 'abc012!?'}</msg>
<status status="PASS" starttime="20210730 14:40:22.702" endtime="20210730 14:40:22.702"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:22.707" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:22.708" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:22.703" endtime="20210730 14:40:22.708"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:22.708" endtime="20210730 14:40:22.708"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:22.708" endtime="20210730 14:40:22.708"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:22.703" endtime="20210730 14:40:22.708"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:22.702" endtime="20210730 14:40:22.708"/>
</for>
<status status="FAIL" starttime="20210730 14:40:22.701" endtime="20210730 14:40:22.708"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:22.701" endtime="20210730 14:40:22.709"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:22.681" endtime="20210730 14:40:22.709"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:22.714" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:22.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:22.725" level="INFO">${pids} = 28318
28325
28331</msg>
<status status="PASS" starttime="20210730 14:40:22.710" endtime="20210730 14:40:22.725"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:22.726" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:22.725" endtime="20210730 14:40:22.726"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:22.727" level="INFO">${pids} = ['28318', '28325', '28331']</msg>
<status status="PASS" starttime="20210730 14:40:22.726" endtime="20210730 14:40:22.727"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">28318</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:22.730" level="INFO">Running command 'kill 28318 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:22.727" endtime="20210730 14:40:22.731"/>
</kw>
<status status="PASS" starttime="20210730 14:40:22.727" endtime="20210730 14:40:22.731"/>
</iter>
<iter>
<var name="${pid}">28325</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:22.734" level="INFO">Running command 'kill 28325 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:22.731" endtime="20210730 14:40:22.735"/>
</kw>
<status status="PASS" starttime="20210730 14:40:22.731" endtime="20210730 14:40:22.735"/>
</iter>
<iter>
<var name="${pid}">28331</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:22.738" level="INFO">Running command 'kill 28331 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:22.735" endtime="20210730 14:40:22.739"/>
</kw>
<status status="PASS" starttime="20210730 14:40:22.735" endtime="20210730 14:40:22.739"/>
</iter>
<status status="PASS" starttime="20210730 14:40:22.727" endtime="20210730 14:40:22.739"/>
</for>
<status status="PASS" starttime="20210730 14:40:22.726" endtime="20210730 14:40:22.739"/>
</branch>
<status status="PASS" starttime="20210730 14:40:22.726" endtime="20210730 14:40:22.739"/>
</if>
<status status="PASS" starttime="20210730 14:40:22.709" endtime="20210730 14:40:22.739"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abc012!?'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:21.125" endtime="20210730 14:40:22.740">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t83" name="With Each Valid Token, Updating Password Of Each System User With abc012!?abc012!?abc012 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:22.746" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:22.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:22.758" level="INFO">${pids} = 28360</msg>
<status status="PASS" starttime="20210730 14:40:22.743" endtime="20210730 14:40:22.758"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:22.759" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:22.759" endtime="20210730 14:40:22.759"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:22.760" level="INFO">${pids} = ['28360']</msg>
<status status="PASS" starttime="20210730 14:40:22.760" endtime="20210730 14:40:22.760"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">28360</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:22.764" level="INFO">Running command 'kill 28360 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:22.760" endtime="20210730 14:40:22.764"/>
</kw>
<status status="PASS" starttime="20210730 14:40:22.760" endtime="20210730 14:40:22.764"/>
</iter>
<status status="PASS" starttime="20210730 14:40:22.760" endtime="20210730 14:40:22.764"/>
</for>
<status status="PASS" starttime="20210730 14:40:22.759" endtime="20210730 14:40:22.764"/>
</branch>
<status status="PASS" starttime="20210730 14:40:22.759" endtime="20210730 14:40:22.764"/>
</if>
<status status="PASS" starttime="20210730 14:40:22.742" endtime="20210730 14:40:22.765"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:22.766" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:22.765" endtime="20210730 14:40:22.766"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:22.766" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:22.766" endtime="20210730 14:40:22.766"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:22.767" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:22.766" endtime="20210730 14:40:22.767"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:22.767" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:22.767" endtime="20210730 14:40:22.767"/>
</kw>
<msg timestamp="20210730 14:40:22.767" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:22.766" endtime="20210730 14:40:22.767"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:22.778" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:22.768" endtime="20210730 14:40:22.779"/>
</kw>
<status status="PASS" starttime="20210730 14:40:22.765" endtime="20210730 14:40:22.779"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:22.781" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:22.780" endtime="20210730 14:40:22.785"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:24.290" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:22.785" endtime="20210730 14:40:24.291"/>
</kw>
<status status="PASS" starttime="20210730 14:40:22.780" endtime="20210730 14:40:24.292"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:24.296" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:24.295" endtime="20210730 14:40:24.296"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:24.296" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:24.296" endtime="20210730 14:40:24.296"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:24.296" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:24.296" endtime="20210730 14:40:24.296"/>
</kw>
<msg timestamp="20210730 14:40:24.297" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:24.295" endtime="20210730 14:40:24.297"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:24.297" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:24.297" endtime="20210730 14:40:24.298"/>
</kw>
<status status="PASS" starttime="20210730 14:40:24.293" endtime="20210730 14:40:24.298"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:24.298" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:24.299" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:24.298" endtime="20210730 14:40:24.299"/>
</kw>
<status status="PASS" starttime="20210730 14:40:24.298" endtime="20210730 14:40:24.299"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:24.300" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:24.300" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:24.299" endtime="20210730 14:40:24.300"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:24.300" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:24.300" endtime="20210730 14:40:24.300"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:24.301" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:24.300" endtime="20210730 14:40:24.301"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:24.301" endtime="20210730 14:40:24.301"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:24.301" endtime="20210730 14:40:24.302"/>
</kw>
<status status="PASS" starttime="20210730 14:40:24.300" endtime="20210730 14:40:24.302"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:24.302" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:24.302" endtime="20210730 14:40:24.302"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:24.302" endtime="20210730 14:40:24.303"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:24.303" endtime="20210730 14:40:24.303"/>
</kw>
<status status="PASS" starttime="20210730 14:40:24.302" endtime="20210730 14:40:24.303"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:24.304" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:24.303" endtime="20210730 14:40:24.304"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:24.304" endtime="20210730 14:40:24.304"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:24.305" endtime="20210730 14:40:24.305"/>
</kw>
<status status="PASS" starttime="20210730 14:40:24.303" endtime="20210730 14:40:24.305"/>
</iter>
<status status="PASS" starttime="20210730 14:40:24.300" endtime="20210730 14:40:24.305"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:24.305" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:24.305" endtime="20210730 14:40:24.306"/>
</kw>
<status status="PASS" starttime="20210730 14:40:24.299" endtime="20210730 14:40:24.306"/>
</kw>
<status status="PASS" starttime="20210730 14:40:22.742" endtime="20210730 14:40:24.306"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc012!?abc012!?abc012</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:24.307" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:24.307" endtime="20210730 14:40:24.307"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:24.308" level="INFO">${payload} = {'password': 'abc012!?abc012!?abc012'}</msg>
<status status="PASS" starttime="20210730 14:40:24.307" endtime="20210730 14:40:24.308"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:24.317" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:24.317" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:24.308" endtime="20210730 14:40:24.317"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:24.317" endtime="20210730 14:40:24.317"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:24.317" endtime="20210730 14:40:24.317"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:24.308" endtime="20210730 14:40:24.317"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:24.308" endtime="20210730 14:40:24.318"/>
</for>
<status status="FAIL" starttime="20210730 14:40:24.306" endtime="20210730 14:40:24.318"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:24.306" endtime="20210730 14:40:24.318"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc012!?abc012!?abc012</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:24.319" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:40:24.318" endtime="20210730 14:40:24.319"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:24.319" level="INFO">${payload} = {'password': 'abc012!?abc012!?abc012'}</msg>
<status status="PASS" starttime="20210730 14:40:24.319" endtime="20210730 14:40:24.319"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:24.323" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:24.324" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:24.319" endtime="20210730 14:40:24.324"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:24.324" endtime="20210730 14:40:24.324"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:24.324" endtime="20210730 14:40:24.324"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:24.319" endtime="20210730 14:40:24.324"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:24.319" endtime="20210730 14:40:24.324"/>
</for>
<status status="FAIL" starttime="20210730 14:40:24.318" endtime="20210730 14:40:24.325"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:24.318" endtime="20210730 14:40:24.325"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc012!?abc012!?abc012</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:24.326" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:40:24.326" endtime="20210730 14:40:24.326"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:24.327" level="INFO">${payload} = {'password': 'abc012!?abc012!?abc012'}</msg>
<status status="PASS" starttime="20210730 14:40:24.327" endtime="20210730 14:40:24.327"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:24.331" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:24.331" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:24.327" endtime="20210730 14:40:24.331"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:24.331" endtime="20210730 14:40:24.331"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:24.331" endtime="20210730 14:40:24.331"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:24.327" endtime="20210730 14:40:24.332"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:24.327" endtime="20210730 14:40:24.332"/>
</for>
<status status="FAIL" starttime="20210730 14:40:24.325" endtime="20210730 14:40:24.332"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:24.325" endtime="20210730 14:40:24.332"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:24.306" endtime="20210730 14:40:24.332"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:24.337" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:24.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:24.348" level="INFO">${pids} = 28383
28390
28394</msg>
<status status="PASS" starttime="20210730 14:40:24.333" endtime="20210730 14:40:24.348"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:24.349" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:24.348" endtime="20210730 14:40:24.349"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:24.349" level="INFO">${pids} = ['28383', '28390', '28394']</msg>
<status status="PASS" starttime="20210730 14:40:24.349" endtime="20210730 14:40:24.349"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">28383</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:24.352" level="INFO">Running command 'kill 28383 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:24.350" endtime="20210730 14:40:24.353"/>
</kw>
<status status="PASS" starttime="20210730 14:40:24.350" endtime="20210730 14:40:24.353"/>
</iter>
<iter>
<var name="${pid}">28390</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:24.356" level="INFO">Running command 'kill 28390 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:24.353" endtime="20210730 14:40:24.357"/>
</kw>
<status status="PASS" starttime="20210730 14:40:24.353" endtime="20210730 14:40:24.357"/>
</iter>
<iter>
<var name="${pid}">28394</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:24.362" level="INFO">Running command 'kill 28394 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:24.358" endtime="20210730 14:40:24.363"/>
</kw>
<status status="PASS" starttime="20210730 14:40:24.357" endtime="20210730 14:40:24.363"/>
</iter>
<status status="PASS" starttime="20210730 14:40:24.349" endtime="20210730 14:40:24.363"/>
</for>
<status status="PASS" starttime="20210730 14:40:24.349" endtime="20210730 14:40:24.363"/>
</branch>
<status status="PASS" starttime="20210730 14:40:24.349" endtime="20210730 14:40:24.363"/>
</if>
<status status="PASS" starttime="20210730 14:40:24.332" endtime="20210730 14:40:24.363"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abc012!?abc012!?abc012'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:22.740" endtime="20210730 14:40:24.364">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t84" name="With Each Valid Token, Updating Password Of Each System User With abc!?.Z Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:24.371" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:24.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:24.381" level="INFO">${pids} = 28423</msg>
<status status="PASS" starttime="20210730 14:40:24.366" endtime="20210730 14:40:24.382"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:24.382" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:24.382" endtime="20210730 14:40:24.382"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:24.383" level="INFO">${pids} = ['28423']</msg>
<status status="PASS" starttime="20210730 14:40:24.383" endtime="20210730 14:40:24.383"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">28423</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:24.387" level="INFO">Running command 'kill 28423 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:24.383" endtime="20210730 14:40:24.387"/>
</kw>
<status status="PASS" starttime="20210730 14:40:24.383" endtime="20210730 14:40:24.387"/>
</iter>
<status status="PASS" starttime="20210730 14:40:24.383" endtime="20210730 14:40:24.387"/>
</for>
<status status="PASS" starttime="20210730 14:40:24.383" endtime="20210730 14:40:24.387"/>
</branch>
<status status="PASS" starttime="20210730 14:40:24.383" endtime="20210730 14:40:24.387"/>
</if>
<status status="PASS" starttime="20210730 14:40:24.365" endtime="20210730 14:40:24.388"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:24.389" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:24.388" endtime="20210730 14:40:24.389"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:24.389" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:24.389" endtime="20210730 14:40:24.389"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:24.390" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:24.389" endtime="20210730 14:40:24.390"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:24.390" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:24.390" endtime="20210730 14:40:24.390"/>
</kw>
<msg timestamp="20210730 14:40:24.390" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:24.389" endtime="20210730 14:40:24.390"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:24.394" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:24.390" endtime="20210730 14:40:24.397"/>
</kw>
<status status="PASS" starttime="20210730 14:40:24.388" endtime="20210730 14:40:24.398"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:24.399" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:24.399" endtime="20210730 14:40:24.404"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:25.920" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:24.404" endtime="20210730 14:40:25.921"/>
</kw>
<status status="PASS" starttime="20210730 14:40:24.398" endtime="20210730 14:40:25.921"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:25.922" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:25.922" endtime="20210730 14:40:25.922"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:25.922" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:25.922" endtime="20210730 14:40:25.922"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:25.923" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:25.923" endtime="20210730 14:40:25.923"/>
</kw>
<msg timestamp="20210730 14:40:25.923" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:25.921" endtime="20210730 14:40:25.923"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:25.924" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:25.923" endtime="20210730 14:40:25.924"/>
</kw>
<status status="PASS" starttime="20210730 14:40:25.921" endtime="20210730 14:40:25.924"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:25.926" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:25.926" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:25.925" endtime="20210730 14:40:25.926"/>
</kw>
<status status="PASS" starttime="20210730 14:40:25.924" endtime="20210730 14:40:25.926"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:25.927" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:25.927" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:25.927" endtime="20210730 14:40:25.927"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:25.928" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:25.928" endtime="20210730 14:40:25.928"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:25.928" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:25.928" endtime="20210730 14:40:25.928"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:25.928" endtime="20210730 14:40:25.929"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:25.929" endtime="20210730 14:40:25.929"/>
</kw>
<status status="PASS" starttime="20210730 14:40:25.928" endtime="20210730 14:40:25.930"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:25.930" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:25.930" endtime="20210730 14:40:25.930"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:25.930" endtime="20210730 14:40:25.931"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:25.931" endtime="20210730 14:40:25.931"/>
</kw>
<status status="PASS" starttime="20210730 14:40:25.930" endtime="20210730 14:40:25.931"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:25.931" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:25.931" endtime="20210730 14:40:25.931"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:25.931" endtime="20210730 14:40:25.932"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:25.932" endtime="20210730 14:40:25.932"/>
</kw>
<status status="PASS" starttime="20210730 14:40:25.931" endtime="20210730 14:40:25.932"/>
</iter>
<status status="PASS" starttime="20210730 14:40:25.928" endtime="20210730 14:40:25.932"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:25.933" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:25.933" endtime="20210730 14:40:25.933"/>
</kw>
<status status="PASS" starttime="20210730 14:40:25.926" endtime="20210730 14:40:25.933"/>
</kw>
<status status="PASS" starttime="20210730 14:40:24.365" endtime="20210730 14:40:25.933"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.Z</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:25.934" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:25.934" endtime="20210730 14:40:25.934"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:25.935" level="INFO">${payload} = {'password': 'abc!?.Z'}</msg>
<status status="PASS" starttime="20210730 14:40:25.934" endtime="20210730 14:40:25.935"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:25.945" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:25.946" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:25.935" endtime="20210730 14:40:25.946"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:25.946" endtime="20210730 14:40:25.946"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:25.946" endtime="20210730 14:40:25.946"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:25.935" endtime="20210730 14:40:25.946"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:25.935" endtime="20210730 14:40:25.946"/>
</for>
<status status="FAIL" starttime="20210730 14:40:25.933" endtime="20210730 14:40:25.946"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:25.933" endtime="20210730 14:40:25.946"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.Z</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:25.947" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:40:25.947" endtime="20210730 14:40:25.947"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:25.948" level="INFO">${payload} = {'password': 'abc!?.Z'}</msg>
<status status="PASS" starttime="20210730 14:40:25.948" endtime="20210730 14:40:25.948"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:25.952" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:25.953" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:25.948" endtime="20210730 14:40:25.953"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:25.953" endtime="20210730 14:40:25.953"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:25.953" endtime="20210730 14:40:25.953"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:25.948" endtime="20210730 14:40:25.953"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:25.948" endtime="20210730 14:40:25.953"/>
</for>
<status status="FAIL" starttime="20210730 14:40:25.947" endtime="20210730 14:40:25.953"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:25.947" endtime="20210730 14:40:25.953"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.Z</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:25.954" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:40:25.954" endtime="20210730 14:40:25.954"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:25.955" level="INFO">${payload} = {'password': 'abc!?.Z'}</msg>
<status status="PASS" starttime="20210730 14:40:25.954" endtime="20210730 14:40:25.955"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:25.959" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:25.959" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:25.955" endtime="20210730 14:40:25.959"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:25.960" endtime="20210730 14:40:25.960"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:25.960" endtime="20210730 14:40:25.960"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:25.955" endtime="20210730 14:40:25.960"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:25.955" endtime="20210730 14:40:25.960"/>
</for>
<status status="FAIL" starttime="20210730 14:40:25.953" endtime="20210730 14:40:25.960"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:25.953" endtime="20210730 14:40:25.960"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:25.933" endtime="20210730 14:40:25.960"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:25.965" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:25.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:25.975" level="INFO">${pids} = 28446
28453
28458</msg>
<status status="PASS" starttime="20210730 14:40:25.961" endtime="20210730 14:40:25.976"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:25.977" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:25.976" endtime="20210730 14:40:25.977"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:25.977" level="INFO">${pids} = ['28446', '28453', '28458']</msg>
<status status="PASS" starttime="20210730 14:40:25.977" endtime="20210730 14:40:25.978"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">28446</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:25.981" level="INFO">Running command 'kill 28446 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:25.978" endtime="20210730 14:40:25.981"/>
</kw>
<status status="PASS" starttime="20210730 14:40:25.978" endtime="20210730 14:40:25.981"/>
</iter>
<iter>
<var name="${pid}">28453</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:25.984" level="INFO">Running command 'kill 28453 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:25.982" endtime="20210730 14:40:25.985"/>
</kw>
<status status="PASS" starttime="20210730 14:40:25.981" endtime="20210730 14:40:25.985"/>
</iter>
<iter>
<var name="${pid}">28458</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:25.989" level="INFO">Running command 'kill 28458 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:25.985" endtime="20210730 14:40:25.990"/>
</kw>
<status status="PASS" starttime="20210730 14:40:25.985" endtime="20210730 14:40:25.990"/>
</iter>
<status status="PASS" starttime="20210730 14:40:25.978" endtime="20210730 14:40:25.990"/>
</for>
<status status="PASS" starttime="20210730 14:40:25.977" endtime="20210730 14:40:25.990"/>
</branch>
<status status="PASS" starttime="20210730 14:40:25.977" endtime="20210730 14:40:25.990"/>
</if>
<status status="PASS" starttime="20210730 14:40:25.960" endtime="20210730 14:40:25.991"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abc!?.Z'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:24.364" endtime="20210730 14:40:25.991">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t85" name="With Each Valid Token, Updating Password Of Each System User With abc!?.ZA Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:25.996" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:26.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:26.007" level="INFO">${pids} = 28487</msg>
<status status="PASS" starttime="20210730 14:40:25.993" endtime="20210730 14:40:26.007"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:26.008" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:26.007" endtime="20210730 14:40:26.008"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:26.009" level="INFO">${pids} = ['28487']</msg>
<status status="PASS" starttime="20210730 14:40:26.008" endtime="20210730 14:40:26.009"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">28487</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:26.014" level="INFO">Running command 'kill 28487 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:26.010" endtime="20210730 14:40:26.014"/>
</kw>
<status status="PASS" starttime="20210730 14:40:26.009" endtime="20210730 14:40:26.014"/>
</iter>
<status status="PASS" starttime="20210730 14:40:26.009" endtime="20210730 14:40:26.014"/>
</for>
<status status="PASS" starttime="20210730 14:40:26.008" endtime="20210730 14:40:26.014"/>
</branch>
<status status="PASS" starttime="20210730 14:40:26.008" endtime="20210730 14:40:26.014"/>
</if>
<status status="PASS" starttime="20210730 14:40:25.993" endtime="20210730 14:40:26.015"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:26.016" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:26.015" endtime="20210730 14:40:26.016"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:26.016" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:26.016" endtime="20210730 14:40:26.016"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:26.017" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:26.016" endtime="20210730 14:40:26.017"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:26.017" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:26.017" endtime="20210730 14:40:26.017"/>
</kw>
<msg timestamp="20210730 14:40:26.017" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:26.016" endtime="20210730 14:40:26.017"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:26.020" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:26.017" endtime="20210730 14:40:26.027"/>
</kw>
<status status="PASS" starttime="20210730 14:40:26.015" endtime="20210730 14:40:26.027"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:26.029" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:26.028" endtime="20210730 14:40:26.033"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:27.535" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:26.033" endtime="20210730 14:40:27.536"/>
</kw>
<status status="PASS" starttime="20210730 14:40:26.028" endtime="20210730 14:40:27.536"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:27.537" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:27.537" endtime="20210730 14:40:27.537"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:27.537" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:27.537" endtime="20210730 14:40:27.537"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:27.538" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:27.538" endtime="20210730 14:40:27.538"/>
</kw>
<msg timestamp="20210730 14:40:27.538" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:27.537" endtime="20210730 14:40:27.538"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:27.539" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:27.538" endtime="20210730 14:40:27.539"/>
</kw>
<status status="PASS" starttime="20210730 14:40:27.536" endtime="20210730 14:40:27.539"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:27.540" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:27.540" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:27.540" endtime="20210730 14:40:27.540"/>
</kw>
<status status="PASS" starttime="20210730 14:40:27.539" endtime="20210730 14:40:27.540"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:27.541" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:27.541" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:27.541" endtime="20210730 14:40:27.542"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:27.542" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:27.542" endtime="20210730 14:40:27.542"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:27.543" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:27.542" endtime="20210730 14:40:27.543"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:27.543" endtime="20210730 14:40:27.544"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:27.544" endtime="20210730 14:40:27.544"/>
</kw>
<status status="PASS" starttime="20210730 14:40:27.542" endtime="20210730 14:40:27.544"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:27.544" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:27.544" endtime="20210730 14:40:27.544"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:27.544" endtime="20210730 14:40:27.545"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:27.545" endtime="20210730 14:40:27.546"/>
</kw>
<status status="PASS" starttime="20210730 14:40:27.544" endtime="20210730 14:40:27.546"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:27.546" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:27.546" endtime="20210730 14:40:27.546"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:27.546" endtime="20210730 14:40:27.547"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:27.547" endtime="20210730 14:40:27.547"/>
</kw>
<status status="PASS" starttime="20210730 14:40:27.546" endtime="20210730 14:40:27.547"/>
</iter>
<status status="PASS" starttime="20210730 14:40:27.542" endtime="20210730 14:40:27.547"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:27.548" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:27.548" endtime="20210730 14:40:27.548"/>
</kw>
<status status="PASS" starttime="20210730 14:40:27.540" endtime="20210730 14:40:27.548"/>
</kw>
<status status="PASS" starttime="20210730 14:40:25.992" endtime="20210730 14:40:27.548"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.ZA</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:27.550" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:27.549" endtime="20210730 14:40:27.550"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:27.550" level="INFO">${payload} = {'password': 'abc!?.ZA'}</msg>
<status status="PASS" starttime="20210730 14:40:27.550" endtime="20210730 14:40:27.550"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:27.560" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:27.561" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:27.551" endtime="20210730 14:40:27.561"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:27.561" endtime="20210730 14:40:27.561"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:27.561" endtime="20210730 14:40:27.561"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:27.550" endtime="20210730 14:40:27.561"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:27.550" endtime="20210730 14:40:27.561"/>
</for>
<status status="FAIL" starttime="20210730 14:40:27.549" endtime="20210730 14:40:27.561"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:27.549" endtime="20210730 14:40:27.561"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.ZA</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:27.563" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:40:27.562" endtime="20210730 14:40:27.563"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:27.563" level="INFO">${payload} = {'password': 'abc!?.ZA'}</msg>
<status status="PASS" starttime="20210730 14:40:27.563" endtime="20210730 14:40:27.563"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:27.567" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:27.568" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:27.563" endtime="20210730 14:40:27.568"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:27.568" endtime="20210730 14:40:27.568"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:27.568" endtime="20210730 14:40:27.568"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:27.563" endtime="20210730 14:40:27.568"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:27.563" endtime="20210730 14:40:27.568"/>
</for>
<status status="FAIL" starttime="20210730 14:40:27.562" endtime="20210730 14:40:27.568"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:27.562" endtime="20210730 14:40:27.568"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.ZA</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:27.570" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:40:27.569" endtime="20210730 14:40:27.570"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:27.570" level="INFO">${payload} = {'password': 'abc!?.ZA'}</msg>
<status status="PASS" starttime="20210730 14:40:27.570" endtime="20210730 14:40:27.570"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:27.576" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:27.576" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:27.570" endtime="20210730 14:40:27.576"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:27.576" endtime="20210730 14:40:27.576"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:27.576" endtime="20210730 14:40:27.576"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:27.570" endtime="20210730 14:40:27.576"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:27.570" endtime="20210730 14:40:27.576"/>
</for>
<status status="FAIL" starttime="20210730 14:40:27.569" endtime="20210730 14:40:27.577"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:27.568" endtime="20210730 14:40:27.577"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:27.548" endtime="20210730 14:40:27.577"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:27.582" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:27.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:27.592" level="INFO">${pids} = 28510
28517
28521</msg>
<status status="PASS" starttime="20210730 14:40:27.578" endtime="20210730 14:40:27.592"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:27.593" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:27.593" endtime="20210730 14:40:27.593"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:27.594" level="INFO">${pids} = ['28510', '28517', '28521']</msg>
<status status="PASS" starttime="20210730 14:40:27.594" endtime="20210730 14:40:27.594"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">28510</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:27.597" level="INFO">Running command 'kill 28510 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:27.594" endtime="20210730 14:40:27.598"/>
</kw>
<status status="PASS" starttime="20210730 14:40:27.594" endtime="20210730 14:40:27.598"/>
</iter>
<iter>
<var name="${pid}">28517</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:27.601" level="INFO">Running command 'kill 28517 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:27.598" endtime="20210730 14:40:27.602"/>
</kw>
<status status="PASS" starttime="20210730 14:40:27.598" endtime="20210730 14:40:27.602"/>
</iter>
<iter>
<var name="${pid}">28521</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:27.605" level="INFO">Running command 'kill 28521 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:27.602" endtime="20210730 14:40:27.606"/>
</kw>
<status status="PASS" starttime="20210730 14:40:27.602" endtime="20210730 14:40:27.606"/>
</iter>
<status status="PASS" starttime="20210730 14:40:27.594" endtime="20210730 14:40:27.606"/>
</for>
<status status="PASS" starttime="20210730 14:40:27.593" endtime="20210730 14:40:27.606"/>
</branch>
<status status="PASS" starttime="20210730 14:40:27.593" endtime="20210730 14:40:27.606"/>
</if>
<status status="PASS" starttime="20210730 14:40:27.577" endtime="20210730 14:40:27.606"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abc!?.ZA'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:25.992" endtime="20210730 14:40:27.606">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t86" name="With Each Valid Token, Updating Password Of Each System User With abc!?.ZAabc!?.ZAabc!?. Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:27.613" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:27.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:27.625" level="INFO">${pids} = 28550</msg>
<status status="PASS" starttime="20210730 14:40:27.610" endtime="20210730 14:40:27.625"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:27.626" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:27.626" endtime="20210730 14:40:27.626"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:27.627" level="INFO">${pids} = ['28550']</msg>
<status status="PASS" starttime="20210730 14:40:27.627" endtime="20210730 14:40:27.627"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">28550</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:27.631" level="INFO">Running command 'kill 28550 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:27.627" endtime="20210730 14:40:27.631"/>
</kw>
<status status="PASS" starttime="20210730 14:40:27.627" endtime="20210730 14:40:27.631"/>
</iter>
<status status="PASS" starttime="20210730 14:40:27.627" endtime="20210730 14:40:27.631"/>
</for>
<status status="PASS" starttime="20210730 14:40:27.627" endtime="20210730 14:40:27.631"/>
</branch>
<status status="PASS" starttime="20210730 14:40:27.626" endtime="20210730 14:40:27.631"/>
</if>
<status status="PASS" starttime="20210730 14:40:27.609" endtime="20210730 14:40:27.631"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:27.632" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:27.632" endtime="20210730 14:40:27.633"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:27.633" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:27.633" endtime="20210730 14:40:27.633"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:27.634" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:27.633" endtime="20210730 14:40:27.634"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:27.634" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:27.634" endtime="20210730 14:40:27.634"/>
</kw>
<msg timestamp="20210730 14:40:27.634" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:27.633" endtime="20210730 14:40:27.634"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:27.642" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:27.634" endtime="20210730 14:40:27.644"/>
</kw>
<status status="PASS" starttime="20210730 14:40:27.632" endtime="20210730 14:40:27.645"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:27.646" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:27.645" endtime="20210730 14:40:27.652"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:29.155" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:27.652" endtime="20210730 14:40:29.155"/>
</kw>
<status status="PASS" starttime="20210730 14:40:27.645" endtime="20210730 14:40:29.156"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:29.159" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:29.158" endtime="20210730 14:40:29.159"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:29.159" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:29.159" endtime="20210730 14:40:29.159"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:29.159" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:29.159" endtime="20210730 14:40:29.159"/>
</kw>
<msg timestamp="20210730 14:40:29.159" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:29.158" endtime="20210730 14:40:29.159"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:29.160" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:29.160" endtime="20210730 14:40:29.160"/>
</kw>
<status status="PASS" starttime="20210730 14:40:29.157" endtime="20210730 14:40:29.160"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:29.161" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:29.161" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:29.161" endtime="20210730 14:40:29.161"/>
</kw>
<status status="PASS" starttime="20210730 14:40:29.160" endtime="20210730 14:40:29.161"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:29.162" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:29.162" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:29.161" endtime="20210730 14:40:29.162"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:29.162" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:29.162" endtime="20210730 14:40:29.162"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:29.163" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:29.163" endtime="20210730 14:40:29.163"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:29.163" endtime="20210730 14:40:29.164"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:29.164" endtime="20210730 14:40:29.164"/>
</kw>
<status status="PASS" starttime="20210730 14:40:29.162" endtime="20210730 14:40:29.164"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:29.164" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:29.164" endtime="20210730 14:40:29.164"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:29.165" endtime="20210730 14:40:29.165"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:29.165" endtime="20210730 14:40:29.166"/>
</kw>
<status status="PASS" starttime="20210730 14:40:29.164" endtime="20210730 14:40:29.166"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:29.166" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:29.166" endtime="20210730 14:40:29.166"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:29.166" endtime="20210730 14:40:29.167"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:29.167" endtime="20210730 14:40:29.167"/>
</kw>
<status status="PASS" starttime="20210730 14:40:29.166" endtime="20210730 14:40:29.167"/>
</iter>
<status status="PASS" starttime="20210730 14:40:29.162" endtime="20210730 14:40:29.167"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:29.168" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:29.167" endtime="20210730 14:40:29.168"/>
</kw>
<status status="PASS" starttime="20210730 14:40:29.161" endtime="20210730 14:40:29.168"/>
</kw>
<status status="PASS" starttime="20210730 14:40:27.608" endtime="20210730 14:40:29.168"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.ZAabc!?.ZAabc!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:29.169" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:29.169" endtime="20210730 14:40:29.169"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:29.169" level="INFO">${payload} = {'password': 'abc!?.ZAabc!?.ZAabc!?.'}</msg>
<status status="PASS" starttime="20210730 14:40:29.169" endtime="20210730 14:40:29.170"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:29.179" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:29.180" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:29.170" endtime="20210730 14:40:29.180"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:29.180" endtime="20210730 14:40:29.180"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:29.180" endtime="20210730 14:40:29.180"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:29.170" endtime="20210730 14:40:29.180"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:29.170" endtime="20210730 14:40:29.180"/>
</for>
<status status="FAIL" starttime="20210730 14:40:29.168" endtime="20210730 14:40:29.180"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:29.168" endtime="20210730 14:40:29.180"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.ZAabc!?.ZAabc!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:29.181" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:40:29.181" endtime="20210730 14:40:29.182"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:29.182" level="INFO">${payload} = {'password': 'abc!?.ZAabc!?.ZAabc!?.'}</msg>
<status status="PASS" starttime="20210730 14:40:29.182" endtime="20210730 14:40:29.182"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:29.186" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:29.187" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:29.182" endtime="20210730 14:40:29.187"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:29.187" endtime="20210730 14:40:29.187"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:29.187" endtime="20210730 14:40:29.187"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:29.182" endtime="20210730 14:40:29.187"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:29.182" endtime="20210730 14:40:29.187"/>
</for>
<status status="FAIL" starttime="20210730 14:40:29.181" endtime="20210730 14:40:29.187"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:29.181" endtime="20210730 14:40:29.187"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.ZAabc!?.ZAabc!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:29.188" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:40:29.188" endtime="20210730 14:40:29.188"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:29.189" level="INFO">${payload} = {'password': 'abc!?.ZAabc!?.ZAabc!?.'}</msg>
<status status="PASS" starttime="20210730 14:40:29.188" endtime="20210730 14:40:29.189"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:29.193" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:29.193" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:29.189" endtime="20210730 14:40:29.193"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:29.193" endtime="20210730 14:40:29.193"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:29.194" endtime="20210730 14:40:29.194"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:29.189" endtime="20210730 14:40:29.194"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:29.189" endtime="20210730 14:40:29.194"/>
</for>
<status status="FAIL" starttime="20210730 14:40:29.187" endtime="20210730 14:40:29.194"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:29.187" endtime="20210730 14:40:29.194"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:29.168" endtime="20210730 14:40:29.194"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:29.199" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:29.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:29.210" level="INFO">${pids} = 28573
28580
28584</msg>
<status status="PASS" starttime="20210730 14:40:29.195" endtime="20210730 14:40:29.210"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:29.211" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:29.210" endtime="20210730 14:40:29.211"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:29.211" level="INFO">${pids} = ['28573', '28580', '28584']</msg>
<status status="PASS" starttime="20210730 14:40:29.211" endtime="20210730 14:40:29.211"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">28573</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:29.215" level="INFO">Running command 'kill 28573 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:29.212" endtime="20210730 14:40:29.215"/>
</kw>
<status status="PASS" starttime="20210730 14:40:29.212" endtime="20210730 14:40:29.215"/>
</iter>
<iter>
<var name="${pid}">28580</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:29.218" level="INFO">Running command 'kill 28580 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:29.216" endtime="20210730 14:40:29.219"/>
</kw>
<status status="PASS" starttime="20210730 14:40:29.215" endtime="20210730 14:40:29.219"/>
</iter>
<iter>
<var name="${pid}">28584</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:29.223" level="INFO">Running command 'kill 28584 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:29.219" endtime="20210730 14:40:29.223"/>
</kw>
<status status="PASS" starttime="20210730 14:40:29.219" endtime="20210730 14:40:29.223"/>
</iter>
<status status="PASS" starttime="20210730 14:40:29.211" endtime="20210730 14:40:29.223"/>
</for>
<status status="PASS" starttime="20210730 14:40:29.211" endtime="20210730 14:40:29.223"/>
</branch>
<status status="PASS" starttime="20210730 14:40:29.211" endtime="20210730 14:40:29.223"/>
</if>
<status status="PASS" starttime="20210730 14:40:29.194" endtime="20210730 14:40:29.224"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abc!?.ZAabc!?.ZAabc!?.'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:27.607" endtime="20210730 14:40:29.224">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t87" name="With Each Valid Token, Updating Password Of Each System User With abc!?.6 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:29.231" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:29.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:29.241" level="INFO">${pids} = 28613</msg>
<status status="PASS" starttime="20210730 14:40:29.226" endtime="20210730 14:40:29.241"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:29.243" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:29.242" endtime="20210730 14:40:29.243"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:29.243" level="INFO">${pids} = ['28613']</msg>
<status status="PASS" starttime="20210730 14:40:29.243" endtime="20210730 14:40:29.244"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">28613</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:29.247" level="INFO">Running command 'kill 28613 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:29.244" endtime="20210730 14:40:29.248"/>
</kw>
<status status="PASS" starttime="20210730 14:40:29.244" endtime="20210730 14:40:29.248"/>
</iter>
<status status="PASS" starttime="20210730 14:40:29.244" endtime="20210730 14:40:29.248"/>
</for>
<status status="PASS" starttime="20210730 14:40:29.243" endtime="20210730 14:40:29.248"/>
</branch>
<status status="PASS" starttime="20210730 14:40:29.243" endtime="20210730 14:40:29.248"/>
</if>
<status status="PASS" starttime="20210730 14:40:29.226" endtime="20210730 14:40:29.248"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:29.249" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:29.249" endtime="20210730 14:40:29.249"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:29.250" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:29.250" endtime="20210730 14:40:29.250"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:29.250" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:29.250" endtime="20210730 14:40:29.250"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:29.251" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:29.251" endtime="20210730 14:40:29.251"/>
</kw>
<msg timestamp="20210730 14:40:29.251" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:29.250" endtime="20210730 14:40:29.251"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:29.255" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:29.251" endtime="20210730 14:40:29.258"/>
</kw>
<status status="PASS" starttime="20210730 14:40:29.248" endtime="20210730 14:40:29.259"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:29.260" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:29.260" endtime="20210730 14:40:29.265"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:30.766" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:29.265" endtime="20210730 14:40:30.766"/>
</kw>
<status status="PASS" starttime="20210730 14:40:29.259" endtime="20210730 14:40:30.766"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:30.770" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:30.769" endtime="20210730 14:40:30.771"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:30.771" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:30.771" endtime="20210730 14:40:30.771"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:30.771" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:30.771" endtime="20210730 14:40:30.771"/>
</kw>
<msg timestamp="20210730 14:40:30.779" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:30.769" endtime="20210730 14:40:30.779"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:30.779" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:30.779" endtime="20210730 14:40:30.780"/>
</kw>
<status status="PASS" starttime="20210730 14:40:30.767" endtime="20210730 14:40:30.780"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:30.780" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:30.780" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:30.780" endtime="20210730 14:40:30.781"/>
</kw>
<status status="PASS" starttime="20210730 14:40:30.780" endtime="20210730 14:40:30.781"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:30.782" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:30.782" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:30.781" endtime="20210730 14:40:30.782"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:30.782" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:30.782" endtime="20210730 14:40:30.782"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:30.783" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:30.783" endtime="20210730 14:40:30.783"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:30.783" endtime="20210730 14:40:30.784"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:30.784" endtime="20210730 14:40:30.784"/>
</kw>
<status status="PASS" starttime="20210730 14:40:30.782" endtime="20210730 14:40:30.784"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:30.785" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:30.784" endtime="20210730 14:40:30.785"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:30.785" endtime="20210730 14:40:30.786"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:30.786" endtime="20210730 14:40:30.786"/>
</kw>
<status status="PASS" starttime="20210730 14:40:30.784" endtime="20210730 14:40:30.786"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:30.786" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:30.786" endtime="20210730 14:40:30.786"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:30.787" endtime="20210730 14:40:30.787"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:30.787" endtime="20210730 14:40:30.788"/>
</kw>
<status status="PASS" starttime="20210730 14:40:30.786" endtime="20210730 14:40:30.788"/>
</iter>
<status status="PASS" starttime="20210730 14:40:30.782" endtime="20210730 14:40:30.788"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:30.788" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:30.788" endtime="20210730 14:40:30.788"/>
</kw>
<status status="PASS" starttime="20210730 14:40:30.781" endtime="20210730 14:40:30.788"/>
</kw>
<status status="PASS" starttime="20210730 14:40:29.226" endtime="20210730 14:40:30.788"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.6</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:30.790" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:30.789" endtime="20210730 14:40:30.790"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:30.790" level="INFO">${payload} = {'password': 'abc!?.6'}</msg>
<status status="PASS" starttime="20210730 14:40:30.790" endtime="20210730 14:40:30.790"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:30.800" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:30.801" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:30.791" endtime="20210730 14:40:30.801"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:30.801" endtime="20210730 14:40:30.801"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:30.801" endtime="20210730 14:40:30.801"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:30.790" endtime="20210730 14:40:30.801"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:30.790" endtime="20210730 14:40:30.801"/>
</for>
<status status="FAIL" starttime="20210730 14:40:30.789" endtime="20210730 14:40:30.801"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:30.789" endtime="20210730 14:40:30.801"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.6</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:30.802" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:40:30.802" endtime="20210730 14:40:30.802"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:30.803" level="INFO">${payload} = {'password': 'abc!?.6'}</msg>
<status status="PASS" starttime="20210730 14:40:30.803" endtime="20210730 14:40:30.803"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:30.807" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:30.808" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:30.803" endtime="20210730 14:40:30.808"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:30.808" endtime="20210730 14:40:30.808"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:30.808" endtime="20210730 14:40:30.808"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:30.803" endtime="20210730 14:40:30.808"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:30.803" endtime="20210730 14:40:30.808"/>
</for>
<status status="FAIL" starttime="20210730 14:40:30.802" endtime="20210730 14:40:30.808"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:30.801" endtime="20210730 14:40:30.808"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.6</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:30.810" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:40:30.809" endtime="20210730 14:40:30.810"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:30.810" level="INFO">${payload} = {'password': 'abc!?.6'}</msg>
<status status="PASS" starttime="20210730 14:40:30.810" endtime="20210730 14:40:30.810"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:30.815" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:30.815" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:30.811" endtime="20210730 14:40:30.815"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:30.815" endtime="20210730 14:40:30.815"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:30.815" endtime="20210730 14:40:30.815"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:30.810" endtime="20210730 14:40:30.815"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:30.810" endtime="20210730 14:40:30.816"/>
</for>
<status status="FAIL" starttime="20210730 14:40:30.808" endtime="20210730 14:40:30.816"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:30.808" endtime="20210730 14:40:30.816"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:30.789" endtime="20210730 14:40:30.816"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:30.822" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:30.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:30.833" level="INFO">${pids} = 28636
28643
28650</msg>
<status status="PASS" starttime="20210730 14:40:30.817" endtime="20210730 14:40:30.833"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:30.834" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:30.833" endtime="20210730 14:40:30.834"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:30.835" level="INFO">${pids} = ['28636', '28643', '28650']</msg>
<status status="PASS" starttime="20210730 14:40:30.834" endtime="20210730 14:40:30.835"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">28636</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:30.839" level="INFO">Running command 'kill 28636 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:30.835" endtime="20210730 14:40:30.839"/>
</kw>
<status status="PASS" starttime="20210730 14:40:30.835" endtime="20210730 14:40:30.839"/>
</iter>
<iter>
<var name="${pid}">28643</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:30.844" level="INFO">Running command 'kill 28643 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:30.840" endtime="20210730 14:40:30.849"/>
</kw>
<status status="PASS" starttime="20210730 14:40:30.839" endtime="20210730 14:40:30.849"/>
</iter>
<iter>
<var name="${pid}">28650</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:30.853" level="INFO">Running command 'kill 28650 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:30.849" endtime="20210730 14:40:30.853"/>
</kw>
<status status="PASS" starttime="20210730 14:40:30.849" endtime="20210730 14:40:30.853"/>
</iter>
<status status="PASS" starttime="20210730 14:40:30.835" endtime="20210730 14:40:30.853"/>
</for>
<status status="PASS" starttime="20210730 14:40:30.834" endtime="20210730 14:40:30.853"/>
</branch>
<status status="PASS" starttime="20210730 14:40:30.834" endtime="20210730 14:40:30.853"/>
</if>
<status status="PASS" starttime="20210730 14:40:30.816" endtime="20210730 14:40:30.854"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abc!?.6'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:29.224" endtime="20210730 14:40:30.854">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t88" name="With Each Valid Token, Updating Password Of Each System User With abc!?.67 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:30.859" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:30.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:30.870" level="INFO">${pids} = 28679</msg>
<status status="PASS" starttime="20210730 14:40:30.856" endtime="20210730 14:40:30.870"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:30.871" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:30.870" endtime="20210730 14:40:30.871"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:30.872" level="INFO">${pids} = ['28679']</msg>
<status status="PASS" starttime="20210730 14:40:30.871" endtime="20210730 14:40:30.872"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">28679</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:30.876" level="INFO">Running command 'kill 28679 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:30.872" endtime="20210730 14:40:30.876"/>
</kw>
<status status="PASS" starttime="20210730 14:40:30.872" endtime="20210730 14:40:30.876"/>
</iter>
<status status="PASS" starttime="20210730 14:40:30.872" endtime="20210730 14:40:30.876"/>
</for>
<status status="PASS" starttime="20210730 14:40:30.871" endtime="20210730 14:40:30.876"/>
</branch>
<status status="PASS" starttime="20210730 14:40:30.871" endtime="20210730 14:40:30.876"/>
</if>
<status status="PASS" starttime="20210730 14:40:30.855" endtime="20210730 14:40:30.877"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:30.878" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:30.878" endtime="20210730 14:40:30.878"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:30.879" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:30.878" endtime="20210730 14:40:30.879"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:30.879" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:30.879" endtime="20210730 14:40:30.879"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:30.880" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:30.879" endtime="20210730 14:40:30.880"/>
</kw>
<msg timestamp="20210730 14:40:30.880" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:30.878" endtime="20210730 14:40:30.880"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:30.886" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:30.880" endtime="20210730 14:40:30.888"/>
</kw>
<status status="PASS" starttime="20210730 14:40:30.877" endtime="20210730 14:40:30.888"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:30.890" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:30.889" endtime="20210730 14:40:30.894"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:32.396" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:30.894" endtime="20210730 14:40:32.396"/>
</kw>
<status status="PASS" starttime="20210730 14:40:30.889" endtime="20210730 14:40:32.396"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:32.397" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:32.397" endtime="20210730 14:40:32.397"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:32.398" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:32.398" endtime="20210730 14:40:32.398"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:32.398" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:32.398" endtime="20210730 14:40:32.398"/>
</kw>
<msg timestamp="20210730 14:40:32.398" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:32.397" endtime="20210730 14:40:32.398"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:32.399" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:32.399" endtime="20210730 14:40:32.399"/>
</kw>
<status status="PASS" starttime="20210730 14:40:32.396" endtime="20210730 14:40:32.399"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:32.400" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:32.400" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:32.400" endtime="20210730 14:40:32.400"/>
</kw>
<status status="PASS" starttime="20210730 14:40:32.399" endtime="20210730 14:40:32.400"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:32.401" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:32.401" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:32.400" endtime="20210730 14:40:32.401"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:32.401" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:32.401" endtime="20210730 14:40:32.401"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:32.402" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:32.402" endtime="20210730 14:40:32.402"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:32.402" endtime="20210730 14:40:32.403"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:32.403" endtime="20210730 14:40:32.403"/>
</kw>
<status status="PASS" starttime="20210730 14:40:32.402" endtime="20210730 14:40:32.403"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:32.404" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:32.403" endtime="20210730 14:40:32.404"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:32.404" endtime="20210730 14:40:32.404"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:32.405" endtime="20210730 14:40:32.405"/>
</kw>
<status status="PASS" starttime="20210730 14:40:32.403" endtime="20210730 14:40:32.405"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:32.405" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:32.405" endtime="20210730 14:40:32.406"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:32.406" endtime="20210730 14:40:32.406"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:32.407" endtime="20210730 14:40:32.407"/>
</kw>
<status status="PASS" starttime="20210730 14:40:32.405" endtime="20210730 14:40:32.407"/>
</iter>
<status status="PASS" starttime="20210730 14:40:32.401" endtime="20210730 14:40:32.407"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:32.407" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:32.407" endtime="20210730 14:40:32.408"/>
</kw>
<status status="PASS" starttime="20210730 14:40:32.400" endtime="20210730 14:40:32.408"/>
</kw>
<status status="PASS" starttime="20210730 14:40:30.855" endtime="20210730 14:40:32.408"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.67</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:32.409" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:32.409" endtime="20210730 14:40:32.409"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:32.410" level="INFO">${payload} = {'password': 'abc!?.67'}</msg>
<status status="PASS" starttime="20210730 14:40:32.410" endtime="20210730 14:40:32.410"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:32.420" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:32.421" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:32.410" endtime="20210730 14:40:32.421"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:32.421" endtime="20210730 14:40:32.421"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:32.421" endtime="20210730 14:40:32.421"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:32.410" endtime="20210730 14:40:32.422"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:32.410" endtime="20210730 14:40:32.422"/>
</for>
<status status="FAIL" starttime="20210730 14:40:32.408" endtime="20210730 14:40:32.422"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:32.408" endtime="20210730 14:40:32.422"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.67</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:32.423" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:40:32.423" endtime="20210730 14:40:32.423"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:32.423" level="INFO">${payload} = {'password': 'abc!?.67'}</msg>
<status status="PASS" starttime="20210730 14:40:32.423" endtime="20210730 14:40:32.423"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:32.427" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:32.428" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:32.424" endtime="20210730 14:40:32.428"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:32.428" endtime="20210730 14:40:32.428"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:32.428" endtime="20210730 14:40:32.428"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:32.423" endtime="20210730 14:40:32.428"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:32.423" endtime="20210730 14:40:32.428"/>
</for>
<status status="FAIL" starttime="20210730 14:40:32.422" endtime="20210730 14:40:32.428"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:32.422" endtime="20210730 14:40:32.428"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.67</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:32.429" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:40:32.429" endtime="20210730 14:40:32.429"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:32.430" level="INFO">${payload} = {'password': 'abc!?.67'}</msg>
<status status="PASS" starttime="20210730 14:40:32.430" endtime="20210730 14:40:32.430"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:32.434" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:32.434" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:32.430" endtime="20210730 14:40:32.434"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:32.434" endtime="20210730 14:40:32.434"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:32.434" endtime="20210730 14:40:32.434"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:32.430" endtime="20210730 14:40:32.434"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:32.430" endtime="20210730 14:40:32.434"/>
</for>
<status status="FAIL" starttime="20210730 14:40:32.428" endtime="20210730 14:40:32.435"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:32.428" endtime="20210730 14:40:32.435"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:32.408" endtime="20210730 14:40:32.435"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:32.440" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:32.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:32.451" level="INFO">${pids} = 28702
28709
28714</msg>
<status status="PASS" starttime="20210730 14:40:32.436" endtime="20210730 14:40:32.451"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:32.452" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:32.452" endtime="20210730 14:40:32.452"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:32.453" level="INFO">${pids} = ['28702', '28709', '28714']</msg>
<status status="PASS" starttime="20210730 14:40:32.453" endtime="20210730 14:40:32.453"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">28702</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:32.457" level="INFO">Running command 'kill 28702 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:32.453" endtime="20210730 14:40:32.458"/>
</kw>
<status status="PASS" starttime="20210730 14:40:32.453" endtime="20210730 14:40:32.458"/>
</iter>
<iter>
<var name="${pid}">28709</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:32.462" level="INFO">Running command 'kill 28709 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:32.458" endtime="20210730 14:40:32.464"/>
</kw>
<status status="PASS" starttime="20210730 14:40:32.458" endtime="20210730 14:40:32.464"/>
</iter>
<iter>
<var name="${pid}">28714</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:32.469" level="INFO">Running command 'kill 28714 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:32.464" endtime="20210730 14:40:32.470"/>
</kw>
<status status="PASS" starttime="20210730 14:40:32.464" endtime="20210730 14:40:32.470"/>
</iter>
<status status="PASS" starttime="20210730 14:40:32.453" endtime="20210730 14:40:32.470"/>
</for>
<status status="PASS" starttime="20210730 14:40:32.452" endtime="20210730 14:40:32.470"/>
</branch>
<status status="PASS" starttime="20210730 14:40:32.452" endtime="20210730 14:40:32.470"/>
</if>
<status status="PASS" starttime="20210730 14:40:32.435" endtime="20210730 14:40:32.470"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abc!?.67'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:30.854" endtime="20210730 14:40:32.470">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t89" name="With Each Valid Token, Updating Password Of Each System User With abc!?.67abc!?.67abc!?. Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:32.478" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:32.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:32.490" level="INFO">${pids} = 28743</msg>
<status status="PASS" starttime="20210730 14:40:32.473" endtime="20210730 14:40:32.490"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:32.491" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:32.490" endtime="20210730 14:40:32.491"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:32.491" level="INFO">${pids} = ['28743']</msg>
<status status="PASS" starttime="20210730 14:40:32.491" endtime="20210730 14:40:32.491"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">28743</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:32.495" level="INFO">Running command 'kill 28743 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:32.492" endtime="20210730 14:40:32.496"/>
</kw>
<status status="PASS" starttime="20210730 14:40:32.492" endtime="20210730 14:40:32.496"/>
</iter>
<status status="PASS" starttime="20210730 14:40:32.491" endtime="20210730 14:40:32.496"/>
</for>
<status status="PASS" starttime="20210730 14:40:32.491" endtime="20210730 14:40:32.496"/>
</branch>
<status status="PASS" starttime="20210730 14:40:32.491" endtime="20210730 14:40:32.496"/>
</if>
<status status="PASS" starttime="20210730 14:40:32.472" endtime="20210730 14:40:32.496"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:32.499" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:32.499" endtime="20210730 14:40:32.499"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:32.500" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:32.500" endtime="20210730 14:40:32.500"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:32.500" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:32.500" endtime="20210730 14:40:32.500"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:32.501" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:32.500" endtime="20210730 14:40:32.501"/>
</kw>
<msg timestamp="20210730 14:40:32.501" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:32.499" endtime="20210730 14:40:32.501"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:32.505" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:32.501" endtime="20210730 14:40:32.507"/>
</kw>
<status status="PASS" starttime="20210730 14:40:32.498" endtime="20210730 14:40:32.507"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:32.509" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:32.508" endtime="20210730 14:40:32.524"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:34.030" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:32.525" endtime="20210730 14:40:34.030"/>
</kw>
<status status="PASS" starttime="20210730 14:40:32.507" endtime="20210730 14:40:34.030"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:34.031" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:34.031" endtime="20210730 14:40:34.031"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:34.032" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:34.031" endtime="20210730 14:40:34.032"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:34.032" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:34.032" endtime="20210730 14:40:34.032"/>
</kw>
<msg timestamp="20210730 14:40:34.032" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:34.031" endtime="20210730 14:40:34.032"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:34.033" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:34.033" endtime="20210730 14:40:34.033"/>
</kw>
<status status="PASS" starttime="20210730 14:40:34.031" endtime="20210730 14:40:34.033"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:34.034" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:34.034" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:34.034" endtime="20210730 14:40:34.034"/>
</kw>
<status status="PASS" starttime="20210730 14:40:34.033" endtime="20210730 14:40:34.034"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:34.035" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:34.035" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:34.034" endtime="20210730 14:40:34.035"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:34.035" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:34.035" endtime="20210730 14:40:34.035"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:34.036" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:34.036" endtime="20210730 14:40:34.036"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:34.036" endtime="20210730 14:40:34.037"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:34.037" endtime="20210730 14:40:34.037"/>
</kw>
<status status="PASS" starttime="20210730 14:40:34.036" endtime="20210730 14:40:34.037"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:34.037" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:34.037" endtime="20210730 14:40:34.037"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:34.038" endtime="20210730 14:40:34.038"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:34.038" endtime="20210730 14:40:34.039"/>
</kw>
<status status="PASS" starttime="20210730 14:40:34.037" endtime="20210730 14:40:34.039"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:34.039" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:34.039" endtime="20210730 14:40:34.039"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:34.039" endtime="20210730 14:40:34.040"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:34.040" endtime="20210730 14:40:34.040"/>
</kw>
<status status="PASS" starttime="20210730 14:40:34.039" endtime="20210730 14:40:34.040"/>
</iter>
<status status="PASS" starttime="20210730 14:40:34.035" endtime="20210730 14:40:34.040"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:34.041" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:34.040" endtime="20210730 14:40:34.041"/>
</kw>
<status status="PASS" starttime="20210730 14:40:34.034" endtime="20210730 14:40:34.041"/>
</kw>
<status status="PASS" starttime="20210730 14:40:32.472" endtime="20210730 14:40:34.041"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.67abc!?.67abc!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:34.043" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:34.042" endtime="20210730 14:40:34.043"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:34.043" level="INFO">${payload} = {'password': 'abc!?.67abc!?.67abc!?.'}</msg>
<status status="PASS" starttime="20210730 14:40:34.043" endtime="20210730 14:40:34.043"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:34.052" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:34.053" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:34.044" endtime="20210730 14:40:34.053"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:34.053" endtime="20210730 14:40:34.053"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:34.053" endtime="20210730 14:40:34.053"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:34.043" endtime="20210730 14:40:34.053"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:34.043" endtime="20210730 14:40:34.053"/>
</for>
<status status="FAIL" starttime="20210730 14:40:34.042" endtime="20210730 14:40:34.053"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:34.041" endtime="20210730 14:40:34.053"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.67abc!?.67abc!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:34.055" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:40:34.054" endtime="20210730 14:40:34.055"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:34.055" level="INFO">${payload} = {'password': 'abc!?.67abc!?.67abc!?.'}</msg>
<status status="PASS" starttime="20210730 14:40:34.055" endtime="20210730 14:40:34.055"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:34.059" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:34.060" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:34.055" endtime="20210730 14:40:34.060"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:34.060" endtime="20210730 14:40:34.060"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:34.060" endtime="20210730 14:40:34.060"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:34.055" endtime="20210730 14:40:34.060"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:34.055" endtime="20210730 14:40:34.060"/>
</for>
<status status="FAIL" starttime="20210730 14:40:34.054" endtime="20210730 14:40:34.060"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:34.054" endtime="20210730 14:40:34.060"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=abc!?.67abc!?.67abc!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:34.062" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:40:34.061" endtime="20210730 14:40:34.062"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:34.062" level="INFO">${payload} = {'password': 'abc!?.67abc!?.67abc!?.'}</msg>
<status status="PASS" starttime="20210730 14:40:34.062" endtime="20210730 14:40:34.062"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:34.067" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:34.067" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:34.062" endtime="20210730 14:40:34.067"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:34.067" endtime="20210730 14:40:34.067"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:34.068" endtime="20210730 14:40:34.068"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:34.062" endtime="20210730 14:40:34.068"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:34.062" endtime="20210730 14:40:34.068"/>
</for>
<status status="FAIL" starttime="20210730 14:40:34.061" endtime="20210730 14:40:34.068"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:34.060" endtime="20210730 14:40:34.068"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:34.041" endtime="20210730 14:40:34.068"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:34.074" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:34.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:34.086" level="INFO">${pids} = 28766
28773
28778</msg>
<status status="PASS" starttime="20210730 14:40:34.070" endtime="20210730 14:40:34.086"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:34.087" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:34.086" endtime="20210730 14:40:34.087"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:34.088" level="INFO">${pids} = ['28766', '28773', '28778']</msg>
<status status="PASS" starttime="20210730 14:40:34.087" endtime="20210730 14:40:34.088"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">28766</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:34.092" level="INFO">Running command 'kill 28766 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:34.088" endtime="20210730 14:40:34.092"/>
</kw>
<status status="PASS" starttime="20210730 14:40:34.088" endtime="20210730 14:40:34.092"/>
</iter>
<iter>
<var name="${pid}">28773</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:34.096" level="INFO">Running command 'kill 28773 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:34.093" endtime="20210730 14:40:34.097"/>
</kw>
<status status="PASS" starttime="20210730 14:40:34.093" endtime="20210730 14:40:34.097"/>
</iter>
<iter>
<var name="${pid}">28778</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:34.102" level="INFO">Running command 'kill 28778 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:34.097" endtime="20210730 14:40:34.102"/>
</kw>
<status status="PASS" starttime="20210730 14:40:34.097" endtime="20210730 14:40:34.102"/>
</iter>
<status status="PASS" starttime="20210730 14:40:34.088" endtime="20210730 14:40:34.103"/>
</for>
<status status="PASS" starttime="20210730 14:40:34.087" endtime="20210730 14:40:34.103"/>
</branch>
<status status="PASS" starttime="20210730 14:40:34.087" endtime="20210730 14:40:34.103"/>
</if>
<status status="PASS" starttime="20210730 14:40:34.069" endtime="20210730 14:40:34.103"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abc!?.67abc!?.67abc!?.'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:32.471" endtime="20210730 14:40:34.103">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t90" name="With Each Valid Token, Updating Password Of Each System User With ABC456. Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:34.109" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:34.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:34.121" level="INFO">${pids} = 28807</msg>
<status status="PASS" starttime="20210730 14:40:34.105" endtime="20210730 14:40:34.121"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:34.122" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:34.122" endtime="20210730 14:40:34.122"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:34.123" level="INFO">${pids} = ['28807']</msg>
<status status="PASS" starttime="20210730 14:40:34.123" endtime="20210730 14:40:34.123"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">28807</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:34.128" level="INFO">Running command 'kill 28807 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:34.124" endtime="20210730 14:40:34.128"/>
</kw>
<status status="PASS" starttime="20210730 14:40:34.124" endtime="20210730 14:40:34.128"/>
</iter>
<status status="PASS" starttime="20210730 14:40:34.123" endtime="20210730 14:40:34.128"/>
</for>
<status status="PASS" starttime="20210730 14:40:34.123" endtime="20210730 14:40:34.128"/>
</branch>
<status status="PASS" starttime="20210730 14:40:34.123" endtime="20210730 14:40:34.128"/>
</if>
<status status="PASS" starttime="20210730 14:40:34.105" endtime="20210730 14:40:34.129"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:34.130" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:34.130" endtime="20210730 14:40:34.130"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:34.131" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:34.131" endtime="20210730 14:40:34.131"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:34.131" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:34.131" endtime="20210730 14:40:34.131"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:34.132" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:34.132" endtime="20210730 14:40:34.132"/>
</kw>
<msg timestamp="20210730 14:40:34.132" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:34.130" endtime="20210730 14:40:34.132"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:34.137" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:34.132" endtime="20210730 14:40:34.139"/>
</kw>
<status status="PASS" starttime="20210730 14:40:34.129" endtime="20210730 14:40:34.139"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:34.141" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:34.140" endtime="20210730 14:40:34.146"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:35.648" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:34.146" endtime="20210730 14:40:35.648"/>
</kw>
<status status="PASS" starttime="20210730 14:40:34.139" endtime="20210730 14:40:35.648"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:35.649" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:35.649" endtime="20210730 14:40:35.649"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:35.650" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:35.649" endtime="20210730 14:40:35.650"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:35.650" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:35.650" endtime="20210730 14:40:35.650"/>
</kw>
<msg timestamp="20210730 14:40:35.650" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:35.649" endtime="20210730 14:40:35.650"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:35.651" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:35.650" endtime="20210730 14:40:35.651"/>
</kw>
<status status="PASS" starttime="20210730 14:40:35.648" endtime="20210730 14:40:35.651"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:35.652" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:35.652" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:35.652" endtime="20210730 14:40:35.652"/>
</kw>
<status status="PASS" starttime="20210730 14:40:35.651" endtime="20210730 14:40:35.652"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:35.654" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:35.654" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:35.652" endtime="20210730 14:40:35.654"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:35.654" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:35.654" endtime="20210730 14:40:35.654"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:35.655" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:35.655" endtime="20210730 14:40:35.655"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:35.656" endtime="20210730 14:40:35.657"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:35.657" endtime="20210730 14:40:35.657"/>
</kw>
<status status="PASS" starttime="20210730 14:40:35.655" endtime="20210730 14:40:35.657"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:35.658" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:35.658" endtime="20210730 14:40:35.658"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:35.658" endtime="20210730 14:40:35.659"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:35.659" endtime="20210730 14:40:35.660"/>
</kw>
<status status="PASS" starttime="20210730 14:40:35.657" endtime="20210730 14:40:35.660"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:35.660" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:35.660" endtime="20210730 14:40:35.660"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:35.660" endtime="20210730 14:40:35.661"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:35.661" endtime="20210730 14:40:35.662"/>
</kw>
<status status="PASS" starttime="20210730 14:40:35.660" endtime="20210730 14:40:35.662"/>
</iter>
<status status="PASS" starttime="20210730 14:40:35.654" endtime="20210730 14:40:35.662"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:35.663" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:35.662" endtime="20210730 14:40:35.663"/>
</kw>
<status status="PASS" starttime="20210730 14:40:35.652" endtime="20210730 14:40:35.663"/>
</kw>
<status status="PASS" starttime="20210730 14:40:34.104" endtime="20210730 14:40:35.663"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC456.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:35.666" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:35.665" endtime="20210730 14:40:35.666"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:35.667" level="INFO">${payload} = {'password': 'ABC456.'}</msg>
<status status="PASS" starttime="20210730 14:40:35.666" endtime="20210730 14:40:35.667"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:35.683" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:35.684" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:35.667" endtime="20210730 14:40:35.684"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:35.684" endtime="20210730 14:40:35.684"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:35.684" endtime="20210730 14:40:35.684"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:35.667" endtime="20210730 14:40:35.684"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:35.667" endtime="20210730 14:40:35.684"/>
</for>
<status status="FAIL" starttime="20210730 14:40:35.664" endtime="20210730 14:40:35.684"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:35.664" endtime="20210730 14:40:35.684"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC456.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:35.686" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:40:35.685" endtime="20210730 14:40:35.686"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:35.686" level="INFO">${payload} = {'password': 'ABC456.'}</msg>
<status status="PASS" starttime="20210730 14:40:35.686" endtime="20210730 14:40:35.686"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:35.695" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:35.695" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:35.687" endtime="20210730 14:40:35.695"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:35.695" endtime="20210730 14:40:35.695"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:35.695" endtime="20210730 14:40:35.695"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:35.686" endtime="20210730 14:40:35.696"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:35.686" endtime="20210730 14:40:35.696"/>
</for>
<status status="FAIL" starttime="20210730 14:40:35.685" endtime="20210730 14:40:35.696"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:35.684" endtime="20210730 14:40:35.696"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC456.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:35.698" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:40:35.697" endtime="20210730 14:40:35.698"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:35.698" level="INFO">${payload} = {'password': 'ABC456.'}</msg>
<status status="PASS" starttime="20210730 14:40:35.698" endtime="20210730 14:40:35.698"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:35.709" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:35.709" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:35.699" endtime="20210730 14:40:35.710"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:35.710" endtime="20210730 14:40:35.710"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:35.710" endtime="20210730 14:40:35.710"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:35.699" endtime="20210730 14:40:35.710"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:35.698" endtime="20210730 14:40:35.710"/>
</for>
<status status="FAIL" starttime="20210730 14:40:35.696" endtime="20210730 14:40:35.711"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:35.696" endtime="20210730 14:40:35.711"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:35.663" endtime="20210730 14:40:35.711"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:35.724" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:35.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:35.739" level="INFO">${pids} = 28830
28837
28850</msg>
<status status="PASS" starttime="20210730 14:40:35.713" endtime="20210730 14:40:35.739"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:35.740" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:35.739" endtime="20210730 14:40:35.740"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:35.741" level="INFO">${pids} = ['28830', '28837', '28850']</msg>
<status status="PASS" starttime="20210730 14:40:35.741" endtime="20210730 14:40:35.741"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">28830</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:35.746" level="INFO">Running command 'kill 28830 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:35.742" endtime="20210730 14:40:35.746"/>
</kw>
<status status="PASS" starttime="20210730 14:40:35.742" endtime="20210730 14:40:35.746"/>
</iter>
<iter>
<var name="${pid}">28837</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:35.750" level="INFO">Running command 'kill 28837 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:35.747" endtime="20210730 14:40:35.751"/>
</kw>
<status status="PASS" starttime="20210730 14:40:35.747" endtime="20210730 14:40:35.751"/>
</iter>
<iter>
<var name="${pid}">28850</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:35.755" level="INFO">Running command 'kill 28850 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:35.751" endtime="20210730 14:40:35.755"/>
</kw>
<status status="PASS" starttime="20210730 14:40:35.751" endtime="20210730 14:40:35.756"/>
</iter>
<status status="PASS" starttime="20210730 14:40:35.741" endtime="20210730 14:40:35.756"/>
</for>
<status status="PASS" starttime="20210730 14:40:35.740" endtime="20210730 14:40:35.756"/>
</branch>
<status status="PASS" starttime="20210730 14:40:35.740" endtime="20210730 14:40:35.756"/>
</if>
<status status="PASS" starttime="20210730 14:40:35.712" endtime="20210730 14:40:35.756"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABC456.'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:34.104" endtime="20210730 14:40:35.756">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t91" name="With Each Valid Token, Updating Password Of Each System User With ABC456.? Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:35.762" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:35.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:35.784" level="INFO">${pids} = 28879</msg>
<status status="PASS" starttime="20210730 14:40:35.758" endtime="20210730 14:40:35.784"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:35.785" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:35.785" endtime="20210730 14:40:35.785"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:35.786" level="INFO">${pids} = ['28879']</msg>
<status status="PASS" starttime="20210730 14:40:35.786" endtime="20210730 14:40:35.786"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">28879</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:35.793" level="INFO">Running command 'kill 28879 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:35.787" endtime="20210730 14:40:35.793"/>
</kw>
<status status="PASS" starttime="20210730 14:40:35.786" endtime="20210730 14:40:35.793"/>
</iter>
<status status="PASS" starttime="20210730 14:40:35.786" endtime="20210730 14:40:35.793"/>
</for>
<status status="PASS" starttime="20210730 14:40:35.786" endtime="20210730 14:40:35.793"/>
</branch>
<status status="PASS" starttime="20210730 14:40:35.786" endtime="20210730 14:40:35.793"/>
</if>
<status status="PASS" starttime="20210730 14:40:35.758" endtime="20210730 14:40:35.794"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:35.795" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:35.795" endtime="20210730 14:40:35.795"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:35.796" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:35.796" endtime="20210730 14:40:35.796"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:35.796" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:35.796" endtime="20210730 14:40:35.796"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:35.797" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:35.797" endtime="20210730 14:40:35.797"/>
</kw>
<msg timestamp="20210730 14:40:35.797" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:35.795" endtime="20210730 14:40:35.797"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:35.812" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:35.797" endtime="20210730 14:40:35.815"/>
</kw>
<status status="PASS" starttime="20210730 14:40:35.794" endtime="20210730 14:40:35.816"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:35.817" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:35.817" endtime="20210730 14:40:35.829"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:37.331" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:35.830" endtime="20210730 14:40:37.331"/>
</kw>
<status status="PASS" starttime="20210730 14:40:35.816" endtime="20210730 14:40:37.331"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:37.332" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:37.332" endtime="20210730 14:40:37.332"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:37.333" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:37.332" endtime="20210730 14:40:37.333"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:37.333" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:37.333" endtime="20210730 14:40:37.333"/>
</kw>
<msg timestamp="20210730 14:40:37.333" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:37.332" endtime="20210730 14:40:37.333"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:37.334" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:37.333" endtime="20210730 14:40:37.334"/>
</kw>
<status status="PASS" starttime="20210730 14:40:37.331" endtime="20210730 14:40:37.334"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:37.335" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:37.335" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:37.335" endtime="20210730 14:40:37.335"/>
</kw>
<status status="PASS" starttime="20210730 14:40:37.334" endtime="20210730 14:40:37.335"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:37.336" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:37.336" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:37.336" endtime="20210730 14:40:37.336"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:37.336" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:37.336" endtime="20210730 14:40:37.336"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:37.337" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:37.337" endtime="20210730 14:40:37.337"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:37.337" endtime="20210730 14:40:37.338"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:37.338" endtime="20210730 14:40:37.338"/>
</kw>
<status status="PASS" starttime="20210730 14:40:37.337" endtime="20210730 14:40:37.338"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:37.338" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:37.338" endtime="20210730 14:40:37.338"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:37.339" endtime="20210730 14:40:37.340"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:37.340" endtime="20210730 14:40:37.340"/>
</kw>
<status status="PASS" starttime="20210730 14:40:37.338" endtime="20210730 14:40:37.340"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:37.341" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:37.341" endtime="20210730 14:40:37.341"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:37.341" endtime="20210730 14:40:37.342"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:37.342" endtime="20210730 14:40:37.342"/>
</kw>
<status status="PASS" starttime="20210730 14:40:37.341" endtime="20210730 14:40:37.342"/>
</iter>
<status status="PASS" starttime="20210730 14:40:37.336" endtime="20210730 14:40:37.342"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:37.343" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:37.343" endtime="20210730 14:40:37.343"/>
</kw>
<status status="PASS" starttime="20210730 14:40:37.335" endtime="20210730 14:40:37.343"/>
</kw>
<status status="PASS" starttime="20210730 14:40:35.758" endtime="20210730 14:40:37.343"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC456.?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:37.345" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:37.344" endtime="20210730 14:40:37.345"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:37.345" level="INFO">${payload} = {'password': 'ABC456.?'}</msg>
<status status="PASS" starttime="20210730 14:40:37.345" endtime="20210730 14:40:37.345"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:37.355" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:37.355" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:37.346" endtime="20210730 14:40:37.355"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:37.355" endtime="20210730 14:40:37.355"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:37.355" endtime="20210730 14:40:37.355"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:37.345" endtime="20210730 14:40:37.355"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:37.345" endtime="20210730 14:40:37.356"/>
</for>
<status status="FAIL" starttime="20210730 14:40:37.344" endtime="20210730 14:40:37.356"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:37.344" endtime="20210730 14:40:37.356"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC456.?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:37.357" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:40:37.356" endtime="20210730 14:40:37.357"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:37.357" level="INFO">${payload} = {'password': 'ABC456.?'}</msg>
<status status="PASS" starttime="20210730 14:40:37.357" endtime="20210730 14:40:37.357"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:37.361" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:37.362" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:37.357" endtime="20210730 14:40:37.362"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:37.362" endtime="20210730 14:40:37.362"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:37.362" endtime="20210730 14:40:37.362"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:37.357" endtime="20210730 14:40:37.362"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:37.357" endtime="20210730 14:40:37.362"/>
</for>
<status status="FAIL" starttime="20210730 14:40:37.356" endtime="20210730 14:40:37.362"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:37.356" endtime="20210730 14:40:37.362"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC456.?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:37.363" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:40:37.363" endtime="20210730 14:40:37.363"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:37.364" level="INFO">${payload} = {'password': 'ABC456.?'}</msg>
<status status="PASS" starttime="20210730 14:40:37.363" endtime="20210730 14:40:37.364"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:37.368" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:37.368" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:37.364" endtime="20210730 14:40:37.368"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:37.368" endtime="20210730 14:40:37.368"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:37.368" endtime="20210730 14:40:37.369"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:37.364" endtime="20210730 14:40:37.369"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:37.364" endtime="20210730 14:40:37.369"/>
</for>
<status status="FAIL" starttime="20210730 14:40:37.362" endtime="20210730 14:40:37.369"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:37.362" endtime="20210730 14:40:37.369"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:37.343" endtime="20210730 14:40:37.369"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:37.378" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:37.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:37.388" level="INFO">${pids} = 28902
28909
28913</msg>
<status status="PASS" starttime="20210730 14:40:37.371" endtime="20210730 14:40:37.388"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:37.389" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:37.388" endtime="20210730 14:40:37.389"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:37.390" level="INFO">${pids} = ['28902', '28909', '28913']</msg>
<status status="PASS" starttime="20210730 14:40:37.389" endtime="20210730 14:40:37.390"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">28902</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:37.393" level="INFO">Running command 'kill 28902 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:37.390" endtime="20210730 14:40:37.394"/>
</kw>
<status status="PASS" starttime="20210730 14:40:37.390" endtime="20210730 14:40:37.394"/>
</iter>
<iter>
<var name="${pid}">28909</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:37.398" level="INFO">Running command 'kill 28909 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:37.394" endtime="20210730 14:40:37.398"/>
</kw>
<status status="PASS" starttime="20210730 14:40:37.394" endtime="20210730 14:40:37.398"/>
</iter>
<iter>
<var name="${pid}">28913</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:37.406" level="INFO">Running command 'kill 28913 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:37.399" endtime="20210730 14:40:37.407"/>
</kw>
<status status="PASS" starttime="20210730 14:40:37.399" endtime="20210730 14:40:37.407"/>
</iter>
<status status="PASS" starttime="20210730 14:40:37.390" endtime="20210730 14:40:37.407"/>
</for>
<status status="PASS" starttime="20210730 14:40:37.389" endtime="20210730 14:40:37.407"/>
</branch>
<status status="PASS" starttime="20210730 14:40:37.389" endtime="20210730 14:40:37.407"/>
</if>
<status status="PASS" starttime="20210730 14:40:37.370" endtime="20210730 14:40:37.408"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABC456.?'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:35.757" endtime="20210730 14:40:37.408">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t92" name="With Each Valid Token, Updating Password Of Each System User With ABC456.?ABC456.?ABC456 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:37.413" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:37.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:37.424" level="INFO">${pids} = 28942</msg>
<status status="PASS" starttime="20210730 14:40:37.410" endtime="20210730 14:40:37.424"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:37.425" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:37.425" endtime="20210730 14:40:37.425"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:37.426" level="INFO">${pids} = ['28942']</msg>
<status status="PASS" starttime="20210730 14:40:37.426" endtime="20210730 14:40:37.426"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">28942</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:37.430" level="INFO">Running command 'kill 28942 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:37.426" endtime="20210730 14:40:37.431"/>
</kw>
<status status="PASS" starttime="20210730 14:40:37.426" endtime="20210730 14:40:37.431"/>
</iter>
<status status="PASS" starttime="20210730 14:40:37.426" endtime="20210730 14:40:37.431"/>
</for>
<status status="PASS" starttime="20210730 14:40:37.426" endtime="20210730 14:40:37.431"/>
</branch>
<status status="PASS" starttime="20210730 14:40:37.425" endtime="20210730 14:40:37.431"/>
</if>
<status status="PASS" starttime="20210730 14:40:37.410" endtime="20210730 14:40:37.431"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:37.432" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:37.432" endtime="20210730 14:40:37.432"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:37.433" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:37.433" endtime="20210730 14:40:37.433"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:37.433" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:37.433" endtime="20210730 14:40:37.434"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:37.434" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:37.434" endtime="20210730 14:40:37.434"/>
</kw>
<msg timestamp="20210730 14:40:37.434" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:37.432" endtime="20210730 14:40:37.434"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:37.441" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:37.434" endtime="20210730 14:40:37.443"/>
</kw>
<status status="PASS" starttime="20210730 14:40:37.431" endtime="20210730 14:40:37.443"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:37.445" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:37.444" endtime="20210730 14:40:37.463"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:38.965" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:37.463" endtime="20210730 14:40:38.965"/>
</kw>
<status status="PASS" starttime="20210730 14:40:37.443" endtime="20210730 14:40:38.965"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:38.966" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:38.966" endtime="20210730 14:40:38.966"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:38.967" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:38.967" endtime="20210730 14:40:38.967"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:38.967" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:38.967" endtime="20210730 14:40:38.967"/>
</kw>
<msg timestamp="20210730 14:40:38.968" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:38.966" endtime="20210730 14:40:38.968"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:38.968" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:38.968" endtime="20210730 14:40:38.968"/>
</kw>
<status status="PASS" starttime="20210730 14:40:38.966" endtime="20210730 14:40:38.968"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:38.969" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:38.969" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:38.969" endtime="20210730 14:40:38.969"/>
</kw>
<status status="PASS" starttime="20210730 14:40:38.969" endtime="20210730 14:40:38.969"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:38.970" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:38.970" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:38.970" endtime="20210730 14:40:38.970"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:38.971" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:38.970" endtime="20210730 14:40:38.971"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:38.971" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:38.971" endtime="20210730 14:40:38.971"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:38.971" endtime="20210730 14:40:38.972"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:38.972" endtime="20210730 14:40:38.972"/>
</kw>
<status status="PASS" starttime="20210730 14:40:38.971" endtime="20210730 14:40:38.973"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:38.973" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:38.973" endtime="20210730 14:40:38.973"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:38.973" endtime="20210730 14:40:38.974"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:38.974" endtime="20210730 14:40:38.974"/>
</kw>
<status status="PASS" starttime="20210730 14:40:38.973" endtime="20210730 14:40:38.974"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:38.975" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:38.975" endtime="20210730 14:40:38.975"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:38.975" endtime="20210730 14:40:38.976"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:38.976" endtime="20210730 14:40:38.976"/>
</kw>
<status status="PASS" starttime="20210730 14:40:38.974" endtime="20210730 14:40:38.976"/>
</iter>
<status status="PASS" starttime="20210730 14:40:38.971" endtime="20210730 14:40:38.976"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:38.977" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:38.977" endtime="20210730 14:40:38.977"/>
</kw>
<status status="PASS" starttime="20210730 14:40:38.969" endtime="20210730 14:40:38.977"/>
</kw>
<status status="PASS" starttime="20210730 14:40:37.409" endtime="20210730 14:40:38.977"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC456.?ABC456.?ABC456</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:38.979" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:38.978" endtime="20210730 14:40:38.979"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:38.979" level="INFO">${payload} = {'password': 'ABC456.?ABC456.?ABC456'}</msg>
<status status="PASS" starttime="20210730 14:40:38.979" endtime="20210730 14:40:38.979"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:38.989" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:38.990" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:38.980" endtime="20210730 14:40:38.990"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:38.990" endtime="20210730 14:40:38.990"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:38.990" endtime="20210730 14:40:38.990"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:38.979" endtime="20210730 14:40:38.990"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:38.979" endtime="20210730 14:40:38.990"/>
</for>
<status status="FAIL" starttime="20210730 14:40:38.978" endtime="20210730 14:40:38.990"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:38.978" endtime="20210730 14:40:38.990"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC456.?ABC456.?ABC456</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:38.992" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:40:38.991" endtime="20210730 14:40:38.992"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:38.992" level="INFO">${payload} = {'password': 'ABC456.?ABC456.?ABC456'}</msg>
<status status="PASS" starttime="20210730 14:40:38.992" endtime="20210730 14:40:38.992"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:38.997" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:38.997" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:38.993" endtime="20210730 14:40:38.997"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:38.997" endtime="20210730 14:40:38.998"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:38.998" endtime="20210730 14:40:38.998"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:38.992" endtime="20210730 14:40:38.998"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:38.992" endtime="20210730 14:40:38.998"/>
</for>
<status status="FAIL" starttime="20210730 14:40:38.990" endtime="20210730 14:40:38.998"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:38.990" endtime="20210730 14:40:38.998"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC456.?ABC456.?ABC456</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:38.999" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:40:38.999" endtime="20210730 14:40:38.999"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:39.000" level="INFO">${payload} = {'password': 'ABC456.?ABC456.?ABC456'}</msg>
<status status="PASS" starttime="20210730 14:40:38.999" endtime="20210730 14:40:39.000"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:39.004" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:39.004" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:39.000" endtime="20210730 14:40:39.004"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:39.004" endtime="20210730 14:40:39.004"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:39.005" endtime="20210730 14:40:39.005"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:39.000" endtime="20210730 14:40:39.005"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:39.000" endtime="20210730 14:40:39.005"/>
</for>
<status status="FAIL" starttime="20210730 14:40:38.998" endtime="20210730 14:40:39.005"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:38.998" endtime="20210730 14:40:39.005"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:38.978" endtime="20210730 14:40:39.005"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:39.011" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:39.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:39.021" level="INFO">${pids} = 28965
28972
28980</msg>
<status status="PASS" starttime="20210730 14:40:39.006" endtime="20210730 14:40:39.021"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:39.022" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:39.022" endtime="20210730 14:40:39.022"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:39.023" level="INFO">${pids} = ['28965', '28972', '28980']</msg>
<status status="PASS" starttime="20210730 14:40:39.023" endtime="20210730 14:40:39.023"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">28965</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:39.027" level="INFO">Running command 'kill 28965 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:39.023" endtime="20210730 14:40:39.027"/>
</kw>
<status status="PASS" starttime="20210730 14:40:39.023" endtime="20210730 14:40:39.027"/>
</iter>
<iter>
<var name="${pid}">28972</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:39.031" level="INFO">Running command 'kill 28972 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:39.028" endtime="20210730 14:40:39.032"/>
</kw>
<status status="PASS" starttime="20210730 14:40:39.028" endtime="20210730 14:40:39.032"/>
</iter>
<iter>
<var name="${pid}">28980</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:39.040" level="INFO">Running command 'kill 28980 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:39.033" endtime="20210730 14:40:39.040"/>
</kw>
<status status="PASS" starttime="20210730 14:40:39.032" endtime="20210730 14:40:39.040"/>
</iter>
<status status="PASS" starttime="20210730 14:40:39.023" endtime="20210730 14:40:39.041"/>
</for>
<status status="PASS" starttime="20210730 14:40:39.023" endtime="20210730 14:40:39.041"/>
</branch>
<status status="PASS" starttime="20210730 14:40:39.022" endtime="20210730 14:40:39.041"/>
</if>
<status status="PASS" starttime="20210730 14:40:39.005" endtime="20210730 14:40:39.041"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABC456.?ABC456.?ABC456'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:37.408" endtime="20210730 14:40:39.041">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t93" name="With Each Valid Token, Updating Password Of Each System User With ABC!?.0 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:39.047" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:39.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:39.058" level="INFO">${pids} = 29009</msg>
<status status="PASS" starttime="20210730 14:40:39.044" endtime="20210730 14:40:39.058"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:39.059" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:39.059" endtime="20210730 14:40:39.059"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:39.060" level="INFO">${pids} = ['29009']</msg>
<status status="PASS" starttime="20210730 14:40:39.060" endtime="20210730 14:40:39.060"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">29009</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:39.064" level="INFO">Running command 'kill 29009 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:39.060" endtime="20210730 14:40:39.064"/>
</kw>
<status status="PASS" starttime="20210730 14:40:39.060" endtime="20210730 14:40:39.064"/>
</iter>
<status status="PASS" starttime="20210730 14:40:39.060" endtime="20210730 14:40:39.064"/>
</for>
<status status="PASS" starttime="20210730 14:40:39.060" endtime="20210730 14:40:39.064"/>
</branch>
<status status="PASS" starttime="20210730 14:40:39.059" endtime="20210730 14:40:39.064"/>
</if>
<status status="PASS" starttime="20210730 14:40:39.044" endtime="20210730 14:40:39.065"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:39.066" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:39.065" endtime="20210730 14:40:39.066"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:39.067" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:39.066" endtime="20210730 14:40:39.067"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:39.067" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:39.067" endtime="20210730 14:40:39.067"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:39.068" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:39.067" endtime="20210730 14:40:39.068"/>
</kw>
<msg timestamp="20210730 14:40:39.068" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:39.066" endtime="20210730 14:40:39.068"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:39.073" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:39.068" endtime="20210730 14:40:39.075"/>
</kw>
<status status="PASS" starttime="20210730 14:40:39.065" endtime="20210730 14:40:39.075"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:39.077" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:39.076" endtime="20210730 14:40:39.081"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:40.595" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:39.081" endtime="20210730 14:40:40.595"/>
</kw>
<status status="PASS" starttime="20210730 14:40:39.076" endtime="20210730 14:40:40.595"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:40.597" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:40.596" endtime="20210730 14:40:40.597"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:40.597" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:40.597" endtime="20210730 14:40:40.597"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:40.599" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:40.597" endtime="20210730 14:40:40.599"/>
</kw>
<msg timestamp="20210730 14:40:40.599" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:40.596" endtime="20210730 14:40:40.599"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:40.599" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:40.599" endtime="20210730 14:40:40.600"/>
</kw>
<status status="PASS" starttime="20210730 14:40:40.596" endtime="20210730 14:40:40.600"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:40.600" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:40.600" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:40.600" endtime="20210730 14:40:40.601"/>
</kw>
<status status="PASS" starttime="20210730 14:40:40.600" endtime="20210730 14:40:40.601"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:40.602" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:40.602" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:40.601" endtime="20210730 14:40:40.602"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:40.602" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:40.602" endtime="20210730 14:40:40.602"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:40.603" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:40.602" endtime="20210730 14:40:40.603"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:40.603" endtime="20210730 14:40:40.603"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:40.604" endtime="20210730 14:40:40.604"/>
</kw>
<status status="PASS" starttime="20210730 14:40:40.602" endtime="20210730 14:40:40.604"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:40.604" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:40.604" endtime="20210730 14:40:40.604"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:40.604" endtime="20210730 14:40:40.605"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:40.605" endtime="20210730 14:40:40.606"/>
</kw>
<status status="PASS" starttime="20210730 14:40:40.604" endtime="20210730 14:40:40.606"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:40.606" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:40.606" endtime="20210730 14:40:40.606"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:40.606" endtime="20210730 14:40:40.607"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:40.607" endtime="20210730 14:40:40.607"/>
</kw>
<status status="PASS" starttime="20210730 14:40:40.606" endtime="20210730 14:40:40.607"/>
</iter>
<status status="PASS" starttime="20210730 14:40:40.602" endtime="20210730 14:40:40.607"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:40.608" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:40.608" endtime="20210730 14:40:40.608"/>
</kw>
<status status="PASS" starttime="20210730 14:40:40.601" endtime="20210730 14:40:40.608"/>
</kw>
<status status="PASS" starttime="20210730 14:40:39.043" endtime="20210730 14:40:40.609"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC!?.0</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:40.611" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:40.610" endtime="20210730 14:40:40.611"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:40.611" level="INFO">${payload} = {'password': 'ABC!?.0'}</msg>
<status status="PASS" starttime="20210730 14:40:40.611" endtime="20210730 14:40:40.611"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:40.620" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:40.620" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:40.611" endtime="20210730 14:40:40.621"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:40.621" endtime="20210730 14:40:40.621"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:40.621" endtime="20210730 14:40:40.621"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:40.611" endtime="20210730 14:40:40.621"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:40.611" endtime="20210730 14:40:40.621"/>
</for>
<status status="FAIL" starttime="20210730 14:40:40.609" endtime="20210730 14:40:40.621"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:40.609" endtime="20210730 14:40:40.621"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC!?.0</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:40.622" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:40:40.622" endtime="20210730 14:40:40.622"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:40.623" level="INFO">${payload} = {'password': 'ABC!?.0'}</msg>
<status status="PASS" starttime="20210730 14:40:40.622" endtime="20210730 14:40:40.623"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:40.627" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:40.627" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:40.623" endtime="20210730 14:40:40.627"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:40.628" endtime="20210730 14:40:40.628"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:40.628" endtime="20210730 14:40:40.628"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:40.623" endtime="20210730 14:40:40.628"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:40.623" endtime="20210730 14:40:40.628"/>
</for>
<status status="FAIL" starttime="20210730 14:40:40.621" endtime="20210730 14:40:40.628"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:40.621" endtime="20210730 14:40:40.628"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC!?.0</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:40.629" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:40:40.629" endtime="20210730 14:40:40.629"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:40.630" level="INFO">${payload} = {'password': 'ABC!?.0'}</msg>
<status status="PASS" starttime="20210730 14:40:40.629" endtime="20210730 14:40:40.630"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:40.634" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:40.634" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:40.630" endtime="20210730 14:40:40.634"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:40.634" endtime="20210730 14:40:40.634"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:40.635" endtime="20210730 14:40:40.635"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:40.630" endtime="20210730 14:40:40.635"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:40.630" endtime="20210730 14:40:40.635"/>
</for>
<status status="FAIL" starttime="20210730 14:40:40.628" endtime="20210730 14:40:40.635"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:40.628" endtime="20210730 14:40:40.635"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:40.609" endtime="20210730 14:40:40.635"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:40.640" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:40.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:40.652" level="INFO">${pids} = 29032
29039
29044</msg>
<status status="PASS" starttime="20210730 14:40:40.636" endtime="20210730 14:40:40.652"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:40.653" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:40.652" endtime="20210730 14:40:40.653"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:40.653" level="INFO">${pids} = ['29032', '29039', '29044']</msg>
<status status="PASS" starttime="20210730 14:40:40.653" endtime="20210730 14:40:40.653"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">29032</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:40.657" level="INFO">Running command 'kill 29032 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:40.654" endtime="20210730 14:40:40.658"/>
</kw>
<status status="PASS" starttime="20210730 14:40:40.654" endtime="20210730 14:40:40.658"/>
</iter>
<iter>
<var name="${pid}">29039</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:40.663" level="INFO">Running command 'kill 29039 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:40.659" endtime="20210730 14:40:40.663"/>
</kw>
<status status="PASS" starttime="20210730 14:40:40.658" endtime="20210730 14:40:40.664"/>
</iter>
<iter>
<var name="${pid}">29044</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:40.669" level="INFO">Running command 'kill 29044 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:40.664" endtime="20210730 14:40:40.669"/>
</kw>
<status status="PASS" starttime="20210730 14:40:40.664" endtime="20210730 14:40:40.669"/>
</iter>
<status status="PASS" starttime="20210730 14:40:40.653" endtime="20210730 14:40:40.669"/>
</for>
<status status="PASS" starttime="20210730 14:40:40.653" endtime="20210730 14:40:40.669"/>
</branch>
<status status="PASS" starttime="20210730 14:40:40.653" endtime="20210730 14:40:40.670"/>
</if>
<status status="PASS" starttime="20210730 14:40:40.635" endtime="20210730 14:40:40.670"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABC!?.0'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:39.042" endtime="20210730 14:40:40.670">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t94" name="With Each Valid Token, Updating Password Of Each System User With ABC!?.01 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:40.679" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:40.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:40.690" level="INFO">${pids} = 29073</msg>
<status status="PASS" starttime="20210730 14:40:40.672" endtime="20210730 14:40:40.690"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:40.692" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:40.691" endtime="20210730 14:40:40.692"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:40.693" level="INFO">${pids} = ['29073']</msg>
<status status="PASS" starttime="20210730 14:40:40.692" endtime="20210730 14:40:40.693"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">29073</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:40.699" level="INFO">Running command 'kill 29073 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:40.694" endtime="20210730 14:40:40.700"/>
</kw>
<status status="PASS" starttime="20210730 14:40:40.694" endtime="20210730 14:40:40.701"/>
</iter>
<status status="PASS" starttime="20210730 14:40:40.694" endtime="20210730 14:40:40.701"/>
</for>
<status status="PASS" starttime="20210730 14:40:40.692" endtime="20210730 14:40:40.701"/>
</branch>
<status status="PASS" starttime="20210730 14:40:40.692" endtime="20210730 14:40:40.701"/>
</if>
<status status="PASS" starttime="20210730 14:40:40.672" endtime="20210730 14:40:40.701"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:40.702" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:40.702" endtime="20210730 14:40:40.702"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:40.703" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:40.703" endtime="20210730 14:40:40.703"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:40.704" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:40.703" endtime="20210730 14:40:40.704"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:40.704" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:40.704" endtime="20210730 14:40:40.704"/>
</kw>
<msg timestamp="20210730 14:40:40.704" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:40.702" endtime="20210730 14:40:40.705"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:40.709" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:40.705" endtime="20210730 14:40:40.711"/>
</kw>
<status status="PASS" starttime="20210730 14:40:40.701" endtime="20210730 14:40:40.711"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:40.713" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:40.712" endtime="20210730 14:40:40.723"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:42.245" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:40.724" endtime="20210730 14:40:42.246"/>
</kw>
<status status="PASS" starttime="20210730 14:40:40.712" endtime="20210730 14:40:42.246"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:42.247" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:42.247" endtime="20210730 14:40:42.247"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:42.248" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:42.247" endtime="20210730 14:40:42.248"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:42.248" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:42.248" endtime="20210730 14:40:42.248"/>
</kw>
<msg timestamp="20210730 14:40:42.248" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:42.247" endtime="20210730 14:40:42.248"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:42.249" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:42.248" endtime="20210730 14:40:42.249"/>
</kw>
<status status="PASS" starttime="20210730 14:40:42.246" endtime="20210730 14:40:42.249"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:42.250" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:42.250" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:42.250" endtime="20210730 14:40:42.250"/>
</kw>
<status status="PASS" starttime="20210730 14:40:42.249" endtime="20210730 14:40:42.250"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:42.251" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:42.251" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:42.251" endtime="20210730 14:40:42.251"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:42.251" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:42.251" endtime="20210730 14:40:42.251"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:42.252" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:42.252" endtime="20210730 14:40:42.252"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:42.252" endtime="20210730 14:40:42.253"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:42.253" endtime="20210730 14:40:42.253"/>
</kw>
<status status="PASS" starttime="20210730 14:40:42.252" endtime="20210730 14:40:42.253"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:42.254" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:42.253" endtime="20210730 14:40:42.254"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:42.254" endtime="20210730 14:40:42.254"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:42.254" endtime="20210730 14:40:42.255"/>
</kw>
<status status="PASS" starttime="20210730 14:40:42.253" endtime="20210730 14:40:42.255"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:42.255" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:42.255" endtime="20210730 14:40:42.255"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:42.255" endtime="20210730 14:40:42.256"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:42.256" endtime="20210730 14:40:42.256"/>
</kw>
<status status="PASS" starttime="20210730 14:40:42.255" endtime="20210730 14:40:42.256"/>
</iter>
<status status="PASS" starttime="20210730 14:40:42.251" endtime="20210730 14:40:42.256"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:42.257" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:42.256" endtime="20210730 14:40:42.257"/>
</kw>
<status status="PASS" starttime="20210730 14:40:42.250" endtime="20210730 14:40:42.257"/>
</kw>
<status status="PASS" starttime="20210730 14:40:40.671" endtime="20210730 14:40:42.257"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC!?.01</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:42.258" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:42.258" endtime="20210730 14:40:42.258"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:42.259" level="INFO">${payload} = {'password': 'ABC!?.01'}</msg>
<status status="PASS" starttime="20210730 14:40:42.258" endtime="20210730 14:40:42.259"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:42.268" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:42.268" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:42.259" endtime="20210730 14:40:42.268"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:42.269" endtime="20210730 14:40:42.269"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:42.269" endtime="20210730 14:40:42.269"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:42.259" endtime="20210730 14:40:42.269"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:42.259" endtime="20210730 14:40:42.269"/>
</for>
<status status="FAIL" starttime="20210730 14:40:42.257" endtime="20210730 14:40:42.269"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:42.257" endtime="20210730 14:40:42.269"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC!?.01</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:42.270" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:40:42.270" endtime="20210730 14:40:42.270"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:42.271" level="INFO">${payload} = {'password': 'ABC!?.01'}</msg>
<status status="PASS" starttime="20210730 14:40:42.270" endtime="20210730 14:40:42.271"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:42.276" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:42.276" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:42.271" endtime="20210730 14:40:42.276"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:42.277" endtime="20210730 14:40:42.277"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:42.277" endtime="20210730 14:40:42.277"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:42.271" endtime="20210730 14:40:42.277"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:42.271" endtime="20210730 14:40:42.277"/>
</for>
<status status="FAIL" starttime="20210730 14:40:42.269" endtime="20210730 14:40:42.277"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:42.269" endtime="20210730 14:40:42.278"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC!?.01</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:42.279" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:40:42.278" endtime="20210730 14:40:42.279"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:42.279" level="INFO">${payload} = {'password': 'ABC!?.01'}</msg>
<status status="PASS" starttime="20210730 14:40:42.279" endtime="20210730 14:40:42.279"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:42.283" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:42.284" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:42.279" endtime="20210730 14:40:42.284"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:42.284" endtime="20210730 14:40:42.284"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:42.284" endtime="20210730 14:40:42.284"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:42.279" endtime="20210730 14:40:42.284"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:42.279" endtime="20210730 14:40:42.284"/>
</for>
<status status="FAIL" starttime="20210730 14:40:42.278" endtime="20210730 14:40:42.284"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:42.278" endtime="20210730 14:40:42.284"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:42.257" endtime="20210730 14:40:42.284"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:42.289" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:42.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:42.300" level="INFO">${pids} = 29096
29103
29107</msg>
<status status="PASS" starttime="20210730 14:40:42.286" endtime="20210730 14:40:42.300"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:42.301" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:42.300" endtime="20210730 14:40:42.301"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:42.302" level="INFO">${pids} = ['29096', '29103', '29107']</msg>
<status status="PASS" starttime="20210730 14:40:42.302" endtime="20210730 14:40:42.302"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">29096</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:42.305" level="INFO">Running command 'kill 29096 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:42.302" endtime="20210730 14:40:42.306"/>
</kw>
<status status="PASS" starttime="20210730 14:40:42.302" endtime="20210730 14:40:42.306"/>
</iter>
<iter>
<var name="${pid}">29103</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:42.311" level="INFO">Running command 'kill 29103 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:42.307" endtime="20210730 14:40:42.311"/>
</kw>
<status status="PASS" starttime="20210730 14:40:42.306" endtime="20210730 14:40:42.311"/>
</iter>
<iter>
<var name="${pid}">29107</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:42.318" level="INFO">Running command 'kill 29107 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:42.312" endtime="20210730 14:40:42.319"/>
</kw>
<status status="PASS" starttime="20210730 14:40:42.311" endtime="20210730 14:40:42.319"/>
</iter>
<status status="PASS" starttime="20210730 14:40:42.302" endtime="20210730 14:40:42.319"/>
</for>
<status status="PASS" starttime="20210730 14:40:42.301" endtime="20210730 14:40:42.319"/>
</branch>
<status status="PASS" starttime="20210730 14:40:42.301" endtime="20210730 14:40:42.319"/>
</if>
<status status="PASS" starttime="20210730 14:40:42.285" endtime="20210730 14:40:42.320"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABC!?.01'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:40.671" endtime="20210730 14:40:42.320">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t95" name="With Each Valid Token, Updating Password Of Each System User With ABC!?.01ABC!?.01ABC!?. Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:42.327" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:42.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:42.338" level="INFO">${pids} = 29136</msg>
<status status="PASS" starttime="20210730 14:40:42.323" endtime="20210730 14:40:42.338"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:42.339" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:42.338" endtime="20210730 14:40:42.339"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:42.339" level="INFO">${pids} = ['29136']</msg>
<status status="PASS" starttime="20210730 14:40:42.339" endtime="20210730 14:40:42.339"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">29136</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:42.343" level="INFO">Running command 'kill 29136 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:42.340" endtime="20210730 14:40:42.344"/>
</kw>
<status status="PASS" starttime="20210730 14:40:42.340" endtime="20210730 14:40:42.344"/>
</iter>
<status status="PASS" starttime="20210730 14:40:42.339" endtime="20210730 14:40:42.344"/>
</for>
<status status="PASS" starttime="20210730 14:40:42.339" endtime="20210730 14:40:42.344"/>
</branch>
<status status="PASS" starttime="20210730 14:40:42.339" endtime="20210730 14:40:42.344"/>
</if>
<status status="PASS" starttime="20210730 14:40:42.323" endtime="20210730 14:40:42.345"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:42.346" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:42.345" endtime="20210730 14:40:42.346"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:42.346" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:42.346" endtime="20210730 14:40:42.346"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:42.347" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:42.347" endtime="20210730 14:40:42.347"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:42.347" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:42.347" endtime="20210730 14:40:42.347"/>
</kw>
<msg timestamp="20210730 14:40:42.348" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:42.346" endtime="20210730 14:40:42.348"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:42.354" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:42.348" endtime="20210730 14:40:42.355"/>
</kw>
<status status="PASS" starttime="20210730 14:40:42.345" endtime="20210730 14:40:42.355"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:42.357" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:42.356" endtime="20210730 14:40:42.361"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:43.866" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:42.362" endtime="20210730 14:40:43.866"/>
</kw>
<status status="PASS" starttime="20210730 14:40:42.356" endtime="20210730 14:40:43.866"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:43.868" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:43.867" endtime="20210730 14:40:43.868"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:43.868" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:43.868" endtime="20210730 14:40:43.868"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:43.868" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:43.868" endtime="20210730 14:40:43.869"/>
</kw>
<msg timestamp="20210730 14:40:43.869" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:43.867" endtime="20210730 14:40:43.869"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:43.870" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:43.869" endtime="20210730 14:40:43.870"/>
</kw>
<status status="PASS" starttime="20210730 14:40:43.867" endtime="20210730 14:40:43.870"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:43.871" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:43.871" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:43.871" endtime="20210730 14:40:43.871"/>
</kw>
<status status="PASS" starttime="20210730 14:40:43.870" endtime="20210730 14:40:43.871"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:43.872" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:43.872" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:43.872" endtime="20210730 14:40:43.872"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:43.872" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:43.872" endtime="20210730 14:40:43.873"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:43.874" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:43.873" endtime="20210730 14:40:43.874"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:43.874" endtime="20210730 14:40:43.875"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:43.875" endtime="20210730 14:40:43.876"/>
</kw>
<status status="PASS" starttime="20210730 14:40:43.873" endtime="20210730 14:40:43.876"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:43.876" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:43.876" endtime="20210730 14:40:43.876"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:43.877" endtime="20210730 14:40:43.878"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:43.878" endtime="20210730 14:40:43.878"/>
</kw>
<status status="PASS" starttime="20210730 14:40:43.876" endtime="20210730 14:40:43.878"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:43.879" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:43.878" endtime="20210730 14:40:43.879"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:43.879" endtime="20210730 14:40:43.879"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:43.879" endtime="20210730 14:40:43.880"/>
</kw>
<status status="PASS" starttime="20210730 14:40:43.878" endtime="20210730 14:40:43.880"/>
</iter>
<status status="PASS" starttime="20210730 14:40:43.873" endtime="20210730 14:40:43.880"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:43.880" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:43.880" endtime="20210730 14:40:43.880"/>
</kw>
<status status="PASS" starttime="20210730 14:40:43.871" endtime="20210730 14:40:43.880"/>
</kw>
<status status="PASS" starttime="20210730 14:40:42.322" endtime="20210730 14:40:43.880"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC!?.01ABC!?.01ABC!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:43.882" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:43.881" endtime="20210730 14:40:43.882"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:43.882" level="INFO">${payload} = {'password': 'ABC!?.01ABC!?.01ABC!?.'}</msg>
<status status="PASS" starttime="20210730 14:40:43.882" endtime="20210730 14:40:43.882"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:43.891" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:43.891" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:43.882" endtime="20210730 14:40:43.891"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:43.892" endtime="20210730 14:40:43.892"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:43.892" endtime="20210730 14:40:43.892"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:43.882" endtime="20210730 14:40:43.892"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:43.882" endtime="20210730 14:40:43.892"/>
</for>
<status status="FAIL" starttime="20210730 14:40:43.881" endtime="20210730 14:40:43.892"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:43.881" endtime="20210730 14:40:43.892"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC!?.01ABC!?.01ABC!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:43.893" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:40:43.893" endtime="20210730 14:40:43.893"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:43.894" level="INFO">${payload} = {'password': 'ABC!?.01ABC!?.01ABC!?.'}</msg>
<status status="PASS" starttime="20210730 14:40:43.894" endtime="20210730 14:40:43.894"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:43.899" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:43.899" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:43.894" endtime="20210730 14:40:43.899"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:43.899" endtime="20210730 14:40:43.899"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:43.899" endtime="20210730 14:40:43.899"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:43.894" endtime="20210730 14:40:43.899"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:43.894" endtime="20210730 14:40:43.899"/>
</for>
<status status="FAIL" starttime="20210730 14:40:43.892" endtime="20210730 14:40:43.899"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:43.892" endtime="20210730 14:40:43.899"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=ABC!?.01ABC!?.01ABC!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:43.900" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:40:43.900" endtime="20210730 14:40:43.900"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:43.901" level="INFO">${payload} = {'password': 'ABC!?.01ABC!?.01ABC!?.'}</msg>
<status status="PASS" starttime="20210730 14:40:43.901" endtime="20210730 14:40:43.901"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:43.905" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:43.906" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:43.901" endtime="20210730 14:40:43.906"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:43.906" endtime="20210730 14:40:43.906"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:43.906" endtime="20210730 14:40:43.906"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:43.901" endtime="20210730 14:40:43.906"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:43.901" endtime="20210730 14:40:43.906"/>
</for>
<status status="FAIL" starttime="20210730 14:40:43.900" endtime="20210730 14:40:43.906"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:43.899" endtime="20210730 14:40:43.906"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:43.881" endtime="20210730 14:40:43.906"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:43.912" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:43.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:43.922" level="INFO">${pids} = 29161
29168
29172</msg>
<status status="PASS" starttime="20210730 14:40:43.908" endtime="20210730 14:40:43.922"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:43.923" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:43.923" endtime="20210730 14:40:43.923"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:43.924" level="INFO">${pids} = ['29161', '29168', '29172']</msg>
<status status="PASS" starttime="20210730 14:40:43.924" endtime="20210730 14:40:43.924"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">29161</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:43.928" level="INFO">Running command 'kill 29161 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:43.925" endtime="20210730 14:40:43.928"/>
</kw>
<status status="PASS" starttime="20210730 14:40:43.924" endtime="20210730 14:40:43.928"/>
</iter>
<iter>
<var name="${pid}">29168</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:43.932" level="INFO">Running command 'kill 29168 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:43.929" endtime="20210730 14:40:43.934"/>
</kw>
<status status="PASS" starttime="20210730 14:40:43.929" endtime="20210730 14:40:43.934"/>
</iter>
<iter>
<var name="${pid}">29172</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:43.938" level="INFO">Running command 'kill 29172 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:43.934" endtime="20210730 14:40:43.939"/>
</kw>
<status status="PASS" starttime="20210730 14:40:43.934" endtime="20210730 14:40:43.939"/>
</iter>
<status status="PASS" starttime="20210730 14:40:43.924" endtime="20210730 14:40:43.939"/>
</for>
<status status="PASS" starttime="20210730 14:40:43.924" endtime="20210730 14:40:43.939"/>
</branch>
<status status="PASS" starttime="20210730 14:40:43.924" endtime="20210730 14:40:43.939"/>
</if>
<status status="PASS" starttime="20210730 14:40:43.907" endtime="20210730 14:40:43.939"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABC!?.01ABC!?.01ABC!?.'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:42.321" endtime="20210730 14:40:43.940">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t96" name="With Each Valid Token, Updating Password Of Each System User With 012!.Aa Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:43.946" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:43.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:43.957" level="INFO">${pids} = 29201</msg>
<status status="PASS" starttime="20210730 14:40:43.942" endtime="20210730 14:40:43.957"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:43.958" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:43.957" endtime="20210730 14:40:43.958"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:43.959" level="INFO">${pids} = ['29201']</msg>
<status status="PASS" starttime="20210730 14:40:43.958" endtime="20210730 14:40:43.959"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">29201</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:43.962" level="INFO">Running command 'kill 29201 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:43.959" endtime="20210730 14:40:43.963"/>
</kw>
<status status="PASS" starttime="20210730 14:40:43.959" endtime="20210730 14:40:43.963"/>
</iter>
<status status="PASS" starttime="20210730 14:40:43.959" endtime="20210730 14:40:43.963"/>
</for>
<status status="PASS" starttime="20210730 14:40:43.958" endtime="20210730 14:40:43.963"/>
</branch>
<status status="PASS" starttime="20210730 14:40:43.958" endtime="20210730 14:40:43.963"/>
</if>
<status status="PASS" starttime="20210730 14:40:43.942" endtime="20210730 14:40:43.963"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:43.965" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:43.964" endtime="20210730 14:40:43.965"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:43.965" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:43.965" endtime="20210730 14:40:43.965"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:43.966" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:43.966" endtime="20210730 14:40:43.966"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:43.966" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:43.966" endtime="20210730 14:40:43.966"/>
</kw>
<msg timestamp="20210730 14:40:43.967" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:43.965" endtime="20210730 14:40:43.967"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:43.973" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:43.967" endtime="20210730 14:40:43.975"/>
</kw>
<status status="PASS" starttime="20210730 14:40:43.964" endtime="20210730 14:40:43.975"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:43.977" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:43.977" endtime="20210730 14:40:43.982"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:45.486" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:43.982" endtime="20210730 14:40:45.486"/>
</kw>
<status status="PASS" starttime="20210730 14:40:43.976" endtime="20210730 14:40:45.486"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:45.487" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:45.487" endtime="20210730 14:40:45.487"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:45.488" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:45.488" endtime="20210730 14:40:45.488"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:45.488" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:45.488" endtime="20210730 14:40:45.488"/>
</kw>
<msg timestamp="20210730 14:40:45.488" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:45.487" endtime="20210730 14:40:45.488"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:45.489" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:45.488" endtime="20210730 14:40:45.489"/>
</kw>
<status status="PASS" starttime="20210730 14:40:45.486" endtime="20210730 14:40:45.489"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:45.490" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:45.490" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:45.490" endtime="20210730 14:40:45.490"/>
</kw>
<status status="PASS" starttime="20210730 14:40:45.489" endtime="20210730 14:40:45.490"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:45.491" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:45.491" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:45.490" endtime="20210730 14:40:45.491"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:45.491" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:45.491" endtime="20210730 14:40:45.491"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:45.492" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:45.492" endtime="20210730 14:40:45.492"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:45.492" endtime="20210730 14:40:45.493"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:45.493" endtime="20210730 14:40:45.493"/>
</kw>
<status status="PASS" starttime="20210730 14:40:45.491" endtime="20210730 14:40:45.493"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:45.493" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:45.493" endtime="20210730 14:40:45.494"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:45.494" endtime="20210730 14:40:45.494"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:45.494" endtime="20210730 14:40:45.495"/>
</kw>
<status status="PASS" starttime="20210730 14:40:45.493" endtime="20210730 14:40:45.495"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:45.495" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:45.495" endtime="20210730 14:40:45.495"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:45.495" endtime="20210730 14:40:45.496"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:45.496" endtime="20210730 14:40:45.496"/>
</kw>
<status status="PASS" starttime="20210730 14:40:45.495" endtime="20210730 14:40:45.496"/>
</iter>
<status status="PASS" starttime="20210730 14:40:45.491" endtime="20210730 14:40:45.496"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:45.497" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:45.496" endtime="20210730 14:40:45.497"/>
</kw>
<status status="PASS" starttime="20210730 14:40:45.490" endtime="20210730 14:40:45.497"/>
</kw>
<status status="PASS" starttime="20210730 14:40:43.941" endtime="20210730 14:40:45.497"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=012!.Aa</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:45.498" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:45.498" endtime="20210730 14:40:45.498"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:45.499" level="INFO">${payload} = {'password': '012!.Aa'}</msg>
<status status="PASS" starttime="20210730 14:40:45.498" endtime="20210730 14:40:45.499"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:45.510" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:45.511" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:45.499" endtime="20210730 14:40:45.511"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:45.511" endtime="20210730 14:40:45.511"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:45.511" endtime="20210730 14:40:45.511"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:45.499" endtime="20210730 14:40:45.511"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:45.499" endtime="20210730 14:40:45.511"/>
</for>
<status status="FAIL" starttime="20210730 14:40:45.497" endtime="20210730 14:40:45.512"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:45.497" endtime="20210730 14:40:45.512"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=012!.Aa</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:45.513" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:40:45.512" endtime="20210730 14:40:45.513"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:45.513" level="INFO">${payload} = {'password': '012!.Aa'}</msg>
<status status="PASS" starttime="20210730 14:40:45.513" endtime="20210730 14:40:45.513"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:45.517" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:45.518" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:45.513" endtime="20210730 14:40:45.518"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:45.518" endtime="20210730 14:40:45.518"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:45.518" endtime="20210730 14:40:45.518"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:45.513" endtime="20210730 14:40:45.518"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:45.513" endtime="20210730 14:40:45.518"/>
</for>
<status status="FAIL" starttime="20210730 14:40:45.512" endtime="20210730 14:40:45.518"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:45.512" endtime="20210730 14:40:45.518"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=012!.Aa</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:45.519" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:40:45.519" endtime="20210730 14:40:45.519"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:45.520" level="INFO">${payload} = {'password': '012!.Aa'}</msg>
<status status="PASS" starttime="20210730 14:40:45.519" endtime="20210730 14:40:45.520"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:45.524" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:45.524" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:45.520" endtime="20210730 14:40:45.524"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:45.524" endtime="20210730 14:40:45.524"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:45.524" endtime="20210730 14:40:45.524"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:45.520" endtime="20210730 14:40:45.524"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:45.520" endtime="20210730 14:40:45.524"/>
</for>
<status status="FAIL" starttime="20210730 14:40:45.518" endtime="20210730 14:40:45.525"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:45.518" endtime="20210730 14:40:45.525"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:45.497" endtime="20210730 14:40:45.525"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:45.530" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:45.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:45.540" level="INFO">${pids} = 29224
29231
29236</msg>
<status status="PASS" starttime="20210730 14:40:45.526" endtime="20210730 14:40:45.540"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:45.541" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:45.540" endtime="20210730 14:40:45.541"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:45.542" level="INFO">${pids} = ['29224', '29231', '29236']</msg>
<status status="PASS" starttime="20210730 14:40:45.541" endtime="20210730 14:40:45.542"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">29224</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:45.546" level="INFO">Running command 'kill 29224 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:45.542" endtime="20210730 14:40:45.547"/>
</kw>
<status status="PASS" starttime="20210730 14:40:45.542" endtime="20210730 14:40:45.547"/>
</iter>
<iter>
<var name="${pid}">29231</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:45.550" level="INFO">Running command 'kill 29231 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:45.548" endtime="20210730 14:40:45.552"/>
</kw>
<status status="PASS" starttime="20210730 14:40:45.547" endtime="20210730 14:40:45.552"/>
</iter>
<iter>
<var name="${pid}">29236</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:45.556" level="INFO">Running command 'kill 29236 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:45.553" endtime="20210730 14:40:45.557"/>
</kw>
<status status="PASS" starttime="20210730 14:40:45.552" endtime="20210730 14:40:45.557"/>
</iter>
<status status="PASS" starttime="20210730 14:40:45.542" endtime="20210730 14:40:45.557"/>
</for>
<status status="PASS" starttime="20210730 14:40:45.541" endtime="20210730 14:40:45.557"/>
</branch>
<status status="PASS" starttime="20210730 14:40:45.541" endtime="20210730 14:40:45.557"/>
</if>
<status status="PASS" starttime="20210730 14:40:45.525" endtime="20210730 14:40:45.557"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": '012!.Aa'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:43.940" endtime="20210730 14:40:45.557">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t97" name="With Each Valid Token, Updating Password Of Each System User With 012!.Aab Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:45.562" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:45.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:45.573" level="INFO">${pids} = 29265</msg>
<status status="PASS" starttime="20210730 14:40:45.559" endtime="20210730 14:40:45.573"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:45.574" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:45.573" endtime="20210730 14:40:45.574"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:45.576" level="INFO">${pids} = ['29265']</msg>
<status status="PASS" starttime="20210730 14:40:45.575" endtime="20210730 14:40:45.576"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">29265</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:45.580" level="INFO">Running command 'kill 29265 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:45.577" endtime="20210730 14:40:45.581"/>
</kw>
<status status="PASS" starttime="20210730 14:40:45.576" endtime="20210730 14:40:45.581"/>
</iter>
<status status="PASS" starttime="20210730 14:40:45.576" endtime="20210730 14:40:45.581"/>
</for>
<status status="PASS" starttime="20210730 14:40:45.575" endtime="20210730 14:40:45.581"/>
</branch>
<status status="PASS" starttime="20210730 14:40:45.575" endtime="20210730 14:40:45.581"/>
</if>
<status status="PASS" starttime="20210730 14:40:45.559" endtime="20210730 14:40:45.581"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:45.583" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:45.582" endtime="20210730 14:40:45.583"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:45.583" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:45.583" endtime="20210730 14:40:45.583"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:45.584" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:45.583" endtime="20210730 14:40:45.584"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:45.584" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:45.584" endtime="20210730 14:40:45.584"/>
</kw>
<msg timestamp="20210730 14:40:45.584" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:45.583" endtime="20210730 14:40:45.584"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:45.596" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:45.585" endtime="20210730 14:40:45.599"/>
</kw>
<status status="PASS" starttime="20210730 14:40:45.582" endtime="20210730 14:40:45.600"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:45.601" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:45.600" endtime="20210730 14:40:45.614"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:47.115" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:45.614" endtime="20210730 14:40:47.116"/>
</kw>
<status status="PASS" starttime="20210730 14:40:45.600" endtime="20210730 14:40:47.117"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:47.120" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:47.120" endtime="20210730 14:40:47.120"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:47.121" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:47.121" endtime="20210730 14:40:47.121"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:47.121" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:47.121" endtime="20210730 14:40:47.121"/>
</kw>
<msg timestamp="20210730 14:40:47.122" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:47.119" endtime="20210730 14:40:47.122"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:47.122" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:47.122" endtime="20210730 14:40:47.122"/>
</kw>
<status status="PASS" starttime="20210730 14:40:47.118" endtime="20210730 14:40:47.123"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:47.123" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:47.123" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:47.123" endtime="20210730 14:40:47.123"/>
</kw>
<status status="PASS" starttime="20210730 14:40:47.123" endtime="20210730 14:40:47.123"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:47.124" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:47.124" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:47.124" endtime="20210730 14:40:47.124"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:47.124" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:47.124" endtime="20210730 14:40:47.124"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:47.126" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:47.125" endtime="20210730 14:40:47.126"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:47.126" endtime="20210730 14:40:47.127"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:47.127" endtime="20210730 14:40:47.127"/>
</kw>
<status status="PASS" starttime="20210730 14:40:47.125" endtime="20210730 14:40:47.127"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:47.128" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:47.127" endtime="20210730 14:40:47.128"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:47.128" endtime="20210730 14:40:47.128"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:47.128" endtime="20210730 14:40:47.129"/>
</kw>
<status status="PASS" starttime="20210730 14:40:47.127" endtime="20210730 14:40:47.129"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:47.129" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:47.129" endtime="20210730 14:40:47.129"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:47.129" endtime="20210730 14:40:47.130"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:47.130" endtime="20210730 14:40:47.130"/>
</kw>
<status status="PASS" starttime="20210730 14:40:47.129" endtime="20210730 14:40:47.130"/>
</iter>
<status status="PASS" starttime="20210730 14:40:47.125" endtime="20210730 14:40:47.130"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:47.131" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:47.130" endtime="20210730 14:40:47.131"/>
</kw>
<status status="PASS" starttime="20210730 14:40:47.123" endtime="20210730 14:40:47.131"/>
</kw>
<status status="PASS" starttime="20210730 14:40:45.559" endtime="20210730 14:40:47.131"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=012!.Aab</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:47.132" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:47.132" endtime="20210730 14:40:47.132"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:47.133" level="INFO">${payload} = {'password': '012!.Aab'}</msg>
<status status="PASS" starttime="20210730 14:40:47.132" endtime="20210730 14:40:47.133"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:47.143" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:47.143" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:47.133" endtime="20210730 14:40:47.143"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:47.143" endtime="20210730 14:40:47.143"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:47.143" endtime="20210730 14:40:47.144"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:47.133" endtime="20210730 14:40:47.144"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:47.133" endtime="20210730 14:40:47.144"/>
</for>
<status status="FAIL" starttime="20210730 14:40:47.131" endtime="20210730 14:40:47.144"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:47.131" endtime="20210730 14:40:47.144"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=012!.Aab</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:47.145" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:40:47.145" endtime="20210730 14:40:47.145"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:47.146" level="INFO">${payload} = {'password': '012!.Aab'}</msg>
<status status="PASS" starttime="20210730 14:40:47.146" endtime="20210730 14:40:47.146"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:47.150" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:47.150" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:47.146" endtime="20210730 14:40:47.150"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:47.151" endtime="20210730 14:40:47.151"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:47.151" endtime="20210730 14:40:47.151"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:47.146" endtime="20210730 14:40:47.151"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:47.146" endtime="20210730 14:40:47.151"/>
</for>
<status status="FAIL" starttime="20210730 14:40:47.144" endtime="20210730 14:40:47.151"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:47.144" endtime="20210730 14:40:47.151"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=012!.Aab</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:47.152" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:40:47.152" endtime="20210730 14:40:47.152"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:47.152" level="INFO">${payload} = {'password': '012!.Aab'}</msg>
<status status="PASS" starttime="20210730 14:40:47.152" endtime="20210730 14:40:47.152"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:47.157" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:47.157" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:47.153" endtime="20210730 14:40:47.157"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:47.157" endtime="20210730 14:40:47.157"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:47.158" endtime="20210730 14:40:47.158"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:47.153" endtime="20210730 14:40:47.158"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:47.153" endtime="20210730 14:40:47.158"/>
</for>
<status status="FAIL" starttime="20210730 14:40:47.151" endtime="20210730 14:40:47.158"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:47.151" endtime="20210730 14:40:47.158"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:47.131" endtime="20210730 14:40:47.158"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:47.163" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:47.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:47.174" level="INFO">${pids} = 29288
29295
29299</msg>
<status status="PASS" starttime="20210730 14:40:47.159" endtime="20210730 14:40:47.174"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:47.175" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:47.174" endtime="20210730 14:40:47.175"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:47.176" level="INFO">${pids} = ['29288', '29295', '29299']</msg>
<status status="PASS" starttime="20210730 14:40:47.176" endtime="20210730 14:40:47.176"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">29288</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:47.180" level="INFO">Running command 'kill 29288 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:47.177" endtime="20210730 14:40:47.181"/>
</kw>
<status status="PASS" starttime="20210730 14:40:47.177" endtime="20210730 14:40:47.181"/>
</iter>
<iter>
<var name="${pid}">29295</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:47.184" level="INFO">Running command 'kill 29295 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:47.182" endtime="20210730 14:40:47.185"/>
</kw>
<status status="PASS" starttime="20210730 14:40:47.181" endtime="20210730 14:40:47.185"/>
</iter>
<iter>
<var name="${pid}">29299</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:47.191" level="INFO">Running command 'kill 29299 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:47.186" endtime="20210730 14:40:47.192"/>
</kw>
<status status="PASS" starttime="20210730 14:40:47.185" endtime="20210730 14:40:47.192"/>
</iter>
<status status="PASS" starttime="20210730 14:40:47.176" endtime="20210730 14:40:47.192"/>
</for>
<status status="PASS" starttime="20210730 14:40:47.175" endtime="20210730 14:40:47.192"/>
</branch>
<status status="PASS" starttime="20210730 14:40:47.175" endtime="20210730 14:40:47.192"/>
</if>
<status status="PASS" starttime="20210730 14:40:47.159" endtime="20210730 14:40:47.192"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": '012!.Aab'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:45.558" endtime="20210730 14:40:47.193">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t98" name="With Each Valid Token, Updating Password Of Each System User With 012!.Aab012!.Aab012!.A Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:47.198" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:47.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:47.210" level="INFO">${pids} = 29328</msg>
<status status="PASS" starttime="20210730 14:40:47.195" endtime="20210730 14:40:47.210"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:47.211" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:47.210" endtime="20210730 14:40:47.211"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:47.211" level="INFO">${pids} = ['29328']</msg>
<status status="PASS" starttime="20210730 14:40:47.211" endtime="20210730 14:40:47.211"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">29328</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:47.215" level="INFO">Running command 'kill 29328 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:47.212" endtime="20210730 14:40:47.216"/>
</kw>
<status status="PASS" starttime="20210730 14:40:47.212" endtime="20210730 14:40:47.216"/>
</iter>
<status status="PASS" starttime="20210730 14:40:47.211" endtime="20210730 14:40:47.216"/>
</for>
<status status="PASS" starttime="20210730 14:40:47.211" endtime="20210730 14:40:47.216"/>
</branch>
<status status="PASS" starttime="20210730 14:40:47.211" endtime="20210730 14:40:47.216"/>
</if>
<status status="PASS" starttime="20210730 14:40:47.195" endtime="20210730 14:40:47.216"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:47.217" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:47.217" endtime="20210730 14:40:47.217"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:47.218" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:47.218" endtime="20210730 14:40:47.218"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:47.218" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:47.218" endtime="20210730 14:40:47.218"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:47.219" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:47.219" endtime="20210730 14:40:47.219"/>
</kw>
<msg timestamp="20210730 14:40:47.219" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:47.218" endtime="20210730 14:40:47.220"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:47.227" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:47.220" endtime="20210730 14:40:47.229"/>
</kw>
<status status="PASS" starttime="20210730 14:40:47.217" endtime="20210730 14:40:47.231"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:47.233" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:47.232" endtime="20210730 14:40:47.237"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:48.740" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:47.238" endtime="20210730 14:40:48.741"/>
</kw>
<status status="PASS" starttime="20210730 14:40:47.231" endtime="20210730 14:40:48.742"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:48.743" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:48.743" endtime="20210730 14:40:48.743"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:48.744" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:48.743" endtime="20210730 14:40:48.744"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:48.744" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:48.744" endtime="20210730 14:40:48.744"/>
</kw>
<msg timestamp="20210730 14:40:48.744" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:48.743" endtime="20210730 14:40:48.744"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:48.745" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:48.744" endtime="20210730 14:40:48.746"/>
</kw>
<status status="PASS" starttime="20210730 14:40:48.742" endtime="20210730 14:40:48.746"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:48.747" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:48.747" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:48.746" endtime="20210730 14:40:48.747"/>
</kw>
<status status="PASS" starttime="20210730 14:40:48.746" endtime="20210730 14:40:48.747"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:48.748" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:48.748" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:48.747" endtime="20210730 14:40:48.748"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:48.748" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:48.748" endtime="20210730 14:40:48.748"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:48.749" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:48.748" endtime="20210730 14:40:48.749"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:48.749" endtime="20210730 14:40:48.750"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:48.750" endtime="20210730 14:40:48.750"/>
</kw>
<status status="PASS" starttime="20210730 14:40:48.748" endtime="20210730 14:40:48.750"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:48.750" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:48.750" endtime="20210730 14:40:48.750"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:48.750" endtime="20210730 14:40:48.751"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:48.751" endtime="20210730 14:40:48.751"/>
</kw>
<status status="PASS" starttime="20210730 14:40:48.750" endtime="20210730 14:40:48.751"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:48.752" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:48.752" endtime="20210730 14:40:48.752"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:48.752" endtime="20210730 14:40:48.753"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:48.753" endtime="20210730 14:40:48.753"/>
</kw>
<status status="PASS" starttime="20210730 14:40:48.752" endtime="20210730 14:40:48.753"/>
</iter>
<status status="PASS" starttime="20210730 14:40:48.748" endtime="20210730 14:40:48.753"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:48.754" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:48.753" endtime="20210730 14:40:48.754"/>
</kw>
<status status="PASS" starttime="20210730 14:40:48.747" endtime="20210730 14:40:48.754"/>
</kw>
<status status="PASS" starttime="20210730 14:40:47.194" endtime="20210730 14:40:48.754"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=012!.Aab012!.Aab012!.A</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:48.755" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:48.755" endtime="20210730 14:40:48.755"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:48.756" level="INFO">${payload} = {'password': '012!.Aab012!.Aab012!.A'}</msg>
<status status="PASS" starttime="20210730 14:40:48.755" endtime="20210730 14:40:48.756"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:48.765" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:48.765" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:48.756" endtime="20210730 14:40:48.765"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:48.766" endtime="20210730 14:40:48.766"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:48.766" endtime="20210730 14:40:48.766"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:48.756" endtime="20210730 14:40:48.766"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:48.756" endtime="20210730 14:40:48.766"/>
</for>
<status status="FAIL" starttime="20210730 14:40:48.754" endtime="20210730 14:40:48.766"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:48.754" endtime="20210730 14:40:48.766"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'password': 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=012!.Aab012!.Aab012!.A</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:48.767" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210730 14:40:48.767" endtime="20210730 14:40:48.767"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:48.767" level="INFO">${payload} = {'password': '012!.Aab012!.Aab012!.A'}</msg>
<status status="PASS" starttime="20210730 14:40:48.767" endtime="20210730 14:40:48.768"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:48.772" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:48.772" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:48.768" endtime="20210730 14:40:48.772"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:48.772" endtime="20210730 14:40:48.772"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:48.772" endtime="20210730 14:40:48.772"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:48.768" endtime="20210730 14:40:48.772"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:48.768" endtime="20210730 14:40:48.773"/>
</for>
<status status="FAIL" starttime="20210730 14:40:48.766" endtime="20210730 14:40:48.773"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:48.766" endtime="20210730 14:40:48.773"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'password': 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094...</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password=012!.Aab012!.Aab012!.A</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:48.774" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210730 14:40:48.774" endtime="20210730 14:40:48.774"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:48.775" level="INFO">${payload} = {'password': '012!.Aab012!.Aab012!.A'}</msg>
<status status="PASS" starttime="20210730 14:40:48.774" endtime="20210730 14:40:48.775"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:48.779" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:48.780" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:48.775" endtime="20210730 14:40:48.780"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210730 14:40:48.780" endtime="20210730 14:40:48.780"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210730 14:40:48.780" endtime="20210730 14:40:48.780"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:48.775" endtime="20210730 14:40:48.780"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:48.775" endtime="20210730 14:40:48.780"/>
</for>
<status status="FAIL" starttime="20210730 14:40:48.773" endtime="20210730 14:40:48.780"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:48.773" endtime="20210730 14:40:48.780"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:48.754" endtime="20210730 14:40:48.780"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:48.786" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:48.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:48.797" level="INFO">${pids} = 29351
29358
29362</msg>
<status status="PASS" starttime="20210730 14:40:48.782" endtime="20210730 14:40:48.797"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:48.798" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:48.797" endtime="20210730 14:40:48.798"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:48.798" level="INFO">${pids} = ['29351', '29358', '29362']</msg>
<status status="PASS" starttime="20210730 14:40:48.798" endtime="20210730 14:40:48.799"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">29351</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:48.802" level="INFO">Running command 'kill 29351 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:48.799" endtime="20210730 14:40:48.802"/>
</kw>
<status status="PASS" starttime="20210730 14:40:48.799" endtime="20210730 14:40:48.802"/>
</iter>
<iter>
<var name="${pid}">29358</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:48.806" level="INFO">Running command 'kill 29358 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:48.803" endtime="20210730 14:40:48.806"/>
</kw>
<status status="PASS" starttime="20210730 14:40:48.803" endtime="20210730 14:40:48.806"/>
</iter>
<iter>
<var name="${pid}">29362</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:48.812" level="INFO">Running command 'kill 29362 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:48.807" endtime="20210730 14:40:48.812"/>
</kw>
<status status="PASS" starttime="20210730 14:40:48.806" endtime="20210730 14:40:48.812"/>
</iter>
<status status="PASS" starttime="20210730 14:40:48.799" endtime="20210730 14:40:48.812"/>
</for>
<status status="PASS" starttime="20210730 14:40:48.798" endtime="20210730 14:40:48.812"/>
</branch>
<status status="PASS" starttime="20210730 14:40:48.798" endtime="20210730 14:40:48.813"/>
</if>
<status status="PASS" starttime="20210730 14:40:48.781" endtime="20210730 14:40:48.813"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
password as such:
{
"password": '012!.Aab012!.Aab012!.A'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:47.193" endtime="20210730 14:40:48.813">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t99" name="With Each Valid Token, Updating First Name Of Each System User With '' Results In Failure Status With Right Error Message">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:48.820" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:48.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:48.830" level="INFO">${pids} = 29391</msg>
<status status="PASS" starttime="20210730 14:40:48.815" endtime="20210730 14:40:48.830"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:48.831" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:48.831" endtime="20210730 14:40:48.831"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:48.832" level="INFO">${pids} = ['29391']</msg>
<status status="PASS" starttime="20210730 14:40:48.832" endtime="20210730 14:40:48.832"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">29391</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:48.836" level="INFO">Running command 'kill 29391 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:48.832" endtime="20210730 14:40:48.836"/>
</kw>
<status status="PASS" starttime="20210730 14:40:48.832" endtime="20210730 14:40:48.836"/>
</iter>
<status status="PASS" starttime="20210730 14:40:48.832" endtime="20210730 14:40:48.836"/>
</for>
<status status="PASS" starttime="20210730 14:40:48.832" endtime="20210730 14:40:48.836"/>
</branch>
<status status="PASS" starttime="20210730 14:40:48.832" endtime="20210730 14:40:48.836"/>
</if>
<status status="PASS" starttime="20210730 14:40:48.815" endtime="20210730 14:40:48.837"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:48.838" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:48.837" endtime="20210730 14:40:48.838"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:48.838" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:48.838" endtime="20210730 14:40:48.839"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:48.839" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:48.839" endtime="20210730 14:40:48.839"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:48.839" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:48.839" endtime="20210730 14:40:48.839"/>
</kw>
<msg timestamp="20210730 14:40:48.840" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:48.838" endtime="20210730 14:40:48.840"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:48.849" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:48.840" endtime="20210730 14:40:48.850"/>
</kw>
<status status="PASS" starttime="20210730 14:40:48.837" endtime="20210730 14:40:48.850"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:48.851" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:48.851" endtime="20210730 14:40:48.856"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:50.358" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:48.856" endtime="20210730 14:40:50.358"/>
</kw>
<status status="PASS" starttime="20210730 14:40:48.850" endtime="20210730 14:40:50.358"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:50.359" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:50.359" endtime="20210730 14:40:50.359"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:50.360" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:50.360" endtime="20210730 14:40:50.360"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:50.360" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:50.360" endtime="20210730 14:40:50.360"/>
</kw>
<msg timestamp="20210730 14:40:50.360" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:50.359" endtime="20210730 14:40:50.360"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:50.361" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:50.361" endtime="20210730 14:40:50.361"/>
</kw>
<status status="PASS" starttime="20210730 14:40:50.358" endtime="20210730 14:40:50.361"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:50.362" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:50.362" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:50.362" endtime="20210730 14:40:50.362"/>
</kw>
<status status="PASS" starttime="20210730 14:40:50.361" endtime="20210730 14:40:50.362"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:50.363" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:50.363" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:50.363" endtime="20210730 14:40:50.363"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:50.364" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:50.363" endtime="20210730 14:40:50.364"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:50.364" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:50.364" endtime="20210730 14:40:50.364"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:50.364" endtime="20210730 14:40:50.365"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:50.365" endtime="20210730 14:40:50.366"/>
</kw>
<status status="PASS" starttime="20210730 14:40:50.364" endtime="20210730 14:40:50.366"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:50.366" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:50.366" endtime="20210730 14:40:50.366"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:50.366" endtime="20210730 14:40:50.367"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:50.367" endtime="20210730 14:40:50.367"/>
</kw>
<status status="PASS" starttime="20210730 14:40:50.366" endtime="20210730 14:40:50.367"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:50.367" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:50.367" endtime="20210730 14:40:50.367"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:50.368" endtime="20210730 14:40:50.368"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:50.368" endtime="20210730 14:40:50.369"/>
</kw>
<status status="PASS" starttime="20210730 14:40:50.367" endtime="20210730 14:40:50.369"/>
</iter>
<status status="PASS" starttime="20210730 14:40:50.364" endtime="20210730 14:40:50.369"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:50.369" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:50.369" endtime="20210730 14:40:50.369"/>
</kw>
<status status="PASS" starttime="20210730 14:40:50.362" endtime="20210730 14:40:50.369"/>
</kw>
<status status="PASS" starttime="20210730 14:40:48.814" endtime="20210730 14:40:50.369"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 14:40:50.373" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:40:50.370" endtime="20210730 14:40:50.373"/>
</kw>
<msg timestamp="20210730 14:40:50.373" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:40:50.370" endtime="20210730 14:40:50.373"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>first_name</arg>
<arg>An empty first name</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 14:40:50.374" endtime="20210730 14:40:50.374"/>
</kw>
<status status="PASS" starttime="20210730 14:40:50.373" endtime="20210730 14:40:50.374"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=firstname</arg>
<arg>field_data=${user_data}[first_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:50.376" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:50.376" endtime="20210730 14:40:50.376"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:50.377" level="INFO">${payload} = {'firstname': ''}</msg>
<status status="PASS" starttime="20210730 14:40:50.376" endtime="20210730 14:40:50.377"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:50.386" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:50.386" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:50.377" endtime="20210730 14:40:50.387"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 14:40:50.387" endtime="20210730 14:40:50.387"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 14:40:50.387" endtime="20210730 14:40:50.387"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:50.377" endtime="20210730 14:40:50.387"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:50.377" endtime="20210730 14:40:50.387"/>
</for>
<status status="FAIL" starttime="20210730 14:40:50.375" endtime="20210730 14:40:50.387"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:50.375" endtime="20210730 14:40:50.387"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:50.375" endtime="20210730 14:40:50.387"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:50.391" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:50.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:50.403" level="INFO">${pids} = 29414
29421
29424</msg>
<status status="PASS" starttime="20210730 14:40:50.388" endtime="20210730 14:40:50.403"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:50.405" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:50.403" endtime="20210730 14:40:50.405"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:50.406" level="INFO">${pids} = ['29414', '29421', '29424']</msg>
<status status="PASS" starttime="20210730 14:40:50.406" endtime="20210730 14:40:50.406"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">29414</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:50.410" level="INFO">Running command 'kill 29414 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:50.407" endtime="20210730 14:40:50.412"/>
</kw>
<status status="PASS" starttime="20210730 14:40:50.406" endtime="20210730 14:40:50.412"/>
</iter>
<iter>
<var name="${pid}">29421</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:50.415" level="INFO">Running command 'kill 29421 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:50.412" endtime="20210730 14:40:50.416"/>
</kw>
<status status="PASS" starttime="20210730 14:40:50.412" endtime="20210730 14:40:50.416"/>
</iter>
<iter>
<var name="${pid}">29424</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:50.420" level="INFO">Running command 'kill 29424 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:50.416" endtime="20210730 14:40:50.420"/>
</kw>
<status status="PASS" starttime="20210730 14:40:50.416" endtime="20210730 14:40:50.420"/>
</iter>
<status status="PASS" starttime="20210730 14:40:50.406" endtime="20210730 14:40:50.420"/>
</for>
<status status="PASS" starttime="20210730 14:40:50.405" endtime="20210730 14:40:50.420"/>
</branch>
<status status="PASS" starttime="20210730 14:40:50.405" endtime="20210730 14:40:50.420"/>
</if>
<status status="PASS" starttime="20210730 14:40:50.388" endtime="20210730 14:40:50.421"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
firstname as such:
{
"firstname": ''
}
Then, each request should fail with the following response body:
{
"message": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:48.814" endtime="20210730 14:40:50.421">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t100" name="With Each Valid Token, Updating First Name Of Each System User With Hakan Results In Success">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:50.426" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:50.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:50.437" level="INFO">${pids} = 29454</msg>
<status status="PASS" starttime="20210730 14:40:50.423" endtime="20210730 14:40:50.437"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:50.438" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:50.438" endtime="20210730 14:40:50.438"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:50.439" level="INFO">${pids} = ['29454']</msg>
<status status="PASS" starttime="20210730 14:40:50.439" endtime="20210730 14:40:50.439"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">29454</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:50.444" level="INFO">Running command 'kill 29454 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:50.440" endtime="20210730 14:40:50.444"/>
</kw>
<status status="PASS" starttime="20210730 14:40:50.440" endtime="20210730 14:40:50.445"/>
</iter>
<status status="PASS" starttime="20210730 14:40:50.439" endtime="20210730 14:40:50.445"/>
</for>
<status status="PASS" starttime="20210730 14:40:50.439" endtime="20210730 14:40:50.445"/>
</branch>
<status status="PASS" starttime="20210730 14:40:50.438" endtime="20210730 14:40:50.445"/>
</if>
<status status="PASS" starttime="20210730 14:40:50.423" endtime="20210730 14:40:50.445"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:50.446" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:50.446" endtime="20210730 14:40:50.446"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:50.447" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:50.447" endtime="20210730 14:40:50.447"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:50.447" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:50.447" endtime="20210730 14:40:50.447"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:50.448" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:50.447" endtime="20210730 14:40:50.448"/>
</kw>
<msg timestamp="20210730 14:40:50.448" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:50.446" endtime="20210730 14:40:50.448"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:50.459" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:50.448" endtime="20210730 14:40:50.461"/>
</kw>
<status status="PASS" starttime="20210730 14:40:50.445" endtime="20210730 14:40:50.461"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:50.463" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:50.462" endtime="20210730 14:40:50.470"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:51.971" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:50.470" endtime="20210730 14:40:51.972"/>
</kw>
<status status="PASS" starttime="20210730 14:40:50.462" endtime="20210730 14:40:51.973"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:51.974" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:51.974" endtime="20210730 14:40:51.974"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:51.974" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:51.974" endtime="20210730 14:40:51.974"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:51.975" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:51.974" endtime="20210730 14:40:51.975"/>
</kw>
<msg timestamp="20210730 14:40:51.975" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:51.973" endtime="20210730 14:40:51.975"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:51.976" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:51.975" endtime="20210730 14:40:51.976"/>
</kw>
<status status="PASS" starttime="20210730 14:40:51.973" endtime="20210730 14:40:51.977"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:51.977" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:51.977" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:51.977" endtime="20210730 14:40:51.978"/>
</kw>
<status status="PASS" starttime="20210730 14:40:51.977" endtime="20210730 14:40:51.978"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:51.978" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:51.978" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:51.978" endtime="20210730 14:40:51.978"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:51.979" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:51.979" endtime="20210730 14:40:51.979"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:51.979" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:51.979" endtime="20210730 14:40:51.979"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:51.979" endtime="20210730 14:40:51.980"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:51.980" endtime="20210730 14:40:51.981"/>
</kw>
<status status="PASS" starttime="20210730 14:40:51.979" endtime="20210730 14:40:51.981"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:51.981" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:51.981" endtime="20210730 14:40:51.981"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:51.981" endtime="20210730 14:40:51.982"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:51.982" endtime="20210730 14:40:51.982"/>
</kw>
<status status="PASS" starttime="20210730 14:40:51.981" endtime="20210730 14:40:51.982"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:51.983" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:51.983" endtime="20210730 14:40:51.983"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:51.983" endtime="20210730 14:40:51.984"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:51.984" endtime="20210730 14:40:51.984"/>
</kw>
<status status="PASS" starttime="20210730 14:40:51.982" endtime="20210730 14:40:51.984"/>
</iter>
<status status="PASS" starttime="20210730 14:40:51.979" endtime="20210730 14:40:51.984"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:51.984" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:51.984" endtime="20210730 14:40:51.985"/>
</kw>
<status status="PASS" starttime="20210730 14:40:51.978" endtime="20210730 14:40:51.985"/>
</kw>
<status status="PASS" starttime="20210730 14:40:50.422" endtime="20210730 14:40:51.985"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 14:40:51.988" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:40:51.985" endtime="20210730 14:40:51.988"/>
</kw>
<msg timestamp="20210730 14:40:51.988" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:40:51.985" endtime="20210730 14:40:51.988"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>first_name</arg>
<arg>A first name containing more than 2 characters</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 14:40:51.989" endtime="20210730 14:40:51.989"/>
</kw>
<status status="PASS" starttime="20210730 14:40:51.988" endtime="20210730 14:40:51.989"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=firstname</arg>
<arg>field_data=${user_data}[first_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:51.991" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:51.990" endtime="20210730 14:40:51.991"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:51.991" level="INFO">${payload} = {'firstname': 'Hakan'}</msg>
<status status="PASS" starttime="20210730 14:40:51.991" endtime="20210730 14:40:51.991"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:52.001" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:52.001" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:51.992" endtime="20210730 14:40:52.001"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 14:40:52.001" endtime="20210730 14:40:52.001"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 14:40:52.001" endtime="20210730 14:40:52.001"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:51.992" endtime="20210730 14:40:52.001"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:51.991" endtime="20210730 14:40:52.002"/>
</for>
<status status="FAIL" starttime="20210730 14:40:51.990" endtime="20210730 14:40:52.002"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:51.990" endtime="20210730 14:40:52.002"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:51.989" endtime="20210730 14:40:52.002"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:52.006" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:52.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:52.019" level="INFO">${pids} = 29477
29484
29487</msg>
<status status="PASS" starttime="20210730 14:40:52.003" endtime="20210730 14:40:52.019"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:52.020" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:52.020" endtime="20210730 14:40:52.021"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:52.021" level="INFO">${pids} = ['29477', '29484', '29487']</msg>
<status status="PASS" starttime="20210730 14:40:52.021" endtime="20210730 14:40:52.021"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">29477</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:52.025" level="INFO">Running command 'kill 29477 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:52.022" endtime="20210730 14:40:52.026"/>
</kw>
<status status="PASS" starttime="20210730 14:40:52.022" endtime="20210730 14:40:52.026"/>
</iter>
<iter>
<var name="${pid}">29484</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:52.030" level="INFO">Running command 'kill 29484 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:52.026" endtime="20210730 14:40:52.032"/>
</kw>
<status status="PASS" starttime="20210730 14:40:52.026" endtime="20210730 14:40:52.032"/>
</iter>
<iter>
<var name="${pid}">29487</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:52.035" level="INFO">Running command 'kill 29487 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:52.032" endtime="20210730 14:40:52.036"/>
</kw>
<status status="PASS" starttime="20210730 14:40:52.032" endtime="20210730 14:40:52.036"/>
</iter>
<status status="PASS" starttime="20210730 14:40:52.021" endtime="20210730 14:40:52.036"/>
</for>
<status status="PASS" starttime="20210730 14:40:52.021" endtime="20210730 14:40:52.036"/>
</branch>
<status status="PASS" starttime="20210730 14:40:52.021" endtime="20210730 14:40:52.036"/>
</if>
<status status="PASS" starttime="20210730 14:40:52.002" endtime="20210730 14:40:52.036"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
firstname as such:
{
"firstname": 'Hakan'
}
Then, each request should fail with the following response body:
{
"message": "Updated",
"status": "SUCCESS"
}
This test not only verifies message and status but also verifies that the &lt;username&gt;'s data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:50.421" endtime="20210730 14:40:52.036">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t101" name="With Each Valid Token, Updating First Name Of Each System User With Hakan123!?. Results In Failure Status With Right Error Message">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:52.043" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:52.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:52.056" level="INFO">${pids} = 29516</msg>
<status status="PASS" starttime="20210730 14:40:52.039" endtime="20210730 14:40:52.056"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:52.057" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:52.056" endtime="20210730 14:40:52.057"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:52.058" level="INFO">${pids} = ['29516']</msg>
<status status="PASS" starttime="20210730 14:40:52.057" endtime="20210730 14:40:52.058"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">29516</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:52.063" level="INFO">Running command 'kill 29516 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:52.058" endtime="20210730 14:40:52.064"/>
</kw>
<status status="PASS" starttime="20210730 14:40:52.058" endtime="20210730 14:40:52.064"/>
</iter>
<status status="PASS" starttime="20210730 14:40:52.058" endtime="20210730 14:40:52.064"/>
</for>
<status status="PASS" starttime="20210730 14:40:52.057" endtime="20210730 14:40:52.064"/>
</branch>
<status status="PASS" starttime="20210730 14:40:52.057" endtime="20210730 14:40:52.064"/>
</if>
<status status="PASS" starttime="20210730 14:40:52.038" endtime="20210730 14:40:52.072"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:52.076" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:52.075" endtime="20210730 14:40:52.076"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:52.077" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:52.076" endtime="20210730 14:40:52.077"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:52.077" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:52.077" endtime="20210730 14:40:52.077"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:52.078" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:52.078" endtime="20210730 14:40:52.078"/>
</kw>
<msg timestamp="20210730 14:40:52.078" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:52.076" endtime="20210730 14:40:52.078"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:52.083" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:52.079" endtime="20210730 14:40:52.084"/>
</kw>
<status status="PASS" starttime="20210730 14:40:52.072" endtime="20210730 14:40:52.084"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:52.086" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:52.085" endtime="20210730 14:40:52.090"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:53.591" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:52.090" endtime="20210730 14:40:53.592"/>
</kw>
<status status="PASS" starttime="20210730 14:40:52.085" endtime="20210730 14:40:53.592"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:53.593" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:53.593" endtime="20210730 14:40:53.593"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:53.594" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:53.593" endtime="20210730 14:40:53.594"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:53.594" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:53.594" endtime="20210730 14:40:53.594"/>
</kw>
<msg timestamp="20210730 14:40:53.594" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:53.593" endtime="20210730 14:40:53.594"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:53.595" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:53.594" endtime="20210730 14:40:53.595"/>
</kw>
<status status="PASS" starttime="20210730 14:40:53.592" endtime="20210730 14:40:53.595"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:53.596" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:53.596" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:53.596" endtime="20210730 14:40:53.596"/>
</kw>
<status status="PASS" starttime="20210730 14:40:53.595" endtime="20210730 14:40:53.596"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:53.597" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:53.597" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:53.596" endtime="20210730 14:40:53.597"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:53.597" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:53.597" endtime="20210730 14:40:53.597"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:53.598" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:53.597" endtime="20210730 14:40:53.598"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:53.598" endtime="20210730 14:40:53.598"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:53.599" endtime="20210730 14:40:53.599"/>
</kw>
<status status="PASS" starttime="20210730 14:40:53.597" endtime="20210730 14:40:53.599"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:53.599" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:53.599" endtime="20210730 14:40:53.599"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:53.599" endtime="20210730 14:40:53.600"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:53.600" endtime="20210730 14:40:53.601"/>
</kw>
<status status="PASS" starttime="20210730 14:40:53.599" endtime="20210730 14:40:53.601"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:53.601" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:53.601" endtime="20210730 14:40:53.601"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:53.601" endtime="20210730 14:40:53.602"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:53.602" endtime="20210730 14:40:53.602"/>
</kw>
<status status="PASS" starttime="20210730 14:40:53.601" endtime="20210730 14:40:53.602"/>
</iter>
<status status="PASS" starttime="20210730 14:40:53.597" endtime="20210730 14:40:53.602"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:53.603" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:53.603" endtime="20210730 14:40:53.603"/>
</kw>
<status status="PASS" starttime="20210730 14:40:53.596" endtime="20210730 14:40:53.603"/>
</kw>
<status status="PASS" starttime="20210730 14:40:52.038" endtime="20210730 14:40:53.603"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 14:40:53.607" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:40:53.604" endtime="20210730 14:40:53.607"/>
</kw>
<msg timestamp="20210730 14:40:53.607" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:40:53.603" endtime="20210730 14:40:53.607"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>first_name</arg>
<arg>A name containing numbers and non-alphanumeric characters</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 14:40:53.608" endtime="20210730 14:40:53.610"/>
</kw>
<status status="PASS" starttime="20210730 14:40:53.608" endtime="20210730 14:40:53.610"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=firstname</arg>
<arg>field_data=${user_data}[first_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:53.612" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:53.611" endtime="20210730 14:40:53.612"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:53.612" level="INFO">${payload} = {'firstname': 'Hakan123!?.'}</msg>
<status status="PASS" starttime="20210730 14:40:53.612" endtime="20210730 14:40:53.612"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:53.624" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:53.624" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:53.612" endtime="20210730 14:40:53.624"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 14:40:53.625" endtime="20210730 14:40:53.625"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 14:40:53.625" endtime="20210730 14:40:53.625"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:53.612" endtime="20210730 14:40:53.625"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:53.612" endtime="20210730 14:40:53.625"/>
</for>
<status status="FAIL" starttime="20210730 14:40:53.610" endtime="20210730 14:40:53.625"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:53.610" endtime="20210730 14:40:53.625"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:53.610" endtime="20210730 14:40:53.626"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:53.630" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:53.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:53.641" level="INFO">${pids} = 29539
29546
29549</msg>
<status status="PASS" starttime="20210730 14:40:53.626" endtime="20210730 14:40:53.641"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:53.642" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:53.642" endtime="20210730 14:40:53.642"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:53.643" level="INFO">${pids} = ['29539', '29546', '29549']</msg>
<status status="PASS" starttime="20210730 14:40:53.643" endtime="20210730 14:40:53.643"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">29539</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:53.647" level="INFO">Running command 'kill 29539 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:53.644" endtime="20210730 14:40:53.648"/>
</kw>
<status status="PASS" starttime="20210730 14:40:53.644" endtime="20210730 14:40:53.648"/>
</iter>
<iter>
<var name="${pid}">29546</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:53.651" level="INFO">Running command 'kill 29546 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:53.648" endtime="20210730 14:40:53.652"/>
</kw>
<status status="PASS" starttime="20210730 14:40:53.648" endtime="20210730 14:40:53.652"/>
</iter>
<iter>
<var name="${pid}">29549</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:53.655" level="INFO">Running command 'kill 29549 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:53.652" endtime="20210730 14:40:53.656"/>
</kw>
<status status="PASS" starttime="20210730 14:40:53.652" endtime="20210730 14:40:53.656"/>
</iter>
<status status="PASS" starttime="20210730 14:40:53.643" endtime="20210730 14:40:53.656"/>
</for>
<status status="PASS" starttime="20210730 14:40:53.643" endtime="20210730 14:40:53.656"/>
</branch>
<status status="PASS" starttime="20210730 14:40:53.642" endtime="20210730 14:40:53.656"/>
</if>
<status status="PASS" starttime="20210730 14:40:53.626" endtime="20210730 14:40:53.656"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
firstname as such:
{
"firstname": 'Hakan123!?.'
}
Then, each request should fail with the following response body:
{
"message": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:52.037" endtime="20210730 14:40:53.657">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t102" name="With Each Valid Token, Updating First Name Of Each System User With Ha Results In Success">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:53.665" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:53.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:53.673" level="INFO">${pids} = 29578</msg>
<status status="PASS" starttime="20210730 14:40:53.659" endtime="20210730 14:40:53.673"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:53.674" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:53.673" endtime="20210730 14:40:53.674"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:53.675" level="INFO">${pids} = ['29578']</msg>
<status status="PASS" starttime="20210730 14:40:53.675" endtime="20210730 14:40:53.675"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">29578</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:53.681" level="INFO">Running command 'kill 29578 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:53.676" endtime="20210730 14:40:53.681"/>
</kw>
<status status="PASS" starttime="20210730 14:40:53.675" endtime="20210730 14:40:53.691"/>
</iter>
<status status="PASS" starttime="20210730 14:40:53.675" endtime="20210730 14:40:53.692"/>
</for>
<status status="PASS" starttime="20210730 14:40:53.674" endtime="20210730 14:40:53.692"/>
</branch>
<status status="PASS" starttime="20210730 14:40:53.674" endtime="20210730 14:40:53.692"/>
</if>
<status status="PASS" starttime="20210730 14:40:53.658" endtime="20210730 14:40:53.692"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:53.695" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:53.694" endtime="20210730 14:40:53.695"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:53.696" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:53.696" endtime="20210730 14:40:53.696"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:53.697" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:53.696" endtime="20210730 14:40:53.697"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:53.697" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:53.697" endtime="20210730 14:40:53.697"/>
</kw>
<msg timestamp="20210730 14:40:53.697" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:53.695" endtime="20210730 14:40:53.697"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:53.703" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:53.698" endtime="20210730 14:40:53.709"/>
</kw>
<status status="PASS" starttime="20210730 14:40:53.692" endtime="20210730 14:40:53.710"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:53.713" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:53.712" endtime="20210730 14:40:53.719"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:55.221" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:53.720" endtime="20210730 14:40:55.221"/>
</kw>
<status status="PASS" starttime="20210730 14:40:53.711" endtime="20210730 14:40:55.221"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:55.222" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:55.222" endtime="20210730 14:40:55.222"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:55.223" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:55.222" endtime="20210730 14:40:55.223"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:55.223" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:55.223" endtime="20210730 14:40:55.223"/>
</kw>
<msg timestamp="20210730 14:40:55.223" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:55.222" endtime="20210730 14:40:55.223"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:55.224" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:55.223" endtime="20210730 14:40:55.224"/>
</kw>
<status status="PASS" starttime="20210730 14:40:55.221" endtime="20210730 14:40:55.224"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:55.225" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:55.225" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:55.224" endtime="20210730 14:40:55.225"/>
</kw>
<status status="PASS" starttime="20210730 14:40:55.224" endtime="20210730 14:40:55.225"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:55.226" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:55.226" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:55.226" endtime="20210730 14:40:55.226"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:55.226" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:55.226" endtime="20210730 14:40:55.226"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:55.227" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:55.227" endtime="20210730 14:40:55.227"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:55.227" endtime="20210730 14:40:55.228"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:55.228" endtime="20210730 14:40:55.228"/>
</kw>
<status status="PASS" starttime="20210730 14:40:55.226" endtime="20210730 14:40:55.228"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:55.228" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:55.228" endtime="20210730 14:40:55.228"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:55.229" endtime="20210730 14:40:55.229"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:55.229" endtime="20210730 14:40:55.230"/>
</kw>
<status status="PASS" starttime="20210730 14:40:55.228" endtime="20210730 14:40:55.230"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:55.230" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:55.230" endtime="20210730 14:40:55.230"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:55.230" endtime="20210730 14:40:55.231"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:55.231" endtime="20210730 14:40:55.231"/>
</kw>
<status status="PASS" starttime="20210730 14:40:55.230" endtime="20210730 14:40:55.231"/>
</iter>
<status status="PASS" starttime="20210730 14:40:55.226" endtime="20210730 14:40:55.231"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:55.232" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:55.231" endtime="20210730 14:40:55.232"/>
</kw>
<status status="PASS" starttime="20210730 14:40:55.225" endtime="20210730 14:40:55.232"/>
</kw>
<status status="PASS" starttime="20210730 14:40:53.658" endtime="20210730 14:40:55.232"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 14:40:55.235" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:40:55.232" endtime="20210730 14:40:55.235"/>
</kw>
<msg timestamp="20210730 14:40:55.235" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:40:55.232" endtime="20210730 14:40:55.235"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>first_name</arg>
<arg>A minimum 2 characters first name</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 14:40:55.236" endtime="20210730 14:40:55.236"/>
</kw>
<status status="PASS" starttime="20210730 14:40:55.235" endtime="20210730 14:40:55.236"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=firstname</arg>
<arg>field_data=${user_data}[first_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:55.238" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:55.237" endtime="20210730 14:40:55.238"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:55.238" level="INFO">${payload} = {'firstname': 'Ha'}</msg>
<status status="PASS" starttime="20210730 14:40:55.238" endtime="20210730 14:40:55.238"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:55.250" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:55.250" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:55.239" endtime="20210730 14:40:55.250"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 14:40:55.250" endtime="20210730 14:40:55.251"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 14:40:55.251" endtime="20210730 14:40:55.251"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:55.239" endtime="20210730 14:40:55.251"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:55.238" endtime="20210730 14:40:55.251"/>
</for>
<status status="FAIL" starttime="20210730 14:40:55.237" endtime="20210730 14:40:55.251"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:55.237" endtime="20210730 14:40:55.251"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:55.236" endtime="20210730 14:40:55.251"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:55.255" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:55.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:55.266" level="INFO">${pids} = 29602
29609
29618</msg>
<status status="PASS" starttime="20210730 14:40:55.252" endtime="20210730 14:40:55.266"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:55.267" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:55.266" endtime="20210730 14:40:55.267"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:55.267" level="INFO">${pids} = ['29602', '29609', '29618']</msg>
<status status="PASS" starttime="20210730 14:40:55.267" endtime="20210730 14:40:55.267"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">29602</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:55.271" level="INFO">Running command 'kill 29602 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:55.268" endtime="20210730 14:40:55.272"/>
</kw>
<status status="PASS" starttime="20210730 14:40:55.268" endtime="20210730 14:40:55.272"/>
</iter>
<iter>
<var name="${pid}">29609</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:55.277" level="INFO">Running command 'kill 29609 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:55.273" endtime="20210730 14:40:55.278"/>
</kw>
<status status="PASS" starttime="20210730 14:40:55.273" endtime="20210730 14:40:55.278"/>
</iter>
<iter>
<var name="${pid}">29618</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:55.282" level="INFO">Running command 'kill 29618 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:55.279" endtime="20210730 14:40:55.282"/>
</kw>
<status status="PASS" starttime="20210730 14:40:55.278" endtime="20210730 14:40:55.282"/>
</iter>
<status status="PASS" starttime="20210730 14:40:55.267" endtime="20210730 14:40:55.282"/>
</for>
<status status="PASS" starttime="20210730 14:40:55.267" endtime="20210730 14:40:55.282"/>
</branch>
<status status="PASS" starttime="20210730 14:40:55.267" endtime="20210730 14:40:55.282"/>
</if>
<status status="PASS" starttime="20210730 14:40:55.251" endtime="20210730 14:40:55.283"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
firstname as such:
{
"firstname": 'Ha'
}
Then, each request should fail with the following response body:
{
"message": "Updated",
"status": "SUCCESS"
}
This test not only verifies message and status but also verifies that the &lt;username&gt;'s data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:53.657" endtime="20210730 14:40:55.283">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t103" name="With Each Valid Token, Updating First Name Of Each System User With Ha Xu Results In Success">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:55.288" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:55.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:55.300" level="INFO">${pids} = 29647</msg>
<status status="PASS" starttime="20210730 14:40:55.285" endtime="20210730 14:40:55.300"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:55.301" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:55.300" endtime="20210730 14:40:55.301"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:55.302" level="INFO">${pids} = ['29647']</msg>
<status status="PASS" starttime="20210730 14:40:55.301" endtime="20210730 14:40:55.302"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">29647</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:55.306" level="INFO">Running command 'kill 29647 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:55.302" endtime="20210730 14:40:55.307"/>
</kw>
<status status="PASS" starttime="20210730 14:40:55.302" endtime="20210730 14:40:55.307"/>
</iter>
<status status="PASS" starttime="20210730 14:40:55.302" endtime="20210730 14:40:55.307"/>
</for>
<status status="PASS" starttime="20210730 14:40:55.301" endtime="20210730 14:40:55.307"/>
</branch>
<status status="PASS" starttime="20210730 14:40:55.301" endtime="20210730 14:40:55.307"/>
</if>
<status status="PASS" starttime="20210730 14:40:55.285" endtime="20210730 14:40:55.307"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:55.309" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:55.308" endtime="20210730 14:40:55.309"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:55.310" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:55.310" endtime="20210730 14:40:55.310"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:55.311" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:55.310" endtime="20210730 14:40:55.311"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:55.311" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:55.311" endtime="20210730 14:40:55.311"/>
</kw>
<msg timestamp="20210730 14:40:55.312" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:55.309" endtime="20210730 14:40:55.312"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:55.325" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:55.312" endtime="20210730 14:40:55.327"/>
</kw>
<status status="PASS" starttime="20210730 14:40:55.308" endtime="20210730 14:40:55.327"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:55.329" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:55.328" endtime="20210730 14:40:55.333"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:56.838" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:55.333" endtime="20210730 14:40:56.838"/>
</kw>
<status status="PASS" starttime="20210730 14:40:55.328" endtime="20210730 14:40:56.838"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:56.840" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:56.839" endtime="20210730 14:40:56.840"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:56.840" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:56.840" endtime="20210730 14:40:56.840"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:56.841" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:56.840" endtime="20210730 14:40:56.841"/>
</kw>
<msg timestamp="20210730 14:40:56.841" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:56.839" endtime="20210730 14:40:56.841"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:56.841" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:56.841" endtime="20210730 14:40:56.842"/>
</kw>
<status status="PASS" starttime="20210730 14:40:56.838" endtime="20210730 14:40:56.842"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:56.843" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:56.843" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:56.842" endtime="20210730 14:40:56.843"/>
</kw>
<status status="PASS" starttime="20210730 14:40:56.842" endtime="20210730 14:40:56.843"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:56.844" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:56.844" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:56.844" endtime="20210730 14:40:56.845"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:56.845" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:56.845" endtime="20210730 14:40:56.845"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:56.846" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:56.845" endtime="20210730 14:40:56.846"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:56.846" endtime="20210730 14:40:56.846"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:56.847" endtime="20210730 14:40:56.847"/>
</kw>
<status status="PASS" starttime="20210730 14:40:56.845" endtime="20210730 14:40:56.847"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:56.847" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:56.847" endtime="20210730 14:40:56.847"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:56.847" endtime="20210730 14:40:56.848"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:56.848" endtime="20210730 14:40:56.848"/>
</kw>
<status status="PASS" starttime="20210730 14:40:56.847" endtime="20210730 14:40:56.848"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:56.849" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:56.849" endtime="20210730 14:40:56.849"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:56.849" endtime="20210730 14:40:56.850"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:56.850" endtime="20210730 14:40:56.850"/>
</kw>
<status status="PASS" starttime="20210730 14:40:56.848" endtime="20210730 14:40:56.850"/>
</iter>
<status status="PASS" starttime="20210730 14:40:56.845" endtime="20210730 14:40:56.850"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:56.851" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:56.850" endtime="20210730 14:40:56.851"/>
</kw>
<status status="PASS" starttime="20210730 14:40:56.844" endtime="20210730 14:40:56.851"/>
</kw>
<status status="PASS" starttime="20210730 14:40:55.284" endtime="20210730 14:40:56.851"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 14:40:56.854" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:40:56.851" endtime="20210730 14:40:56.854"/>
</kw>
<msg timestamp="20210730 14:40:56.855" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:40:56.851" endtime="20210730 14:40:56.855"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>first_name</arg>
<arg>minimum 2 characters first names for each first name</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 14:40:56.855" endtime="20210730 14:40:56.856"/>
</kw>
<status status="PASS" starttime="20210730 14:40:56.855" endtime="20210730 14:40:56.856"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=firstname</arg>
<arg>field_data=${user_data}[first_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:56.857" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:56.857" endtime="20210730 14:40:56.857"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:56.858" level="INFO">${payload} = {'firstname': 'Ha Xu'}</msg>
<status status="PASS" starttime="20210730 14:40:56.857" endtime="20210730 14:40:56.858"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:56.868" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:56.868" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:56.858" endtime="20210730 14:40:56.868"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 14:40:56.869" endtime="20210730 14:40:56.869"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 14:40:56.869" endtime="20210730 14:40:56.869"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:56.858" endtime="20210730 14:40:56.869"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:56.858" endtime="20210730 14:40:56.869"/>
</for>
<status status="FAIL" starttime="20210730 14:40:56.856" endtime="20210730 14:40:56.869"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:56.856" endtime="20210730 14:40:56.869"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:56.856" endtime="20210730 14:40:56.869"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:56.873" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:56.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:56.885" level="INFO">${pids} = 29670
29677
29679</msg>
<status status="PASS" starttime="20210730 14:40:56.870" endtime="20210730 14:40:56.885"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:56.886" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:56.885" endtime="20210730 14:40:56.886"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:56.886" level="INFO">${pids} = ['29670', '29677', '29679']</msg>
<status status="PASS" starttime="20210730 14:40:56.886" endtime="20210730 14:40:56.886"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">29670</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:56.890" level="INFO">Running command 'kill 29670 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:56.887" endtime="20210730 14:40:56.891"/>
</kw>
<status status="PASS" starttime="20210730 14:40:56.887" endtime="20210730 14:40:56.891"/>
</iter>
<iter>
<var name="${pid}">29677</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:56.894" level="INFO">Running command 'kill 29677 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:56.891" endtime="20210730 14:40:56.896"/>
</kw>
<status status="PASS" starttime="20210730 14:40:56.891" endtime="20210730 14:40:56.896"/>
</iter>
<iter>
<var name="${pid}">29679</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:56.900" level="INFO">Running command 'kill 29679 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:56.897" endtime="20210730 14:40:56.900"/>
</kw>
<status status="PASS" starttime="20210730 14:40:56.897" endtime="20210730 14:40:56.900"/>
</iter>
<status status="PASS" starttime="20210730 14:40:56.886" endtime="20210730 14:40:56.900"/>
</for>
<status status="PASS" starttime="20210730 14:40:56.886" endtime="20210730 14:40:56.900"/>
</branch>
<status status="PASS" starttime="20210730 14:40:56.886" endtime="20210730 14:40:56.900"/>
</if>
<status status="PASS" starttime="20210730 14:40:56.870" endtime="20210730 14:40:56.901"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
firstname as such:
{
"firstname": 'Ha Xu'
}
Then, each request should fail with the following response body:
{
"message": "Updated",
"status": "SUCCESS"
}
This test not only verifies message and status but also verifies that the &lt;username&gt;'s data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:55.283" endtime="20210730 14:40:56.901">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t104" name="With Each Valid Token, Updating First Name Of Each System User With H Xu Results In Failure Status With Right Error Message">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:56.906" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:56.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:56.918" level="INFO">${pids} = 29708</msg>
<status status="PASS" starttime="20210730 14:40:56.903" endtime="20210730 14:40:56.918"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:56.919" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:56.919" endtime="20210730 14:40:56.919"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:56.920" level="INFO">${pids} = ['29708']</msg>
<status status="PASS" starttime="20210730 14:40:56.920" endtime="20210730 14:40:56.920"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">29708</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:56.935" level="INFO">Running command 'kill 29708 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:56.920" endtime="20210730 14:40:56.936"/>
</kw>
<status status="PASS" starttime="20210730 14:40:56.920" endtime="20210730 14:40:56.936"/>
</iter>
<status status="PASS" starttime="20210730 14:40:56.920" endtime="20210730 14:40:56.936"/>
</for>
<status status="PASS" starttime="20210730 14:40:56.919" endtime="20210730 14:40:56.936"/>
</branch>
<status status="PASS" starttime="20210730 14:40:56.919" endtime="20210730 14:40:56.936"/>
</if>
<status status="PASS" starttime="20210730 14:40:56.903" endtime="20210730 14:40:56.937"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:56.938" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:56.938" endtime="20210730 14:40:56.938"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:56.939" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:56.939" endtime="20210730 14:40:56.939"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:56.940" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:56.939" endtime="20210730 14:40:56.940"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:56.940" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:56.940" endtime="20210730 14:40:56.940"/>
</kw>
<msg timestamp="20210730 14:40:56.940" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:56.939" endtime="20210730 14:40:56.940"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:56.944" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:56.940" endtime="20210730 14:40:56.946"/>
</kw>
<status status="PASS" starttime="20210730 14:40:56.937" endtime="20210730 14:40:56.947"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:56.948" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:56.948" endtime="20210730 14:40:56.952"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:40:58.454" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:56.953" endtime="20210730 14:40:58.454"/>
</kw>
<status status="PASS" starttime="20210730 14:40:56.947" endtime="20210730 14:40:58.454"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:58.456" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:58.456" endtime="20210730 14:40:58.456"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:58.457" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:58.456" endtime="20210730 14:40:58.457"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:58.457" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:58.457" endtime="20210730 14:40:58.457"/>
</kw>
<msg timestamp="20210730 14:40:58.457" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:58.455" endtime="20210730 14:40:58.457"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:40:58.458" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:40:58.457" endtime="20210730 14:40:58.458"/>
</kw>
<status status="PASS" starttime="20210730 14:40:58.454" endtime="20210730 14:40:58.458"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:40:58.459" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:40:58.459" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:40:58.459" endtime="20210730 14:40:58.459"/>
</kw>
<status status="PASS" starttime="20210730 14:40:58.458" endtime="20210730 14:40:58.459"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:40:58.460" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:40:58.460" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:40:58.460" endtime="20210730 14:40:58.460"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:40:58.460" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:40:58.460" endtime="20210730 14:40:58.460"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:58.461" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:58.461" endtime="20210730 14:40:58.461"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:58.461" endtime="20210730 14:40:58.462"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:58.462" endtime="20210730 14:40:58.462"/>
</kw>
<status status="PASS" starttime="20210730 14:40:58.460" endtime="20210730 14:40:58.462"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:58.463" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:58.462" endtime="20210730 14:40:58.463"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:58.463" endtime="20210730 14:40:58.463"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:58.463" endtime="20210730 14:40:58.464"/>
</kw>
<status status="PASS" starttime="20210730 14:40:58.462" endtime="20210730 14:40:58.464"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:58.464" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:40:58.464" endtime="20210730 14:40:58.464"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:40:58.464" endtime="20210730 14:40:58.465"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:40:58.465" endtime="20210730 14:40:58.465"/>
</kw>
<status status="PASS" starttime="20210730 14:40:58.464" endtime="20210730 14:40:58.465"/>
</iter>
<status status="PASS" starttime="20210730 14:40:58.460" endtime="20210730 14:40:58.465"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:40:58.466" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:40:58.465" endtime="20210730 14:40:58.466"/>
</kw>
<status status="PASS" starttime="20210730 14:40:58.459" endtime="20210730 14:40:58.466"/>
</kw>
<status status="PASS" starttime="20210730 14:40:56.902" endtime="20210730 14:40:58.466"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 14:40:58.469" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:40:58.466" endtime="20210730 14:40:58.469"/>
</kw>
<msg timestamp="20210730 14:40:58.469" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:40:58.466" endtime="20210730 14:40:58.469"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>first_name</arg>
<arg>The first first name is invalid with only 1 letter, the second first name is valid</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 14:40:58.470" endtime="20210730 14:40:58.470"/>
</kw>
<status status="PASS" starttime="20210730 14:40:58.470" endtime="20210730 14:40:58.471"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=firstname</arg>
<arg>field_data=${user_data}[first_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:58.472" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:40:58.472" endtime="20210730 14:40:58.472"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:40:58.472" level="INFO">${payload} = {'firstname': 'H Xu'}</msg>
<status status="PASS" starttime="20210730 14:40:58.472" endtime="20210730 14:40:58.473"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:40:58.482" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:40:58.483" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:40:58.473" endtime="20210730 14:40:58.483"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 14:40:58.483" endtime="20210730 14:40:58.483"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 14:40:58.483" endtime="20210730 14:40:58.483"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:58.473" endtime="20210730 14:40:58.483"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:58.473" endtime="20210730 14:40:58.483"/>
</for>
<status status="FAIL" starttime="20210730 14:40:58.471" endtime="20210730 14:40:58.483"/>
</kw>
<status status="FAIL" starttime="20210730 14:40:58.471" endtime="20210730 14:40:58.483"/>
</iter>
<status status="FAIL" starttime="20210730 14:40:58.471" endtime="20210730 14:40:58.484"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:58.488" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:58.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:58.500" level="INFO">${pids} = 29731
29738
29740</msg>
<status status="PASS" starttime="20210730 14:40:58.484" endtime="20210730 14:40:58.500"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:58.502" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:58.501" endtime="20210730 14:40:58.502"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:58.503" level="INFO">${pids} = ['29731', '29738', '29740']</msg>
<status status="PASS" starttime="20210730 14:40:58.502" endtime="20210730 14:40:58.503"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">29731</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:58.510" level="INFO">Running command 'kill 29731 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:58.503" endtime="20210730 14:40:58.511"/>
</kw>
<status status="PASS" starttime="20210730 14:40:58.503" endtime="20210730 14:40:58.511"/>
</iter>
<iter>
<var name="${pid}">29738</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:58.517" level="INFO">Running command 'kill 29738 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:58.512" endtime="20210730 14:40:58.517"/>
</kw>
<status status="PASS" starttime="20210730 14:40:58.512" endtime="20210730 14:40:58.517"/>
</iter>
<iter>
<var name="${pid}">29740</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:58.522" level="INFO">Running command 'kill 29740 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:58.518" endtime="20210730 14:40:58.523"/>
</kw>
<status status="PASS" starttime="20210730 14:40:58.518" endtime="20210730 14:40:58.523"/>
</iter>
<status status="PASS" starttime="20210730 14:40:58.503" endtime="20210730 14:40:58.523"/>
</for>
<status status="PASS" starttime="20210730 14:40:58.502" endtime="20210730 14:40:58.523"/>
</branch>
<status status="PASS" starttime="20210730 14:40:58.502" endtime="20210730 14:40:58.523"/>
</if>
<status status="PASS" starttime="20210730 14:40:58.484" endtime="20210730 14:40:58.523"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
firstname as such:
{
"firstname": 'H Xu'
}
Then, each request should fail with the following response body:
{
"message": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:56.901" endtime="20210730 14:40:58.524">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t105" name="With Each Valid Token, Updating First Name Of Each System User With Ha X Results In Failure Status With Right Error Message">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:40:58.533" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:40:58.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:40:58.543" level="INFO">${pids} = 29769</msg>
<status status="PASS" starttime="20210730 14:40:58.526" endtime="20210730 14:40:58.543"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:58.544" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:40:58.543" endtime="20210730 14:40:58.544"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:40:58.545" level="INFO">${pids} = ['29769']</msg>
<status status="PASS" starttime="20210730 14:40:58.544" endtime="20210730 14:40:58.545"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">29769</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:58.551" level="INFO">Running command 'kill 29769 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:58.546" endtime="20210730 14:40:58.555"/>
</kw>
<status status="PASS" starttime="20210730 14:40:58.546" endtime="20210730 14:40:58.555"/>
</iter>
<status status="PASS" starttime="20210730 14:40:58.545" endtime="20210730 14:40:58.555"/>
</for>
<status status="PASS" starttime="20210730 14:40:58.544" endtime="20210730 14:40:58.555"/>
</branch>
<status status="PASS" starttime="20210730 14:40:58.544" endtime="20210730 14:40:58.555"/>
</if>
<status status="PASS" starttime="20210730 14:40:58.526" endtime="20210730 14:40:58.555"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:58.557" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:58.556" endtime="20210730 14:40:58.557"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:58.557" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:40:58.557" endtime="20210730 14:40:58.557"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:40:58.558" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:40:58.558" endtime="20210730 14:40:58.558"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:40:58.558" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:58.558" endtime="20210730 14:40:58.558"/>
</kw>
<msg timestamp="20210730 14:40:58.559" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:40:58.557" endtime="20210730 14:40:58.559"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:40:58.565" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:40:58.559" endtime="20210730 14:40:58.567"/>
</kw>
<status status="PASS" starttime="20210730 14:40:58.556" endtime="20210730 14:40:58.567"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:40:58.569" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:40:58.568" endtime="20210730 14:40:58.573"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:41:00.089" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:40:58.574" endtime="20210730 14:41:00.089"/>
</kw>
<status status="PASS" starttime="20210730 14:40:58.568" endtime="20210730 14:41:00.089"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:00.090" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:00.090" endtime="20210730 14:41:00.090"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:00.091" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:00.091" endtime="20210730 14:41:00.091"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:00.091" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:00.091" endtime="20210730 14:41:00.091"/>
</kw>
<msg timestamp="20210730 14:41:00.091" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:00.090" endtime="20210730 14:41:00.091"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:41:00.092" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:41:00.092" endtime="20210730 14:41:00.092"/>
</kw>
<status status="PASS" starttime="20210730 14:41:00.089" endtime="20210730 14:41:00.092"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:41:00.093" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:41:00.093" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:41:00.093" endtime="20210730 14:41:00.093"/>
</kw>
<status status="PASS" starttime="20210730 14:41:00.093" endtime="20210730 14:41:00.093"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:41:00.094" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:41:00.094" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:41:00.094" endtime="20210730 14:41:00.094"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:41:00.094" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:41:00.094" endtime="20210730 14:41:00.094"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:00.095" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:00.095" endtime="20210730 14:41:00.095"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:00.095" endtime="20210730 14:41:00.096"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:00.096" endtime="20210730 14:41:00.096"/>
</kw>
<status status="PASS" starttime="20210730 14:41:00.094" endtime="20210730 14:41:00.096"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:00.097" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:00.096" endtime="20210730 14:41:00.097"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:00.097" endtime="20210730 14:41:00.097"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:00.098" endtime="20210730 14:41:00.098"/>
</kw>
<status status="PASS" starttime="20210730 14:41:00.096" endtime="20210730 14:41:00.098"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:00.098" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:00.098" endtime="20210730 14:41:00.098"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:00.098" endtime="20210730 14:41:00.099"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:00.099" endtime="20210730 14:41:00.099"/>
</kw>
<status status="PASS" starttime="20210730 14:41:00.098" endtime="20210730 14:41:00.099"/>
</iter>
<status status="PASS" starttime="20210730 14:41:00.094" endtime="20210730 14:41:00.099"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:41:00.100" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:41:00.099" endtime="20210730 14:41:00.100"/>
</kw>
<status status="PASS" starttime="20210730 14:41:00.093" endtime="20210730 14:41:00.100"/>
</kw>
<status status="PASS" starttime="20210730 14:40:58.525" endtime="20210730 14:41:00.100"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 14:41:00.103" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:00.101" endtime="20210730 14:41:00.104"/>
</kw>
<msg timestamp="20210730 14:41:00.104" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:00.100" endtime="20210730 14:41:00.104"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>first_name</arg>
<arg>The second first name is invalid with only 1 letter, the first first name is valid</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 14:41:00.104" endtime="20210730 14:41:00.105"/>
</kw>
<status status="PASS" starttime="20210730 14:41:00.104" endtime="20210730 14:41:00.105"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=firstname</arg>
<arg>field_data=${user_data}[first_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:00.107" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:41:00.106" endtime="20210730 14:41:00.107"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:00.107" level="INFO">${payload} = {'firstname': 'Ha X'}</msg>
<status status="PASS" starttime="20210730 14:41:00.107" endtime="20210730 14:41:00.107"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:41:00.116" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:41:00.117" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:41:00.107" endtime="20210730 14:41:00.117"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 14:41:00.117" endtime="20210730 14:41:00.117"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 14:41:00.117" endtime="20210730 14:41:00.117"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:00.107" endtime="20210730 14:41:00.117"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:00.107" endtime="20210730 14:41:00.117"/>
</for>
<status status="FAIL" starttime="20210730 14:41:00.105" endtime="20210730 14:41:00.118"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:00.105" endtime="20210730 14:41:00.118"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:00.105" endtime="20210730 14:41:00.118"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:00.121" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:00.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:00.132" level="INFO">${pids} = 29792
29799
29803</msg>
<status status="PASS" starttime="20210730 14:41:00.118" endtime="20210730 14:41:00.132"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:00.133" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:00.133" endtime="20210730 14:41:00.133"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:00.134" level="INFO">${pids} = ['29792', '29799', '29803']</msg>
<status status="PASS" starttime="20210730 14:41:00.134" endtime="20210730 14:41:00.134"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">29792</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:00.138" level="INFO">Running command 'kill 29792 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:00.135" endtime="20210730 14:41:00.139"/>
</kw>
<status status="PASS" starttime="20210730 14:41:00.135" endtime="20210730 14:41:00.139"/>
</iter>
<iter>
<var name="${pid}">29799</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:00.143" level="INFO">Running command 'kill 29799 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:00.139" endtime="20210730 14:41:00.143"/>
</kw>
<status status="PASS" starttime="20210730 14:41:00.139" endtime="20210730 14:41:00.144"/>
</iter>
<iter>
<var name="${pid}">29803</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:00.148" level="INFO">Running command 'kill 29803 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:00.144" endtime="20210730 14:41:00.148"/>
</kw>
<status status="PASS" starttime="20210730 14:41:00.144" endtime="20210730 14:41:00.148"/>
</iter>
<status status="PASS" starttime="20210730 14:41:00.135" endtime="20210730 14:41:00.148"/>
</for>
<status status="PASS" starttime="20210730 14:41:00.134" endtime="20210730 14:41:00.148"/>
</branch>
<status status="PASS" starttime="20210730 14:41:00.134" endtime="20210730 14:41:00.148"/>
</if>
<status status="PASS" starttime="20210730 14:41:00.118" endtime="20210730 14:41:00.149"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
firstname as such:
{
"firstname": 'Ha X'
}
Then, each request should fail with the following response body:
{
"message": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:40:58.524" endtime="20210730 14:41:00.149">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t106" name="With Each Valid Token, Updating First Name Of Each System User With H X Results In Failure Status With Right Error Message">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:00.155" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:00.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:00.167" level="INFO">${pids} = 29832</msg>
<status status="PASS" starttime="20210730 14:41:00.151" endtime="20210730 14:41:00.167"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:00.168" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:00.167" endtime="20210730 14:41:00.168"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:00.169" level="INFO">${pids} = ['29832']</msg>
<status status="PASS" starttime="20210730 14:41:00.168" endtime="20210730 14:41:00.169"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">29832</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:00.172" level="INFO">Running command 'kill 29832 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:00.169" endtime="20210730 14:41:00.173"/>
</kw>
<status status="PASS" starttime="20210730 14:41:00.169" endtime="20210730 14:41:00.173"/>
</iter>
<status status="PASS" starttime="20210730 14:41:00.169" endtime="20210730 14:41:00.173"/>
</for>
<status status="PASS" starttime="20210730 14:41:00.168" endtime="20210730 14:41:00.173"/>
</branch>
<status status="PASS" starttime="20210730 14:41:00.168" endtime="20210730 14:41:00.173"/>
</if>
<status status="PASS" starttime="20210730 14:41:00.151" endtime="20210730 14:41:00.173"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:00.174" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:00.174" endtime="20210730 14:41:00.174"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:00.176" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:00.175" endtime="20210730 14:41:00.177"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:00.177" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:00.177" endtime="20210730 14:41:00.177"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:00.178" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:00.177" endtime="20210730 14:41:00.178"/>
</kw>
<msg timestamp="20210730 14:41:00.178" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:00.175" endtime="20210730 14:41:00.178"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:00.187" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:00.178" endtime="20210730 14:41:00.191"/>
</kw>
<status status="PASS" starttime="20210730 14:41:00.174" endtime="20210730 14:41:00.192"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:41:00.194" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:41:00.193" endtime="20210730 14:41:00.199"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:41:01.707" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:41:00.199" endtime="20210730 14:41:01.707"/>
</kw>
<status status="PASS" starttime="20210730 14:41:00.193" endtime="20210730 14:41:01.708"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:01.710" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:01.710" endtime="20210730 14:41:01.710"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:01.711" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:01.710" endtime="20210730 14:41:01.711"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:01.712" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:01.711" endtime="20210730 14:41:01.712"/>
</kw>
<msg timestamp="20210730 14:41:01.712" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:01.709" endtime="20210730 14:41:01.712"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:41:01.713" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:41:01.712" endtime="20210730 14:41:01.713"/>
</kw>
<status status="PASS" starttime="20210730 14:41:01.708" endtime="20210730 14:41:01.713"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:41:01.714" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:41:01.714" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:41:01.714" endtime="20210730 14:41:01.714"/>
</kw>
<status status="PASS" starttime="20210730 14:41:01.714" endtime="20210730 14:41:01.715"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:41:01.715" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:41:01.716" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:41:01.715" endtime="20210730 14:41:01.716"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:41:01.716" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:41:01.716" endtime="20210730 14:41:01.716"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:01.717" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:01.717" endtime="20210730 14:41:01.717"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:01.717" endtime="20210730 14:41:01.718"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:01.718" endtime="20210730 14:41:01.718"/>
</kw>
<status status="PASS" starttime="20210730 14:41:01.716" endtime="20210730 14:41:01.719"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:01.719" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:01.719" endtime="20210730 14:41:01.719"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:01.719" endtime="20210730 14:41:01.720"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:01.720" endtime="20210730 14:41:01.720"/>
</kw>
<status status="PASS" starttime="20210730 14:41:01.719" endtime="20210730 14:41:01.720"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:01.721" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:01.720" endtime="20210730 14:41:01.721"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:01.721" endtime="20210730 14:41:01.722"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:01.722" endtime="20210730 14:41:01.722"/>
</kw>
<status status="PASS" starttime="20210730 14:41:01.720" endtime="20210730 14:41:01.722"/>
</iter>
<status status="PASS" starttime="20210730 14:41:01.716" endtime="20210730 14:41:01.722"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:41:01.722" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:41:01.722" endtime="20210730 14:41:01.722"/>
</kw>
<status status="PASS" starttime="20210730 14:41:01.715" endtime="20210730 14:41:01.723"/>
</kw>
<status status="PASS" starttime="20210730 14:41:00.150" endtime="20210730 14:41:01.723"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 14:41:01.726" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:01.723" endtime="20210730 14:41:01.726"/>
</kw>
<msg timestamp="20210730 14:41:01.726" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:01.723" endtime="20210730 14:41:01.726"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>first_name</arg>
<arg>The both first names are invalid with only 1 letter</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 14:41:01.727" endtime="20210730 14:41:01.727"/>
</kw>
<status status="PASS" starttime="20210730 14:41:01.726" endtime="20210730 14:41:01.728"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=firstname</arg>
<arg>field_data=${user_data}[first_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:01.729" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:41:01.729" endtime="20210730 14:41:01.729"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:01.730" level="INFO">${payload} = {'firstname': 'H X'}</msg>
<status status="PASS" starttime="20210730 14:41:01.729" endtime="20210730 14:41:01.730"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:41:01.739" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:41:01.739" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:41:01.730" endtime="20210730 14:41:01.739"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 14:41:01.739" endtime="20210730 14:41:01.740"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 14:41:01.740" endtime="20210730 14:41:01.740"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:01.730" endtime="20210730 14:41:01.740"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:01.730" endtime="20210730 14:41:01.740"/>
</for>
<status status="FAIL" starttime="20210730 14:41:01.728" endtime="20210730 14:41:01.740"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:01.728" endtime="20210730 14:41:01.740"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:01.728" endtime="20210730 14:41:01.740"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:01.744" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:01.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:01.756" level="INFO">${pids} = 29855
29862
29872</msg>
<status status="PASS" starttime="20210730 14:41:01.741" endtime="20210730 14:41:01.756"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:01.757" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:01.756" endtime="20210730 14:41:01.757"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:01.758" level="INFO">${pids} = ['29855', '29862', '29872']</msg>
<status status="PASS" starttime="20210730 14:41:01.757" endtime="20210730 14:41:01.758"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">29855</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:01.761" level="INFO">Running command 'kill 29855 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:01.758" endtime="20210730 14:41:01.762"/>
</kw>
<status status="PASS" starttime="20210730 14:41:01.758" endtime="20210730 14:41:01.762"/>
</iter>
<iter>
<var name="${pid}">29862</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:01.766" level="INFO">Running command 'kill 29862 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:01.763" endtime="20210730 14:41:01.768"/>
</kw>
<status status="PASS" starttime="20210730 14:41:01.762" endtime="20210730 14:41:01.768"/>
</iter>
<iter>
<var name="${pid}">29872</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:01.772" level="INFO">Running command 'kill 29872 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:01.769" endtime="20210730 14:41:01.772"/>
</kw>
<status status="PASS" starttime="20210730 14:41:01.768" endtime="20210730 14:41:01.772"/>
</iter>
<status status="PASS" starttime="20210730 14:41:01.758" endtime="20210730 14:41:01.772"/>
</for>
<status status="PASS" starttime="20210730 14:41:01.757" endtime="20210730 14:41:01.772"/>
</branch>
<status status="PASS" starttime="20210730 14:41:01.757" endtime="20210730 14:41:01.772"/>
</if>
<status status="PASS" starttime="20210730 14:41:01.740" endtime="20210730 14:41:01.773"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
firstname as such:
{
"firstname": 'H X'
}
Then, each request should fail with the following response body:
{
"message": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:41:00.149" endtime="20210730 14:41:01.773">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t107" name="With Each Valid Token, Updating First Name Of Each System User With Helena123 Results In Failure Status With Right Error Message">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:01.779" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:01.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:01.792" level="INFO">${pids} = 29901</msg>
<status status="PASS" starttime="20210730 14:41:01.775" endtime="20210730 14:41:01.792"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:01.793" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:01.793" endtime="20210730 14:41:01.794"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:01.794" level="INFO">${pids} = ['29901']</msg>
<status status="PASS" starttime="20210730 14:41:01.794" endtime="20210730 14:41:01.794"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">29901</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:01.798" level="INFO">Running command 'kill 29901 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:01.795" endtime="20210730 14:41:01.798"/>
</kw>
<status status="PASS" starttime="20210730 14:41:01.794" endtime="20210730 14:41:01.798"/>
</iter>
<status status="PASS" starttime="20210730 14:41:01.794" endtime="20210730 14:41:01.798"/>
</for>
<status status="PASS" starttime="20210730 14:41:01.794" endtime="20210730 14:41:01.798"/>
</branch>
<status status="PASS" starttime="20210730 14:41:01.794" endtime="20210730 14:41:01.798"/>
</if>
<status status="PASS" starttime="20210730 14:41:01.775" endtime="20210730 14:41:01.799"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:01.800" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:01.800" endtime="20210730 14:41:01.800"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:01.801" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:01.800" endtime="20210730 14:41:01.801"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:01.801" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:01.801" endtime="20210730 14:41:01.801"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:01.801" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:01.801" endtime="20210730 14:41:01.801"/>
</kw>
<msg timestamp="20210730 14:41:01.802" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:01.800" endtime="20210730 14:41:01.802"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:01.818" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:01.802" endtime="20210730 14:41:01.820"/>
</kw>
<status status="PASS" starttime="20210730 14:41:01.799" endtime="20210730 14:41:01.820"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:41:01.822" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:41:01.821" endtime="20210730 14:41:01.826"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:41:03.329" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:41:01.827" endtime="20210730 14:41:03.329"/>
</kw>
<status status="PASS" starttime="20210730 14:41:01.820" endtime="20210730 14:41:03.329"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:03.330" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:03.330" endtime="20210730 14:41:03.330"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:03.331" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:03.331" endtime="20210730 14:41:03.331"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:03.332" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:03.331" endtime="20210730 14:41:03.332"/>
</kw>
<msg timestamp="20210730 14:41:03.332" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:03.330" endtime="20210730 14:41:03.332"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:41:03.332" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:41:03.332" endtime="20210730 14:41:03.333"/>
</kw>
<status status="PASS" starttime="20210730 14:41:03.329" endtime="20210730 14:41:03.333"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:41:03.334" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:41:03.334" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:41:03.333" endtime="20210730 14:41:03.334"/>
</kw>
<status status="PASS" starttime="20210730 14:41:03.333" endtime="20210730 14:41:03.334"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:41:03.334" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:41:03.334" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:41:03.334" endtime="20210730 14:41:03.334"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:41:03.335" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:41:03.335" endtime="20210730 14:41:03.335"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:03.336" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:03.335" endtime="20210730 14:41:03.336"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:03.336" endtime="20210730 14:41:03.337"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:03.337" endtime="20210730 14:41:03.337"/>
</kw>
<status status="PASS" starttime="20210730 14:41:03.335" endtime="20210730 14:41:03.337"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:03.337" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:03.337" endtime="20210730 14:41:03.337"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:03.337" endtime="20210730 14:41:03.338"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:03.339" endtime="20210730 14:41:03.339"/>
</kw>
<status status="PASS" starttime="20210730 14:41:03.337" endtime="20210730 14:41:03.339"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:03.340" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:03.339" endtime="20210730 14:41:03.340"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:03.340" endtime="20210730 14:41:03.341"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:03.341" endtime="20210730 14:41:03.341"/>
</kw>
<status status="PASS" starttime="20210730 14:41:03.339" endtime="20210730 14:41:03.341"/>
</iter>
<status status="PASS" starttime="20210730 14:41:03.335" endtime="20210730 14:41:03.341"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:41:03.341" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:41:03.341" endtime="20210730 14:41:03.341"/>
</kw>
<status status="PASS" starttime="20210730 14:41:03.334" endtime="20210730 14:41:03.342"/>
</kw>
<status status="PASS" starttime="20210730 14:41:01.775" endtime="20210730 14:41:03.342"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 14:41:03.346" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:03.343" endtime="20210730 14:41:03.346"/>
</kw>
<msg timestamp="20210730 14:41:03.346" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:03.342" endtime="20210730 14:41:03.346"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>first_name</arg>
<arg>First name does contain numbers, which makes it invalid</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 14:41:03.347" endtime="20210730 14:41:03.347"/>
</kw>
<status status="PASS" starttime="20210730 14:41:03.346" endtime="20210730 14:41:03.347"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=firstname</arg>
<arg>field_data=${user_data}[first_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:03.349" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:41:03.348" endtime="20210730 14:41:03.349"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:03.349" level="INFO">${payload} = {'firstname': 'Helena123'}</msg>
<status status="PASS" starttime="20210730 14:41:03.349" endtime="20210730 14:41:03.349"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:41:03.359" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:41:03.359" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:41:03.350" endtime="20210730 14:41:03.359"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 14:41:03.359" endtime="20210730 14:41:03.359"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 14:41:03.359" endtime="20210730 14:41:03.359"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:03.349" endtime="20210730 14:41:03.360"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:03.349" endtime="20210730 14:41:03.360"/>
</for>
<status status="FAIL" starttime="20210730 14:41:03.348" endtime="20210730 14:41:03.360"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:03.348" endtime="20210730 14:41:03.360"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:03.347" endtime="20210730 14:41:03.360"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:03.364" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:03.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:03.375" level="INFO">${pids} = 29924
29931
29936</msg>
<status status="PASS" starttime="20210730 14:41:03.361" endtime="20210730 14:41:03.375"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:03.376" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:03.375" endtime="20210730 14:41:03.376"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:03.377" level="INFO">${pids} = ['29924', '29931', '29936']</msg>
<status status="PASS" starttime="20210730 14:41:03.376" endtime="20210730 14:41:03.378"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">29924</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:03.381" level="INFO">Running command 'kill 29924 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:03.378" endtime="20210730 14:41:03.382"/>
</kw>
<status status="PASS" starttime="20210730 14:41:03.378" endtime="20210730 14:41:03.382"/>
</iter>
<iter>
<var name="${pid}">29931</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:03.385" level="INFO">Running command 'kill 29931 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:03.382" endtime="20210730 14:41:03.387"/>
</kw>
<status status="PASS" starttime="20210730 14:41:03.382" endtime="20210730 14:41:03.388"/>
</iter>
<iter>
<var name="${pid}">29936</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:03.392" level="INFO">Running command 'kill 29936 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:03.388" endtime="20210730 14:41:03.393"/>
</kw>
<status status="PASS" starttime="20210730 14:41:03.388" endtime="20210730 14:41:03.393"/>
</iter>
<status status="PASS" starttime="20210730 14:41:03.378" endtime="20210730 14:41:03.393"/>
</for>
<status status="PASS" starttime="20210730 14:41:03.376" endtime="20210730 14:41:03.393"/>
</branch>
<status status="PASS" starttime="20210730 14:41:03.376" endtime="20210730 14:41:03.393"/>
</if>
<status status="PASS" starttime="20210730 14:41:03.360" endtime="20210730 14:41:03.393"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
firstname as such:
{
"firstname": 'Helena123'
}
Then, each request should fail with the following response body:
{
"message": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:41:01.774" endtime="20210730 14:41:03.393">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t108" name="With Each Valid Token, Updating First Name Of Each System User With Helena!.? Results In Failure Status With Right Error Message">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:03.399" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:03.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:03.410" level="INFO">${pids} = 29965</msg>
<status status="PASS" starttime="20210730 14:41:03.395" endtime="20210730 14:41:03.410"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:03.411" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:03.411" endtime="20210730 14:41:03.411"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:03.412" level="INFO">${pids} = ['29965']</msg>
<status status="PASS" starttime="20210730 14:41:03.412" endtime="20210730 14:41:03.412"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">29965</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:03.416" level="INFO">Running command 'kill 29965 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:03.412" endtime="20210730 14:41:03.416"/>
</kw>
<status status="PASS" starttime="20210730 14:41:03.412" endtime="20210730 14:41:03.416"/>
</iter>
<status status="PASS" starttime="20210730 14:41:03.412" endtime="20210730 14:41:03.416"/>
</for>
<status status="PASS" starttime="20210730 14:41:03.412" endtime="20210730 14:41:03.416"/>
</branch>
<status status="PASS" starttime="20210730 14:41:03.412" endtime="20210730 14:41:03.416"/>
</if>
<status status="PASS" starttime="20210730 14:41:03.395" endtime="20210730 14:41:03.417"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:03.418" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:03.417" endtime="20210730 14:41:03.418"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:03.419" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:03.418" endtime="20210730 14:41:03.419"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:03.419" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:03.419" endtime="20210730 14:41:03.419"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:03.419" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:03.419" endtime="20210730 14:41:03.419"/>
</kw>
<msg timestamp="20210730 14:41:03.420" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:03.418" endtime="20210730 14:41:03.420"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:03.434" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:03.420" endtime="20210730 14:41:03.437"/>
</kw>
<status status="PASS" starttime="20210730 14:41:03.417" endtime="20210730 14:41:03.438"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:41:03.439" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:41:03.439" endtime="20210730 14:41:03.445"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:41:04.948" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:41:03.445" endtime="20210730 14:41:04.948"/>
</kw>
<status status="PASS" starttime="20210730 14:41:03.438" endtime="20210730 14:41:04.948"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:04.950" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:04.949" endtime="20210730 14:41:04.950"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:04.950" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:04.950" endtime="20210730 14:41:04.950"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:04.950" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:04.950" endtime="20210730 14:41:04.950"/>
</kw>
<msg timestamp="20210730 14:41:04.950" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:04.949" endtime="20210730 14:41:04.951"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:41:04.951" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:41:04.951" endtime="20210730 14:41:04.951"/>
</kw>
<status status="PASS" starttime="20210730 14:41:04.948" endtime="20210730 14:41:04.951"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:41:04.952" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:41:04.952" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:41:04.952" endtime="20210730 14:41:04.952"/>
</kw>
<status status="PASS" starttime="20210730 14:41:04.952" endtime="20210730 14:41:04.952"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:41:04.953" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:41:04.953" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:41:04.953" endtime="20210730 14:41:04.953"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:41:04.953" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:41:04.953" endtime="20210730 14:41:04.953"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:04.954" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:04.954" endtime="20210730 14:41:04.954"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:04.954" endtime="20210730 14:41:04.955"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:04.955" endtime="20210730 14:41:04.956"/>
</kw>
<status status="PASS" starttime="20210730 14:41:04.954" endtime="20210730 14:41:04.956"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:04.956" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:04.956" endtime="20210730 14:41:04.956"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:04.956" endtime="20210730 14:41:04.957"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:04.957" endtime="20210730 14:41:04.957"/>
</kw>
<status status="PASS" starttime="20210730 14:41:04.956" endtime="20210730 14:41:04.957"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:04.958" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:04.958" endtime="20210730 14:41:04.958"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:04.958" endtime="20210730 14:41:04.959"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:04.959" endtime="20210730 14:41:04.959"/>
</kw>
<status status="PASS" starttime="20210730 14:41:04.957" endtime="20210730 14:41:04.959"/>
</iter>
<status status="PASS" starttime="20210730 14:41:04.953" endtime="20210730 14:41:04.959"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:41:04.959" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:41:04.959" endtime="20210730 14:41:04.959"/>
</kw>
<status status="PASS" starttime="20210730 14:41:04.952" endtime="20210730 14:41:04.960"/>
</kw>
<status status="PASS" starttime="20210730 14:41:03.395" endtime="20210730 14:41:04.960"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 14:41:04.963" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:04.960" endtime="20210730 14:41:04.963"/>
</kw>
<msg timestamp="20210730 14:41:04.963" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:04.960" endtime="20210730 14:41:04.963"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>first_name</arg>
<arg>First name does contain non alphanumeric characters, which makes it invalid</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 14:41:04.963" endtime="20210730 14:41:04.964"/>
</kw>
<status status="PASS" starttime="20210730 14:41:04.963" endtime="20210730 14:41:04.964"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=firstname</arg>
<arg>field_data=${user_data}[first_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:04.965" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:41:04.965" endtime="20210730 14:41:04.965"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:04.966" level="INFO">${payload} = {'firstname': 'Helena!.?'}</msg>
<status status="PASS" starttime="20210730 14:41:04.966" endtime="20210730 14:41:04.966"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:41:04.976" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:41:04.977" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:41:04.966" endtime="20210730 14:41:04.977"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 14:41:04.977" endtime="20210730 14:41:04.977"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 14:41:04.977" endtime="20210730 14:41:04.977"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:04.966" endtime="20210730 14:41:04.977"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:04.966" endtime="20210730 14:41:04.977"/>
</for>
<status status="FAIL" starttime="20210730 14:41:04.964" endtime="20210730 14:41:04.978"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:04.964" endtime="20210730 14:41:04.978"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:04.964" endtime="20210730 14:41:04.978"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:04.982" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:04.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:04.996" level="INFO">${pids} = 29988
29995
29998</msg>
<status status="PASS" starttime="20210730 14:41:04.978" endtime="20210730 14:41:04.996"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:04.997" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:04.996" endtime="20210730 14:41:04.997"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:04.998" level="INFO">${pids} = ['29988', '29995', '29998']</msg>
<status status="PASS" starttime="20210730 14:41:04.998" endtime="20210730 14:41:04.998"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">29988</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:05.002" level="INFO">Running command 'kill 29988 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:04.998" endtime="20210730 14:41:05.002"/>
</kw>
<status status="PASS" starttime="20210730 14:41:04.998" endtime="20210730 14:41:05.002"/>
</iter>
<iter>
<var name="${pid}">29995</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:05.005" level="INFO">Running command 'kill 29995 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:05.003" endtime="20210730 14:41:05.006"/>
</kw>
<status status="PASS" starttime="20210730 14:41:05.002" endtime="20210730 14:41:05.006"/>
</iter>
<iter>
<var name="${pid}">29998</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:05.010" level="INFO">Running command 'kill 29998 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:05.007" endtime="20210730 14:41:05.011"/>
</kw>
<status status="PASS" starttime="20210730 14:41:05.006" endtime="20210730 14:41:05.011"/>
</iter>
<status status="PASS" starttime="20210730 14:41:04.998" endtime="20210730 14:41:05.011"/>
</for>
<status status="PASS" starttime="20210730 14:41:04.997" endtime="20210730 14:41:05.011"/>
</branch>
<status status="PASS" starttime="20210730 14:41:04.997" endtime="20210730 14:41:05.011"/>
</if>
<status status="PASS" starttime="20210730 14:41:04.978" endtime="20210730 14:41:05.011"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
firstname as such:
{
"firstname": 'Helena!.?'
}
Then, each request should fail with the following response body:
{
"message": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:41:03.394" endtime="20210730 14:41:05.012">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t109" name="With Each Valid Token, Updating First Name Of Each System User With Helena Margaretha Results In Success">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:05.017" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:05.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:05.029" level="INFO">${pids} = 30028</msg>
<status status="PASS" starttime="20210730 14:41:05.014" endtime="20210730 14:41:05.029"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:05.030" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:05.030" endtime="20210730 14:41:05.030"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:05.032" level="INFO">${pids} = ['30028']</msg>
<status status="PASS" starttime="20210730 14:41:05.031" endtime="20210730 14:41:05.032"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">30028</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:05.036" level="INFO">Running command 'kill 30028 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:05.032" endtime="20210730 14:41:05.036"/>
</kw>
<status status="PASS" starttime="20210730 14:41:05.032" endtime="20210730 14:41:05.036"/>
</iter>
<status status="PASS" starttime="20210730 14:41:05.032" endtime="20210730 14:41:05.037"/>
</for>
<status status="PASS" starttime="20210730 14:41:05.031" endtime="20210730 14:41:05.037"/>
</branch>
<status status="PASS" starttime="20210730 14:41:05.030" endtime="20210730 14:41:05.037"/>
</if>
<status status="PASS" starttime="20210730 14:41:05.013" endtime="20210730 14:41:05.037"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:05.038" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:05.038" endtime="20210730 14:41:05.038"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:05.039" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:05.039" endtime="20210730 14:41:05.039"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:05.040" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:05.039" endtime="20210730 14:41:05.040"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:05.040" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:05.040" endtime="20210730 14:41:05.040"/>
</kw>
<msg timestamp="20210730 14:41:05.040" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:05.039" endtime="20210730 14:41:05.040"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:05.056" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:05.041" endtime="20210730 14:41:05.058"/>
</kw>
<status status="PASS" starttime="20210730 14:41:05.037" endtime="20210730 14:41:05.058"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:41:05.061" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:41:05.060" endtime="20210730 14:41:05.065"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:41:06.570" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:41:05.065" endtime="20210730 14:41:06.571"/>
</kw>
<status status="PASS" starttime="20210730 14:41:05.059" endtime="20210730 14:41:06.571"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:06.572" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:06.572" endtime="20210730 14:41:06.572"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:06.572" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:06.572" endtime="20210730 14:41:06.572"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:06.573" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:06.572" endtime="20210730 14:41:06.573"/>
</kw>
<msg timestamp="20210730 14:41:06.573" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:06.571" endtime="20210730 14:41:06.573"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:41:06.573" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:41:06.573" endtime="20210730 14:41:06.574"/>
</kw>
<status status="PASS" starttime="20210730 14:41:06.571" endtime="20210730 14:41:06.574"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:41:06.575" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:41:06.575" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:41:06.575" endtime="20210730 14:41:06.575"/>
</kw>
<status status="PASS" starttime="20210730 14:41:06.574" endtime="20210730 14:41:06.575"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:41:06.577" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:41:06.578" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:41:06.576" endtime="20210730 14:41:06.578"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:41:06.578" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:41:06.578" endtime="20210730 14:41:06.578"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:06.579" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:06.578" endtime="20210730 14:41:06.579"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:06.579" endtime="20210730 14:41:06.580"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:06.580" endtime="20210730 14:41:06.580"/>
</kw>
<status status="PASS" starttime="20210730 14:41:06.578" endtime="20210730 14:41:06.580"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:06.581" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:06.581" endtime="20210730 14:41:06.581"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:06.581" endtime="20210730 14:41:06.582"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:06.582" endtime="20210730 14:41:06.582"/>
</kw>
<status status="PASS" starttime="20210730 14:41:06.580" endtime="20210730 14:41:06.582"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:06.582" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:06.582" endtime="20210730 14:41:06.582"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:06.583" endtime="20210730 14:41:06.583"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:06.583" endtime="20210730 14:41:06.583"/>
</kw>
<status status="PASS" starttime="20210730 14:41:06.582" endtime="20210730 14:41:06.584"/>
</iter>
<status status="PASS" starttime="20210730 14:41:06.578" endtime="20210730 14:41:06.584"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:41:06.584" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:41:06.584" endtime="20210730 14:41:06.584"/>
</kw>
<status status="PASS" starttime="20210730 14:41:06.576" endtime="20210730 14:41:06.584"/>
</kw>
<status status="PASS" starttime="20210730 14:41:05.013" endtime="20210730 14:41:06.584"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 14:41:06.587" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:06.585" endtime="20210730 14:41:06.587"/>
</kw>
<msg timestamp="20210730 14:41:06.588" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:06.584" endtime="20210730 14:41:06.588"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>first_name</arg>
<arg>Two valid first names seperated by a single space character</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 14:41:06.588" endtime="20210730 14:41:06.589"/>
</kw>
<status status="PASS" starttime="20210730 14:41:06.588" endtime="20210730 14:41:06.589"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=firstname</arg>
<arg>field_data=${user_data}[first_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:06.590" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:41:06.590" endtime="20210730 14:41:06.590"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:06.591" level="INFO">${payload} = {'firstname': 'Helena Margaretha'}</msg>
<status status="PASS" starttime="20210730 14:41:06.591" endtime="20210730 14:41:06.591"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:41:06.600" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:41:06.601" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:41:06.591" endtime="20210730 14:41:06.601"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 14:41:06.601" endtime="20210730 14:41:06.601"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 14:41:06.601" endtime="20210730 14:41:06.601"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:06.591" endtime="20210730 14:41:06.601"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:06.591" endtime="20210730 14:41:06.601"/>
</for>
<status status="FAIL" starttime="20210730 14:41:06.589" endtime="20210730 14:41:06.601"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:06.589" endtime="20210730 14:41:06.601"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:06.589" endtime="20210730 14:41:06.601"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:06.605" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:06.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:06.616" level="INFO">${pids} = 30051
30058
30061</msg>
<status status="PASS" starttime="20210730 14:41:06.602" endtime="20210730 14:41:06.616"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:06.617" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:06.617" endtime="20210730 14:41:06.617"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:06.618" level="INFO">${pids} = ['30051', '30058', '30061']</msg>
<status status="PASS" starttime="20210730 14:41:06.618" endtime="20210730 14:41:06.618"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">30051</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:06.622" level="INFO">Running command 'kill 30051 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:06.619" endtime="20210730 14:41:06.622"/>
</kw>
<status status="PASS" starttime="20210730 14:41:06.618" endtime="20210730 14:41:06.622"/>
</iter>
<iter>
<var name="${pid}">30058</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:06.626" level="INFO">Running command 'kill 30058 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:06.623" endtime="20210730 14:41:06.627"/>
</kw>
<status status="PASS" starttime="20210730 14:41:06.622" endtime="20210730 14:41:06.627"/>
</iter>
<iter>
<var name="${pid}">30061</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:06.630" level="INFO">Running command 'kill 30061 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:06.627" endtime="20210730 14:41:06.631"/>
</kw>
<status status="PASS" starttime="20210730 14:41:06.627" endtime="20210730 14:41:06.631"/>
</iter>
<status status="PASS" starttime="20210730 14:41:06.618" endtime="20210730 14:41:06.631"/>
</for>
<status status="PASS" starttime="20210730 14:41:06.618" endtime="20210730 14:41:06.631"/>
</branch>
<status status="PASS" starttime="20210730 14:41:06.618" endtime="20210730 14:41:06.631"/>
</if>
<status status="PASS" starttime="20210730 14:41:06.602" endtime="20210730 14:41:06.631"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
firstname as such:
{
"firstname": 'Helena Margaretha'
}
Then, each request should fail with the following response body:
{
"message": "Updated",
"status": "SUCCESS"
}
This test not only verifies message and status but also verifies that the &lt;username&gt;'s data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:41:05.012" endtime="20210730 14:41:06.631">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t110" name="With Each Valid Token, Updating First Name Of Each System User With Helena      Margaretha Results In Failure Status With Right Error Message">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:06.637" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:06.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:06.648" level="INFO">${pids} = 30090</msg>
<status status="PASS" starttime="20210730 14:41:06.633" endtime="20210730 14:41:06.648"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:06.649" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:06.649" endtime="20210730 14:41:06.650"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:06.650" level="INFO">${pids} = ['30090']</msg>
<status status="PASS" starttime="20210730 14:41:06.650" endtime="20210730 14:41:06.650"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">30090</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:06.654" level="INFO">Running command 'kill 30090 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:06.651" endtime="20210730 14:41:06.655"/>
</kw>
<status status="PASS" starttime="20210730 14:41:06.651" endtime="20210730 14:41:06.655"/>
</iter>
<status status="PASS" starttime="20210730 14:41:06.650" endtime="20210730 14:41:06.655"/>
</for>
<status status="PASS" starttime="20210730 14:41:06.650" endtime="20210730 14:41:06.655"/>
</branch>
<status status="PASS" starttime="20210730 14:41:06.650" endtime="20210730 14:41:06.655"/>
</if>
<status status="PASS" starttime="20210730 14:41:06.633" endtime="20210730 14:41:06.655"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:06.656" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:06.656" endtime="20210730 14:41:06.656"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:06.657" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:06.657" endtime="20210730 14:41:06.657"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:06.657" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:06.657" endtime="20210730 14:41:06.657"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:06.658" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:06.658" endtime="20210730 14:41:06.658"/>
</kw>
<msg timestamp="20210730 14:41:06.658" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:06.656" endtime="20210730 14:41:06.658"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:06.674" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:06.658" endtime="20210730 14:41:06.677"/>
</kw>
<status status="PASS" starttime="20210730 14:41:06.655" endtime="20210730 14:41:06.677"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:41:06.680" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:41:06.679" endtime="20210730 14:41:06.684"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:41:08.187" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:41:06.685" endtime="20210730 14:41:08.187"/>
</kw>
<status status="PASS" starttime="20210730 14:41:06.678" endtime="20210730 14:41:08.187"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:08.189" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:08.188" endtime="20210730 14:41:08.189"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:08.189" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:08.189" endtime="20210730 14:41:08.189"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:08.189" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:08.189" endtime="20210730 14:41:08.189"/>
</kw>
<msg timestamp="20210730 14:41:08.189" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:08.188" endtime="20210730 14:41:08.190"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:41:08.190" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:41:08.190" endtime="20210730 14:41:08.190"/>
</kw>
<status status="PASS" starttime="20210730 14:41:08.188" endtime="20210730 14:41:08.190"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:41:08.191" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:41:08.191" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:41:08.191" endtime="20210730 14:41:08.191"/>
</kw>
<status status="PASS" starttime="20210730 14:41:08.191" endtime="20210730 14:41:08.191"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:41:08.192" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:41:08.192" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:41:08.192" endtime="20210730 14:41:08.192"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:41:08.192" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:41:08.192" endtime="20210730 14:41:08.192"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:08.193" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:08.193" endtime="20210730 14:41:08.193"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:08.193" endtime="20210730 14:41:08.194"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:08.194" endtime="20210730 14:41:08.194"/>
</kw>
<status status="PASS" starttime="20210730 14:41:08.192" endtime="20210730 14:41:08.194"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:08.194" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:08.194" endtime="20210730 14:41:08.194"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:08.194" endtime="20210730 14:41:08.195"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:08.195" endtime="20210730 14:41:08.196"/>
</kw>
<status status="PASS" starttime="20210730 14:41:08.194" endtime="20210730 14:41:08.196"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:08.196" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:08.196" endtime="20210730 14:41:08.196"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:08.196" endtime="20210730 14:41:08.197"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:08.197" endtime="20210730 14:41:08.197"/>
</kw>
<status status="PASS" starttime="20210730 14:41:08.196" endtime="20210730 14:41:08.197"/>
</iter>
<status status="PASS" starttime="20210730 14:41:08.192" endtime="20210730 14:41:08.197"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:41:08.198" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:41:08.198" endtime="20210730 14:41:08.198"/>
</kw>
<status status="PASS" starttime="20210730 14:41:08.191" endtime="20210730 14:41:08.198"/>
</kw>
<status status="PASS" starttime="20210730 14:41:06.633" endtime="20210730 14:41:08.198"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 14:41:08.201" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:08.199" endtime="20210730 14:41:08.201"/>
</kw>
<msg timestamp="20210730 14:41:08.201" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:08.198" endtime="20210730 14:41:08.201"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>first_name</arg>
<arg>Two valid first names seperated by multiple space characters making it invalid</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 14:41:08.202" endtime="20210730 14:41:08.202"/>
</kw>
<status status="PASS" starttime="20210730 14:41:08.202" endtime="20210730 14:41:08.203"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=firstname</arg>
<arg>field_data=${user_data}[first_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:08.204" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:41:08.204" endtime="20210730 14:41:08.204"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:08.204" level="INFO">${payload} = {'firstname': 'Helena      Margaretha'}</msg>
<status status="PASS" starttime="20210730 14:41:08.204" endtime="20210730 14:41:08.205"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:41:08.214" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:41:08.215" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:41:08.205" endtime="20210730 14:41:08.215"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 14:41:08.215" endtime="20210730 14:41:08.215"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 14:41:08.215" endtime="20210730 14:41:08.215"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:08.205" endtime="20210730 14:41:08.215"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:08.205" endtime="20210730 14:41:08.216"/>
</for>
<status status="FAIL" starttime="20210730 14:41:08.203" endtime="20210730 14:41:08.216"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:08.203" endtime="20210730 14:41:08.216"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:08.203" endtime="20210730 14:41:08.216"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:08.220" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:08.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:08.231" level="INFO">${pids} = 30113
30120
30122</msg>
<status status="PASS" starttime="20210730 14:41:08.216" endtime="20210730 14:41:08.231"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:08.232" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:08.232" endtime="20210730 14:41:08.232"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:08.233" level="INFO">${pids} = ['30113', '30120', '30122']</msg>
<status status="PASS" starttime="20210730 14:41:08.233" endtime="20210730 14:41:08.233"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">30113</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:08.237" level="INFO">Running command 'kill 30113 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:08.233" endtime="20210730 14:41:08.237"/>
</kw>
<status status="PASS" starttime="20210730 14:41:08.233" endtime="20210730 14:41:08.238"/>
</iter>
<iter>
<var name="${pid}">30120</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:08.241" level="INFO">Running command 'kill 30120 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:08.238" endtime="20210730 14:41:08.242"/>
</kw>
<status status="PASS" starttime="20210730 14:41:08.238" endtime="20210730 14:41:08.242"/>
</iter>
<iter>
<var name="${pid}">30122</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:08.248" level="INFO">Running command 'kill 30122 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:08.243" endtime="20210730 14:41:08.248"/>
</kw>
<status status="PASS" starttime="20210730 14:41:08.242" endtime="20210730 14:41:08.248"/>
</iter>
<status status="PASS" starttime="20210730 14:41:08.233" endtime="20210730 14:41:08.248"/>
</for>
<status status="PASS" starttime="20210730 14:41:08.233" endtime="20210730 14:41:08.248"/>
</branch>
<status status="PASS" starttime="20210730 14:41:08.232" endtime="20210730 14:41:08.249"/>
</if>
<status status="PASS" starttime="20210730 14:41:08.216" endtime="20210730 14:41:08.249"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
firstname as such:
{
"firstname": 'Helena Margaretha'
}
Then, each request should fail with the following response body:
{
"message": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:41:06.632" endtime="20210730 14:41:08.249">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t111" name="With Each Valid Token, Updating Last Name Of Each System User With '' Results In Failure Status With Right Error Message">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:08.254" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:08.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:08.266" level="INFO">${pids} = 30151</msg>
<status status="PASS" starttime="20210730 14:41:08.251" endtime="20210730 14:41:08.266"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:08.267" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:08.267" endtime="20210730 14:41:08.267"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:08.268" level="INFO">${pids} = ['30151']</msg>
<status status="PASS" starttime="20210730 14:41:08.268" endtime="20210730 14:41:08.268"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">30151</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:08.284" level="INFO">Running command 'kill 30151 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:08.268" endtime="20210730 14:41:08.285"/>
</kw>
<status status="PASS" starttime="20210730 14:41:08.268" endtime="20210730 14:41:08.285"/>
</iter>
<status status="PASS" starttime="20210730 14:41:08.268" endtime="20210730 14:41:08.285"/>
</for>
<status status="PASS" starttime="20210730 14:41:08.268" endtime="20210730 14:41:08.285"/>
</branch>
<status status="PASS" starttime="20210730 14:41:08.267" endtime="20210730 14:41:08.285"/>
</if>
<status status="PASS" starttime="20210730 14:41:08.251" endtime="20210730 14:41:08.285"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:08.287" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:08.286" endtime="20210730 14:41:08.287"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:08.288" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:08.288" endtime="20210730 14:41:08.288"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:08.288" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:08.288" endtime="20210730 14:41:08.288"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:08.289" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:08.289" endtime="20210730 14:41:08.289"/>
</kw>
<msg timestamp="20210730 14:41:08.289" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:08.287" endtime="20210730 14:41:08.289"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:08.293" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:08.289" endtime="20210730 14:41:08.295"/>
</kw>
<status status="PASS" starttime="20210730 14:41:08.286" endtime="20210730 14:41:08.296"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:41:08.297" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:41:08.296" endtime="20210730 14:41:08.301"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:41:09.802" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:41:08.301" endtime="20210730 14:41:09.802"/>
</kw>
<status status="PASS" starttime="20210730 14:41:08.296" endtime="20210730 14:41:09.802"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:09.803" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:09.803" endtime="20210730 14:41:09.804"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:09.804" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:09.804" endtime="20210730 14:41:09.804"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:09.804" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:09.804" endtime="20210730 14:41:09.804"/>
</kw>
<msg timestamp="20210730 14:41:09.804" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:09.803" endtime="20210730 14:41:09.804"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:41:09.805" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:41:09.805" endtime="20210730 14:41:09.806"/>
</kw>
<status status="PASS" starttime="20210730 14:41:09.803" endtime="20210730 14:41:09.806"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:41:09.807" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:41:09.807" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:41:09.807" endtime="20210730 14:41:09.807"/>
</kw>
<status status="PASS" starttime="20210730 14:41:09.806" endtime="20210730 14:41:09.808"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:41:09.808" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:41:09.808" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:41:09.808" endtime="20210730 14:41:09.808"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:41:09.809" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:41:09.809" endtime="20210730 14:41:09.809"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:09.810" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:09.809" endtime="20210730 14:41:09.810"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:09.810" endtime="20210730 14:41:09.811"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:09.811" endtime="20210730 14:41:09.811"/>
</kw>
<status status="PASS" starttime="20210730 14:41:09.809" endtime="20210730 14:41:09.811"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:09.811" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:09.811" endtime="20210730 14:41:09.811"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:09.812" endtime="20210730 14:41:09.812"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:09.812" endtime="20210730 14:41:09.812"/>
</kw>
<status status="PASS" starttime="20210730 14:41:09.811" endtime="20210730 14:41:09.812"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:09.813" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:09.813" endtime="20210730 14:41:09.813"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:09.813" endtime="20210730 14:41:09.814"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:09.814" endtime="20210730 14:41:09.814"/>
</kw>
<status status="PASS" starttime="20210730 14:41:09.813" endtime="20210730 14:41:09.814"/>
</iter>
<status status="PASS" starttime="20210730 14:41:09.809" endtime="20210730 14:41:09.814"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:41:09.815" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:41:09.814" endtime="20210730 14:41:09.815"/>
</kw>
<status status="PASS" starttime="20210730 14:41:09.808" endtime="20210730 14:41:09.815"/>
</kw>
<status status="PASS" starttime="20210730 14:41:08.250" endtime="20210730 14:41:09.815"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 14:41:09.818" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:09.815" endtime="20210730 14:41:09.818"/>
</kw>
<msg timestamp="20210730 14:41:09.818" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:09.815" endtime="20210730 14:41:09.818"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>last_name</arg>
<arg>An empty last name</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 14:41:09.819" endtime="20210730 14:41:09.819"/>
</kw>
<status status="PASS" starttime="20210730 14:41:09.818" endtime="20210730 14:41:09.819"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=lastname</arg>
<arg>field_data=${user_data}[last_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:09.821" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:41:09.820" endtime="20210730 14:41:09.821"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:09.821" level="INFO">${payload} = {'lastname': ''}</msg>
<status status="PASS" starttime="20210730 14:41:09.821" endtime="20210730 14:41:09.821"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:41:09.831" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:41:09.831" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:41:09.822" endtime="20210730 14:41:09.831"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 14:41:09.832" endtime="20210730 14:41:09.832"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 14:41:09.832" endtime="20210730 14:41:09.832"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:09.821" endtime="20210730 14:41:09.832"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:09.821" endtime="20210730 14:41:09.832"/>
</for>
<status status="FAIL" starttime="20210730 14:41:09.820" endtime="20210730 14:41:09.832"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:09.820" endtime="20210730 14:41:09.832"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:09.819" endtime="20210730 14:41:09.833"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:09.837" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:09.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:09.849" level="INFO">${pids} = 30174
30181
30185</msg>
<status status="PASS" starttime="20210730 14:41:09.833" endtime="20210730 14:41:09.849"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:09.850" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:09.849" endtime="20210730 14:41:09.850"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:09.851" level="INFO">${pids} = ['30174', '30181', '30185']</msg>
<status status="PASS" starttime="20210730 14:41:09.850" endtime="20210730 14:41:09.851"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">30174</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:09.855" level="INFO">Running command 'kill 30174 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:09.851" endtime="20210730 14:41:09.856"/>
</kw>
<status status="PASS" starttime="20210730 14:41:09.851" endtime="20210730 14:41:09.856"/>
</iter>
<iter>
<var name="${pid}">30181</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:09.860" level="INFO">Running command 'kill 30181 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:09.857" endtime="20210730 14:41:09.861"/>
</kw>
<status status="PASS" starttime="20210730 14:41:09.856" endtime="20210730 14:41:09.861"/>
</iter>
<iter>
<var name="${pid}">30185</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:09.865" level="INFO">Running command 'kill 30185 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:09.862" endtime="20210730 14:41:09.865"/>
</kw>
<status status="PASS" starttime="20210730 14:41:09.861" endtime="20210730 14:41:09.866"/>
</iter>
<status status="PASS" starttime="20210730 14:41:09.851" endtime="20210730 14:41:09.866"/>
</for>
<status status="PASS" starttime="20210730 14:41:09.850" endtime="20210730 14:41:09.866"/>
</branch>
<status status="PASS" starttime="20210730 14:41:09.850" endtime="20210730 14:41:09.866"/>
</if>
<status status="PASS" starttime="20210730 14:41:09.833" endtime="20210730 14:41:09.866"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
lastname as such:
{
"lastname": ''
}
Then, each request should fail with the following response body:
{
"message": "Each last name must contain only characters from the set [a-zA-Z]. Last names must be seperated by a a single space. Last names must have at least 2 characters",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:41:08.250" endtime="20210730 14:41:09.866">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t112" name="With Each Valid Token, Updating Last Name Of Each System User With Cuzdan Results In Success">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:09.872" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:09.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:09.885" level="INFO">${pids} = 30214</msg>
<status status="PASS" starttime="20210730 14:41:09.869" endtime="20210730 14:41:09.885"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:09.886" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:09.886" endtime="20210730 14:41:09.886"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:09.887" level="INFO">${pids} = ['30214']</msg>
<status status="PASS" starttime="20210730 14:41:09.887" endtime="20210730 14:41:09.887"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">30214</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:09.893" level="INFO">Running command 'kill 30214 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:09.887" endtime="20210730 14:41:09.894"/>
</kw>
<status status="PASS" starttime="20210730 14:41:09.887" endtime="20210730 14:41:09.894"/>
</iter>
<status status="PASS" starttime="20210730 14:41:09.887" endtime="20210730 14:41:09.894"/>
</for>
<status status="PASS" starttime="20210730 14:41:09.887" endtime="20210730 14:41:09.894"/>
</branch>
<status status="PASS" starttime="20210730 14:41:09.887" endtime="20210730 14:41:09.894"/>
</if>
<status status="PASS" starttime="20210730 14:41:09.868" endtime="20210730 14:41:09.894"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:09.896" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:09.895" endtime="20210730 14:41:09.896"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:09.896" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:09.896" endtime="20210730 14:41:09.896"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:09.897" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:09.896" endtime="20210730 14:41:09.897"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:09.897" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:09.897" endtime="20210730 14:41:09.897"/>
</kw>
<msg timestamp="20210730 14:41:09.898" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:09.896" endtime="20210730 14:41:09.898"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:09.908" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:09.898" endtime="20210730 14:41:09.911"/>
</kw>
<status status="PASS" starttime="20210730 14:41:09.895" endtime="20210730 14:41:09.911"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:41:09.912" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:41:09.912" endtime="20210730 14:41:09.917"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:41:11.418" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:41:09.917" endtime="20210730 14:41:11.418"/>
</kw>
<status status="PASS" starttime="20210730 14:41:09.911" endtime="20210730 14:41:11.419"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:11.420" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:11.420" endtime="20210730 14:41:11.420"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:11.420" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:11.420" endtime="20210730 14:41:11.420"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:11.421" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:11.420" endtime="20210730 14:41:11.421"/>
</kw>
<msg timestamp="20210730 14:41:11.421" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:11.419" endtime="20210730 14:41:11.421"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:41:11.421" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:41:11.421" endtime="20210730 14:41:11.422"/>
</kw>
<status status="PASS" starttime="20210730 14:41:11.419" endtime="20210730 14:41:11.422"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:41:11.422" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:41:11.422" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:41:11.422" endtime="20210730 14:41:11.422"/>
</kw>
<status status="PASS" starttime="20210730 14:41:11.422" endtime="20210730 14:41:11.422"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:41:11.423" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:41:11.423" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:41:11.423" endtime="20210730 14:41:11.423"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:41:11.423" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:41:11.423" endtime="20210730 14:41:11.423"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:11.424" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:11.424" endtime="20210730 14:41:11.424"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:11.424" endtime="20210730 14:41:11.425"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:11.425" endtime="20210730 14:41:11.426"/>
</kw>
<status status="PASS" starttime="20210730 14:41:11.424" endtime="20210730 14:41:11.426"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:11.426" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:11.426" endtime="20210730 14:41:11.426"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:11.426" endtime="20210730 14:41:11.427"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:11.427" endtime="20210730 14:41:11.427"/>
</kw>
<status status="PASS" starttime="20210730 14:41:11.426" endtime="20210730 14:41:11.427"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:11.428" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:11.428" endtime="20210730 14:41:11.428"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:11.428" endtime="20210730 14:41:11.429"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:11.429" endtime="20210730 14:41:11.429"/>
</kw>
<status status="PASS" starttime="20210730 14:41:11.428" endtime="20210730 14:41:11.429"/>
</iter>
<status status="PASS" starttime="20210730 14:41:11.423" endtime="20210730 14:41:11.429"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:41:11.430" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:41:11.429" endtime="20210730 14:41:11.430"/>
</kw>
<status status="PASS" starttime="20210730 14:41:11.423" endtime="20210730 14:41:11.430"/>
</kw>
<status status="PASS" starttime="20210730 14:41:09.868" endtime="20210730 14:41:11.430"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 14:41:11.433" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:11.430" endtime="20210730 14:41:11.433"/>
</kw>
<msg timestamp="20210730 14:41:11.433" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:11.430" endtime="20210730 14:41:11.433"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>last_name</arg>
<arg>A last name containing more than 2 characters</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 14:41:11.434" endtime="20210730 14:41:11.434"/>
</kw>
<status status="PASS" starttime="20210730 14:41:11.433" endtime="20210730 14:41:11.434"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=lastname</arg>
<arg>field_data=${user_data}[last_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:11.436" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:41:11.435" endtime="20210730 14:41:11.436"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:11.436" level="INFO">${payload} = {'lastname': 'Cuzdan'}</msg>
<status status="PASS" starttime="20210730 14:41:11.436" endtime="20210730 14:41:11.436"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:41:11.447" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:41:11.447" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:41:11.436" endtime="20210730 14:41:11.448"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 14:41:11.448" endtime="20210730 14:41:11.448"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 14:41:11.448" endtime="20210730 14:41:11.448"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:11.436" endtime="20210730 14:41:11.448"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:11.436" endtime="20210730 14:41:11.448"/>
</for>
<status status="FAIL" starttime="20210730 14:41:11.435" endtime="20210730 14:41:11.448"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:11.435" endtime="20210730 14:41:11.448"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:11.434" endtime="20210730 14:41:11.448"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:11.452" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:11.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:11.463" level="INFO">${pids} = 30237
30244
30246</msg>
<status status="PASS" starttime="20210730 14:41:11.449" endtime="20210730 14:41:11.463"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:11.464" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:11.463" endtime="20210730 14:41:11.464"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:11.465" level="INFO">${pids} = ['30237', '30244', '30246']</msg>
<status status="PASS" starttime="20210730 14:41:11.464" endtime="20210730 14:41:11.465"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">30237</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:11.469" level="INFO">Running command 'kill 30237 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:11.465" endtime="20210730 14:41:11.469"/>
</kw>
<status status="PASS" starttime="20210730 14:41:11.465" endtime="20210730 14:41:11.469"/>
</iter>
<iter>
<var name="${pid}">30244</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:11.473" level="INFO">Running command 'kill 30244 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:11.470" endtime="20210730 14:41:11.474"/>
</kw>
<status status="PASS" starttime="20210730 14:41:11.470" endtime="20210730 14:41:11.474"/>
</iter>
<iter>
<var name="${pid}">30246</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:11.479" level="INFO">Running command 'kill 30246 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:11.475" endtime="20210730 14:41:11.479"/>
</kw>
<status status="PASS" starttime="20210730 14:41:11.474" endtime="20210730 14:41:11.479"/>
</iter>
<status status="PASS" starttime="20210730 14:41:11.465" endtime="20210730 14:41:11.479"/>
</for>
<status status="PASS" starttime="20210730 14:41:11.464" endtime="20210730 14:41:11.479"/>
</branch>
<status status="PASS" starttime="20210730 14:41:11.464" endtime="20210730 14:41:11.479"/>
</if>
<status status="PASS" starttime="20210730 14:41:11.449" endtime="20210730 14:41:11.480"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
lastname as such:
{
"lastname": 'Cuzdan'
}
Then, each request should fail with the following response body:
{
"message": "Updated",
"status": "SUCCESS"
}
This test not only verifies message and status but also verifies that the &lt;username&gt;'s data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:41:09.867" endtime="20210730 14:41:11.480">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t113" name="With Each Valid Token, Updating Last Name Of Each System User With Cuzdan123!?. Results In Failure Status With Right Error Message">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:11.485" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:11.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:11.502" level="INFO">${pids} = 30275</msg>
<status status="PASS" starttime="20210730 14:41:11.482" endtime="20210730 14:41:11.502"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:11.503" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:11.502" endtime="20210730 14:41:11.503"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:11.505" level="INFO">${pids} = ['30275']</msg>
<status status="PASS" starttime="20210730 14:41:11.503" endtime="20210730 14:41:11.505"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">30275</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:11.520" level="INFO">Running command 'kill 30275 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:11.507" endtime="20210730 14:41:11.521"/>
</kw>
<status status="PASS" starttime="20210730 14:41:11.505" endtime="20210730 14:41:11.521"/>
</iter>
<status status="PASS" starttime="20210730 14:41:11.505" endtime="20210730 14:41:11.521"/>
</for>
<status status="PASS" starttime="20210730 14:41:11.503" endtime="20210730 14:41:11.521"/>
</branch>
<status status="PASS" starttime="20210730 14:41:11.503" endtime="20210730 14:41:11.521"/>
</if>
<status status="PASS" starttime="20210730 14:41:11.482" endtime="20210730 14:41:11.522"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:11.523" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:11.523" endtime="20210730 14:41:11.523"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:11.524" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:11.524" endtime="20210730 14:41:11.524"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:11.525" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:11.524" endtime="20210730 14:41:11.525"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:11.525" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:11.525" endtime="20210730 14:41:11.525"/>
</kw>
<msg timestamp="20210730 14:41:11.526" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:11.524" endtime="20210730 14:41:11.526"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:11.529" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:11.526" endtime="20210730 14:41:11.531"/>
</kw>
<status status="PASS" starttime="20210730 14:41:11.522" endtime="20210730 14:41:11.531"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:41:11.533" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:41:11.532" endtime="20210730 14:41:11.537"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:41:13.043" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:41:11.537" endtime="20210730 14:41:13.043"/>
</kw>
<status status="PASS" starttime="20210730 14:41:11.532" endtime="20210730 14:41:13.043"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:13.045" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:13.044" endtime="20210730 14:41:13.045"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:13.045" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:13.045" endtime="20210730 14:41:13.045"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:13.046" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:13.046" endtime="20210730 14:41:13.046"/>
</kw>
<msg timestamp="20210730 14:41:13.046" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:13.044" endtime="20210730 14:41:13.046"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:41:13.047" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:41:13.046" endtime="20210730 14:41:13.047"/>
</kw>
<status status="PASS" starttime="20210730 14:41:13.043" endtime="20210730 14:41:13.048"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:41:13.048" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:41:13.048" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:41:13.048" endtime="20210730 14:41:13.048"/>
</kw>
<status status="PASS" starttime="20210730 14:41:13.048" endtime="20210730 14:41:13.049"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:41:13.049" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:41:13.049" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:41:13.049" endtime="20210730 14:41:13.049"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:41:13.050" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:41:13.049" endtime="20210730 14:41:13.050"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:13.050" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:13.050" endtime="20210730 14:41:13.051"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:13.051" endtime="20210730 14:41:13.051"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:13.052" endtime="20210730 14:41:13.052"/>
</kw>
<status status="PASS" starttime="20210730 14:41:13.050" endtime="20210730 14:41:13.052"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:13.052" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:13.052" endtime="20210730 14:41:13.052"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:13.053" endtime="20210730 14:41:13.053"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:13.053" endtime="20210730 14:41:13.054"/>
</kw>
<status status="PASS" starttime="20210730 14:41:13.052" endtime="20210730 14:41:13.054"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:13.054" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:13.054" endtime="20210730 14:41:13.054"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:13.054" endtime="20210730 14:41:13.055"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:13.055" endtime="20210730 14:41:13.055"/>
</kw>
<status status="PASS" starttime="20210730 14:41:13.054" endtime="20210730 14:41:13.055"/>
</iter>
<status status="PASS" starttime="20210730 14:41:13.050" endtime="20210730 14:41:13.055"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:41:13.056" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:41:13.055" endtime="20210730 14:41:13.056"/>
</kw>
<status status="PASS" starttime="20210730 14:41:13.049" endtime="20210730 14:41:13.056"/>
</kw>
<status status="PASS" starttime="20210730 14:41:11.481" endtime="20210730 14:41:13.056"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 14:41:13.059" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:13.056" endtime="20210730 14:41:13.059"/>
</kw>
<msg timestamp="20210730 14:41:13.059" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:13.056" endtime="20210730 14:41:13.059"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>last_name</arg>
<arg>A last name containing numbers and non-alphanumeric characters</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 14:41:13.060" endtime="20210730 14:41:13.061"/>
</kw>
<status status="PASS" starttime="20210730 14:41:13.060" endtime="20210730 14:41:13.061"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=lastname</arg>
<arg>field_data=${user_data}[last_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:13.063" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:41:13.062" endtime="20210730 14:41:13.063"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:13.063" level="INFO">${payload} = {'lastname': 'Cuzdan123!?.'}</msg>
<status status="PASS" starttime="20210730 14:41:13.063" endtime="20210730 14:41:13.063"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:41:13.075" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:41:13.075" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:41:13.063" endtime="20210730 14:41:13.075"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 14:41:13.075" endtime="20210730 14:41:13.076"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 14:41:13.076" endtime="20210730 14:41:13.076"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:13.063" endtime="20210730 14:41:13.076"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:13.063" endtime="20210730 14:41:13.076"/>
</for>
<status status="FAIL" starttime="20210730 14:41:13.061" endtime="20210730 14:41:13.076"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:13.061" endtime="20210730 14:41:13.076"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:13.061" endtime="20210730 14:41:13.076"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:13.081" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:13.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:13.094" level="INFO">${pids} = 30298
30305
30307</msg>
<status status="PASS" starttime="20210730 14:41:13.077" endtime="20210730 14:41:13.094"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:13.095" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:13.095" endtime="20210730 14:41:13.095"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:13.096" level="INFO">${pids} = ['30298', '30305', '30307']</msg>
<status status="PASS" starttime="20210730 14:41:13.096" endtime="20210730 14:41:13.096"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">30298</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:13.100" level="INFO">Running command 'kill 30298 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:13.097" endtime="20210730 14:41:13.101"/>
</kw>
<status status="PASS" starttime="20210730 14:41:13.097" endtime="20210730 14:41:13.101"/>
</iter>
<iter>
<var name="${pid}">30305</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:13.105" level="INFO">Running command 'kill 30305 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:13.101" endtime="20210730 14:41:13.107"/>
</kw>
<status status="PASS" starttime="20210730 14:41:13.101" endtime="20210730 14:41:13.107"/>
</iter>
<iter>
<var name="${pid}">30307</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:13.113" level="INFO">Running command 'kill 30307 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:13.108" endtime="20210730 14:41:13.114"/>
</kw>
<status status="PASS" starttime="20210730 14:41:13.107" endtime="20210730 14:41:13.114"/>
</iter>
<status status="PASS" starttime="20210730 14:41:13.096" endtime="20210730 14:41:13.114"/>
</for>
<status status="PASS" starttime="20210730 14:41:13.096" endtime="20210730 14:41:13.114"/>
</branch>
<status status="PASS" starttime="20210730 14:41:13.095" endtime="20210730 14:41:13.114"/>
</if>
<status status="PASS" starttime="20210730 14:41:13.077" endtime="20210730 14:41:13.115"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
lastname as such:
{
"lastname": 'Cuzdan123!?.'
}
Then, each request should fail with the following response body:
{
"message": "Each last name must contain only characters from the set [a-zA-Z]. Last names must be seperated by a a single space. Last names must have at least 2 characters",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:41:11.481" endtime="20210730 14:41:13.116">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t114" name="With Each Valid Token, Updating Last Name Of Each System User With Wi Results In Success">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:13.123" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:13.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:13.135" level="INFO">${pids} = 30336</msg>
<status status="PASS" starttime="20210730 14:41:13.119" endtime="20210730 14:41:13.135"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:13.136" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:13.136" endtime="20210730 14:41:13.136"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:13.137" level="INFO">${pids} = ['30336']</msg>
<status status="PASS" starttime="20210730 14:41:13.137" endtime="20210730 14:41:13.137"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">30336</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:13.141" level="INFO">Running command 'kill 30336 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:13.138" endtime="20210730 14:41:13.142"/>
</kw>
<status status="PASS" starttime="20210730 14:41:13.137" endtime="20210730 14:41:13.142"/>
</iter>
<status status="PASS" starttime="20210730 14:41:13.137" endtime="20210730 14:41:13.142"/>
</for>
<status status="PASS" starttime="20210730 14:41:13.137" endtime="20210730 14:41:13.143"/>
</branch>
<status status="PASS" starttime="20210730 14:41:13.136" endtime="20210730 14:41:13.143"/>
</if>
<status status="PASS" starttime="20210730 14:41:13.118" endtime="20210730 14:41:13.143"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:13.145" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:13.144" endtime="20210730 14:41:13.145"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:13.150" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:13.150" endtime="20210730 14:41:13.150"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:13.151" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:13.150" endtime="20210730 14:41:13.151"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:13.151" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:13.151" endtime="20210730 14:41:13.151"/>
</kw>
<msg timestamp="20210730 14:41:13.151" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:13.149" endtime="20210730 14:41:13.151"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:13.155" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:13.151" endtime="20210730 14:41:13.157"/>
</kw>
<status status="PASS" starttime="20210730 14:41:13.143" endtime="20210730 14:41:13.158"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:41:13.160" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:41:13.159" endtime="20210730 14:41:13.164"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:41:14.667" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:41:13.165" endtime="20210730 14:41:14.668"/>
</kw>
<status status="PASS" starttime="20210730 14:41:13.158" endtime="20210730 14:41:14.669"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:14.672" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:14.671" endtime="20210730 14:41:14.672"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:14.672" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:14.672" endtime="20210730 14:41:14.672"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:14.672" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:14.672" endtime="20210730 14:41:14.672"/>
</kw>
<msg timestamp="20210730 14:41:14.673" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:14.671" endtime="20210730 14:41:14.673"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:41:14.674" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:41:14.673" endtime="20210730 14:41:14.674"/>
</kw>
<status status="PASS" starttime="20210730 14:41:14.670" endtime="20210730 14:41:14.675"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:41:14.676" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:41:14.676" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:41:14.675" endtime="20210730 14:41:14.676"/>
</kw>
<status status="PASS" starttime="20210730 14:41:14.675" endtime="20210730 14:41:14.676"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:41:14.677" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:41:14.678" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:41:14.677" endtime="20210730 14:41:14.678"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:41:14.678" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:41:14.678" endtime="20210730 14:41:14.678"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:14.679" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:14.679" endtime="20210730 14:41:14.679"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:14.679" endtime="20210730 14:41:14.680"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:14.680" endtime="20210730 14:41:14.680"/>
</kw>
<status status="PASS" starttime="20210730 14:41:14.678" endtime="20210730 14:41:14.680"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:14.681" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:14.680" endtime="20210730 14:41:14.681"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:14.681" endtime="20210730 14:41:14.681"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:14.681" endtime="20210730 14:41:14.682"/>
</kw>
<status status="PASS" starttime="20210730 14:41:14.680" endtime="20210730 14:41:14.682"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:14.682" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:14.682" endtime="20210730 14:41:14.682"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:14.682" endtime="20210730 14:41:14.683"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:14.683" endtime="20210730 14:41:14.683"/>
</kw>
<status status="PASS" starttime="20210730 14:41:14.682" endtime="20210730 14:41:14.683"/>
</iter>
<status status="PASS" starttime="20210730 14:41:14.678" endtime="20210730 14:41:14.683"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:41:14.684" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:41:14.683" endtime="20210730 14:41:14.684"/>
</kw>
<status status="PASS" starttime="20210730 14:41:14.677" endtime="20210730 14:41:14.684"/>
</kw>
<status status="PASS" starttime="20210730 14:41:13.118" endtime="20210730 14:41:14.684"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 14:41:14.687" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:14.684" endtime="20210730 14:41:14.687"/>
</kw>
<msg timestamp="20210730 14:41:14.687" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:14.684" endtime="20210730 14:41:14.687"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>last_name</arg>
<arg>2 character last name with only one word</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 14:41:14.688" endtime="20210730 14:41:14.688"/>
</kw>
<status status="PASS" starttime="20210730 14:41:14.687" endtime="20210730 14:41:14.688"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=lastname</arg>
<arg>field_data=${user_data}[last_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:14.689" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:41:14.689" endtime="20210730 14:41:14.690"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:14.690" level="INFO">${payload} = {'lastname': 'Wi'}</msg>
<status status="PASS" starttime="20210730 14:41:14.690" endtime="20210730 14:41:14.690"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:41:14.699" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:41:14.699" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:41:14.690" endtime="20210730 14:41:14.700"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 14:41:14.700" endtime="20210730 14:41:14.700"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 14:41:14.700" endtime="20210730 14:41:14.700"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:14.690" endtime="20210730 14:41:14.700"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:14.690" endtime="20210730 14:41:14.700"/>
</for>
<status status="FAIL" starttime="20210730 14:41:14.688" endtime="20210730 14:41:14.700"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:14.688" endtime="20210730 14:41:14.700"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:14.688" endtime="20210730 14:41:14.701"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:14.705" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:14.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:14.717" level="INFO">${pids} = 30359
30366
30369</msg>
<status status="PASS" starttime="20210730 14:41:14.701" endtime="20210730 14:41:14.717"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:14.718" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:14.718" endtime="20210730 14:41:14.718"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:14.719" level="INFO">${pids} = ['30359', '30366', '30369']</msg>
<status status="PASS" starttime="20210730 14:41:14.719" endtime="20210730 14:41:14.719"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">30359</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:14.723" level="INFO">Running command 'kill 30359 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:14.719" endtime="20210730 14:41:14.723"/>
</kw>
<status status="PASS" starttime="20210730 14:41:14.719" endtime="20210730 14:41:14.723"/>
</iter>
<iter>
<var name="${pid}">30366</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:14.727" level="INFO">Running command 'kill 30366 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:14.724" endtime="20210730 14:41:14.728"/>
</kw>
<status status="PASS" starttime="20210730 14:41:14.723" endtime="20210730 14:41:14.728"/>
</iter>
<iter>
<var name="${pid}">30369</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:14.732" level="INFO">Running command 'kill 30369 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:14.728" endtime="20210730 14:41:14.732"/>
</kw>
<status status="PASS" starttime="20210730 14:41:14.728" endtime="20210730 14:41:14.733"/>
</iter>
<status status="PASS" starttime="20210730 14:41:14.719" endtime="20210730 14:41:14.733"/>
</for>
<status status="PASS" starttime="20210730 14:41:14.719" endtime="20210730 14:41:14.733"/>
</branch>
<status status="PASS" starttime="20210730 14:41:14.718" endtime="20210730 14:41:14.733"/>
</if>
<status status="PASS" starttime="20210730 14:41:14.701" endtime="20210730 14:41:14.733"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
lastname as such:
{
"lastname": 'Wi'
}
Then, each request should fail with the following response body:
{
"message": "Updated",
"status": "SUCCESS"
}
This test not only verifies message and status but also verifies that the &lt;username&gt;'s data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:41:13.117" endtime="20210730 14:41:14.733">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t115" name="With Each Valid Token, Updating Last Name Of Each System User With Wi Xi Results In Success">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:14.738" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:14.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:14.751" level="INFO">${pids} = 30398</msg>
<status status="PASS" starttime="20210730 14:41:14.735" endtime="20210730 14:41:14.751"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:14.754" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:14.752" endtime="20210730 14:41:14.754"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:14.755" level="INFO">${pids} = ['30398']</msg>
<status status="PASS" starttime="20210730 14:41:14.755" endtime="20210730 14:41:14.755"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">30398</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:14.759" level="INFO">Running command 'kill 30398 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:14.755" endtime="20210730 14:41:14.759"/>
</kw>
<status status="PASS" starttime="20210730 14:41:14.755" endtime="20210730 14:41:14.759"/>
</iter>
<status status="PASS" starttime="20210730 14:41:14.755" endtime="20210730 14:41:14.759"/>
</for>
<status status="PASS" starttime="20210730 14:41:14.754" endtime="20210730 14:41:14.760"/>
</branch>
<status status="PASS" starttime="20210730 14:41:14.754" endtime="20210730 14:41:14.760"/>
</if>
<status status="PASS" starttime="20210730 14:41:14.735" endtime="20210730 14:41:14.760"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:14.761" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:14.761" endtime="20210730 14:41:14.761"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:14.762" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:14.761" endtime="20210730 14:41:14.762"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:14.762" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:14.762" endtime="20210730 14:41:14.762"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:14.762" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:14.762" endtime="20210730 14:41:14.762"/>
</kw>
<msg timestamp="20210730 14:41:14.763" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:14.761" endtime="20210730 14:41:14.763"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:14.768" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:14.763" endtime="20210730 14:41:14.775"/>
</kw>
<status status="PASS" starttime="20210730 14:41:14.760" endtime="20210730 14:41:14.776"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:41:14.777" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:41:14.777" endtime="20210730 14:41:14.785"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:41:16.286" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:41:14.785" endtime="20210730 14:41:16.287"/>
</kw>
<status status="PASS" starttime="20210730 14:41:14.776" endtime="20210730 14:41:16.287"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:16.288" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:16.288" endtime="20210730 14:41:16.288"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:16.288" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:16.288" endtime="20210730 14:41:16.288"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:16.289" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:16.288" endtime="20210730 14:41:16.289"/>
</kw>
<msg timestamp="20210730 14:41:16.289" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:16.287" endtime="20210730 14:41:16.289"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:41:16.289" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:41:16.289" endtime="20210730 14:41:16.290"/>
</kw>
<status status="PASS" starttime="20210730 14:41:16.287" endtime="20210730 14:41:16.290"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:41:16.290" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:41:16.290" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:41:16.290" endtime="20210730 14:41:16.291"/>
</kw>
<status status="PASS" starttime="20210730 14:41:16.290" endtime="20210730 14:41:16.291"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:41:16.292" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:41:16.292" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:41:16.292" endtime="20210730 14:41:16.292"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:41:16.292" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:41:16.292" endtime="20210730 14:41:16.292"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:16.293" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:16.293" endtime="20210730 14:41:16.293"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:16.293" endtime="20210730 14:41:16.294"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:16.294" endtime="20210730 14:41:16.294"/>
</kw>
<status status="PASS" starttime="20210730 14:41:16.293" endtime="20210730 14:41:16.294"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:16.295" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:16.295" endtime="20210730 14:41:16.295"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:16.295" endtime="20210730 14:41:16.296"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:16.296" endtime="20210730 14:41:16.296"/>
</kw>
<status status="PASS" starttime="20210730 14:41:16.294" endtime="20210730 14:41:16.296"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:16.296" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:16.296" endtime="20210730 14:41:16.296"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:16.297" endtime="20210730 14:41:16.297"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:16.297" endtime="20210730 14:41:16.298"/>
</kw>
<status status="PASS" starttime="20210730 14:41:16.296" endtime="20210730 14:41:16.298"/>
</iter>
<status status="PASS" starttime="20210730 14:41:16.292" endtime="20210730 14:41:16.298"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:41:16.298" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:41:16.298" endtime="20210730 14:41:16.298"/>
</kw>
<status status="PASS" starttime="20210730 14:41:16.291" endtime="20210730 14:41:16.298"/>
</kw>
<status status="PASS" starttime="20210730 14:41:14.734" endtime="20210730 14:41:16.298"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 14:41:16.301" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:16.299" endtime="20210730 14:41:16.301"/>
</kw>
<msg timestamp="20210730 14:41:16.302" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:16.299" endtime="20210730 14:41:16.302"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>last_name</arg>
<arg>2 characters last name with two words</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 14:41:16.303" endtime="20210730 14:41:16.303"/>
</kw>
<status status="PASS" starttime="20210730 14:41:16.302" endtime="20210730 14:41:16.303"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=lastname</arg>
<arg>field_data=${user_data}[last_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:16.305" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:41:16.304" endtime="20210730 14:41:16.305"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:16.305" level="INFO">${payload} = {'lastname': 'Wi Xi'}</msg>
<status status="PASS" starttime="20210730 14:41:16.305" endtime="20210730 14:41:16.305"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:41:16.315" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:41:16.315" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:41:16.306" endtime="20210730 14:41:16.315"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 14:41:16.315" endtime="20210730 14:41:16.315"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 14:41:16.315" endtime="20210730 14:41:16.315"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:16.305" endtime="20210730 14:41:16.315"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:16.305" endtime="20210730 14:41:16.316"/>
</for>
<status status="FAIL" starttime="20210730 14:41:16.304" endtime="20210730 14:41:16.316"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:16.304" endtime="20210730 14:41:16.316"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:16.303" endtime="20210730 14:41:16.316"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:16.320" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:16.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:16.333" level="INFO">${pids} = 30421
30428
30430</msg>
<status status="PASS" starttime="20210730 14:41:16.316" endtime="20210730 14:41:16.333"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:16.334" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:16.333" endtime="20210730 14:41:16.334"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:16.334" level="INFO">${pids} = ['30421', '30428', '30430']</msg>
<status status="PASS" starttime="20210730 14:41:16.334" endtime="20210730 14:41:16.334"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">30421</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:16.339" level="INFO">Running command 'kill 30421 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:16.335" endtime="20210730 14:41:16.339"/>
</kw>
<status status="PASS" starttime="20210730 14:41:16.335" endtime="20210730 14:41:16.339"/>
</iter>
<iter>
<var name="${pid}">30428</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:16.344" level="INFO">Running command 'kill 30428 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:16.340" endtime="20210730 14:41:16.345"/>
</kw>
<status status="PASS" starttime="20210730 14:41:16.340" endtime="20210730 14:41:16.345"/>
</iter>
<iter>
<var name="${pid}">30430</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:16.350" level="INFO">Running command 'kill 30430 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:16.345" endtime="20210730 14:41:16.350"/>
</kw>
<status status="PASS" starttime="20210730 14:41:16.345" endtime="20210730 14:41:16.350"/>
</iter>
<status status="PASS" starttime="20210730 14:41:16.334" endtime="20210730 14:41:16.350"/>
</for>
<status status="PASS" starttime="20210730 14:41:16.334" endtime="20210730 14:41:16.350"/>
</branch>
<status status="PASS" starttime="20210730 14:41:16.334" endtime="20210730 14:41:16.350"/>
</if>
<status status="PASS" starttime="20210730 14:41:16.316" endtime="20210730 14:41:16.351"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
lastname as such:
{
"lastname": 'Wi Xi'
}
Then, each request should fail with the following response body:
{
"message": "Updated",
"status": "SUCCESS"
}
This test not only verifies message and status but also verifies that the &lt;username&gt;'s data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:41:14.734" endtime="20210730 14:41:16.351">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t116" name="With Each Valid Token, Updating Last Name Of Each System User With W Xi Results In Failure Status With Right Error Message">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:16.356" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:16.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:16.367" level="INFO">${pids} = 30459</msg>
<status status="PASS" starttime="20210730 14:41:16.353" endtime="20210730 14:41:16.367"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:16.368" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:16.368" endtime="20210730 14:41:16.368"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:16.369" level="INFO">${pids} = ['30459']</msg>
<status status="PASS" starttime="20210730 14:41:16.368" endtime="20210730 14:41:16.369"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">30459</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:16.373" level="INFO">Running command 'kill 30459 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:16.369" endtime="20210730 14:41:16.374"/>
</kw>
<status status="PASS" starttime="20210730 14:41:16.369" endtime="20210730 14:41:16.374"/>
</iter>
<status status="PASS" starttime="20210730 14:41:16.369" endtime="20210730 14:41:16.374"/>
</for>
<status status="PASS" starttime="20210730 14:41:16.368" endtime="20210730 14:41:16.374"/>
</branch>
<status status="PASS" starttime="20210730 14:41:16.368" endtime="20210730 14:41:16.374"/>
</if>
<status status="PASS" starttime="20210730 14:41:16.352" endtime="20210730 14:41:16.375"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:16.376" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:16.376" endtime="20210730 14:41:16.376"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:16.377" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:16.377" endtime="20210730 14:41:16.377"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:16.377" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:16.377" endtime="20210730 14:41:16.377"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:16.381" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:16.381" endtime="20210730 14:41:16.381"/>
</kw>
<msg timestamp="20210730 14:41:16.382" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:16.376" endtime="20210730 14:41:16.382"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:16.397" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:16.382" endtime="20210730 14:41:16.399"/>
</kw>
<status status="PASS" starttime="20210730 14:41:16.375" endtime="20210730 14:41:16.399"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:41:16.401" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:41:16.400" endtime="20210730 14:41:16.407"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:41:17.908" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:41:16.407" endtime="20210730 14:41:17.908"/>
</kw>
<status status="PASS" starttime="20210730 14:41:16.400" endtime="20210730 14:41:17.909"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:17.910" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:17.910" endtime="20210730 14:41:17.910"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:17.911" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:17.910" endtime="20210730 14:41:17.911"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:17.911" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:17.911" endtime="20210730 14:41:17.911"/>
</kw>
<msg timestamp="20210730 14:41:17.911" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:17.909" endtime="20210730 14:41:17.911"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:41:17.912" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:41:17.911" endtime="20210730 14:41:17.912"/>
</kw>
<status status="PASS" starttime="20210730 14:41:17.909" endtime="20210730 14:41:17.912"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:41:17.913" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:41:17.913" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:41:17.913" endtime="20210730 14:41:17.913"/>
</kw>
<status status="PASS" starttime="20210730 14:41:17.912" endtime="20210730 14:41:17.913"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:41:17.914" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:41:17.914" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:41:17.913" endtime="20210730 14:41:17.914"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:41:17.914" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:41:17.914" endtime="20210730 14:41:17.914"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:17.915" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:17.914" endtime="20210730 14:41:17.915"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:17.915" endtime="20210730 14:41:17.916"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:17.916" endtime="20210730 14:41:17.917"/>
</kw>
<status status="PASS" starttime="20210730 14:41:17.914" endtime="20210730 14:41:17.917"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:17.917" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:17.917" endtime="20210730 14:41:17.917"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:17.917" endtime="20210730 14:41:17.918"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:17.918" endtime="20210730 14:41:17.918"/>
</kw>
<status status="PASS" starttime="20210730 14:41:17.917" endtime="20210730 14:41:17.918"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:17.919" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:17.918" endtime="20210730 14:41:17.919"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:17.919" endtime="20210730 14:41:17.919"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:17.920" endtime="20210730 14:41:17.920"/>
</kw>
<status status="PASS" starttime="20210730 14:41:17.918" endtime="20210730 14:41:17.920"/>
</iter>
<status status="PASS" starttime="20210730 14:41:17.914" endtime="20210730 14:41:17.920"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:41:17.920" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:41:17.920" endtime="20210730 14:41:17.920"/>
</kw>
<status status="PASS" starttime="20210730 14:41:17.913" endtime="20210730 14:41:17.920"/>
</kw>
<status status="PASS" starttime="20210730 14:41:16.352" endtime="20210730 14:41:17.920"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 14:41:17.924" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:17.921" endtime="20210730 14:41:17.924"/>
</kw>
<msg timestamp="20210730 14:41:17.924" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:17.921" endtime="20210730 14:41:17.924"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>last_name</arg>
<arg>The first last name is invalid with only 1 letter, the second last name is valid</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 14:41:17.925" endtime="20210730 14:41:17.925"/>
</kw>
<status status="PASS" starttime="20210730 14:41:17.924" endtime="20210730 14:41:17.925"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=lastname</arg>
<arg>field_data=${user_data}[last_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:17.927" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:41:17.926" endtime="20210730 14:41:17.927"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:17.927" level="INFO">${payload} = {'lastname': 'W Xi'}</msg>
<status status="PASS" starttime="20210730 14:41:17.927" endtime="20210730 14:41:17.927"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:41:17.937" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:41:17.937" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:41:17.928" endtime="20210730 14:41:17.937"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 14:41:17.937" endtime="20210730 14:41:17.938"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 14:41:17.938" endtime="20210730 14:41:17.938"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:17.927" endtime="20210730 14:41:17.938"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:17.927" endtime="20210730 14:41:17.938"/>
</for>
<status status="FAIL" starttime="20210730 14:41:17.926" endtime="20210730 14:41:17.938"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:17.925" endtime="20210730 14:41:17.938"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:17.925" endtime="20210730 14:41:17.938"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:17.943" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:17.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:17.954" level="INFO">${pids} = 30482
30489
30491</msg>
<status status="PASS" starttime="20210730 14:41:17.939" endtime="20210730 14:41:17.954"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:17.955" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:17.954" endtime="20210730 14:41:17.955"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:17.956" level="INFO">${pids} = ['30482', '30489', '30491']</msg>
<status status="PASS" starttime="20210730 14:41:17.955" endtime="20210730 14:41:17.956"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">30482</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:17.960" level="INFO">Running command 'kill 30482 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:17.956" endtime="20210730 14:41:17.960"/>
</kw>
<status status="PASS" starttime="20210730 14:41:17.956" endtime="20210730 14:41:17.960"/>
</iter>
<iter>
<var name="${pid}">30489</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:17.964" level="INFO">Running command 'kill 30489 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:17.961" endtime="20210730 14:41:17.966"/>
</kw>
<status status="PASS" starttime="20210730 14:41:17.961" endtime="20210730 14:41:17.966"/>
</iter>
<iter>
<var name="${pid}">30491</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:17.969" level="INFO">Running command 'kill 30491 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:17.966" endtime="20210730 14:41:17.970"/>
</kw>
<status status="PASS" starttime="20210730 14:41:17.966" endtime="20210730 14:41:17.970"/>
</iter>
<status status="PASS" starttime="20210730 14:41:17.956" endtime="20210730 14:41:17.970"/>
</for>
<status status="PASS" starttime="20210730 14:41:17.955" endtime="20210730 14:41:17.970"/>
</branch>
<status status="PASS" starttime="20210730 14:41:17.955" endtime="20210730 14:41:17.970"/>
</if>
<status status="PASS" starttime="20210730 14:41:17.938" endtime="20210730 14:41:17.970"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
lastname as such:
{
"lastname": 'W Xi'
}
Then, each request should fail with the following response body:
{
"message": "Each last name must contain only characters from the set [a-zA-Z]. Last names must be seperated by a a single space. Last names must have at least 2 characters",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:41:16.351" endtime="20210730 14:41:17.971">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t117" name="With Each Valid Token, Updating Last Name Of Each System User With Wi X Results In Failure Status With Right Error Message">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:17.976" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:17.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:17.991" level="INFO">${pids} = 30520</msg>
<status status="PASS" starttime="20210730 14:41:17.972" endtime="20210730 14:41:17.991"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:17.992" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:17.992" endtime="20210730 14:41:17.992"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:17.994" level="INFO">${pids} = ['30520']</msg>
<status status="PASS" starttime="20210730 14:41:17.993" endtime="20210730 14:41:17.994"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">30520</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:17.999" level="INFO">Running command 'kill 30520 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:17.994" endtime="20210730 14:41:17.999"/>
</kw>
<status status="PASS" starttime="20210730 14:41:17.994" endtime="20210730 14:41:17.999"/>
</iter>
<status status="PASS" starttime="20210730 14:41:17.994" endtime="20210730 14:41:18.000"/>
</for>
<status status="PASS" starttime="20210730 14:41:17.993" endtime="20210730 14:41:18.000"/>
</branch>
<status status="PASS" starttime="20210730 14:41:17.992" endtime="20210730 14:41:18.000"/>
</if>
<status status="PASS" starttime="20210730 14:41:17.972" endtime="20210730 14:41:18.000"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:18.009" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:18.001" endtime="20210730 14:41:18.009"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:18.010" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:18.009" endtime="20210730 14:41:18.010"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:18.011" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:18.010" endtime="20210730 14:41:18.011"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:18.013" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:18.012" endtime="20210730 14:41:18.013"/>
</kw>
<msg timestamp="20210730 14:41:18.013" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:18.009" endtime="20210730 14:41:18.013"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:18.017" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:18.013" endtime="20210730 14:41:18.019"/>
</kw>
<status status="PASS" starttime="20210730 14:41:18.000" endtime="20210730 14:41:18.019"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:41:18.020" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:41:18.020" endtime="20210730 14:41:18.024"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:41:19.541" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:41:18.025" endtime="20210730 14:41:19.541"/>
</kw>
<status status="PASS" starttime="20210730 14:41:18.019" endtime="20210730 14:41:19.542"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:19.543" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:19.543" endtime="20210730 14:41:19.543"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:19.544" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:19.543" endtime="20210730 14:41:19.544"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:19.544" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:19.544" endtime="20210730 14:41:19.544"/>
</kw>
<msg timestamp="20210730 14:41:19.544" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:19.542" endtime="20210730 14:41:19.544"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:41:19.545" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:41:19.544" endtime="20210730 14:41:19.545"/>
</kw>
<status status="PASS" starttime="20210730 14:41:19.542" endtime="20210730 14:41:19.546"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:41:19.546" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:41:19.546" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:41:19.546" endtime="20210730 14:41:19.546"/>
</kw>
<status status="PASS" starttime="20210730 14:41:19.546" endtime="20210730 14:41:19.546"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:41:19.547" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:41:19.547" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:41:19.547" endtime="20210730 14:41:19.547"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:41:19.547" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:41:19.547" endtime="20210730 14:41:19.547"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:19.548" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:19.548" endtime="20210730 14:41:19.548"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:19.548" endtime="20210730 14:41:19.549"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:19.549" endtime="20210730 14:41:19.549"/>
</kw>
<status status="PASS" starttime="20210730 14:41:19.548" endtime="20210730 14:41:19.549"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:19.549" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:19.549" endtime="20210730 14:41:19.549"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:19.550" endtime="20210730 14:41:19.550"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:19.550" endtime="20210730 14:41:19.551"/>
</kw>
<status status="PASS" starttime="20210730 14:41:19.549" endtime="20210730 14:41:19.551"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:19.551" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:19.551" endtime="20210730 14:41:19.551"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:19.551" endtime="20210730 14:41:19.552"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:19.552" endtime="20210730 14:41:19.552"/>
</kw>
<status status="PASS" starttime="20210730 14:41:19.551" endtime="20210730 14:41:19.552"/>
</iter>
<status status="PASS" starttime="20210730 14:41:19.547" endtime="20210730 14:41:19.552"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:41:19.553" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:41:19.552" endtime="20210730 14:41:19.553"/>
</kw>
<status status="PASS" starttime="20210730 14:41:19.546" endtime="20210730 14:41:19.553"/>
</kw>
<status status="PASS" starttime="20210730 14:41:17.972" endtime="20210730 14:41:19.553"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 14:41:19.556" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:19.554" endtime="20210730 14:41:19.556"/>
</kw>
<msg timestamp="20210730 14:41:19.556" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:19.553" endtime="20210730 14:41:19.556"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>last_name</arg>
<arg>The second last name is invalid with only 1 letter, the first last name is valid</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 14:41:19.557" endtime="20210730 14:41:19.558"/>
</kw>
<status status="PASS" starttime="20210730 14:41:19.557" endtime="20210730 14:41:19.558"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=lastname</arg>
<arg>field_data=${user_data}[last_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:19.559" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:41:19.559" endtime="20210730 14:41:19.559"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:19.560" level="INFO">${payload} = {'lastname': 'Wi X'}</msg>
<status status="PASS" starttime="20210730 14:41:19.559" endtime="20210730 14:41:19.560"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:41:19.570" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:41:19.570" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:41:19.560" endtime="20210730 14:41:19.570"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 14:41:19.570" endtime="20210730 14:41:19.570"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 14:41:19.570" endtime="20210730 14:41:19.570"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:19.560" endtime="20210730 14:41:19.570"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:19.560" endtime="20210730 14:41:19.570"/>
</for>
<status status="FAIL" starttime="20210730 14:41:19.558" endtime="20210730 14:41:19.570"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:19.558" endtime="20210730 14:41:19.571"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:19.558" endtime="20210730 14:41:19.571"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:19.580" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:19.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:19.592" level="INFO">${pids} = 30543
30550
30553</msg>
<status status="PASS" starttime="20210730 14:41:19.571" endtime="20210730 14:41:19.592"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:19.593" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:19.592" endtime="20210730 14:41:19.593"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:19.594" level="INFO">${pids} = ['30543', '30550', '30553']</msg>
<status status="PASS" starttime="20210730 14:41:19.593" endtime="20210730 14:41:19.594"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">30543</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:19.598" level="INFO">Running command 'kill 30543 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:19.594" endtime="20210730 14:41:19.598"/>
</kw>
<status status="PASS" starttime="20210730 14:41:19.594" endtime="20210730 14:41:19.598"/>
</iter>
<iter>
<var name="${pid}">30550</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:19.604" level="INFO">Running command 'kill 30550 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:19.599" endtime="20210730 14:41:19.604"/>
</kw>
<status status="PASS" starttime="20210730 14:41:19.598" endtime="20210730 14:41:19.604"/>
</iter>
<iter>
<var name="${pid}">30553</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:19.610" level="INFO">Running command 'kill 30553 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:19.605" endtime="20210730 14:41:19.611"/>
</kw>
<status status="PASS" starttime="20210730 14:41:19.605" endtime="20210730 14:41:19.611"/>
</iter>
<status status="PASS" starttime="20210730 14:41:19.594" endtime="20210730 14:41:19.611"/>
</for>
<status status="PASS" starttime="20210730 14:41:19.593" endtime="20210730 14:41:19.611"/>
</branch>
<status status="PASS" starttime="20210730 14:41:19.593" endtime="20210730 14:41:19.611"/>
</if>
<status status="PASS" starttime="20210730 14:41:19.571" endtime="20210730 14:41:19.611"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
lastname as such:
{
"lastname": 'Wi X'
}
Then, each request should fail with the following response body:
{
"message": "Each last name must contain only characters from the set [a-zA-Z]. Last names must be seperated by a a single space. Last names must have at least 2 characters",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:41:17.971" endtime="20210730 14:41:19.612">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t118" name="With Each Valid Token, Updating Last Name Of Each System User With W X Results In Failure Status With Right Error Message">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:19.621" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:19.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:19.633" level="INFO">${pids} = 30582</msg>
<status status="PASS" starttime="20210730 14:41:19.615" endtime="20210730 14:41:19.633"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:19.634" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:19.634" endtime="20210730 14:41:19.634"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:19.635" level="INFO">${pids} = ['30582']</msg>
<status status="PASS" starttime="20210730 14:41:19.634" endtime="20210730 14:41:19.635"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">30582</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:19.639" level="INFO">Running command 'kill 30582 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:19.635" endtime="20210730 14:41:19.639"/>
</kw>
<status status="PASS" starttime="20210730 14:41:19.635" endtime="20210730 14:41:19.639"/>
</iter>
<status status="PASS" starttime="20210730 14:41:19.635" endtime="20210730 14:41:19.639"/>
</for>
<status status="PASS" starttime="20210730 14:41:19.634" endtime="20210730 14:41:19.639"/>
</branch>
<status status="PASS" starttime="20210730 14:41:19.634" endtime="20210730 14:41:19.639"/>
</if>
<status status="PASS" starttime="20210730 14:41:19.615" endtime="20210730 14:41:19.639"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:19.641" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:19.640" endtime="20210730 14:41:19.641"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:19.641" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:19.641" endtime="20210730 14:41:19.641"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:19.642" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:19.641" endtime="20210730 14:41:19.642"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:19.642" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:19.642" endtime="20210730 14:41:19.642"/>
</kw>
<msg timestamp="20210730 14:41:19.642" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:19.641" endtime="20210730 14:41:19.642"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:19.648" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:19.643" endtime="20210730 14:41:19.649"/>
</kw>
<status status="PASS" starttime="20210730 14:41:19.640" endtime="20210730 14:41:19.650"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:41:19.652" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:41:19.651" endtime="20210730 14:41:19.656"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:41:21.159" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:41:19.656" endtime="20210730 14:41:21.159"/>
</kw>
<status status="PASS" starttime="20210730 14:41:19.650" endtime="20210730 14:41:21.160"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:21.161" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:21.161" endtime="20210730 14:41:21.161"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:21.161" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:21.161" endtime="20210730 14:41:21.161"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:21.162" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:21.161" endtime="20210730 14:41:21.162"/>
</kw>
<msg timestamp="20210730 14:41:21.162" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:21.160" endtime="20210730 14:41:21.162"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:41:21.162" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:41:21.162" endtime="20210730 14:41:21.163"/>
</kw>
<status status="PASS" starttime="20210730 14:41:21.160" endtime="20210730 14:41:21.163"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:41:21.163" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:41:21.163" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:41:21.163" endtime="20210730 14:41:21.164"/>
</kw>
<status status="PASS" starttime="20210730 14:41:21.163" endtime="20210730 14:41:21.164"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:41:21.164" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:41:21.164" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:41:21.164" endtime="20210730 14:41:21.164"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:41:21.165" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:41:21.165" endtime="20210730 14:41:21.165"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:21.165" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:21.165" endtime="20210730 14:41:21.166"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:21.166" endtime="20210730 14:41:21.167"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:21.167" endtime="20210730 14:41:21.167"/>
</kw>
<status status="PASS" starttime="20210730 14:41:21.165" endtime="20210730 14:41:21.167"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:21.168" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:21.168" endtime="20210730 14:41:21.168"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:21.168" endtime="20210730 14:41:21.169"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:21.169" endtime="20210730 14:41:21.169"/>
</kw>
<status status="PASS" starttime="20210730 14:41:21.167" endtime="20210730 14:41:21.169"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:21.170" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:21.169" endtime="20210730 14:41:21.170"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:21.170" endtime="20210730 14:41:21.171"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:21.171" endtime="20210730 14:41:21.171"/>
</kw>
<status status="PASS" starttime="20210730 14:41:21.169" endtime="20210730 14:41:21.171"/>
</iter>
<status status="PASS" starttime="20210730 14:41:21.165" endtime="20210730 14:41:21.171"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:41:21.172" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:41:21.171" endtime="20210730 14:41:21.172"/>
</kw>
<status status="PASS" starttime="20210730 14:41:21.164" endtime="20210730 14:41:21.172"/>
</kw>
<status status="PASS" starttime="20210730 14:41:19.614" endtime="20210730 14:41:21.172"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 14:41:21.176" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:21.172" endtime="20210730 14:41:21.176"/>
</kw>
<msg timestamp="20210730 14:41:21.176" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:21.172" endtime="20210730 14:41:21.176"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>last_name</arg>
<arg>The both last names are invalid because they only have 1 letter</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 14:41:21.177" endtime="20210730 14:41:21.178"/>
</kw>
<status status="PASS" starttime="20210730 14:41:21.176" endtime="20210730 14:41:21.178"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=lastname</arg>
<arg>field_data=${user_data}[last_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:21.180" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:41:21.179" endtime="20210730 14:41:21.180"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:21.180" level="INFO">${payload} = {'lastname': 'W X'}</msg>
<status status="PASS" starttime="20210730 14:41:21.180" endtime="20210730 14:41:21.180"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:41:21.190" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:41:21.191" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:41:21.181" endtime="20210730 14:41:21.191"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 14:41:21.191" endtime="20210730 14:41:21.191"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 14:41:21.191" endtime="20210730 14:41:21.191"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:21.180" endtime="20210730 14:41:21.191"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:21.180" endtime="20210730 14:41:21.191"/>
</for>
<status status="FAIL" starttime="20210730 14:41:21.178" endtime="20210730 14:41:21.192"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:21.178" endtime="20210730 14:41:21.192"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:21.178" endtime="20210730 14:41:21.192"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:21.196" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:21.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:21.209" level="INFO">${pids} = 30605
30612
30614</msg>
<status status="PASS" starttime="20210730 14:41:21.193" endtime="20210730 14:41:21.209"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:21.210" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:21.209" endtime="20210730 14:41:21.210"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:21.211" level="INFO">${pids} = ['30605', '30612', '30614']</msg>
<status status="PASS" starttime="20210730 14:41:21.210" endtime="20210730 14:41:21.211"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">30605</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:21.215" level="INFO">Running command 'kill 30605 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:21.211" endtime="20210730 14:41:21.215"/>
</kw>
<status status="PASS" starttime="20210730 14:41:21.211" endtime="20210730 14:41:21.215"/>
</iter>
<iter>
<var name="${pid}">30612</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:21.219" level="INFO">Running command 'kill 30612 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:21.216" endtime="20210730 14:41:21.219"/>
</kw>
<status status="PASS" starttime="20210730 14:41:21.215" endtime="20210730 14:41:21.219"/>
</iter>
<iter>
<var name="${pid}">30614</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:21.223" level="INFO">Running command 'kill 30614 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:21.220" endtime="20210730 14:41:21.224"/>
</kw>
<status status="PASS" starttime="20210730 14:41:21.220" endtime="20210730 14:41:21.224"/>
</iter>
<status status="PASS" starttime="20210730 14:41:21.211" endtime="20210730 14:41:21.224"/>
</for>
<status status="PASS" starttime="20210730 14:41:21.210" endtime="20210730 14:41:21.224"/>
</branch>
<status status="PASS" starttime="20210730 14:41:21.210" endtime="20210730 14:41:21.224"/>
</if>
<status status="PASS" starttime="20210730 14:41:21.192" endtime="20210730 14:41:21.224"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
lastname as such:
{
"lastname": 'W X'
}
Then, each request should fail with the following response body:
{
"message": "Each last name must contain only characters from the set [a-zA-Z]. Last names must be seperated by a a single space. Last names must have at least 2 characters",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:41:19.614" endtime="20210730 14:41:21.225">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t119" name="With Each Valid Token, Updating Last Name Of Each System User With Holm123 Results In Failure Status With Right Error Message">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:21.231" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:21.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:21.243" level="INFO">${pids} = 30643</msg>
<status status="PASS" starttime="20210730 14:41:21.227" endtime="20210730 14:41:21.243"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:21.244" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:21.243" endtime="20210730 14:41:21.244"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:21.245" level="INFO">${pids} = ['30643']</msg>
<status status="PASS" starttime="20210730 14:41:21.245" endtime="20210730 14:41:21.245"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">30643</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:21.251" level="INFO">Running command 'kill 30643 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:21.246" endtime="20210730 14:41:21.252"/>
</kw>
<status status="PASS" starttime="20210730 14:41:21.246" endtime="20210730 14:41:21.252"/>
</iter>
<status status="PASS" starttime="20210730 14:41:21.245" endtime="20210730 14:41:21.252"/>
</for>
<status status="PASS" starttime="20210730 14:41:21.245" endtime="20210730 14:41:21.252"/>
</branch>
<status status="PASS" starttime="20210730 14:41:21.244" endtime="20210730 14:41:21.252"/>
</if>
<status status="PASS" starttime="20210730 14:41:21.227" endtime="20210730 14:41:21.253"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:21.254" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:21.253" endtime="20210730 14:41:21.254"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:21.255" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:21.254" endtime="20210730 14:41:21.255"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:21.255" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:21.255" endtime="20210730 14:41:21.255"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:21.256" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:21.256" endtime="20210730 14:41:21.256"/>
</kw>
<msg timestamp="20210730 14:41:21.256" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:21.254" endtime="20210730 14:41:21.256"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:21.266" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:21.256" endtime="20210730 14:41:21.268"/>
</kw>
<status status="PASS" starttime="20210730 14:41:21.253" endtime="20210730 14:41:21.268"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:41:21.270" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:41:21.269" endtime="20210730 14:41:21.274"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:41:22.776" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:41:21.275" endtime="20210730 14:41:22.776"/>
</kw>
<status status="PASS" starttime="20210730 14:41:21.269" endtime="20210730 14:41:22.776"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:22.778" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:22.778" endtime="20210730 14:41:22.778"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:22.778" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:22.778" endtime="20210730 14:41:22.778"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:22.779" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:22.778" endtime="20210730 14:41:22.779"/>
</kw>
<msg timestamp="20210730 14:41:22.779" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:22.777" endtime="20210730 14:41:22.779"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:41:22.779" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:41:22.779" endtime="20210730 14:41:22.780"/>
</kw>
<status status="PASS" starttime="20210730 14:41:22.776" endtime="20210730 14:41:22.780"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:41:22.781" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:41:22.781" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:41:22.780" endtime="20210730 14:41:22.781"/>
</kw>
<status status="PASS" starttime="20210730 14:41:22.780" endtime="20210730 14:41:22.781"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:41:22.782" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:41:22.782" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:41:22.781" endtime="20210730 14:41:22.782"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:41:22.782" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:41:22.782" endtime="20210730 14:41:22.782"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:22.782" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:22.782" endtime="20210730 14:41:22.782"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:22.783" endtime="20210730 14:41:22.783"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:22.783" endtime="20210730 14:41:22.784"/>
</kw>
<status status="PASS" starttime="20210730 14:41:22.782" endtime="20210730 14:41:22.784"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:22.784" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:22.784" endtime="20210730 14:41:22.784"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:22.784" endtime="20210730 14:41:22.785"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:22.785" endtime="20210730 14:41:22.785"/>
</kw>
<status status="PASS" starttime="20210730 14:41:22.784" endtime="20210730 14:41:22.785"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:22.786" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:22.786" endtime="20210730 14:41:22.786"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:22.786" endtime="20210730 14:41:22.787"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:22.787" endtime="20210730 14:41:22.787"/>
</kw>
<status status="PASS" starttime="20210730 14:41:22.785" endtime="20210730 14:41:22.787"/>
</iter>
<status status="PASS" starttime="20210730 14:41:22.782" endtime="20210730 14:41:22.787"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:41:22.787" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:41:22.787" endtime="20210730 14:41:22.788"/>
</kw>
<status status="PASS" starttime="20210730 14:41:22.781" endtime="20210730 14:41:22.788"/>
</kw>
<status status="PASS" starttime="20210730 14:41:21.226" endtime="20210730 14:41:22.788"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 14:41:22.791" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:22.788" endtime="20210730 14:41:22.791"/>
</kw>
<msg timestamp="20210730 14:41:22.791" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:22.788" endtime="20210730 14:41:22.791"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>last_name</arg>
<arg>Last name does contain numbers, which makes it invalid</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 14:41:22.792" endtime="20210730 14:41:22.792"/>
</kw>
<status status="PASS" starttime="20210730 14:41:22.791" endtime="20210730 14:41:22.792"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=lastname</arg>
<arg>field_data=${user_data}[last_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:22.794" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:41:22.793" endtime="20210730 14:41:22.794"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:22.794" level="INFO">${payload} = {'lastname': 'Holm123'}</msg>
<status status="PASS" starttime="20210730 14:41:22.794" endtime="20210730 14:41:22.794"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:41:22.804" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:41:22.804" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:41:22.795" endtime="20210730 14:41:22.804"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 14:41:22.804" endtime="20210730 14:41:22.804"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 14:41:22.804" endtime="20210730 14:41:22.804"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:22.794" endtime="20210730 14:41:22.804"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:22.794" endtime="20210730 14:41:22.804"/>
</for>
<status status="FAIL" starttime="20210730 14:41:22.793" endtime="20210730 14:41:22.805"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:22.792" endtime="20210730 14:41:22.805"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:22.792" endtime="20210730 14:41:22.805"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:22.809" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:22.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:22.821" level="INFO">${pids} = 30666
30673
30677</msg>
<status status="PASS" starttime="20210730 14:41:22.806" endtime="20210730 14:41:22.821"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:22.822" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:22.821" endtime="20210730 14:41:22.822"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:22.822" level="INFO">${pids} = ['30666', '30673', '30677']</msg>
<status status="PASS" starttime="20210730 14:41:22.822" endtime="20210730 14:41:22.822"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">30666</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:22.828" level="INFO">Running command 'kill 30666 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:22.823" endtime="20210730 14:41:22.828"/>
</kw>
<status status="PASS" starttime="20210730 14:41:22.823" endtime="20210730 14:41:22.828"/>
</iter>
<iter>
<var name="${pid}">30673</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:22.832" level="INFO">Running command 'kill 30673 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:22.829" endtime="20210730 14:41:22.834"/>
</kw>
<status status="PASS" starttime="20210730 14:41:22.828" endtime="20210730 14:41:22.834"/>
</iter>
<iter>
<var name="${pid}">30677</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:22.838" level="INFO">Running command 'kill 30677 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:22.835" endtime="20210730 14:41:22.838"/>
</kw>
<status status="PASS" starttime="20210730 14:41:22.834" endtime="20210730 14:41:22.839"/>
</iter>
<status status="PASS" starttime="20210730 14:41:22.823" endtime="20210730 14:41:22.839"/>
</for>
<status status="PASS" starttime="20210730 14:41:22.822" endtime="20210730 14:41:22.839"/>
</branch>
<status status="PASS" starttime="20210730 14:41:22.822" endtime="20210730 14:41:22.839"/>
</if>
<status status="PASS" starttime="20210730 14:41:22.805" endtime="20210730 14:41:22.839"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
lastname as such:
{
"lastname": 'Holm123'
}
Then, each request should fail with the following response body:
{
"message": "Each last name must contain only characters from the set [a-zA-Z]. Last names must be seperated by a a single space. Last names must have at least 2 characters",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:41:21.225" endtime="20210730 14:41:22.839">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t120" name="With Each Valid Token, Updating Last Name Of Each System User With Holm!.? Results In Failure Status With Right Error Message">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:22.846" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:22.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:22.860" level="INFO">${pids} = 30706</msg>
<status status="PASS" starttime="20210730 14:41:22.841" endtime="20210730 14:41:22.860"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:22.861" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:22.861" endtime="20210730 14:41:22.861"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:22.862" level="INFO">${pids} = ['30706']</msg>
<status status="PASS" starttime="20210730 14:41:22.862" endtime="20210730 14:41:22.862"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">30706</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:22.868" level="INFO">Running command 'kill 30706 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:22.863" endtime="20210730 14:41:22.868"/>
</kw>
<status status="PASS" starttime="20210730 14:41:22.862" endtime="20210730 14:41:22.868"/>
</iter>
<status status="PASS" starttime="20210730 14:41:22.862" endtime="20210730 14:41:22.868"/>
</for>
<status status="PASS" starttime="20210730 14:41:22.862" endtime="20210730 14:41:22.869"/>
</branch>
<status status="PASS" starttime="20210730 14:41:22.861" endtime="20210730 14:41:22.869"/>
</if>
<status status="PASS" starttime="20210730 14:41:22.841" endtime="20210730 14:41:22.869"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:22.870" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:22.870" endtime="20210730 14:41:22.870"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:22.871" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:22.870" endtime="20210730 14:41:22.871"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:22.871" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:22.871" endtime="20210730 14:41:22.871"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:22.871" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:22.871" endtime="20210730 14:41:22.871"/>
</kw>
<msg timestamp="20210730 14:41:22.872" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:22.870" endtime="20210730 14:41:22.872"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:22.883" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:22.872" endtime="20210730 14:41:22.886"/>
</kw>
<status status="PASS" starttime="20210730 14:41:22.869" endtime="20210730 14:41:22.886"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:41:22.888" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:41:22.887" endtime="20210730 14:41:22.892"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:41:24.394" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:41:22.892" endtime="20210730 14:41:24.394"/>
</kw>
<status status="PASS" starttime="20210730 14:41:22.887" endtime="20210730 14:41:24.394"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:24.396" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:24.395" endtime="20210730 14:41:24.396"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:24.396" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:24.396" endtime="20210730 14:41:24.396"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:24.397" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:24.397" endtime="20210730 14:41:24.397"/>
</kw>
<msg timestamp="20210730 14:41:24.397" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:24.395" endtime="20210730 14:41:24.397"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:41:24.398" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:41:24.397" endtime="20210730 14:41:24.398"/>
</kw>
<status status="PASS" starttime="20210730 14:41:24.395" endtime="20210730 14:41:24.398"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:41:24.399" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:41:24.399" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:41:24.399" endtime="20210730 14:41:24.399"/>
</kw>
<status status="PASS" starttime="20210730 14:41:24.398" endtime="20210730 14:41:24.399"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:41:24.400" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:41:24.400" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:41:24.400" endtime="20210730 14:41:24.400"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:41:24.400" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:41:24.400" endtime="20210730 14:41:24.400"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:24.401" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:24.401" endtime="20210730 14:41:24.401"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:24.401" endtime="20210730 14:41:24.402"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:24.402" endtime="20210730 14:41:24.402"/>
</kw>
<status status="PASS" starttime="20210730 14:41:24.400" endtime="20210730 14:41:24.402"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:24.402" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:24.402" endtime="20210730 14:41:24.403"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:24.403" endtime="20210730 14:41:24.403"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:24.403" endtime="20210730 14:41:24.404"/>
</kw>
<status status="PASS" starttime="20210730 14:41:24.402" endtime="20210730 14:41:24.404"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:24.404" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:24.404" endtime="20210730 14:41:24.404"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:24.404" endtime="20210730 14:41:24.405"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:24.405" endtime="20210730 14:41:24.405"/>
</kw>
<status status="PASS" starttime="20210730 14:41:24.404" endtime="20210730 14:41:24.405"/>
</iter>
<status status="PASS" starttime="20210730 14:41:24.400" endtime="20210730 14:41:24.405"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:41:24.406" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:41:24.405" endtime="20210730 14:41:24.406"/>
</kw>
<status status="PASS" starttime="20210730 14:41:24.399" endtime="20210730 14:41:24.406"/>
</kw>
<status status="PASS" starttime="20210730 14:41:22.841" endtime="20210730 14:41:24.406"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 14:41:24.409" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:24.406" endtime="20210730 14:41:24.409"/>
</kw>
<msg timestamp="20210730 14:41:24.409" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:24.406" endtime="20210730 14:41:24.409"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>last_name</arg>
<arg>Last name does contain non alphanumeric characters, which makes it invalid</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 14:41:24.410" endtime="20210730 14:41:24.411"/>
</kw>
<status status="PASS" starttime="20210730 14:41:24.410" endtime="20210730 14:41:24.411"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=lastname</arg>
<arg>field_data=${user_data}[last_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:24.412" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:41:24.412" endtime="20210730 14:41:24.412"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:24.413" level="INFO">${payload} = {'lastname': 'Holm!.?'}</msg>
<status status="PASS" starttime="20210730 14:41:24.413" endtime="20210730 14:41:24.413"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:41:24.422" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:41:24.422" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:41:24.413" endtime="20210730 14:41:24.422"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 14:41:24.423" endtime="20210730 14:41:24.423"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 14:41:24.423" endtime="20210730 14:41:24.423"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:24.413" endtime="20210730 14:41:24.423"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:24.413" endtime="20210730 14:41:24.423"/>
</for>
<status status="FAIL" starttime="20210730 14:41:24.411" endtime="20210730 14:41:24.423"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:24.411" endtime="20210730 14:41:24.423"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:24.411" endtime="20210730 14:41:24.423"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:24.427" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:24.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:24.439" level="INFO">${pids} = 30729
30736
30738</msg>
<status status="PASS" starttime="20210730 14:41:24.424" endtime="20210730 14:41:24.439"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:24.440" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:24.440" endtime="20210730 14:41:24.440"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:24.441" level="INFO">${pids} = ['30729', '30736', '30738']</msg>
<status status="PASS" starttime="20210730 14:41:24.441" endtime="20210730 14:41:24.441"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">30729</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:24.445" level="INFO">Running command 'kill 30729 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:24.441" endtime="20210730 14:41:24.446"/>
</kw>
<status status="PASS" starttime="20210730 14:41:24.441" endtime="20210730 14:41:24.446"/>
</iter>
<iter>
<var name="${pid}">30736</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:24.449" level="INFO">Running command 'kill 30736 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:24.446" endtime="20210730 14:41:24.451"/>
</kw>
<status status="PASS" starttime="20210730 14:41:24.446" endtime="20210730 14:41:24.451"/>
</iter>
<iter>
<var name="${pid}">30738</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:24.455" level="INFO">Running command 'kill 30738 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:24.452" endtime="20210730 14:41:24.456"/>
</kw>
<status status="PASS" starttime="20210730 14:41:24.451" endtime="20210730 14:41:24.456"/>
</iter>
<status status="PASS" starttime="20210730 14:41:24.441" endtime="20210730 14:41:24.456"/>
</for>
<status status="PASS" starttime="20210730 14:41:24.440" endtime="20210730 14:41:24.456"/>
</branch>
<status status="PASS" starttime="20210730 14:41:24.440" endtime="20210730 14:41:24.456"/>
</if>
<status status="PASS" starttime="20210730 14:41:24.423" endtime="20210730 14:41:24.456"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
lastname as such:
{
"lastname": 'Holm!.?'
}
Then, each request should fail with the following response body:
{
"message": "Each last name must contain only characters from the set [a-zA-Z]. Last names must be seperated by a a single space. Last names must have at least 2 characters",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:41:22.840" endtime="20210730 14:41:24.457">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t121" name="With Each Valid Token, Updating Last Name Of Each System User With Holm Cuzdan Results In Success">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:24.462" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:24.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:24.476" level="INFO">${pids} = 30768</msg>
<status status="PASS" starttime="20210730 14:41:24.458" endtime="20210730 14:41:24.476"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:24.477" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:24.477" endtime="20210730 14:41:24.477"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:24.479" level="INFO">${pids} = ['30768']</msg>
<status status="PASS" starttime="20210730 14:41:24.478" endtime="20210730 14:41:24.479"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">30768</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:24.482" level="INFO">Running command 'kill 30768 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:24.479" endtime="20210730 14:41:24.483"/>
</kw>
<status status="PASS" starttime="20210730 14:41:24.479" endtime="20210730 14:41:24.483"/>
</iter>
<status status="PASS" starttime="20210730 14:41:24.479" endtime="20210730 14:41:24.483"/>
</for>
<status status="PASS" starttime="20210730 14:41:24.478" endtime="20210730 14:41:24.483"/>
</branch>
<status status="PASS" starttime="20210730 14:41:24.477" endtime="20210730 14:41:24.483"/>
</if>
<status status="PASS" starttime="20210730 14:41:24.458" endtime="20210730 14:41:24.483"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:24.484" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:24.484" endtime="20210730 14:41:24.484"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:24.484" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:24.484" endtime="20210730 14:41:24.484"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:24.485" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:24.485" endtime="20210730 14:41:24.485"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:24.485" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:24.485" endtime="20210730 14:41:24.485"/>
</kw>
<msg timestamp="20210730 14:41:24.486" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:24.484" endtime="20210730 14:41:24.486"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:24.504" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:24.486" endtime="20210730 14:41:24.506"/>
</kw>
<status status="PASS" starttime="20210730 14:41:24.483" endtime="20210730 14:41:24.506"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:41:24.508" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:41:24.507" endtime="20210730 14:41:24.513"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:41:26.014" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:41:24.513" endtime="20210730 14:41:26.014"/>
</kw>
<status status="PASS" starttime="20210730 14:41:24.507" endtime="20210730 14:41:26.015"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:26.016" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:26.016" endtime="20210730 14:41:26.016"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:26.016" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:26.016" endtime="20210730 14:41:26.016"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:26.017" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:26.017" endtime="20210730 14:41:26.017"/>
</kw>
<msg timestamp="20210730 14:41:26.017" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:26.015" endtime="20210730 14:41:26.017"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:41:26.017" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:41:26.017" endtime="20210730 14:41:26.018"/>
</kw>
<status status="PASS" starttime="20210730 14:41:26.015" endtime="20210730 14:41:26.018"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:41:26.019" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:41:26.019" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:41:26.018" endtime="20210730 14:41:26.019"/>
</kw>
<status status="PASS" starttime="20210730 14:41:26.018" endtime="20210730 14:41:26.019"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:41:26.019" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:41:26.020" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:41:26.019" endtime="20210730 14:41:26.020"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:41:26.020" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:41:26.020" endtime="20210730 14:41:26.020"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:26.020" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:26.020" endtime="20210730 14:41:26.020"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:26.021" endtime="20210730 14:41:26.021"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:26.021" endtime="20210730 14:41:26.022"/>
</kw>
<status status="PASS" starttime="20210730 14:41:26.020" endtime="20210730 14:41:26.022"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:26.022" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:26.022" endtime="20210730 14:41:26.022"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:26.022" endtime="20210730 14:41:26.023"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:26.023" endtime="20210730 14:41:26.023"/>
</kw>
<status status="PASS" starttime="20210730 14:41:26.022" endtime="20210730 14:41:26.023"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:26.023" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:26.023" endtime="20210730 14:41:26.023"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:26.026" endtime="20210730 14:41:26.026"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:26.026" endtime="20210730 14:41:26.027"/>
</kw>
<status status="PASS" starttime="20210730 14:41:26.023" endtime="20210730 14:41:26.027"/>
</iter>
<status status="PASS" starttime="20210730 14:41:26.020" endtime="20210730 14:41:26.027"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:41:26.027" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:41:26.027" endtime="20210730 14:41:26.027"/>
</kw>
<status status="PASS" starttime="20210730 14:41:26.019" endtime="20210730 14:41:26.027"/>
</kw>
<status status="PASS" starttime="20210730 14:41:24.458" endtime="20210730 14:41:26.027"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 14:41:26.031" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:26.028" endtime="20210730 14:41:26.031"/>
</kw>
<msg timestamp="20210730 14:41:26.031" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:26.028" endtime="20210730 14:41:26.031"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>last_name</arg>
<arg>Two valid last names seperated by a single space character</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 14:41:26.031" endtime="20210730 14:41:26.032"/>
</kw>
<status status="PASS" starttime="20210730 14:41:26.031" endtime="20210730 14:41:26.032"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=lastname</arg>
<arg>field_data=${user_data}[last_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:26.033" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:41:26.033" endtime="20210730 14:41:26.033"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:26.034" level="INFO">${payload} = {'lastname': 'Holm Cuzdan'}</msg>
<status status="PASS" starttime="20210730 14:41:26.034" endtime="20210730 14:41:26.034"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:41:26.044" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:41:26.044" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:41:26.034" endtime="20210730 14:41:26.044"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 14:41:26.045" endtime="20210730 14:41:26.045"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 14:41:26.045" endtime="20210730 14:41:26.045"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:26.034" endtime="20210730 14:41:26.045"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:26.034" endtime="20210730 14:41:26.045"/>
</for>
<status status="FAIL" starttime="20210730 14:41:26.033" endtime="20210730 14:41:26.045"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:26.032" endtime="20210730 14:41:26.045"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:26.032" endtime="20210730 14:41:26.045"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:26.049" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:26.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:26.060" level="INFO">${pids} = 30791
30798
30800</msg>
<status status="PASS" starttime="20210730 14:41:26.046" endtime="20210730 14:41:26.060"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:26.061" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:26.061" endtime="20210730 14:41:26.061"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:26.062" level="INFO">${pids} = ['30791', '30798', '30800']</msg>
<status status="PASS" starttime="20210730 14:41:26.062" endtime="20210730 14:41:26.062"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">30791</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:26.066" level="INFO">Running command 'kill 30791 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:26.062" endtime="20210730 14:41:26.067"/>
</kw>
<status status="PASS" starttime="20210730 14:41:26.062" endtime="20210730 14:41:26.067"/>
</iter>
<iter>
<var name="${pid}">30798</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:26.070" level="INFO">Running command 'kill 30798 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:26.067" endtime="20210730 14:41:26.070"/>
</kw>
<status status="PASS" starttime="20210730 14:41:26.067" endtime="20210730 14:41:26.070"/>
</iter>
<iter>
<var name="${pid}">30800</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:26.075" level="INFO">Running command 'kill 30800 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:26.071" endtime="20210730 14:41:26.075"/>
</kw>
<status status="PASS" starttime="20210730 14:41:26.071" endtime="20210730 14:41:26.075"/>
</iter>
<status status="PASS" starttime="20210730 14:41:26.062" endtime="20210730 14:41:26.075"/>
</for>
<status status="PASS" starttime="20210730 14:41:26.062" endtime="20210730 14:41:26.075"/>
</branch>
<status status="PASS" starttime="20210730 14:41:26.061" endtime="20210730 14:41:26.076"/>
</if>
<status status="PASS" starttime="20210730 14:41:26.046" endtime="20210730 14:41:26.076"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
lastname as such:
{
"lastname": 'Holm Cuzdan'
}
Then, each request should fail with the following response body:
{
"message": "Updated",
"status": "SUCCESS"
}
This test not only verifies message and status but also verifies that the &lt;username&gt;'s data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:41:24.457" endtime="20210730 14:41:26.076">We expected a JSON, but received text/html</status>
</test>
<test id="s1-t122" name="With Each Valid Token, Updating Last Name Of Each System User With Holm      Cuzdan Results In Failure Status With Right Error Message">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:26.082" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:26.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:26.093" level="INFO">${pids} = 30829</msg>
<status status="PASS" starttime="20210730 14:41:26.079" endtime="20210730 14:41:26.093"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:26.094" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:26.094" endtime="20210730 14:41:26.094"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:26.095" level="INFO">${pids} = ['30829']</msg>
<status status="PASS" starttime="20210730 14:41:26.095" endtime="20210730 14:41:26.095"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">30829</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:26.099" level="INFO">Running command 'kill 30829 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:26.095" endtime="20210730 14:41:26.099"/>
</kw>
<status status="PASS" starttime="20210730 14:41:26.095" endtime="20210730 14:41:26.099"/>
</iter>
<status status="PASS" starttime="20210730 14:41:26.095" endtime="20210730 14:41:26.099"/>
</for>
<status status="PASS" starttime="20210730 14:41:26.095" endtime="20210730 14:41:26.099"/>
</branch>
<status status="PASS" starttime="20210730 14:41:26.094" endtime="20210730 14:41:26.099"/>
</if>
<status status="PASS" starttime="20210730 14:41:26.078" endtime="20210730 14:41:26.100"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:26.101" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:26.100" endtime="20210730 14:41:26.101"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:26.101" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:26.101" endtime="20210730 14:41:26.101"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:26.102" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:26.101" endtime="20210730 14:41:26.102"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:26.102" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:26.102" endtime="20210730 14:41:26.102"/>
</kw>
<msg timestamp="20210730 14:41:26.103" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:26.101" endtime="20210730 14:41:26.103"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:26.109" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:26.103" endtime="20210730 14:41:26.123"/>
</kw>
<status status="PASS" starttime="20210730 14:41:26.100" endtime="20210730 14:41:26.124"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210730 14:41:26.126" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210730 14:41:26.125" endtime="20210730 14:41:26.130"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210730 14:41:27.634" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210730 14:41:26.131" endtime="20210730 14:41:27.634"/>
</kw>
<status status="PASS" starttime="20210730 14:41:26.124" endtime="20210730 14:41:27.634"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:27.636" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210730 14:41:27.635" endtime="20210730 14:41:27.636"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210730 14:41:27.636" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210730 14:41:27.636" endtime="20210730 14:41:27.636"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210730 14:41:27.636" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:27.636" endtime="20210730 14:41:27.636"/>
</kw>
<msg timestamp="20210730 14:41:27.637" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210730 14:41:27.635" endtime="20210730 14:41:27.637"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210730 14:41:27.637" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210730 14:41:27.637" endtime="20210730 14:41:27.637"/>
</kw>
<status status="PASS" starttime="20210730 14:41:27.635" endtime="20210730 14:41:27.638"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210730 14:41:27.638" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210730 14:41:27.638" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210730 14:41:27.638" endtime="20210730 14:41:27.638"/>
</kw>
<status status="PASS" starttime="20210730 14:41:27.638" endtime="20210730 14:41:27.638"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210730 14:41:27.639" level="INFO">Executing : Query  |  select username, password, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210730 14:41:27.639" level="INFO">${users} = [('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzND...</msg>
<status status="PASS" starttime="20210730 14:41:27.639" endtime="20210730 14:41:27.639"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210730 14:41:27.639" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210730 14:41:27.639" endtime="20210730 14:41:27.639"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:27.640" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:27.640" endtime="20210730 14:41:27.640"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:27.640" endtime="20210730 14:41:27.642"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:27.642" endtime="20210730 14:41:27.642"/>
</kw>
<status status="PASS" starttime="20210730 14:41:27.639" endtime="20210730 14:41:27.642"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'pbkdf2:sha256:50000$xCMyMcA4$08c69b9646632c448d7d9dcfc6cf4c6f148c90261d4e7db585e6848e5c8920e0', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:27.643" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:27.642" endtime="20210730 14:41:27.643"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:27.643" endtime="20210730 14:41:27.644"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:27.644" endtime="20210730 14:41:27.644"/>
</kw>
<status status="PASS" starttime="20210730 14:41:27.642" endtime="20210730 14:41:27.644"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'pbkdf2:sha256:50000$sQmYnzhL$19df239ec550fe9919d6b33bc1781583d11f7e9ea054b578ded8c356b2a1f008', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA...</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:27.645" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210730 14:41:27.645" endtime="20210730 14:41:27.645"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>password=${user}[1]</arg>
<arg>firstname=${user}[2]</arg>
<arg>lastname=${user}[3]</arg>
<arg>phone=${user}[4]</arg>
<arg>token=${user}[5]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210730 14:41:27.645" endtime="20210730 14:41:27.646"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210730 14:41:27.646" endtime="20210730 14:41:27.646"/>
</kw>
<status status="PASS" starttime="20210730 14:41:27.644" endtime="20210730 14:41:27.646"/>
</iter>
<status status="PASS" starttime="20210730 14:41:27.639" endtime="20210730 14:41:27.646"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210730 14:41:27.647" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '05066...</msg>
<status status="PASS" starttime="20210730 14:41:27.646" endtime="20210730 14:41:27.647"/>
</kw>
<status status="PASS" starttime="20210730 14:41:27.638" endtime="20210730 14:41:27.647"/>
</kw>
<status status="PASS" starttime="20210730 14:41:26.078" endtime="20210730 14:41:27.647"/>
</kw>
<kw name="Get Valid User's Registration Form Data" library="DataManager">
<var>${user_data}</var>
<kw name="Read One Valid Users Registration Form Data" library="RegistrationFormDataReader">
<var>${valid_user_registration_form_data}</var>
<doc>Returns a registration_form_data instance, whose fields are all valid. The data source file for the instances
     is located in TestProject/TestData/ManyValidUsers.json. It reads the file in a cyclic fashion one
     registration_form_data instance at a time. When end of file is reached, it returns to the begining of the file
     and repeats the process.</doc>
<msg timestamp="20210730 14:41:27.650" level="INFO">${valid_user_registration_form_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:27.647" endtime="20210730 14:41:27.650"/>
</kw>
<msg timestamp="20210730 14:41:27.650" level="INFO">${user_data} = {'username': {'value': 'SuperDuperUser1', 'isValid': True}, 'password': {'value': '012!.Aab', 'isValid': True}, 'first_name': {'value': 'David', 'isValid': True}, 'last_name': {'value': 'Holm', 'isVal...</msg>
<status status="PASS" starttime="20210730 14:41:27.647" endtime="20210730 14:41:27.650"/>
</kw>
<kw name="Manipulate" library="DataManager">
<arg>${user_data}</arg>
<arg>last_name</arg>
<arg>Two valid last names seperated by many space characters</arg>
<kw name="Do Manipulate" library="RegistrationFormDataReader">
<arg>${registration_form_data}</arg>
<arg>${key}</arg>
<arg>${description}</arg>
<doc>Given a valid registration_form_data instance, if we are to change one of its fields (e.g. username)
     then we provide the key to be the string "username". We also provide a description as a string,
     which must match with one of the description fields in TestData/Usernames.json file. The username (in the file),
     whose description is matching description parameter we provide, is used to replace the username
     of the instance. This way, we can quickly create a new instance matching the requirements of the test case
    (e.g. An Empty Username Is Not Accepted)</doc>
<status status="PASS" starttime="20210730 14:41:27.651" endtime="20210730 14:41:27.652"/>
</kw>
<status status="PASS" starttime="20210730 14:41:27.651" endtime="20210730 14:41:27.652"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="With Valid Token, Attempt to Set A Field For All System Users">
<arg>token=${api_user}[token]</arg>
<arg>field_name=lastname</arg>
<arg>field_data=${user_data}[last_name]</arg>
<doc>A field_data is a dictionary. An example:
{
"value": "Helena!.?",
"isValid": false,
"description": "First name does contain non alphanumeric characters, which makes it invalid",
"expected_error": "Each first name must contain only characters from the set [a-zA-Z]. First names must be seperated by a a single space. First names must have at least 2 characters"
}
With the above field_data, say we want to change a system_user's firstname field.
To indicate that we are to change the firstname field, we set field_name argument to firstname</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:27.653" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210730 14:41:27.653" endtime="20210730 14:41:27.653"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>${field_name}=${field_data}[value]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210730 14:41:27.654" level="INFO">${payload} = {'lastname': 'Holm      Cuzdan'}</msg>
<status status="PASS" starttime="20210730 14:41:27.653" endtime="20210730 14:41:27.654"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'password': 'pbkdf2:sha256:50000$IZNImqKL$11594e182d842a475cd5df093fad1acba9478b39de5aff07a8cc97cb993074c2', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627...</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210730 14:41:27.664" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210730 14:41:27.664" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210730 14:41:27.654" endtime="20210730 14:41:27.664"/>
</kw>
<kw name="Verify Response Based On Field Data">
<arg>${response}</arg>
<arg>${field_data}</arg>
<status status="NOT RUN" starttime="20210730 14:41:27.664" endtime="20210730 14:41:27.665"/>
</kw>
<kw name="Verify System User's Data In Database">
<arg>${field_data}</arg>
<arg>${system_user}</arg>
<status status="NOT RUN" starttime="20210730 14:41:27.665" endtime="20210730 14:41:27.665"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:27.654" endtime="20210730 14:41:27.665"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:27.654" endtime="20210730 14:41:27.665"/>
</for>
<status status="FAIL" starttime="20210730 14:41:27.652" endtime="20210730 14:41:27.665"/>
</kw>
<status status="FAIL" starttime="20210730 14:41:27.652" endtime="20210730 14:41:27.665"/>
</iter>
<status status="FAIL" starttime="20210730 14:41:27.652" endtime="20210730 14:41:27.665"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210730 14:41:27.669" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210730 14:41:27.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20210730 14:41:27.680" level="INFO">${pids} = 30852
30859
30861</msg>
<status status="PASS" starttime="20210730 14:41:27.666" endtime="20210730 14:41:27.680"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:27.681" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210730 14:41:27.681" endtime="20210730 14:41:27.681"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210730 14:41:27.682" level="INFO">${pids} = ['30852', '30859', '30861']</msg>
<status status="PASS" starttime="20210730 14:41:27.682" endtime="20210730 14:41:27.682"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">30852</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:27.686" level="INFO">Running command 'kill 30852 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:27.682" endtime="20210730 14:41:27.687"/>
</kw>
<status status="PASS" starttime="20210730 14:41:27.682" endtime="20210730 14:41:27.687"/>
</iter>
<iter>
<var name="${pid}">30859</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:27.690" level="INFO">Running command 'kill 30859 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:27.687" endtime="20210730 14:41:27.691"/>
</kw>
<status status="PASS" starttime="20210730 14:41:27.687" endtime="20210730 14:41:27.691"/>
</iter>
<iter>
<var name="${pid}">30861</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210730 14:41:27.696" level="INFO">Running command 'kill 30861 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210730 14:41:27.691" endtime="20210730 14:41:27.697"/>
</kw>
<status status="PASS" starttime="20210730 14:41:27.691" endtime="20210730 14:41:27.697"/>
</iter>
<status status="PASS" starttime="20210730 14:41:27.682" endtime="20210730 14:41:27.697"/>
</for>
<status status="PASS" starttime="20210730 14:41:27.681" endtime="20210730 14:41:27.697"/>
</branch>
<status status="PASS" starttime="20210730 14:41:27.681" endtime="20210730 14:41:27.697"/>
</if>
<status status="PASS" starttime="20210730 14:41:27.665" endtime="20210730 14:41:27.697"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes multiple PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is replaced with each system user's username. In the requests' body, we set an empty
lastname as such:
{
"lastname": 'Holm Cuzdan'
}
Then, each request should fail with the following response body:
{
"message": "Each last name must contain only characters from the set [a-zA-Z]. Last names must be seperated by a a single space. Last names must have at least 2 characters",
"status": "FAILURE"
}
This test not only verifies message and status but also verifies that no data in the database has changed.</doc>
<status status="FAIL" starttime="20210730 14:41:26.077" endtime="20210730 14:41:27.698">We expected a JSON, but received text/html</status>
</test>
<doc>This test suite contains test cases for CRF Demo API.
Documentation for the API can be found:
https://github.com/Interview-demoapp/Flasky
The acceptance criteria we verify here is
"3: As an API Consumer, if authenticated, I can update personal information of users"
Definitions
(1) System User: The user, who is registered to the system under test with a valid token
(2) API User: The user, who calls the API to update personal information of the system user</doc>
<status status="FAIL" starttime="20210730 14:38:08.695" endtime="20210730 14:41:27.703"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="122" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="122" skip="0" id="s1" name="3-Updating-Personal-Information">3-Updating-Personal-Information</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20210730 14:39:25.858" level="WARN">Multiple test cases with name 'With Each Valid Token, Updating Password Of Each System User With ABCDEFG Results In "Field update not allowed"' executed in test suite '3-Updating-Personal-Information'.</msg>
<msg timestamp="20210730 14:39:27.497" level="WARN">Multiple test cases with name 'With Each Valid Token, Updating Password Of Each System User With ABCDEFGH Results In "Field update not allowed"' executed in test suite '3-Updating-Personal-Information'.</msg>
<msg timestamp="20210730 14:39:29.137" level="WARN">Multiple test cases with name 'With Each Valid Token, Updating Password Of Each System User With ABCDEFGHJKLMNPRSTOÖUÜVYZ Results In "Field update not allowed"' executed in test suite '3-Updating-Personal-Information'.</msg>
<msg timestamp="20210730 14:39:55.160" level="WARN">Multiple test cases with name 'With Each Valid Token, Updating Password Of Each System User With ABCD012 Results In "Field update not allowed"' executed in test suite '3-Updating-Personal-Information'.</msg>
<msg timestamp="20210730 14:39:56.772" level="WARN">Multiple test cases with name 'With Each Valid Token, Updating Password Of Each System User With ABCD0123 Results In "Field update not allowed"' executed in test suite '3-Updating-Personal-Information'.</msg>
<msg timestamp="20210730 14:40:00.004" level="WARN">Multiple test cases with name 'With Each Valid Token, Updating Password Of Each System User With ABCD!?. Results In "Field update not allowed"' executed in test suite '3-Updating-Personal-Information'.</msg>
</errors>
</robot>
