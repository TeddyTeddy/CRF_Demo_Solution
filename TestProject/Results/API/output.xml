<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0.3 (Python 3.7.4 on linux)" generated="20210729 10:02:53.092" rpa="false" schemaversion="2">
<suite id="s1" name="3-Updating-Personal-Information" source="/home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/Tests/API/3-Updating-Personal-Information.robot">
<test id="s1-t1" name="With Any Valid Token, Updating Username Of Each System User With '' Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:02:53.665" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:02:53.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:02:53.673" level="INFO">${pids} = 22195</msg>
<status status="PASS" starttime="20210729 10:02:53.662" endtime="20210729 10:02:53.673"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:02:53.678" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:02:53.674" endtime="20210729 10:02:53.678"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:02:53.680" level="INFO">${pids} = ['22195']</msg>
<status status="PASS" starttime="20210729 10:02:53.679" endtime="20210729 10:02:53.680"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">22195</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:02:53.684" level="INFO">Running command 'kill 22195 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:02:53.680" endtime="20210729 10:02:53.685"/>
</kw>
<status status="PASS" starttime="20210729 10:02:53.680" endtime="20210729 10:02:53.685"/>
</iter>
<status status="PASS" starttime="20210729 10:02:53.680" endtime="20210729 10:02:53.685"/>
</for>
<status status="PASS" starttime="20210729 10:02:53.679" endtime="20210729 10:02:53.685"/>
</branch>
<status status="PASS" starttime="20210729 10:02:53.678" endtime="20210729 10:02:53.685"/>
</if>
<status status="PASS" starttime="20210729 10:02:53.662" endtime="20210729 10:02:53.685"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:02:53.686" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:02:53.686" endtime="20210729 10:02:53.686"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:02:53.688" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:02:53.687" endtime="20210729 10:02:53.688"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:02:53.688" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:02:53.688" endtime="20210729 10:02:53.689"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:02:53.689" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:02:53.689" endtime="20210729 10:02:53.689"/>
</kw>
<msg timestamp="20210729 10:02:53.689" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:02:53.687" endtime="20210729 10:02:53.689"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:02:53.694" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:02:53.689" endtime="20210729 10:02:53.696"/>
</kw>
<status status="PASS" starttime="20210729 10:02:53.686" endtime="20210729 10:02:53.696"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:02:53.697" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:02:53.697" endtime="20210729 10:02:53.701"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:02:55.207" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:02:53.702" endtime="20210729 10:02:55.208"/>
</kw>
<status status="PASS" starttime="20210729 10:02:53.696" endtime="20210729 10:02:55.208"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:02:55.210" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:02:55.209" endtime="20210729 10:02:55.210"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:02:55.210" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:02:55.210" endtime="20210729 10:02:55.210"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:02:55.210" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:02:55.210" endtime="20210729 10:02:55.211"/>
</kw>
<msg timestamp="20210729 10:02:55.211" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:02:55.209" endtime="20210729 10:02:55.211"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:02:55.213" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:02:55.211" endtime="20210729 10:02:55.213"/>
</kw>
<status status="PASS" starttime="20210729 10:02:55.208" endtime="20210729 10:02:55.213"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:02:55.214" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:02:55.214" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:02:55.214" endtime="20210729 10:02:55.214"/>
</kw>
<status status="PASS" starttime="20210729 10:02:55.213" endtime="20210729 10:02:55.214"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:02:55.216" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:02:55.216" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:02:55.215" endtime="20210729 10:02:55.216"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:02:55.217" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:02:55.217" endtime="20210729 10:02:55.217"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:02:55.218" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:02:55.217" endtime="20210729 10:02:55.218"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:02:55.218" endtime="20210729 10:02:55.218"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:02:55.219" endtime="20210729 10:02:55.219"/>
</kw>
<status status="PASS" starttime="20210729 10:02:55.217" endtime="20210729 10:02:55.219"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:02:55.219" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:02:55.219" endtime="20210729 10:02:55.219"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:02:55.219" endtime="20210729 10:02:55.220"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:02:55.220" endtime="20210729 10:02:55.221"/>
</kw>
<status status="PASS" starttime="20210729 10:02:55.219" endtime="20210729 10:02:55.221"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:02:55.222" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:02:55.221" endtime="20210729 10:02:55.222"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:02:55.222" endtime="20210729 10:02:55.223"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:02:55.223" endtime="20210729 10:02:55.224"/>
</kw>
<status status="PASS" starttime="20210729 10:02:55.221" endtime="20210729 10:02:55.224"/>
</iter>
<status status="PASS" starttime="20210729 10:02:55.217" endtime="20210729 10:02:55.224"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:02:55.225" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:02:55.224" endtime="20210729 10:02:55.225"/>
</kw>
<status status="PASS" starttime="20210729 10:02:55.214" endtime="20210729 10:02:55.225"/>
</kw>
<status status="PASS" starttime="20210729 10:02:53.662" endtime="20210729 10:02:55.225"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=${EMPTY}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:02:55.228" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:02:55.227" endtime="20210729 10:02:55.228"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:02:55.228" level="INFO">${payload} = {'username': ''}</msg>
<status status="PASS" starttime="20210729 10:02:55.228" endtime="20210729 10:02:55.228"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:02:55.245" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:02:55.245" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:02:55.229" endtime="20210729 10:02:55.245"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:02:55.245" endtime="20210729 10:02:55.245"/>
</kw>
<status status="FAIL" starttime="20210729 10:02:55.229" endtime="20210729 10:02:55.245"/>
</iter>
<status status="FAIL" starttime="20210729 10:02:55.228" endtime="20210729 10:02:55.246"/>
</for>
<status status="FAIL" starttime="20210729 10:02:55.226" endtime="20210729 10:02:55.246"/>
</kw>
<status status="FAIL" starttime="20210729 10:02:55.226" endtime="20210729 10:02:55.246"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=${EMPTY}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:02:55.247" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:02:55.247" endtime="20210729 10:02:55.248"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:02:55.248" level="INFO">${payload} = {'username': ''}</msg>
<status status="PASS" starttime="20210729 10:02:55.248" endtime="20210729 10:02:55.248"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:02:55.253" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:02:55.253" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:02:55.248" endtime="20210729 10:02:55.253"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:02:55.253" endtime="20210729 10:02:55.253"/>
</kw>
<status status="FAIL" starttime="20210729 10:02:55.248" endtime="20210729 10:02:55.253"/>
</iter>
<status status="FAIL" starttime="20210729 10:02:55.248" endtime="20210729 10:02:55.253"/>
</for>
<status status="FAIL" starttime="20210729 10:02:55.246" endtime="20210729 10:02:55.253"/>
</kw>
<status status="FAIL" starttime="20210729 10:02:55.246" endtime="20210729 10:02:55.253"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=${EMPTY}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:02:55.256" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:02:55.255" endtime="20210729 10:02:55.256"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:02:55.256" level="INFO">${payload} = {'username': ''}</msg>
<status status="PASS" starttime="20210729 10:02:55.256" endtime="20210729 10:02:55.256"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:02:55.263" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:02:55.263" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:02:55.257" endtime="20210729 10:02:55.263"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:02:55.263" endtime="20210729 10:02:55.263"/>
</kw>
<status status="FAIL" starttime="20210729 10:02:55.257" endtime="20210729 10:02:55.263"/>
</iter>
<status status="FAIL" starttime="20210729 10:02:55.257" endtime="20210729 10:02:55.263"/>
</for>
<status status="FAIL" starttime="20210729 10:02:55.254" endtime="20210729 10:02:55.264"/>
</kw>
<status status="FAIL" starttime="20210729 10:02:55.254" endtime="20210729 10:02:55.264"/>
</iter>
<status status="FAIL" starttime="20210729 10:02:55.226" endtime="20210729 10:02:55.264"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:02:55.270" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:02:55.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:02:55.284" level="INFO">${pids} = 22219
22226
22239</msg>
<status status="PASS" starttime="20210729 10:02:55.265" endtime="20210729 10:02:55.284"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:02:55.285" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:02:55.284" endtime="20210729 10:02:55.285"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:02:55.286" level="INFO">${pids} = ['22219', '22226', '22239']</msg>
<status status="PASS" starttime="20210729 10:02:55.285" endtime="20210729 10:02:55.286"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">22219</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:02:55.292" level="INFO">Running command 'kill 22219 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:02:55.286" endtime="20210729 10:02:55.292"/>
</kw>
<status status="PASS" starttime="20210729 10:02:55.286" endtime="20210729 10:02:55.292"/>
</iter>
<iter>
<var name="${pid}">22226</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:02:55.295" level="INFO">Running command 'kill 22226 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:02:55.293" endtime="20210729 10:02:55.297"/>
</kw>
<status status="PASS" starttime="20210729 10:02:55.293" endtime="20210729 10:02:55.297"/>
</iter>
<iter>
<var name="${pid}">22239</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:02:55.301" level="INFO">Running command 'kill 22239 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:02:55.298" endtime="20210729 10:02:55.301"/>
</kw>
<status status="PASS" starttime="20210729 10:02:55.298" endtime="20210729 10:02:55.301"/>
</iter>
<status status="PASS" starttime="20210729 10:02:55.286" endtime="20210729 10:02:55.301"/>
</for>
<status status="PASS" starttime="20210729 10:02:55.285" endtime="20210729 10:02:55.301"/>
</branch>
<status status="PASS" starttime="20210729 10:02:55.285" endtime="20210729 10:02:55.301"/>
</if>
<status status="PASS" starttime="20210729 10:02:55.264" endtime="20210729 10:02:55.301"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set an empty
username as such:
{
"username": ''
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:02:53.661" endtime="20210729 10:02:55.302">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t2" name="With Any Valid Token, Updating Username Of Each System User With !#%&amp;/¤% Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:02:55.308" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:02:55.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:02:55.318" level="INFO">${pids} = 22269</msg>
<status status="PASS" starttime="20210729 10:02:55.303" endtime="20210729 10:02:55.318"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:02:55.319" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:02:55.319" endtime="20210729 10:02:55.319"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:02:55.320" level="INFO">${pids} = ['22269']</msg>
<status status="PASS" starttime="20210729 10:02:55.320" endtime="20210729 10:02:55.320"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">22269</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:02:55.324" level="INFO">Running command 'kill 22269 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:02:55.321" endtime="20210729 10:02:55.324"/>
</kw>
<status status="PASS" starttime="20210729 10:02:55.320" endtime="20210729 10:02:55.325"/>
</iter>
<status status="PASS" starttime="20210729 10:02:55.320" endtime="20210729 10:02:55.325"/>
</for>
<status status="PASS" starttime="20210729 10:02:55.320" endtime="20210729 10:02:55.325"/>
</branch>
<status status="PASS" starttime="20210729 10:02:55.319" endtime="20210729 10:02:55.325"/>
</if>
<status status="PASS" starttime="20210729 10:02:55.303" endtime="20210729 10:02:55.325"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:02:55.326" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:02:55.326" endtime="20210729 10:02:55.326"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:02:55.333" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:02:55.332" endtime="20210729 10:02:55.333"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:02:55.333" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:02:55.333" endtime="20210729 10:02:55.333"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:02:55.334" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:02:55.333" endtime="20210729 10:02:55.334"/>
</kw>
<msg timestamp="20210729 10:02:55.334" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:02:55.326" endtime="20210729 10:02:55.334"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:02:55.338" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:02:55.334" endtime="20210729 10:02:55.339"/>
</kw>
<status status="PASS" starttime="20210729 10:02:55.325" endtime="20210729 10:02:55.340"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:02:55.341" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:02:55.340" endtime="20210729 10:02:55.346"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:02:56.847" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:02:55.346" endtime="20210729 10:02:56.847"/>
</kw>
<status status="PASS" starttime="20210729 10:02:55.340" endtime="20210729 10:02:56.848"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:02:56.849" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:02:56.848" endtime="20210729 10:02:56.849"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:02:56.849" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:02:56.849" endtime="20210729 10:02:56.849"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:02:56.850" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:02:56.849" endtime="20210729 10:02:56.850"/>
</kw>
<msg timestamp="20210729 10:02:56.850" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:02:56.848" endtime="20210729 10:02:56.850"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:02:56.850" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:02:56.850" endtime="20210729 10:02:56.851"/>
</kw>
<status status="PASS" starttime="20210729 10:02:56.848" endtime="20210729 10:02:56.851"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:02:56.851" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:02:56.851" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:02:56.851" endtime="20210729 10:02:56.851"/>
</kw>
<status status="PASS" starttime="20210729 10:02:56.851" endtime="20210729 10:02:56.852"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:02:56.852" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:02:56.852" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:02:56.852" endtime="20210729 10:02:56.852"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:02:56.853" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:02:56.852" endtime="20210729 10:02:56.853"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:02:56.854" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:02:56.853" endtime="20210729 10:02:56.854"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:02:56.854" endtime="20210729 10:02:56.855"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:02:56.855" endtime="20210729 10:02:56.856"/>
</kw>
<status status="PASS" starttime="20210729 10:02:56.853" endtime="20210729 10:02:56.856"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:02:56.857" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:02:56.856" endtime="20210729 10:02:56.857"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:02:56.857" endtime="20210729 10:02:56.858"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:02:56.858" endtime="20210729 10:02:56.858"/>
</kw>
<status status="PASS" starttime="20210729 10:02:56.856" endtime="20210729 10:02:56.858"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:02:56.859" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:02:56.858" endtime="20210729 10:02:56.859"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:02:56.859" endtime="20210729 10:02:56.859"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:02:56.860" endtime="20210729 10:02:56.860"/>
</kw>
<status status="PASS" starttime="20210729 10:02:56.858" endtime="20210729 10:02:56.860"/>
</iter>
<status status="PASS" starttime="20210729 10:02:56.853" endtime="20210729 10:02:56.860"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:02:56.860" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:02:56.860" endtime="20210729 10:02:56.860"/>
</kw>
<status status="PASS" starttime="20210729 10:02:56.852" endtime="20210729 10:02:56.860"/>
</kw>
<status status="PASS" starttime="20210729 10:02:55.303" endtime="20210729 10:02:56.860"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!#%&amp;/¤%</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:02:56.861" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:02:56.861" endtime="20210729 10:02:56.862"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:02:56.862" level="INFO">${payload} = {'username': '!#%&amp;/¤%'}</msg>
<status status="PASS" starttime="20210729 10:02:56.862" endtime="20210729 10:02:56.862"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:02:56.870" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:02:56.871" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:02:56.862" endtime="20210729 10:02:56.871"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:02:56.871" endtime="20210729 10:02:56.871"/>
</kw>
<status status="FAIL" starttime="20210729 10:02:56.862" endtime="20210729 10:02:56.871"/>
</iter>
<status status="FAIL" starttime="20210729 10:02:56.862" endtime="20210729 10:02:56.871"/>
</for>
<status status="FAIL" starttime="20210729 10:02:56.861" endtime="20210729 10:02:56.872"/>
</kw>
<status status="FAIL" starttime="20210729 10:02:56.861" endtime="20210729 10:02:56.872"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!#%&amp;/¤%</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:02:56.873" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:02:56.872" endtime="20210729 10:02:56.873"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:02:56.874" level="INFO">${payload} = {'username': '!#%&amp;/¤%'}</msg>
<status status="PASS" starttime="20210729 10:02:56.873" endtime="20210729 10:02:56.874"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:02:56.878" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:02:56.878" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:02:56.874" endtime="20210729 10:02:56.879"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:02:56.879" endtime="20210729 10:02:56.879"/>
</kw>
<status status="FAIL" starttime="20210729 10:02:56.874" endtime="20210729 10:02:56.879"/>
</iter>
<status status="FAIL" starttime="20210729 10:02:56.874" endtime="20210729 10:02:56.879"/>
</for>
<status status="FAIL" starttime="20210729 10:02:56.872" endtime="20210729 10:02:56.879"/>
</kw>
<status status="FAIL" starttime="20210729 10:02:56.872" endtime="20210729 10:02:56.879"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!#%&amp;/¤%</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:02:56.881" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:02:56.880" endtime="20210729 10:02:56.881"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:02:56.881" level="INFO">${payload} = {'username': '!#%&amp;/¤%'}</msg>
<status status="PASS" starttime="20210729 10:02:56.881" endtime="20210729 10:02:56.881"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:02:56.886" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:02:56.886" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:02:56.882" endtime="20210729 10:02:56.886"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:02:56.887" endtime="20210729 10:02:56.887"/>
</kw>
<status status="FAIL" starttime="20210729 10:02:56.881" endtime="20210729 10:02:56.887"/>
</iter>
<status status="FAIL" starttime="20210729 10:02:56.881" endtime="20210729 10:02:56.887"/>
</for>
<status status="FAIL" starttime="20210729 10:02:56.879" endtime="20210729 10:02:56.887"/>
</kw>
<status status="FAIL" starttime="20210729 10:02:56.879" endtime="20210729 10:02:56.887"/>
</iter>
<status status="FAIL" starttime="20210729 10:02:56.861" endtime="20210729 10:02:56.888"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:02:56.902" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:02:56.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:02:56.910" level="INFO">${pids} = 22292
22299
22303</msg>
<status status="PASS" starttime="20210729 10:02:56.891" endtime="20210729 10:02:56.910"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:02:56.911" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:02:56.911" endtime="20210729 10:02:56.911"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:02:56.912" level="INFO">${pids} = ['22292', '22299', '22303']</msg>
<status status="PASS" starttime="20210729 10:02:56.911" endtime="20210729 10:02:56.912"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">22292</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:02:56.914" level="INFO">Running command 'kill 22292 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:02:56.912" endtime="20210729 10:02:56.915"/>
</kw>
<status status="PASS" starttime="20210729 10:02:56.912" endtime="20210729 10:02:56.915"/>
</iter>
<iter>
<var name="${pid}">22299</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:02:56.918" level="INFO">Running command 'kill 22299 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:02:56.915" endtime="20210729 10:02:56.919"/>
</kw>
<status status="PASS" starttime="20210729 10:02:56.915" endtime="20210729 10:02:56.919"/>
</iter>
<iter>
<var name="${pid}">22303</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:02:56.924" level="INFO">Running command 'kill 22303 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:02:56.920" endtime="20210729 10:02:56.925"/>
</kw>
<status status="PASS" starttime="20210729 10:02:56.919" endtime="20210729 10:02:56.925"/>
</iter>
<status status="PASS" starttime="20210729 10:02:56.912" endtime="20210729 10:02:56.925"/>
</for>
<status status="PASS" starttime="20210729 10:02:56.911" endtime="20210729 10:02:56.925"/>
</branch>
<status status="PASS" starttime="20210729 10:02:56.911" endtime="20210729 10:02:56.925"/>
</if>
<status status="PASS" starttime="20210729 10:02:56.891" endtime="20210729 10:02:56.925"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": '!#%&amp;/¤%'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:02:55.302" endtime="20210729 10:02:56.925">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t3" name="With Any Valid Token, Updating Username Of Each System User With !#%&amp;/¤%= Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:02:56.931" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:02:56.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:02:56.941" level="INFO">${pids} = 22332</msg>
<status status="PASS" starttime="20210729 10:02:56.927" endtime="20210729 10:02:56.941"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:02:56.942" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:02:56.941" endtime="20210729 10:02:56.942"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:02:56.942" level="INFO">${pids} = ['22332']</msg>
<status status="PASS" starttime="20210729 10:02:56.942" endtime="20210729 10:02:56.943"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">22332</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:02:56.946" level="INFO">Running command 'kill 22332 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:02:56.943" endtime="20210729 10:02:56.956"/>
</kw>
<status status="PASS" starttime="20210729 10:02:56.943" endtime="20210729 10:02:56.956"/>
</iter>
<status status="PASS" starttime="20210729 10:02:56.943" endtime="20210729 10:02:56.956"/>
</for>
<status status="PASS" starttime="20210729 10:02:56.942" endtime="20210729 10:02:56.956"/>
</branch>
<status status="PASS" starttime="20210729 10:02:56.942" endtime="20210729 10:02:56.956"/>
</if>
<status status="PASS" starttime="20210729 10:02:56.927" endtime="20210729 10:02:56.957"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:02:56.958" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:02:56.958" endtime="20210729 10:02:56.958"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:02:56.959" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:02:56.958" endtime="20210729 10:02:56.959"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:02:56.959" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:02:56.959" endtime="20210729 10:02:56.959"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:02:56.959" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:02:56.959" endtime="20210729 10:02:56.959"/>
</kw>
<msg timestamp="20210729 10:02:56.960" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:02:56.958" endtime="20210729 10:02:56.960"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:02:56.963" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:02:56.960" endtime="20210729 10:02:56.964"/>
</kw>
<status status="PASS" starttime="20210729 10:02:56.957" endtime="20210729 10:02:56.964"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:02:56.965" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:02:56.965" endtime="20210729 10:02:56.969"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:02:58.472" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:02:56.969" endtime="20210729 10:02:58.472"/>
</kw>
<status status="PASS" starttime="20210729 10:02:56.964" endtime="20210729 10:02:58.472"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:02:58.473" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:02:58.473" endtime="20210729 10:02:58.474"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:02:58.474" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:02:58.474" endtime="20210729 10:02:58.474"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:02:58.475" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:02:58.475" endtime="20210729 10:02:58.475"/>
</kw>
<msg timestamp="20210729 10:02:58.475" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:02:58.473" endtime="20210729 10:02:58.475"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:02:58.476" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:02:58.475" endtime="20210729 10:02:58.476"/>
</kw>
<status status="PASS" starttime="20210729 10:02:58.472" endtime="20210729 10:02:58.476"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:02:58.477" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:02:58.477" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:02:58.476" endtime="20210729 10:02:58.477"/>
</kw>
<status status="PASS" starttime="20210729 10:02:58.476" endtime="20210729 10:02:58.477"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:02:58.478" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:02:58.478" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:02:58.477" endtime="20210729 10:02:58.478"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:02:58.478" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:02:58.478" endtime="20210729 10:02:58.478"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:02:58.478" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:02:58.478" endtime="20210729 10:02:58.478"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:02:58.479" endtime="20210729 10:02:58.479"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:02:58.479" endtime="20210729 10:02:58.480"/>
</kw>
<status status="PASS" starttime="20210729 10:02:58.478" endtime="20210729 10:02:58.480"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:02:58.480" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:02:58.480" endtime="20210729 10:02:58.480"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:02:58.480" endtime="20210729 10:02:58.481"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:02:58.481" endtime="20210729 10:02:58.481"/>
</kw>
<status status="PASS" starttime="20210729 10:02:58.480" endtime="20210729 10:02:58.481"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:02:58.481" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:02:58.481" endtime="20210729 10:02:58.481"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:02:58.481" endtime="20210729 10:02:58.482"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:02:58.482" endtime="20210729 10:02:58.482"/>
</kw>
<status status="PASS" starttime="20210729 10:02:58.481" endtime="20210729 10:02:58.482"/>
</iter>
<status status="PASS" starttime="20210729 10:02:58.478" endtime="20210729 10:02:58.482"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:02:58.483" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:02:58.483" endtime="20210729 10:02:58.483"/>
</kw>
<status status="PASS" starttime="20210729 10:02:58.477" endtime="20210729 10:02:58.483"/>
</kw>
<status status="PASS" starttime="20210729 10:02:56.927" endtime="20210729 10:02:58.483"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!#%&amp;/¤%=</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:02:58.484" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:02:58.484" endtime="20210729 10:02:58.484"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:02:58.485" level="INFO">${payload} = {'username': '!#%&amp;/¤%='}</msg>
<status status="PASS" starttime="20210729 10:02:58.484" endtime="20210729 10:02:58.485"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:02:58.495" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:02:58.495" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:02:58.485" endtime="20210729 10:02:58.495"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:02:58.496" endtime="20210729 10:02:58.496"/>
</kw>
<status status="FAIL" starttime="20210729 10:02:58.485" endtime="20210729 10:02:58.496"/>
</iter>
<status status="FAIL" starttime="20210729 10:02:58.485" endtime="20210729 10:02:58.496"/>
</for>
<status status="FAIL" starttime="20210729 10:02:58.483" endtime="20210729 10:02:58.496"/>
</kw>
<status status="FAIL" starttime="20210729 10:02:58.483" endtime="20210729 10:02:58.496"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!#%&amp;/¤%=</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:02:58.497" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:02:58.497" endtime="20210729 10:02:58.497"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:02:58.497" level="INFO">${payload} = {'username': '!#%&amp;/¤%='}</msg>
<status status="PASS" starttime="20210729 10:02:58.497" endtime="20210729 10:02:58.498"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:02:58.501" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:02:58.502" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:02:58.498" endtime="20210729 10:02:58.502"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:02:58.502" endtime="20210729 10:02:58.502"/>
</kw>
<status status="FAIL" starttime="20210729 10:02:58.498" endtime="20210729 10:02:58.502"/>
</iter>
<status status="FAIL" starttime="20210729 10:02:58.498" endtime="20210729 10:02:58.502"/>
</for>
<status status="FAIL" starttime="20210729 10:02:58.496" endtime="20210729 10:02:58.502"/>
</kw>
<status status="FAIL" starttime="20210729 10:02:58.496" endtime="20210729 10:02:58.502"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!#%&amp;/¤%=</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:02:58.503" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:02:58.503" endtime="20210729 10:02:58.503"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:02:58.503" level="INFO">${payload} = {'username': '!#%&amp;/¤%='}</msg>
<status status="PASS" starttime="20210729 10:02:58.503" endtime="20210729 10:02:58.503"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:02:58.507" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:02:58.508" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:02:58.504" endtime="20210729 10:02:58.508"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:02:58.508" endtime="20210729 10:02:58.508"/>
</kw>
<status status="FAIL" starttime="20210729 10:02:58.504" endtime="20210729 10:02:58.508"/>
</iter>
<status status="FAIL" starttime="20210729 10:02:58.503" endtime="20210729 10:02:58.508"/>
</for>
<status status="FAIL" starttime="20210729 10:02:58.502" endtime="20210729 10:02:58.508"/>
</kw>
<status status="FAIL" starttime="20210729 10:02:58.502" endtime="20210729 10:02:58.508"/>
</iter>
<status status="FAIL" starttime="20210729 10:02:58.483" endtime="20210729 10:02:58.508"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:02:58.512" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:02:58.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:02:58.524" level="INFO">${pids} = 22355
22362
22366</msg>
<status status="PASS" starttime="20210729 10:02:58.509" endtime="20210729 10:02:58.525"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:02:58.525" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:02:58.525" endtime="20210729 10:02:58.525"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:02:58.526" level="INFO">${pids} = ['22355', '22362', '22366']</msg>
<status status="PASS" starttime="20210729 10:02:58.526" endtime="20210729 10:02:58.526"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">22355</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:02:58.529" level="INFO">Running command 'kill 22355 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:02:58.527" endtime="20210729 10:02:58.530"/>
</kw>
<status status="PASS" starttime="20210729 10:02:58.527" endtime="20210729 10:02:58.530"/>
</iter>
<iter>
<var name="${pid}">22362</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:02:58.533" level="INFO">Running command 'kill 22362 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:02:58.530" endtime="20210729 10:02:58.533"/>
</kw>
<status status="PASS" starttime="20210729 10:02:58.530" endtime="20210729 10:02:58.533"/>
</iter>
<iter>
<var name="${pid}">22366</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:02:58.536" level="INFO">Running command 'kill 22366 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:02:58.534" endtime="20210729 10:02:58.537"/>
</kw>
<status status="PASS" starttime="20210729 10:02:58.533" endtime="20210729 10:02:58.537"/>
</iter>
<status status="PASS" starttime="20210729 10:02:58.526" endtime="20210729 10:02:58.537"/>
</for>
<status status="PASS" starttime="20210729 10:02:58.526" endtime="20210729 10:02:58.537"/>
</branch>
<status status="PASS" starttime="20210729 10:02:58.526" endtime="20210729 10:02:58.537"/>
</if>
<status status="PASS" starttime="20210729 10:02:58.508" endtime="20210729 10:02:58.537"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": '!#%&amp;/¤%='
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:02:56.926" endtime="20210729 10:02:58.538">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t4" name="With Any Valid Token, Updating Username Of Each System User With !#%&amp;/¤%=!()=? Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:02:58.542" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:02:58.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:02:58.551" level="INFO">${pids} = 22395</msg>
<status status="PASS" starttime="20210729 10:02:58.540" endtime="20210729 10:02:58.551"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:02:58.552" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:02:58.551" endtime="20210729 10:02:58.552"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:02:58.552" level="INFO">${pids} = ['22395']</msg>
<status status="PASS" starttime="20210729 10:02:58.552" endtime="20210729 10:02:58.552"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">22395</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:02:58.557" level="INFO">Running command 'kill 22395 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:02:58.553" endtime="20210729 10:02:58.557"/>
</kw>
<status status="PASS" starttime="20210729 10:02:58.553" endtime="20210729 10:02:58.558"/>
</iter>
<status status="PASS" starttime="20210729 10:02:58.553" endtime="20210729 10:02:58.558"/>
</for>
<status status="PASS" starttime="20210729 10:02:58.552" endtime="20210729 10:02:58.558"/>
</branch>
<status status="PASS" starttime="20210729 10:02:58.552" endtime="20210729 10:02:58.558"/>
</if>
<status status="PASS" starttime="20210729 10:02:58.539" endtime="20210729 10:02:58.558"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:02:58.559" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:02:58.559" endtime="20210729 10:02:58.559"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:02:58.561" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:02:58.561" endtime="20210729 10:02:58.561"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:02:58.562" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:02:58.561" endtime="20210729 10:02:58.562"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:02:58.562" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:02:58.562" endtime="20210729 10:02:58.562"/>
</kw>
<msg timestamp="20210729 10:02:58.562" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:02:58.559" endtime="20210729 10:02:58.562"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:02:58.572" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:02:58.562" endtime="20210729 10:02:58.574"/>
</kw>
<status status="PASS" starttime="20210729 10:02:58.558" endtime="20210729 10:02:58.574"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:02:58.575" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:02:58.575" endtime="20210729 10:02:58.578"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:00.080" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:02:58.579" endtime="20210729 10:03:00.080"/>
</kw>
<status status="PASS" starttime="20210729 10:02:58.574" endtime="20210729 10:03:00.080"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:00.081" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:00.081" endtime="20210729 10:03:00.081"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:00.082" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:00.081" endtime="20210729 10:03:00.082"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:00.082" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:00.082" endtime="20210729 10:03:00.082"/>
</kw>
<msg timestamp="20210729 10:03:00.082" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:00.081" endtime="20210729 10:03:00.082"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:00.083" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:00.082" endtime="20210729 10:03:00.084"/>
</kw>
<status status="PASS" starttime="20210729 10:03:00.080" endtime="20210729 10:03:00.085"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:00.085" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:00.085" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:00.085" endtime="20210729 10:03:00.086"/>
</kw>
<status status="PASS" starttime="20210729 10:03:00.085" endtime="20210729 10:03:00.086"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:00.086" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:00.087" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:00.086" endtime="20210729 10:03:00.087"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:00.087" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:00.087" endtime="20210729 10:03:00.087"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:00.088" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:00.087" endtime="20210729 10:03:00.088"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:00.088" endtime="20210729 10:03:00.090"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:00.090" endtime="20210729 10:03:00.091"/>
</kw>
<status status="PASS" starttime="20210729 10:03:00.087" endtime="20210729 10:03:00.091"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:00.092" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:00.091" endtime="20210729 10:03:00.093"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:00.093" endtime="20210729 10:03:00.094"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:00.094" endtime="20210729 10:03:00.094"/>
</kw>
<status status="PASS" starttime="20210729 10:03:00.091" endtime="20210729 10:03:00.094"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:00.095" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:00.095" endtime="20210729 10:03:00.095"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:00.095" endtime="20210729 10:03:00.096"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:00.096" endtime="20210729 10:03:00.096"/>
</kw>
<status status="PASS" starttime="20210729 10:03:00.094" endtime="20210729 10:03:00.096"/>
</iter>
<status status="PASS" starttime="20210729 10:03:00.087" endtime="20210729 10:03:00.096"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:00.097" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:00.097" endtime="20210729 10:03:00.097"/>
</kw>
<status status="PASS" starttime="20210729 10:03:00.086" endtime="20210729 10:03:00.097"/>
</kw>
<status status="PASS" starttime="20210729 10:02:58.539" endtime="20210729 10:03:00.097"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!#%&amp;/¤%=!()=?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:00.099" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:00.098" endtime="20210729 10:03:00.099"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:00.099" level="INFO">${payload} = {'username': '!#%&amp;/¤%=!()=?'}</msg>
<status status="PASS" starttime="20210729 10:03:00.099" endtime="20210729 10:03:00.099"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:00.109" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:00.109" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:00.100" endtime="20210729 10:03:00.110"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:00.110" endtime="20210729 10:03:00.110"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:00.099" endtime="20210729 10:03:00.110"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:00.099" endtime="20210729 10:03:00.110"/>
</for>
<status status="FAIL" starttime="20210729 10:03:00.098" endtime="20210729 10:03:00.110"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:00.098" endtime="20210729 10:03:00.110"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!#%&amp;/¤%=!()=?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:00.112" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:00.111" endtime="20210729 10:03:00.112"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:00.112" level="INFO">${payload} = {'username': '!#%&amp;/¤%=!()=?'}</msg>
<status status="PASS" starttime="20210729 10:03:00.112" endtime="20210729 10:03:00.112"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:00.116" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:00.117" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:00.112" endtime="20210729 10:03:00.117"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:00.117" endtime="20210729 10:03:00.117"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:00.112" endtime="20210729 10:03:00.117"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:00.112" endtime="20210729 10:03:00.117"/>
</for>
<status status="FAIL" starttime="20210729 10:03:00.110" endtime="20210729 10:03:00.117"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:00.110" endtime="20210729 10:03:00.117"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!#%&amp;/¤%=!()=?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:00.118" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:00.118" endtime="20210729 10:03:00.118"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:00.119" level="INFO">${payload} = {'username': '!#%&amp;/¤%=!()=?'}</msg>
<status status="PASS" starttime="20210729 10:03:00.118" endtime="20210729 10:03:00.119"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:00.124" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:00.124" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:00.119" endtime="20210729 10:03:00.124"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:00.124" endtime="20210729 10:03:00.124"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:00.119" endtime="20210729 10:03:00.125"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:00.119" endtime="20210729 10:03:00.125"/>
</for>
<status status="FAIL" starttime="20210729 10:03:00.117" endtime="20210729 10:03:00.125"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:00.117" endtime="20210729 10:03:00.125"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:00.097" endtime="20210729 10:03:00.125"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:00.132" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:00.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:00.141" level="INFO">${pids} = 22418
22425
22431</msg>
<status status="PASS" starttime="20210729 10:03:00.126" endtime="20210729 10:03:00.141"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:00.142" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:00.141" endtime="20210729 10:03:00.142"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:00.143" level="INFO">${pids} = ['22418', '22425', '22431']</msg>
<status status="PASS" starttime="20210729 10:03:00.142" endtime="20210729 10:03:00.143"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">22418</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:00.146" level="INFO">Running command 'kill 22418 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:00.143" endtime="20210729 10:03:00.146"/>
</kw>
<status status="PASS" starttime="20210729 10:03:00.143" endtime="20210729 10:03:00.146"/>
</iter>
<iter>
<var name="${pid}">22425</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:00.149" level="INFO">Running command 'kill 22425 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:00.146" endtime="20210729 10:03:00.149"/>
</kw>
<status status="PASS" starttime="20210729 10:03:00.146" endtime="20210729 10:03:00.149"/>
</iter>
<iter>
<var name="${pid}">22431</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:00.152" level="INFO">Running command 'kill 22431 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:00.149" endtime="20210729 10:03:00.152"/>
</kw>
<status status="PASS" starttime="20210729 10:03:00.149" endtime="20210729 10:03:00.152"/>
</iter>
<status status="PASS" starttime="20210729 10:03:00.143" endtime="20210729 10:03:00.152"/>
</for>
<status status="PASS" starttime="20210729 10:03:00.142" endtime="20210729 10:03:00.152"/>
</branch>
<status status="PASS" starttime="20210729 10:03:00.142" endtime="20210729 10:03:00.152"/>
</if>
<status status="PASS" starttime="20210729 10:03:00.125" endtime="20210729 10:03:00.153"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": '!#%&amp;/¤%=!()=?'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:02:58.538" endtime="20210729 10:03:00.153">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t5" name="With Any Valid Token, Updating Username Of Each System User With 1234567 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:00.163" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:00.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:00.172" level="INFO">${pids} = 22460</msg>
<status status="PASS" starttime="20210729 10:03:00.156" endtime="20210729 10:03:00.172"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:00.173" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:00.172" endtime="20210729 10:03:00.173"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:00.174" level="INFO">${pids} = ['22460']</msg>
<status status="PASS" starttime="20210729 10:03:00.173" endtime="20210729 10:03:00.174"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">22460</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:00.183" level="INFO">Running command 'kill 22460 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:00.174" endtime="20210729 10:03:00.184"/>
</kw>
<status status="PASS" starttime="20210729 10:03:00.174" endtime="20210729 10:03:00.184"/>
</iter>
<status status="PASS" starttime="20210729 10:03:00.174" endtime="20210729 10:03:00.184"/>
</for>
<status status="PASS" starttime="20210729 10:03:00.173" endtime="20210729 10:03:00.184"/>
</branch>
<status status="PASS" starttime="20210729 10:03:00.173" endtime="20210729 10:03:00.184"/>
</if>
<status status="PASS" starttime="20210729 10:03:00.155" endtime="20210729 10:03:00.184"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:00.195" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:00.194" endtime="20210729 10:03:00.195"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:00.196" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:00.196" endtime="20210729 10:03:00.196"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:00.196" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:00.196" endtime="20210729 10:03:00.196"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:00.197" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:00.196" endtime="20210729 10:03:00.197"/>
</kw>
<msg timestamp="20210729 10:03:00.197" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:00.195" endtime="20210729 10:03:00.197"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:00.200" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:00.197" endtime="20210729 10:03:00.201"/>
</kw>
<status status="PASS" starttime="20210729 10:03:00.185" endtime="20210729 10:03:00.202"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:00.203" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:00.203" endtime="20210729 10:03:00.207"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:01.710" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:00.208" endtime="20210729 10:03:01.710"/>
</kw>
<status status="PASS" starttime="20210729 10:03:00.202" endtime="20210729 10:03:01.710"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:01.711" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:01.711" endtime="20210729 10:03:01.711"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:01.712" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:01.711" endtime="20210729 10:03:01.712"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:01.712" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:01.712" endtime="20210729 10:03:01.712"/>
</kw>
<msg timestamp="20210729 10:03:01.712" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:01.711" endtime="20210729 10:03:01.712"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:01.712" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:01.712" endtime="20210729 10:03:01.713"/>
</kw>
<status status="PASS" starttime="20210729 10:03:01.710" endtime="20210729 10:03:01.713"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:01.713" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:01.713" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:01.713" endtime="20210729 10:03:01.714"/>
</kw>
<status status="PASS" starttime="20210729 10:03:01.713" endtime="20210729 10:03:01.714"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:01.714" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:01.714" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:01.714" endtime="20210729 10:03:01.714"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:01.715" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:01.714" endtime="20210729 10:03:01.715"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:01.715" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:01.715" endtime="20210729 10:03:01.715"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:01.715" endtime="20210729 10:03:01.716"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:01.716" endtime="20210729 10:03:01.716"/>
</kw>
<status status="PASS" starttime="20210729 10:03:01.715" endtime="20210729 10:03:01.716"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:01.717" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:01.717" endtime="20210729 10:03:01.717"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:01.717" endtime="20210729 10:03:01.717"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:01.718" endtime="20210729 10:03:01.718"/>
</kw>
<status status="PASS" starttime="20210729 10:03:01.716" endtime="20210729 10:03:01.718"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:01.718" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:01.718" endtime="20210729 10:03:01.718"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:01.718" endtime="20210729 10:03:01.719"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:01.719" endtime="20210729 10:03:01.719"/>
</kw>
<status status="PASS" starttime="20210729 10:03:01.718" endtime="20210729 10:03:01.719"/>
</iter>
<status status="PASS" starttime="20210729 10:03:01.715" endtime="20210729 10:03:01.719"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:01.720" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:01.719" endtime="20210729 10:03:01.720"/>
</kw>
<status status="PASS" starttime="20210729 10:03:01.714" endtime="20210729 10:03:01.720"/>
</kw>
<status status="PASS" starttime="20210729 10:03:00.154" endtime="20210729 10:03:01.720"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=1234567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:01.721" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:01.721" endtime="20210729 10:03:01.721"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:01.722" level="INFO">${payload} = {'username': '1234567'}</msg>
<status status="PASS" starttime="20210729 10:03:01.721" endtime="20210729 10:03:01.722"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:01.732" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:01.733" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:01.722" endtime="20210729 10:03:01.733"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:01.733" endtime="20210729 10:03:01.733"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:01.722" endtime="20210729 10:03:01.733"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:01.722" endtime="20210729 10:03:01.733"/>
</for>
<status status="FAIL" starttime="20210729 10:03:01.720" endtime="20210729 10:03:01.733"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:01.720" endtime="20210729 10:03:01.733"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=1234567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:01.734" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:01.734" endtime="20210729 10:03:01.734"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:01.734" level="INFO">${payload} = {'username': '1234567'}</msg>
<status status="PASS" starttime="20210729 10:03:01.734" endtime="20210729 10:03:01.734"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:01.739" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:01.739" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:01.735" endtime="20210729 10:03:01.739"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:01.739" endtime="20210729 10:03:01.739"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:01.735" endtime="20210729 10:03:01.739"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:01.735" endtime="20210729 10:03:01.739"/>
</for>
<status status="FAIL" starttime="20210729 10:03:01.733" endtime="20210729 10:03:01.739"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:01.733" endtime="20210729 10:03:01.739"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=1234567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:01.740" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:01.740" endtime="20210729 10:03:01.740"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:01.741" level="INFO">${payload} = {'username': '1234567'}</msg>
<status status="PASS" starttime="20210729 10:03:01.740" endtime="20210729 10:03:01.741"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:01.745" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:01.745" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:01.741" endtime="20210729 10:03:01.745"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:01.745" endtime="20210729 10:03:01.745"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:01.741" endtime="20210729 10:03:01.745"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:01.741" endtime="20210729 10:03:01.745"/>
</for>
<status status="FAIL" starttime="20210729 10:03:01.740" endtime="20210729 10:03:01.745"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:01.739" endtime="20210729 10:03:01.745"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:01.720" endtime="20210729 10:03:01.745"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:01.749" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:01.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:01.761" level="INFO">${pids} = 22483
22490
22503</msg>
<status status="PASS" starttime="20210729 10:03:01.746" endtime="20210729 10:03:01.762"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:01.762" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:01.762" endtime="20210729 10:03:01.763"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:01.763" level="INFO">${pids} = ['22483', '22490', '22503']</msg>
<status status="PASS" starttime="20210729 10:03:01.763" endtime="20210729 10:03:01.763"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">22483</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:01.767" level="INFO">Running command 'kill 22483 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:01.764" endtime="20210729 10:03:01.767"/>
</kw>
<status status="PASS" starttime="20210729 10:03:01.764" endtime="20210729 10:03:01.767"/>
</iter>
<iter>
<var name="${pid}">22490</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:01.770" level="INFO">Running command 'kill 22490 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:01.768" endtime="20210729 10:03:01.771"/>
</kw>
<status status="PASS" starttime="20210729 10:03:01.767" endtime="20210729 10:03:01.771"/>
</iter>
<iter>
<var name="${pid}">22503</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:01.775" level="INFO">Running command 'kill 22503 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:01.772" endtime="20210729 10:03:01.776"/>
</kw>
<status status="PASS" starttime="20210729 10:03:01.771" endtime="20210729 10:03:01.776"/>
</iter>
<status status="PASS" starttime="20210729 10:03:01.763" endtime="20210729 10:03:01.776"/>
</for>
<status status="PASS" starttime="20210729 10:03:01.763" endtime="20210729 10:03:01.776"/>
</branch>
<status status="PASS" starttime="20210729 10:03:01.763" endtime="20210729 10:03:01.776"/>
</if>
<status status="PASS" starttime="20210729 10:03:01.746" endtime="20210729 10:03:01.776"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": '1234567'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:00.153" endtime="20210729 10:03:01.776">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t6" name="With Any Valid Token, Updating Username Of Each System User With 12345678 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:01.788" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:01.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:01.797" level="INFO">${pids} = 22532</msg>
<status status="PASS" starttime="20210729 10:03:01.778" endtime="20210729 10:03:01.798"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:01.799" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:01.798" endtime="20210729 10:03:01.799"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:01.800" level="INFO">${pids} = ['22532']</msg>
<status status="PASS" starttime="20210729 10:03:01.799" endtime="20210729 10:03:01.800"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">22532</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:01.803" level="INFO">Running command 'kill 22532 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:01.800" endtime="20210729 10:03:01.803"/>
</kw>
<status status="PASS" starttime="20210729 10:03:01.800" endtime="20210729 10:03:01.803"/>
</iter>
<status status="PASS" starttime="20210729 10:03:01.800" endtime="20210729 10:03:01.803"/>
</for>
<status status="PASS" starttime="20210729 10:03:01.799" endtime="20210729 10:03:01.803"/>
</branch>
<status status="PASS" starttime="20210729 10:03:01.799" endtime="20210729 10:03:01.803"/>
</if>
<status status="PASS" starttime="20210729 10:03:01.778" endtime="20210729 10:03:01.803"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:01.805" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:01.804" endtime="20210729 10:03:01.805"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:01.806" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:01.805" endtime="20210729 10:03:01.806"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:01.806" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:01.806" endtime="20210729 10:03:01.806"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:01.806" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:01.806" endtime="20210729 10:03:01.806"/>
</kw>
<msg timestamp="20210729 10:03:01.807" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:01.805" endtime="20210729 10:03:01.807"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:01.812" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:01.807" endtime="20210729 10:03:01.813"/>
</kw>
<status status="PASS" starttime="20210729 10:03:01.804" endtime="20210729 10:03:01.814"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:01.815" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:01.815" endtime="20210729 10:03:01.818"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:03.320" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:01.819" endtime="20210729 10:03:03.320"/>
</kw>
<status status="PASS" starttime="20210729 10:03:01.814" endtime="20210729 10:03:03.321"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:03.323" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:03.322" endtime="20210729 10:03:03.323"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:03.323" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:03.323" endtime="20210729 10:03:03.323"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:03.324" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:03.323" endtime="20210729 10:03:03.324"/>
</kw>
<msg timestamp="20210729 10:03:03.324" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:03.322" endtime="20210729 10:03:03.324"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:03.324" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:03.324" endtime="20210729 10:03:03.325"/>
</kw>
<status status="PASS" starttime="20210729 10:03:03.321" endtime="20210729 10:03:03.325"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:03.325" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:03.325" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:03.325" endtime="20210729 10:03:03.326"/>
</kw>
<status status="PASS" starttime="20210729 10:03:03.325" endtime="20210729 10:03:03.326"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:03.326" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:03.327" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:03.326" endtime="20210729 10:03:03.327"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:03.327" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:03.327" endtime="20210729 10:03:03.327"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:03.328" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:03.327" endtime="20210729 10:03:03.328"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:03.328" endtime="20210729 10:03:03.328"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:03.328" endtime="20210729 10:03:03.329"/>
</kw>
<status status="PASS" starttime="20210729 10:03:03.327" endtime="20210729 10:03:03.329"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:03.329" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:03.329" endtime="20210729 10:03:03.329"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:03.329" endtime="20210729 10:03:03.330"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:03.330" endtime="20210729 10:03:03.330"/>
</kw>
<status status="PASS" starttime="20210729 10:03:03.329" endtime="20210729 10:03:03.330"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:03.330" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:03.330" endtime="20210729 10:03:03.330"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:03.330" endtime="20210729 10:03:03.331"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:03.331" endtime="20210729 10:03:03.331"/>
</kw>
<status status="PASS" starttime="20210729 10:03:03.330" endtime="20210729 10:03:03.331"/>
</iter>
<status status="PASS" starttime="20210729 10:03:03.327" endtime="20210729 10:03:03.331"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:03.332" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:03.331" endtime="20210729 10:03:03.332"/>
</kw>
<status status="PASS" starttime="20210729 10:03:03.326" endtime="20210729 10:03:03.332"/>
</kw>
<status status="PASS" starttime="20210729 10:03:01.778" endtime="20210729 10:03:03.332"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=12345678</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:03.333" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:03.333" endtime="20210729 10:03:03.333"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:03.334" level="INFO">${payload} = {'username': '12345678'}</msg>
<status status="PASS" starttime="20210729 10:03:03.333" endtime="20210729 10:03:03.334"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:03.342" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:03.342" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:03.334" endtime="20210729 10:03:03.342"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:03.343" endtime="20210729 10:03:03.343"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:03.334" endtime="20210729 10:03:03.343"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:03.334" endtime="20210729 10:03:03.343"/>
</for>
<status status="FAIL" starttime="20210729 10:03:03.332" endtime="20210729 10:03:03.343"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:03.332" endtime="20210729 10:03:03.343"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=12345678</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:03.344" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:03.344" endtime="20210729 10:03:03.344"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:03.344" level="INFO">${payload} = {'username': '12345678'}</msg>
<status status="PASS" starttime="20210729 10:03:03.344" endtime="20210729 10:03:03.344"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:03.349" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:03.349" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:03.345" endtime="20210729 10:03:03.349"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:03.349" endtime="20210729 10:03:03.349"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:03.345" endtime="20210729 10:03:03.349"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:03.345" endtime="20210729 10:03:03.349"/>
</for>
<status status="FAIL" starttime="20210729 10:03:03.343" endtime="20210729 10:03:03.349"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:03.343" endtime="20210729 10:03:03.349"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=12345678</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:03.350" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:03.350" endtime="20210729 10:03:03.350"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:03.351" level="INFO">${payload} = {'username': '12345678'}</msg>
<status status="PASS" starttime="20210729 10:03:03.350" endtime="20210729 10:03:03.351"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:03.354" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:03.355" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:03.351" endtime="20210729 10:03:03.355"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:03.355" endtime="20210729 10:03:03.355"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:03.351" endtime="20210729 10:03:03.356"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:03.351" endtime="20210729 10:03:03.356"/>
</for>
<status status="FAIL" starttime="20210729 10:03:03.349" endtime="20210729 10:03:03.356"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:03.349" endtime="20210729 10:03:03.356"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:03.332" endtime="20210729 10:03:03.356"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:03.361" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:03.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:03.372" level="INFO">${pids} = 22555
22562
22568</msg>
<status status="PASS" starttime="20210729 10:03:03.358" endtime="20210729 10:03:03.372"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:03.373" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:03.373" endtime="20210729 10:03:03.373"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:03.374" level="INFO">${pids} = ['22555', '22562', '22568']</msg>
<status status="PASS" starttime="20210729 10:03:03.374" endtime="20210729 10:03:03.374"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">22555</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:03.377" level="INFO">Running command 'kill 22555 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:03.374" endtime="20210729 10:03:03.377"/>
</kw>
<status status="PASS" starttime="20210729 10:03:03.374" endtime="20210729 10:03:03.377"/>
</iter>
<iter>
<var name="${pid}">22562</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:03.382" level="INFO">Running command 'kill 22562 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:03.378" endtime="20210729 10:03:03.382"/>
</kw>
<status status="PASS" starttime="20210729 10:03:03.378" endtime="20210729 10:03:03.382"/>
</iter>
<iter>
<var name="${pid}">22568</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:03.392" level="INFO">Running command 'kill 22568 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:03.382" endtime="20210729 10:03:03.392"/>
</kw>
<status status="PASS" starttime="20210729 10:03:03.382" endtime="20210729 10:03:03.393"/>
</iter>
<status status="PASS" starttime="20210729 10:03:03.374" endtime="20210729 10:03:03.393"/>
</for>
<status status="PASS" starttime="20210729 10:03:03.373" endtime="20210729 10:03:03.393"/>
</branch>
<status status="PASS" starttime="20210729 10:03:03.373" endtime="20210729 10:03:03.393"/>
</if>
<status status="PASS" starttime="20210729 10:03:03.357" endtime="20210729 10:03:03.393"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": '12345678'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:01.777" endtime="20210729 10:03:03.393">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t7" name="With Any Valid Token, Updating Username Of Each System User With 12345678912345 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:03.397" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:03.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:03.406" level="INFO">${pids} = 22597</msg>
<status status="PASS" starttime="20210729 10:03:03.395" endtime="20210729 10:03:03.406"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:03.407" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:03.406" endtime="20210729 10:03:03.407"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:03.408" level="INFO">${pids} = ['22597']</msg>
<status status="PASS" starttime="20210729 10:03:03.407" endtime="20210729 10:03:03.408"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">22597</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:03.411" level="INFO">Running command 'kill 22597 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:03.408" endtime="20210729 10:03:03.411"/>
</kw>
<status status="PASS" starttime="20210729 10:03:03.408" endtime="20210729 10:03:03.412"/>
</iter>
<status status="PASS" starttime="20210729 10:03:03.408" endtime="20210729 10:03:03.412"/>
</for>
<status status="PASS" starttime="20210729 10:03:03.407" endtime="20210729 10:03:03.412"/>
</branch>
<status status="PASS" starttime="20210729 10:03:03.407" endtime="20210729 10:03:03.412"/>
</if>
<status status="PASS" starttime="20210729 10:03:03.394" endtime="20210729 10:03:03.412"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:03.413" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:03.413" endtime="20210729 10:03:03.413"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:03.413" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:03.413" endtime="20210729 10:03:03.413"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:03.414" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:03.414" endtime="20210729 10:03:03.414"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:03.414" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:03.414" endtime="20210729 10:03:03.414"/>
</kw>
<msg timestamp="20210729 10:03:03.414" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:03.413" endtime="20210729 10:03:03.414"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:03.417" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:03.414" endtime="20210729 10:03:03.418"/>
</kw>
<status status="PASS" starttime="20210729 10:03:03.412" endtime="20210729 10:03:03.418"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:03.419" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:03.419" endtime="20210729 10:03:03.426"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:04.928" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:03.426" endtime="20210729 10:03:04.928"/>
</kw>
<status status="PASS" starttime="20210729 10:03:03.419" endtime="20210729 10:03:04.928"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:04.929" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:04.929" endtime="20210729 10:03:04.929"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:04.929" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:04.929" endtime="20210729 10:03:04.930"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:04.930" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:04.930" endtime="20210729 10:03:04.930"/>
</kw>
<msg timestamp="20210729 10:03:04.930" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:04.929" endtime="20210729 10:03:04.930"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:04.931" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:04.930" endtime="20210729 10:03:04.931"/>
</kw>
<status status="PASS" starttime="20210729 10:03:04.928" endtime="20210729 10:03:04.931"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:04.931" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:04.931" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:04.931" endtime="20210729 10:03:04.932"/>
</kw>
<status status="PASS" starttime="20210729 10:03:04.931" endtime="20210729 10:03:04.932"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:04.932" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:04.932" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:04.932" endtime="20210729 10:03:04.932"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:04.933" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:04.932" endtime="20210729 10:03:04.933"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:04.933" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:04.933" endtime="20210729 10:03:04.933"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:04.933" endtime="20210729 10:03:04.934"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:04.934" endtime="20210729 10:03:04.934"/>
</kw>
<status status="PASS" starttime="20210729 10:03:04.933" endtime="20210729 10:03:04.934"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:04.935" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:04.934" endtime="20210729 10:03:04.935"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:04.935" endtime="20210729 10:03:04.935"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:04.935" endtime="20210729 10:03:04.936"/>
</kw>
<status status="PASS" starttime="20210729 10:03:04.934" endtime="20210729 10:03:04.936"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:04.936" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:04.936" endtime="20210729 10:03:04.936"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:04.936" endtime="20210729 10:03:04.937"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:04.937" endtime="20210729 10:03:04.937"/>
</kw>
<status status="PASS" starttime="20210729 10:03:04.936" endtime="20210729 10:03:04.937"/>
</iter>
<status status="PASS" starttime="20210729 10:03:04.933" endtime="20210729 10:03:04.937"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:04.938" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:04.938" endtime="20210729 10:03:04.938"/>
</kw>
<status status="PASS" starttime="20210729 10:03:04.932" endtime="20210729 10:03:04.938"/>
</kw>
<status status="PASS" starttime="20210729 10:03:03.394" endtime="20210729 10:03:04.938"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=12345678912345</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:04.939" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:04.939" endtime="20210729 10:03:04.939"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:04.940" level="INFO">${payload} = {'username': '12345678912345'}</msg>
<status status="PASS" starttime="20210729 10:03:04.939" endtime="20210729 10:03:04.940"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:04.948" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:04.948" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:04.940" endtime="20210729 10:03:04.949"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:04.949" endtime="20210729 10:03:04.949"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:04.940" endtime="20210729 10:03:04.949"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:04.940" endtime="20210729 10:03:04.949"/>
</for>
<status status="FAIL" starttime="20210729 10:03:04.938" endtime="20210729 10:03:04.949"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:04.938" endtime="20210729 10:03:04.949"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=12345678912345</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:04.950" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:04.950" endtime="20210729 10:03:04.950"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:04.951" level="INFO">${payload} = {'username': '12345678912345'}</msg>
<status status="PASS" starttime="20210729 10:03:04.950" endtime="20210729 10:03:04.951"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:04.955" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:04.956" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:04.951" endtime="20210729 10:03:04.956"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:04.956" endtime="20210729 10:03:04.957"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:04.951" endtime="20210729 10:03:04.957"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:04.951" endtime="20210729 10:03:04.957"/>
</for>
<status status="FAIL" starttime="20210729 10:03:04.949" endtime="20210729 10:03:04.957"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:04.949" endtime="20210729 10:03:04.957"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=12345678912345</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:04.958" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:04.958" endtime="20210729 10:03:04.958"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:04.958" level="INFO">${payload} = {'username': '12345678912345'}</msg>
<status status="PASS" starttime="20210729 10:03:04.958" endtime="20210729 10:03:04.958"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:04.963" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:04.963" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:04.959" endtime="20210729 10:03:04.963"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:04.963" endtime="20210729 10:03:04.963"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:04.959" endtime="20210729 10:03:04.963"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:04.959" endtime="20210729 10:03:04.963"/>
</for>
<status status="FAIL" starttime="20210729 10:03:04.957" endtime="20210729 10:03:04.963"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:04.957" endtime="20210729 10:03:04.963"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:04.938" endtime="20210729 10:03:04.964"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:04.968" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:04.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:04.981" level="INFO">${pids} = 22620
22627
22632</msg>
<status status="PASS" starttime="20210729 10:03:04.964" endtime="20210729 10:03:04.981"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:04.982" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:04.982" endtime="20210729 10:03:04.982"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:04.983" level="INFO">${pids} = ['22620', '22627', '22632']</msg>
<status status="PASS" starttime="20210729 10:03:04.982" endtime="20210729 10:03:04.983"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">22620</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:04.986" level="INFO">Running command 'kill 22620 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:04.983" endtime="20210729 10:03:04.986"/>
</kw>
<status status="PASS" starttime="20210729 10:03:04.983" endtime="20210729 10:03:04.986"/>
</iter>
<iter>
<var name="${pid}">22627</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:04.990" level="INFO">Running command 'kill 22627 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:04.987" endtime="20210729 10:03:04.992"/>
</kw>
<status status="PASS" starttime="20210729 10:03:04.987" endtime="20210729 10:03:04.992"/>
</iter>
<iter>
<var name="${pid}">22632</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:04.995" level="INFO">Running command 'kill 22632 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:04.993" endtime="20210729 10:03:04.996"/>
</kw>
<status status="PASS" starttime="20210729 10:03:04.993" endtime="20210729 10:03:04.996"/>
</iter>
<status status="PASS" starttime="20210729 10:03:04.983" endtime="20210729 10:03:04.996"/>
</for>
<status status="PASS" starttime="20210729 10:03:04.982" endtime="20210729 10:03:04.996"/>
</branch>
<status status="PASS" starttime="20210729 10:03:04.982" endtime="20210729 10:03:04.996"/>
</if>
<status status="PASS" starttime="20210729 10:03:04.964" endtime="20210729 10:03:04.996"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": '12345678912345'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:03.394" endtime="20210729 10:03:04.996">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t8" name="With Any Valid Token, Updating Username Of Each System User With abcdefg Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:05.000" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:05.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:05.009" level="INFO">${pids} = 22661</msg>
<status status="PASS" starttime="20210729 10:03:04.998" endtime="20210729 10:03:05.009"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:05.010" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:05.009" endtime="20210729 10:03:05.010"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:05.011" level="INFO">${pids} = ['22661']</msg>
<status status="PASS" starttime="20210729 10:03:05.010" endtime="20210729 10:03:05.011"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">22661</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:05.014" level="INFO">Running command 'kill 22661 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:05.011" endtime="20210729 10:03:05.015"/>
</kw>
<status status="PASS" starttime="20210729 10:03:05.011" endtime="20210729 10:03:05.015"/>
</iter>
<status status="PASS" starttime="20210729 10:03:05.011" endtime="20210729 10:03:05.015"/>
</for>
<status status="PASS" starttime="20210729 10:03:05.010" endtime="20210729 10:03:05.015"/>
</branch>
<status status="PASS" starttime="20210729 10:03:05.010" endtime="20210729 10:03:05.015"/>
</if>
<status status="PASS" starttime="20210729 10:03:04.998" endtime="20210729 10:03:05.015"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:05.016" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:05.016" endtime="20210729 10:03:05.016"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:05.017" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:05.017" endtime="20210729 10:03:05.017"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:05.017" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:05.017" endtime="20210729 10:03:05.017"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:05.018" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:05.017" endtime="20210729 10:03:05.018"/>
</kw>
<msg timestamp="20210729 10:03:05.018" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:05.016" endtime="20210729 10:03:05.018"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:05.021" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:05.018" endtime="20210729 10:03:05.022"/>
</kw>
<status status="PASS" starttime="20210729 10:03:05.015" endtime="20210729 10:03:05.023"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:05.024" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:05.024" endtime="20210729 10:03:05.028"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:06.529" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:05.028" endtime="20210729 10:03:06.529"/>
</kw>
<status status="PASS" starttime="20210729 10:03:05.023" endtime="20210729 10:03:06.530"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:06.531" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:06.530" endtime="20210729 10:03:06.531"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:06.531" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:06.531" endtime="20210729 10:03:06.531"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:06.531" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:06.531" endtime="20210729 10:03:06.531"/>
</kw>
<msg timestamp="20210729 10:03:06.532" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:06.530" endtime="20210729 10:03:06.532"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:06.532" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:06.532" endtime="20210729 10:03:06.533"/>
</kw>
<status status="PASS" starttime="20210729 10:03:06.530" endtime="20210729 10:03:06.533"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:06.533" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:06.533" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:06.533" endtime="20210729 10:03:06.533"/>
</kw>
<status status="PASS" starttime="20210729 10:03:06.533" endtime="20210729 10:03:06.533"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:06.534" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:06.534" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:06.534" endtime="20210729 10:03:06.534"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:06.534" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:06.534" endtime="20210729 10:03:06.534"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:06.535" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:06.535" endtime="20210729 10:03:06.535"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:06.535" endtime="20210729 10:03:06.536"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:06.536" endtime="20210729 10:03:06.537"/>
</kw>
<status status="PASS" starttime="20210729 10:03:06.534" endtime="20210729 10:03:06.537"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:06.537" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:06.537" endtime="20210729 10:03:06.537"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:06.537" endtime="20210729 10:03:06.538"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:06.538" endtime="20210729 10:03:06.538"/>
</kw>
<status status="PASS" starttime="20210729 10:03:06.537" endtime="20210729 10:03:06.538"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:06.539" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:06.539" endtime="20210729 10:03:06.539"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:06.539" endtime="20210729 10:03:06.540"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:06.540" endtime="20210729 10:03:06.540"/>
</kw>
<status status="PASS" starttime="20210729 10:03:06.538" endtime="20210729 10:03:06.540"/>
</iter>
<status status="PASS" starttime="20210729 10:03:06.534" endtime="20210729 10:03:06.540"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:06.541" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:06.540" endtime="20210729 10:03:06.541"/>
</kw>
<status status="PASS" starttime="20210729 10:03:06.534" endtime="20210729 10:03:06.541"/>
</kw>
<status status="PASS" starttime="20210729 10:03:04.997" endtime="20210729 10:03:06.541"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=abcdefg</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:06.542" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:06.542" endtime="20210729 10:03:06.542"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:06.542" level="INFO">${payload} = {'username': 'abcdefg'}</msg>
<status status="PASS" starttime="20210729 10:03:06.542" endtime="20210729 10:03:06.542"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:06.550" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:06.551" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:06.543" endtime="20210729 10:03:06.551"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:06.551" endtime="20210729 10:03:06.551"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:06.543" endtime="20210729 10:03:06.551"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:06.542" endtime="20210729 10:03:06.551"/>
</for>
<status status="FAIL" starttime="20210729 10:03:06.541" endtime="20210729 10:03:06.551"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:06.541" endtime="20210729 10:03:06.551"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=abcdefg</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:06.552" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:06.552" endtime="20210729 10:03:06.552"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:06.553" level="INFO">${payload} = {'username': 'abcdefg'}</msg>
<status status="PASS" starttime="20210729 10:03:06.552" endtime="20210729 10:03:06.553"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:06.558" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:06.559" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:06.553" endtime="20210729 10:03:06.559"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:06.559" endtime="20210729 10:03:06.559"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:06.553" endtime="20210729 10:03:06.559"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:06.553" endtime="20210729 10:03:06.559"/>
</for>
<status status="FAIL" starttime="20210729 10:03:06.551" endtime="20210729 10:03:06.559"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:06.551" endtime="20210729 10:03:06.559"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=abcdefg</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:06.560" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:06.560" endtime="20210729 10:03:06.560"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:06.561" level="INFO">${payload} = {'username': 'abcdefg'}</msg>
<status status="PASS" starttime="20210729 10:03:06.560" endtime="20210729 10:03:06.561"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:06.564" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:06.564" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:06.561" endtime="20210729 10:03:06.564"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:06.564" endtime="20210729 10:03:06.564"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:06.561" endtime="20210729 10:03:06.565"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:06.561" endtime="20210729 10:03:06.565"/>
</for>
<status status="FAIL" starttime="20210729 10:03:06.559" endtime="20210729 10:03:06.565"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:06.559" endtime="20210729 10:03:06.565"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:06.541" endtime="20210729 10:03:06.565"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:06.569" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:06.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:06.582" level="INFO">${pids} = 22684
22691
22701</msg>
<status status="PASS" starttime="20210729 10:03:06.565" endtime="20210729 10:03:06.582"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:06.583" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:06.582" endtime="20210729 10:03:06.583"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:06.584" level="INFO">${pids} = ['22684', '22691', '22701']</msg>
<status status="PASS" starttime="20210729 10:03:06.583" endtime="20210729 10:03:06.584"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">22684</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:06.587" level="INFO">Running command 'kill 22684 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:06.584" endtime="20210729 10:03:06.587"/>
</kw>
<status status="PASS" starttime="20210729 10:03:06.584" endtime="20210729 10:03:06.587"/>
</iter>
<iter>
<var name="${pid}">22691</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:06.593" level="INFO">Running command 'kill 22691 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:06.589" endtime="20210729 10:03:06.593"/>
</kw>
<status status="PASS" starttime="20210729 10:03:06.588" endtime="20210729 10:03:06.593"/>
</iter>
<iter>
<var name="${pid}">22701</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:06.596" level="INFO">Running command 'kill 22701 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:06.594" endtime="20210729 10:03:06.597"/>
</kw>
<status status="PASS" starttime="20210729 10:03:06.593" endtime="20210729 10:03:06.597"/>
</iter>
<status status="PASS" starttime="20210729 10:03:06.584" endtime="20210729 10:03:06.597"/>
</for>
<status status="PASS" starttime="20210729 10:03:06.583" endtime="20210729 10:03:06.597"/>
</branch>
<status status="PASS" starttime="20210729 10:03:06.583" endtime="20210729 10:03:06.597"/>
</if>
<status status="PASS" starttime="20210729 10:03:06.565" endtime="20210729 10:03:06.597"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": 'abcdefg'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:04.997" endtime="20210729 10:03:06.597">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t9" name="With Any Valid Token, Updating Username Of Each System User With abcdefgh Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:06.606" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:06.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:06.615" level="INFO">${pids} = 22730</msg>
<status status="PASS" starttime="20210729 10:03:06.599" endtime="20210729 10:03:06.615"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:06.616" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:06.615" endtime="20210729 10:03:06.616"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:06.616" level="INFO">${pids} = ['22730']</msg>
<status status="PASS" starttime="20210729 10:03:06.616" endtime="20210729 10:03:06.616"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">22730</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:06.626" level="INFO">Running command 'kill 22730 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:06.617" endtime="20210729 10:03:06.626"/>
</kw>
<status status="PASS" starttime="20210729 10:03:06.617" endtime="20210729 10:03:06.627"/>
</iter>
<status status="PASS" starttime="20210729 10:03:06.617" endtime="20210729 10:03:06.627"/>
</for>
<status status="PASS" starttime="20210729 10:03:06.616" endtime="20210729 10:03:06.627"/>
</branch>
<status status="PASS" starttime="20210729 10:03:06.616" endtime="20210729 10:03:06.627"/>
</if>
<status status="PASS" starttime="20210729 10:03:06.599" endtime="20210729 10:03:06.627"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:06.628" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:06.628" endtime="20210729 10:03:06.628"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:06.629" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:06.629" endtime="20210729 10:03:06.629"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:06.629" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:06.629" endtime="20210729 10:03:06.629"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:06.630" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:06.629" endtime="20210729 10:03:06.630"/>
</kw>
<msg timestamp="20210729 10:03:06.630" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:06.628" endtime="20210729 10:03:06.630"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:06.633" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:06.630" endtime="20210729 10:03:06.635"/>
</kw>
<status status="PASS" starttime="20210729 10:03:06.627" endtime="20210729 10:03:06.636"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:06.637" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:06.636" endtime="20210729 10:03:06.641"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:08.143" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:06.642" endtime="20210729 10:03:08.144"/>
</kw>
<status status="PASS" starttime="20210729 10:03:06.636" endtime="20210729 10:03:08.144"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:08.145" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:08.145" endtime="20210729 10:03:08.145"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:08.145" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:08.145" endtime="20210729 10:03:08.145"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:08.146" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:08.146" endtime="20210729 10:03:08.146"/>
</kw>
<msg timestamp="20210729 10:03:08.146" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:08.145" endtime="20210729 10:03:08.146"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:08.147" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:08.146" endtime="20210729 10:03:08.147"/>
</kw>
<status status="PASS" starttime="20210729 10:03:08.144" endtime="20210729 10:03:08.147"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:08.148" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:08.148" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:08.147" endtime="20210729 10:03:08.148"/>
</kw>
<status status="PASS" starttime="20210729 10:03:08.147" endtime="20210729 10:03:08.148"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:08.148" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:08.149" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:08.148" endtime="20210729 10:03:08.149"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:08.149" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:08.149" endtime="20210729 10:03:08.149"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:08.150" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:08.149" endtime="20210729 10:03:08.150"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:08.150" endtime="20210729 10:03:08.150"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:08.150" endtime="20210729 10:03:08.150"/>
</kw>
<status status="PASS" starttime="20210729 10:03:08.149" endtime="20210729 10:03:08.151"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:08.151" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:08.151" endtime="20210729 10:03:08.151"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:08.151" endtime="20210729 10:03:08.152"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:08.152" endtime="20210729 10:03:08.152"/>
</kw>
<status status="PASS" starttime="20210729 10:03:08.151" endtime="20210729 10:03:08.152"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:08.152" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:08.152" endtime="20210729 10:03:08.152"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:08.152" endtime="20210729 10:03:08.153"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:08.153" endtime="20210729 10:03:08.153"/>
</kw>
<status status="PASS" starttime="20210729 10:03:08.152" endtime="20210729 10:03:08.153"/>
</iter>
<status status="PASS" starttime="20210729 10:03:08.149" endtime="20210729 10:03:08.153"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:08.154" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:08.153" endtime="20210729 10:03:08.154"/>
</kw>
<status status="PASS" starttime="20210729 10:03:08.148" endtime="20210729 10:03:08.154"/>
</kw>
<status status="PASS" starttime="20210729 10:03:06.598" endtime="20210729 10:03:08.154"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=abcdefgh</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:08.156" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:08.156" endtime="20210729 10:03:08.157"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:08.157" level="INFO">${payload} = {'username': 'abcdefgh'}</msg>
<status status="PASS" starttime="20210729 10:03:08.157" endtime="20210729 10:03:08.157"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:08.166" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:08.166" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:08.158" endtime="20210729 10:03:08.166"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:08.166" endtime="20210729 10:03:08.166"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:08.158" endtime="20210729 10:03:08.166"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:08.157" endtime="20210729 10:03:08.167"/>
</for>
<status status="FAIL" starttime="20210729 10:03:08.155" endtime="20210729 10:03:08.167"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:08.154" endtime="20210729 10:03:08.167"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=abcdefgh</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:08.168" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:08.167" endtime="20210729 10:03:08.168"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:08.168" level="INFO">${payload} = {'username': 'abcdefgh'}</msg>
<status status="PASS" starttime="20210729 10:03:08.168" endtime="20210729 10:03:08.168"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:08.172" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:08.173" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:08.168" endtime="20210729 10:03:08.173"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:08.173" endtime="20210729 10:03:08.173"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:08.168" endtime="20210729 10:03:08.173"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:08.168" endtime="20210729 10:03:08.173"/>
</for>
<status status="FAIL" starttime="20210729 10:03:08.167" endtime="20210729 10:03:08.173"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:08.167" endtime="20210729 10:03:08.173"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=abcdefgh</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:08.174" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:08.174" endtime="20210729 10:03:08.174"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:08.174" level="INFO">${payload} = {'username': 'abcdefgh'}</msg>
<status status="PASS" starttime="20210729 10:03:08.174" endtime="20210729 10:03:08.174"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:08.178" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:08.179" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:08.175" endtime="20210729 10:03:08.179"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:08.179" endtime="20210729 10:03:08.179"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:08.175" endtime="20210729 10:03:08.179"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:08.175" endtime="20210729 10:03:08.179"/>
</for>
<status status="FAIL" starttime="20210729 10:03:08.173" endtime="20210729 10:03:08.179"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:08.173" endtime="20210729 10:03:08.179"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:08.154" endtime="20210729 10:03:08.179"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:08.183" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:08.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:08.195" level="INFO">${pids} = 22753
22760
22768</msg>
<status status="PASS" starttime="20210729 10:03:08.180" endtime="20210729 10:03:08.195"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:08.197" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:08.196" endtime="20210729 10:03:08.197"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:08.197" level="INFO">${pids} = ['22753', '22760', '22768']</msg>
<status status="PASS" starttime="20210729 10:03:08.197" endtime="20210729 10:03:08.198"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">22753</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:08.200" level="INFO">Running command 'kill 22753 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:08.198" endtime="20210729 10:03:08.201"/>
</kw>
<status status="PASS" starttime="20210729 10:03:08.198" endtime="20210729 10:03:08.201"/>
</iter>
<iter>
<var name="${pid}">22760</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:08.203" level="INFO">Running command 'kill 22760 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:08.201" endtime="20210729 10:03:08.203"/>
</kw>
<status status="PASS" starttime="20210729 10:03:08.201" endtime="20210729 10:03:08.203"/>
</iter>
<iter>
<var name="${pid}">22768</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:08.208" level="INFO">Running command 'kill 22768 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:08.204" endtime="20210729 10:03:08.208"/>
</kw>
<status status="PASS" starttime="20210729 10:03:08.203" endtime="20210729 10:03:08.208"/>
</iter>
<status status="PASS" starttime="20210729 10:03:08.198" endtime="20210729 10:03:08.208"/>
</for>
<status status="PASS" starttime="20210729 10:03:08.197" endtime="20210729 10:03:08.208"/>
</branch>
<status status="PASS" starttime="20210729 10:03:08.197" endtime="20210729 10:03:08.208"/>
</if>
<status status="PASS" starttime="20210729 10:03:08.180" endtime="20210729 10:03:08.208"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": 'abcdefgh'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:06.598" endtime="20210729 10:03:08.209">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t10" name="With Any Valid Token, Updating Username Of Each System User With abcdefghijklmnprstop Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:08.213" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:08.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:08.222" level="INFO">${pids} = 22797</msg>
<status status="PASS" starttime="20210729 10:03:08.210" endtime="20210729 10:03:08.222"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:08.223" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:08.223" endtime="20210729 10:03:08.223"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:08.224" level="INFO">${pids} = ['22797']</msg>
<status status="PASS" starttime="20210729 10:03:08.224" endtime="20210729 10:03:08.224"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">22797</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:08.227" level="INFO">Running command 'kill 22797 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:08.225" endtime="20210729 10:03:08.228"/>
</kw>
<status status="PASS" starttime="20210729 10:03:08.224" endtime="20210729 10:03:08.228"/>
</iter>
<status status="PASS" starttime="20210729 10:03:08.224" endtime="20210729 10:03:08.228"/>
</for>
<status status="PASS" starttime="20210729 10:03:08.223" endtime="20210729 10:03:08.228"/>
</branch>
<status status="PASS" starttime="20210729 10:03:08.223" endtime="20210729 10:03:08.228"/>
</if>
<status status="PASS" starttime="20210729 10:03:08.210" endtime="20210729 10:03:08.228"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:08.229" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:08.229" endtime="20210729 10:03:08.229"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:08.230" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:08.229" endtime="20210729 10:03:08.230"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:08.230" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:08.230" endtime="20210729 10:03:08.230"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:08.231" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:08.230" endtime="20210729 10:03:08.231"/>
</kw>
<msg timestamp="20210729 10:03:08.231" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:08.229" endtime="20210729 10:03:08.231"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:08.243" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:08.231" endtime="20210729 10:03:08.244"/>
</kw>
<status status="PASS" starttime="20210729 10:03:08.228" endtime="20210729 10:03:08.245"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:08.246" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:08.245" endtime="20210729 10:03:08.249"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:09.758" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:08.250" endtime="20210729 10:03:09.758"/>
</kw>
<status status="PASS" starttime="20210729 10:03:08.245" endtime="20210729 10:03:09.759"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:09.761" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:09.760" endtime="20210729 10:03:09.761"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:09.761" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:09.761" endtime="20210729 10:03:09.761"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:09.761" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:09.761" endtime="20210729 10:03:09.762"/>
</kw>
<msg timestamp="20210729 10:03:09.762" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:09.760" endtime="20210729 10:03:09.762"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:09.762" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:09.762" endtime="20210729 10:03:09.762"/>
</kw>
<status status="PASS" starttime="20210729 10:03:09.760" endtime="20210729 10:03:09.763"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:09.763" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:09.763" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:09.763" endtime="20210729 10:03:09.763"/>
</kw>
<status status="PASS" starttime="20210729 10:03:09.763" endtime="20210729 10:03:09.763"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:09.764" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:09.764" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:09.764" endtime="20210729 10:03:09.764"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:09.764" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:09.764" endtime="20210729 10:03:09.764"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:09.765" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:09.765" endtime="20210729 10:03:09.765"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:09.765" endtime="20210729 10:03:09.766"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:09.766" endtime="20210729 10:03:09.766"/>
</kw>
<status status="PASS" starttime="20210729 10:03:09.764" endtime="20210729 10:03:09.766"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:09.767" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:09.767" endtime="20210729 10:03:09.767"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:09.767" endtime="20210729 10:03:09.767"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:09.768" endtime="20210729 10:03:09.768"/>
</kw>
<status status="PASS" starttime="20210729 10:03:09.766" endtime="20210729 10:03:09.768"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:09.768" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:09.768" endtime="20210729 10:03:09.768"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:09.768" endtime="20210729 10:03:09.769"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:09.769" endtime="20210729 10:03:09.769"/>
</kw>
<status status="PASS" starttime="20210729 10:03:09.768" endtime="20210729 10:03:09.769"/>
</iter>
<status status="PASS" starttime="20210729 10:03:09.764" endtime="20210729 10:03:09.769"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:09.770" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:09.769" endtime="20210729 10:03:09.770"/>
</kw>
<status status="PASS" starttime="20210729 10:03:09.763" endtime="20210729 10:03:09.770"/>
</kw>
<status status="PASS" starttime="20210729 10:03:08.210" endtime="20210729 10:03:09.770"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=abcdefghijklmnprstop</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:09.771" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:09.771" endtime="20210729 10:03:09.771"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:09.771" level="INFO">${payload} = {'username': 'abcdefghijklmnprstop'}</msg>
<status status="PASS" starttime="20210729 10:03:09.771" endtime="20210729 10:03:09.771"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:09.780" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:09.781" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:09.772" endtime="20210729 10:03:09.781"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:09.781" endtime="20210729 10:03:09.781"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:09.772" endtime="20210729 10:03:09.781"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:09.771" endtime="20210729 10:03:09.781"/>
</for>
<status status="FAIL" starttime="20210729 10:03:09.770" endtime="20210729 10:03:09.781"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:09.770" endtime="20210729 10:03:09.781"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=abcdefghijklmnprstop</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:09.782" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:09.782" endtime="20210729 10:03:09.782"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:09.783" level="INFO">${payload} = {'username': 'abcdefghijklmnprstop'}</msg>
<status status="PASS" starttime="20210729 10:03:09.782" endtime="20210729 10:03:09.783"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:09.787" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:09.787" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:09.783" endtime="20210729 10:03:09.787"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:09.787" endtime="20210729 10:03:09.787"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:09.783" endtime="20210729 10:03:09.788"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:09.783" endtime="20210729 10:03:09.788"/>
</for>
<status status="FAIL" starttime="20210729 10:03:09.781" endtime="20210729 10:03:09.788"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:09.781" endtime="20210729 10:03:09.788"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=abcdefghijklmnprstop</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:09.791" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:09.790" endtime="20210729 10:03:09.791"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:09.791" level="INFO">${payload} = {'username': 'abcdefghijklmnprstop'}</msg>
<status status="PASS" starttime="20210729 10:03:09.791" endtime="20210729 10:03:09.791"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:09.798" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:09.798" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:09.792" endtime="20210729 10:03:09.798"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:09.798" endtime="20210729 10:03:09.798"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:09.792" endtime="20210729 10:03:09.798"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:09.791" endtime="20210729 10:03:09.798"/>
</for>
<status status="FAIL" starttime="20210729 10:03:09.789" endtime="20210729 10:03:09.798"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:09.789" endtime="20210729 10:03:09.798"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:09.770" endtime="20210729 10:03:09.798"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:09.802" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:09.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:09.810" level="INFO">${pids} = 22820
22827
22832</msg>
<status status="PASS" starttime="20210729 10:03:09.799" endtime="20210729 10:03:09.810"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:09.811" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:09.810" endtime="20210729 10:03:09.812"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:09.812" level="INFO">${pids} = ['22820', '22827', '22832']</msg>
<status status="PASS" starttime="20210729 10:03:09.812" endtime="20210729 10:03:09.812"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">22820</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:09.815" level="INFO">Running command 'kill 22820 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:09.813" endtime="20210729 10:03:09.816"/>
</kw>
<status status="PASS" starttime="20210729 10:03:09.812" endtime="20210729 10:03:09.816"/>
</iter>
<iter>
<var name="${pid}">22827</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:09.826" level="INFO">Running command 'kill 22827 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:09.816" endtime="20210729 10:03:09.827"/>
</kw>
<status status="PASS" starttime="20210729 10:03:09.816" endtime="20210729 10:03:09.827"/>
</iter>
<iter>
<var name="${pid}">22832</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:09.834" level="INFO">Running command 'kill 22832 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:09.828" endtime="20210729 10:03:09.837"/>
</kw>
<status status="PASS" starttime="20210729 10:03:09.827" endtime="20210729 10:03:09.837"/>
</iter>
<status status="PASS" starttime="20210729 10:03:09.812" endtime="20210729 10:03:09.837"/>
</for>
<status status="PASS" starttime="20210729 10:03:09.812" endtime="20210729 10:03:09.837"/>
</branch>
<status status="PASS" starttime="20210729 10:03:09.812" endtime="20210729 10:03:09.837"/>
</if>
<status status="PASS" starttime="20210729 10:03:09.799" endtime="20210729 10:03:09.838"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": 'abcdefghijklmnprstop'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:08.209" endtime="20210729 10:03:09.838">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t11" name="With Any Valid Token, Updating Username Of Each System User With hakan12 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:09.842" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:09.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:09.851" level="INFO">${pids} = 22861</msg>
<status status="PASS" starttime="20210729 10:03:09.840" endtime="20210729 10:03:09.851"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:09.852" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:09.851" endtime="20210729 10:03:09.852"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:09.853" level="INFO">${pids} = ['22861']</msg>
<status status="PASS" starttime="20210729 10:03:09.852" endtime="20210729 10:03:09.853"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">22861</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:09.858" level="INFO">Running command 'kill 22861 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:09.853" endtime="20210729 10:03:09.859"/>
</kw>
<status status="PASS" starttime="20210729 10:03:09.853" endtime="20210729 10:03:09.859"/>
</iter>
<status status="PASS" starttime="20210729 10:03:09.853" endtime="20210729 10:03:09.859"/>
</for>
<status status="PASS" starttime="20210729 10:03:09.852" endtime="20210729 10:03:09.859"/>
</branch>
<status status="PASS" starttime="20210729 10:03:09.852" endtime="20210729 10:03:09.859"/>
</if>
<status status="PASS" starttime="20210729 10:03:09.840" endtime="20210729 10:03:09.859"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:09.860" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:09.860" endtime="20210729 10:03:09.860"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:09.861" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:09.861" endtime="20210729 10:03:09.861"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:09.861" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:09.861" endtime="20210729 10:03:09.861"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:09.862" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:09.861" endtime="20210729 10:03:09.862"/>
</kw>
<msg timestamp="20210729 10:03:09.862" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:09.860" endtime="20210729 10:03:09.862"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:09.864" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:09.862" endtime="20210729 10:03:09.866"/>
</kw>
<status status="PASS" starttime="20210729 10:03:09.860" endtime="20210729 10:03:09.866"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:09.867" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:09.867" endtime="20210729 10:03:09.879"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:11.382" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:09.879" endtime="20210729 10:03:11.382"/>
</kw>
<status status="PASS" starttime="20210729 10:03:09.866" endtime="20210729 10:03:11.384"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:11.386" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:11.386" endtime="20210729 10:03:11.386"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:11.386" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:11.386" endtime="20210729 10:03:11.386"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:11.387" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:11.387" endtime="20210729 10:03:11.387"/>
</kw>
<msg timestamp="20210729 10:03:11.387" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:11.385" endtime="20210729 10:03:11.387"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:11.388" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:11.387" endtime="20210729 10:03:11.389"/>
</kw>
<status status="PASS" starttime="20210729 10:03:11.384" endtime="20210729 10:03:11.389"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:11.390" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:11.390" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:11.390" endtime="20210729 10:03:11.391"/>
</kw>
<status status="PASS" starttime="20210729 10:03:11.389" endtime="20210729 10:03:11.391"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:11.391" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:11.392" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:11.391" endtime="20210729 10:03:11.392"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:11.392" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:11.392" endtime="20210729 10:03:11.392"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:11.393" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:11.393" endtime="20210729 10:03:11.393"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:11.393" endtime="20210729 10:03:11.394"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:11.394" endtime="20210729 10:03:11.394"/>
</kw>
<status status="PASS" starttime="20210729 10:03:11.392" endtime="20210729 10:03:11.394"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:11.394" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:11.394" endtime="20210729 10:03:11.394"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:11.394" endtime="20210729 10:03:11.395"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:11.395" endtime="20210729 10:03:11.395"/>
</kw>
<status status="PASS" starttime="20210729 10:03:11.394" endtime="20210729 10:03:11.395"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:11.396" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:11.396" endtime="20210729 10:03:11.396"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:11.396" endtime="20210729 10:03:11.397"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:11.397" endtime="20210729 10:03:11.397"/>
</kw>
<status status="PASS" starttime="20210729 10:03:11.395" endtime="20210729 10:03:11.397"/>
</iter>
<status status="PASS" starttime="20210729 10:03:11.392" endtime="20210729 10:03:11.397"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:11.397" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:11.397" endtime="20210729 10:03:11.397"/>
</kw>
<status status="PASS" starttime="20210729 10:03:11.391" endtime="20210729 10:03:11.398"/>
</kw>
<status status="PASS" starttime="20210729 10:03:09.839" endtime="20210729 10:03:11.398"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=hakan12</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:11.399" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:11.398" endtime="20210729 10:03:11.399"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:11.399" level="INFO">${payload} = {'username': 'hakan12'}</msg>
<status status="PASS" starttime="20210729 10:03:11.399" endtime="20210729 10:03:11.399"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:11.409" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:11.409" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:11.399" endtime="20210729 10:03:11.409"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:11.409" endtime="20210729 10:03:11.409"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:11.399" endtime="20210729 10:03:11.409"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:11.399" endtime="20210729 10:03:11.409"/>
</for>
<status status="FAIL" starttime="20210729 10:03:11.398" endtime="20210729 10:03:11.409"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:11.398" endtime="20210729 10:03:11.410"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=hakan12</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:11.411" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:11.410" endtime="20210729 10:03:11.411"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:11.411" level="INFO">${payload} = {'username': 'hakan12'}</msg>
<status status="PASS" starttime="20210729 10:03:11.411" endtime="20210729 10:03:11.411"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:11.415" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:11.416" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:11.412" endtime="20210729 10:03:11.416"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:11.416" endtime="20210729 10:03:11.416"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:11.411" endtime="20210729 10:03:11.416"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:11.411" endtime="20210729 10:03:11.416"/>
</for>
<status status="FAIL" starttime="20210729 10:03:11.410" endtime="20210729 10:03:11.416"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:11.410" endtime="20210729 10:03:11.416"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=hakan12</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:11.417" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:11.417" endtime="20210729 10:03:11.417"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:11.418" level="INFO">${payload} = {'username': 'hakan12'}</msg>
<status status="PASS" starttime="20210729 10:03:11.418" endtime="20210729 10:03:11.418"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:11.424" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:11.424" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:11.418" endtime="20210729 10:03:11.424"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:11.424" endtime="20210729 10:03:11.424"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:11.418" endtime="20210729 10:03:11.424"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:11.418" endtime="20210729 10:03:11.424"/>
</for>
<status status="FAIL" starttime="20210729 10:03:11.416" endtime="20210729 10:03:11.425"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:11.416" endtime="20210729 10:03:11.425"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:11.398" endtime="20210729 10:03:11.425"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:11.431" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:11.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:11.441" level="INFO">${pids} = 22884
22891
22903</msg>
<status status="PASS" starttime="20210729 10:03:11.425" endtime="20210729 10:03:11.441"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:11.443" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:11.442" endtime="20210729 10:03:11.443"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:11.443" level="INFO">${pids} = ['22884', '22891', '22903']</msg>
<status status="PASS" starttime="20210729 10:03:11.443" endtime="20210729 10:03:11.444"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">22884</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:11.447" level="INFO">Running command 'kill 22884 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:11.444" endtime="20210729 10:03:11.447"/>
</kw>
<status status="PASS" starttime="20210729 10:03:11.444" endtime="20210729 10:03:11.447"/>
</iter>
<iter>
<var name="${pid}">22891</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:11.450" level="INFO">Running command 'kill 22891 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:11.447" endtime="20210729 10:03:11.450"/>
</kw>
<status status="PASS" starttime="20210729 10:03:11.447" endtime="20210729 10:03:11.450"/>
</iter>
<iter>
<var name="${pid}">22903</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:11.454" level="INFO">Running command 'kill 22903 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:11.451" endtime="20210729 10:03:11.455"/>
</kw>
<status status="PASS" starttime="20210729 10:03:11.450" endtime="20210729 10:03:11.455"/>
</iter>
<status status="PASS" starttime="20210729 10:03:11.444" endtime="20210729 10:03:11.455"/>
</for>
<status status="PASS" starttime="20210729 10:03:11.443" endtime="20210729 10:03:11.455"/>
</branch>
<status status="PASS" starttime="20210729 10:03:11.443" endtime="20210729 10:03:11.455"/>
</if>
<status status="PASS" starttime="20210729 10:03:11.425" endtime="20210729 10:03:11.456"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": 'hakan12'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:09.838" endtime="20210729 10:03:11.456">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t12" name="With Any Valid Token, Updating Username Of Each System User With hakan123 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:11.462" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:11.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:11.470" level="INFO">${pids} = 22932</msg>
<status status="PASS" starttime="20210729 10:03:11.459" endtime="20210729 10:03:11.470"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:11.470" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:11.470" endtime="20210729 10:03:11.470"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:11.472" level="INFO">${pids} = ['22932']</msg>
<status status="PASS" starttime="20210729 10:03:11.471" endtime="20210729 10:03:11.472"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">22932</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:11.478" level="INFO">Running command 'kill 22932 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:11.472" endtime="20210729 10:03:11.479"/>
</kw>
<status status="PASS" starttime="20210729 10:03:11.472" endtime="20210729 10:03:11.479"/>
</iter>
<status status="PASS" starttime="20210729 10:03:11.472" endtime="20210729 10:03:11.479"/>
</for>
<status status="PASS" starttime="20210729 10:03:11.471" endtime="20210729 10:03:11.479"/>
</branch>
<status status="PASS" starttime="20210729 10:03:11.471" endtime="20210729 10:03:11.479"/>
</if>
<status status="PASS" starttime="20210729 10:03:11.459" endtime="20210729 10:03:11.479"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:11.480" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:11.480" endtime="20210729 10:03:11.480"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:11.481" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:11.481" endtime="20210729 10:03:11.481"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:11.481" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:11.481" endtime="20210729 10:03:11.481"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:11.482" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:11.481" endtime="20210729 10:03:11.482"/>
</kw>
<msg timestamp="20210729 10:03:11.482" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:11.480" endtime="20210729 10:03:11.482"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:11.486" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:11.482" endtime="20210729 10:03:11.491"/>
</kw>
<status status="PASS" starttime="20210729 10:03:11.479" endtime="20210729 10:03:11.492"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:11.493" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:11.492" endtime="20210729 10:03:11.498"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:13.000" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:11.498" endtime="20210729 10:03:13.000"/>
</kw>
<status status="PASS" starttime="20210729 10:03:11.492" endtime="20210729 10:03:13.000"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:13.001" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:13.001" endtime="20210729 10:03:13.001"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:13.002" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:13.001" endtime="20210729 10:03:13.002"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:13.002" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:13.002" endtime="20210729 10:03:13.002"/>
</kw>
<msg timestamp="20210729 10:03:13.002" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:13.001" endtime="20210729 10:03:13.002"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:13.003" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:13.002" endtime="20210729 10:03:13.003"/>
</kw>
<status status="PASS" starttime="20210729 10:03:13.000" endtime="20210729 10:03:13.003"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:13.004" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:13.004" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:13.004" endtime="20210729 10:03:13.004"/>
</kw>
<status status="PASS" starttime="20210729 10:03:13.003" endtime="20210729 10:03:13.004"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:13.005" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:13.005" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:13.004" endtime="20210729 10:03:13.005"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:13.005" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:13.005" endtime="20210729 10:03:13.005"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:13.006" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:13.006" endtime="20210729 10:03:13.006"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:13.006" endtime="20210729 10:03:13.008"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:13.008" endtime="20210729 10:03:13.008"/>
</kw>
<status status="PASS" starttime="20210729 10:03:13.005" endtime="20210729 10:03:13.008"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:13.008" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:13.008" endtime="20210729 10:03:13.008"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:13.008" endtime="20210729 10:03:13.009"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:13.009" endtime="20210729 10:03:13.009"/>
</kw>
<status status="PASS" starttime="20210729 10:03:13.008" endtime="20210729 10:03:13.009"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:13.010" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:13.009" endtime="20210729 10:03:13.010"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:13.010" endtime="20210729 10:03:13.010"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:13.010" endtime="20210729 10:03:13.011"/>
</kw>
<status status="PASS" starttime="20210729 10:03:13.009" endtime="20210729 10:03:13.011"/>
</iter>
<status status="PASS" starttime="20210729 10:03:13.005" endtime="20210729 10:03:13.011"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:13.011" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:13.011" endtime="20210729 10:03:13.011"/>
</kw>
<status status="PASS" starttime="20210729 10:03:13.004" endtime="20210729 10:03:13.011"/>
</kw>
<status status="PASS" starttime="20210729 10:03:11.458" endtime="20210729 10:03:13.011"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=hakan123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:13.012" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:13.012" endtime="20210729 10:03:13.013"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:13.013" level="INFO">${payload} = {'username': 'hakan123'}</msg>
<status status="PASS" starttime="20210729 10:03:13.013" endtime="20210729 10:03:13.013"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:13.023" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:13.024" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:13.013" endtime="20210729 10:03:13.024"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:13.024" endtime="20210729 10:03:13.024"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:13.013" endtime="20210729 10:03:13.024"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:13.013" endtime="20210729 10:03:13.024"/>
</for>
<status status="FAIL" starttime="20210729 10:03:13.012" endtime="20210729 10:03:13.024"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:13.012" endtime="20210729 10:03:13.024"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=hakan123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:13.026" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:13.025" endtime="20210729 10:03:13.026"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:13.026" level="INFO">${payload} = {'username': 'hakan123'}</msg>
<status status="PASS" starttime="20210729 10:03:13.026" endtime="20210729 10:03:13.026"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:13.030" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:13.030" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:13.027" endtime="20210729 10:03:13.030"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:13.031" endtime="20210729 10:03:13.031"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:13.026" endtime="20210729 10:03:13.031"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:13.026" endtime="20210729 10:03:13.031"/>
</for>
<status status="FAIL" starttime="20210729 10:03:13.025" endtime="20210729 10:03:13.031"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:13.025" endtime="20210729 10:03:13.031"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=hakan123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:13.032" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:13.032" endtime="20210729 10:03:13.032"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:13.032" level="INFO">${payload} = {'username': 'hakan123'}</msg>
<status status="PASS" starttime="20210729 10:03:13.032" endtime="20210729 10:03:13.032"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:13.035" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:13.036" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:13.032" endtime="20210729 10:03:13.036"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:13.036" endtime="20210729 10:03:13.036"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:13.032" endtime="20210729 10:03:13.036"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:13.032" endtime="20210729 10:03:13.036"/>
</for>
<status status="FAIL" starttime="20210729 10:03:13.031" endtime="20210729 10:03:13.036"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:13.031" endtime="20210729 10:03:13.036"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:13.012" endtime="20210729 10:03:13.036"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:13.040" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:13.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:13.051" level="INFO">${pids} = 22955
22962
22966</msg>
<status status="PASS" starttime="20210729 10:03:13.037" endtime="20210729 10:03:13.051"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:13.053" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:13.051" endtime="20210729 10:03:13.053"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:13.053" level="INFO">${pids} = ['22955', '22962', '22966']</msg>
<status status="PASS" starttime="20210729 10:03:13.053" endtime="20210729 10:03:13.053"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">22955</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:13.058" level="INFO">Running command 'kill 22955 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:13.053" endtime="20210729 10:03:13.058"/>
</kw>
<status status="PASS" starttime="20210729 10:03:13.053" endtime="20210729 10:03:13.058"/>
</iter>
<iter>
<var name="${pid}">22962</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:13.062" level="INFO">Running command 'kill 22962 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:13.059" endtime="20210729 10:03:13.063"/>
</kw>
<status status="PASS" starttime="20210729 10:03:13.059" endtime="20210729 10:03:13.063"/>
</iter>
<iter>
<var name="${pid}">22966</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:13.066" level="INFO">Running command 'kill 22966 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:13.064" endtime="20210729 10:03:13.066"/>
</kw>
<status status="PASS" starttime="20210729 10:03:13.063" endtime="20210729 10:03:13.067"/>
</iter>
<status status="PASS" starttime="20210729 10:03:13.053" endtime="20210729 10:03:13.067"/>
</for>
<status status="PASS" starttime="20210729 10:03:13.053" endtime="20210729 10:03:13.067"/>
</branch>
<status status="PASS" starttime="20210729 10:03:13.053" endtime="20210729 10:03:13.067"/>
</if>
<status status="PASS" starttime="20210729 10:03:13.037" endtime="20210729 10:03:13.067"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": 'hakan123'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:11.457" endtime="20210729 10:03:13.067">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t13" name="With Any Valid Token, Updating Username Of Each System User With hakan123456789123456789 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:13.076" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:13.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:13.088" level="INFO">${pids} = 22995</msg>
<status status="PASS" starttime="20210729 10:03:13.069" endtime="20210729 10:03:13.088"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:13.089" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:13.088" endtime="20210729 10:03:13.090"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:13.091" level="INFO">${pids} = ['22995']</msg>
<status status="PASS" starttime="20210729 10:03:13.090" endtime="20210729 10:03:13.091"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">22995</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:13.102" level="INFO">Running command 'kill 22995 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:13.091" endtime="20210729 10:03:13.104"/>
</kw>
<status status="PASS" starttime="20210729 10:03:13.091" endtime="20210729 10:03:13.104"/>
</iter>
<status status="PASS" starttime="20210729 10:03:13.091" endtime="20210729 10:03:13.104"/>
</for>
<status status="PASS" starttime="20210729 10:03:13.090" endtime="20210729 10:03:13.104"/>
</branch>
<status status="PASS" starttime="20210729 10:03:13.090" endtime="20210729 10:03:13.104"/>
</if>
<status status="PASS" starttime="20210729 10:03:13.068" endtime="20210729 10:03:13.105"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:13.106" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:13.105" endtime="20210729 10:03:13.106"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:13.107" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:13.106" endtime="20210729 10:03:13.107"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:13.107" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:13.107" endtime="20210729 10:03:13.107"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:13.108" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:13.107" endtime="20210729 10:03:13.108"/>
</kw>
<msg timestamp="20210729 10:03:13.108" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:13.106" endtime="20210729 10:03:13.108"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:13.111" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:13.108" endtime="20210729 10:03:13.112"/>
</kw>
<status status="PASS" starttime="20210729 10:03:13.105" endtime="20210729 10:03:13.113"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:13.114" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:13.113" endtime="20210729 10:03:13.120"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:14.623" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:13.121" endtime="20210729 10:03:14.623"/>
</kw>
<status status="PASS" starttime="20210729 10:03:13.113" endtime="20210729 10:03:14.624"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:14.625" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:14.625" endtime="20210729 10:03:14.625"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:14.626" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:14.625" endtime="20210729 10:03:14.626"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:14.626" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:14.626" endtime="20210729 10:03:14.626"/>
</kw>
<msg timestamp="20210729 10:03:14.627" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:14.625" endtime="20210729 10:03:14.627"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:14.627" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:14.627" endtime="20210729 10:03:14.628"/>
</kw>
<status status="PASS" starttime="20210729 10:03:14.624" endtime="20210729 10:03:14.628"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:14.628" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:14.628" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:14.628" endtime="20210729 10:03:14.628"/>
</kw>
<status status="PASS" starttime="20210729 10:03:14.628" endtime="20210729 10:03:14.628"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:14.629" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:14.629" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:14.629" endtime="20210729 10:03:14.629"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:14.629" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:14.629" endtime="20210729 10:03:14.629"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:14.630" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:14.630" endtime="20210729 10:03:14.630"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:14.630" endtime="20210729 10:03:14.631"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:14.631" endtime="20210729 10:03:14.631"/>
</kw>
<status status="PASS" starttime="20210729 10:03:14.630" endtime="20210729 10:03:14.631"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:14.632" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:14.631" endtime="20210729 10:03:14.632"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:14.632" endtime="20210729 10:03:14.633"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:14.633" endtime="20210729 10:03:14.633"/>
</kw>
<status status="PASS" starttime="20210729 10:03:14.631" endtime="20210729 10:03:14.633"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:14.633" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:14.633" endtime="20210729 10:03:14.633"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:14.633" endtime="20210729 10:03:14.634"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:14.634" endtime="20210729 10:03:14.634"/>
</kw>
<status status="PASS" starttime="20210729 10:03:14.633" endtime="20210729 10:03:14.634"/>
</iter>
<status status="PASS" starttime="20210729 10:03:14.629" endtime="20210729 10:03:14.634"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:14.635" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:14.634" endtime="20210729 10:03:14.635"/>
</kw>
<status status="PASS" starttime="20210729 10:03:14.629" endtime="20210729 10:03:14.635"/>
</kw>
<status status="PASS" starttime="20210729 10:03:13.068" endtime="20210729 10:03:14.635"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=hakan123456789123456789</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:14.636" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:14.636" endtime="20210729 10:03:14.636"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:14.637" level="INFO">${payload} = {'username': 'hakan123456789123456789'}</msg>
<status status="PASS" starttime="20210729 10:03:14.636" endtime="20210729 10:03:14.637"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:14.644" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:14.645" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:14.637" endtime="20210729 10:03:14.645"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:14.645" endtime="20210729 10:03:14.645"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:14.637" endtime="20210729 10:03:14.645"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:14.637" endtime="20210729 10:03:14.645"/>
</for>
<status status="FAIL" starttime="20210729 10:03:14.635" endtime="20210729 10:03:14.645"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:14.635" endtime="20210729 10:03:14.645"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=hakan123456789123456789</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:14.647" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:14.646" endtime="20210729 10:03:14.647"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:14.647" level="INFO">${payload} = {'username': 'hakan123456789123456789'}</msg>
<status status="PASS" starttime="20210729 10:03:14.647" endtime="20210729 10:03:14.647"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:14.651" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:14.651" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:14.647" endtime="20210729 10:03:14.651"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:14.651" endtime="20210729 10:03:14.651"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:14.647" endtime="20210729 10:03:14.651"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:14.647" endtime="20210729 10:03:14.651"/>
</for>
<status status="FAIL" starttime="20210729 10:03:14.646" endtime="20210729 10:03:14.652"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:14.645" endtime="20210729 10:03:14.652"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=hakan123456789123456789</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:14.653" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:14.653" endtime="20210729 10:03:14.653"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:14.653" level="INFO">${payload} = {'username': 'hakan123456789123456789'}</msg>
<status status="PASS" starttime="20210729 10:03:14.653" endtime="20210729 10:03:14.653"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:14.658" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:14.659" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:14.654" endtime="20210729 10:03:14.659"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:14.659" endtime="20210729 10:03:14.659"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:14.653" endtime="20210729 10:03:14.659"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:14.653" endtime="20210729 10:03:14.659"/>
</for>
<status status="FAIL" starttime="20210729 10:03:14.652" endtime="20210729 10:03:14.659"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:14.652" endtime="20210729 10:03:14.659"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:14.635" endtime="20210729 10:03:14.659"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:14.663" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:14.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:14.673" level="INFO">${pids} = 23018
23025
23030</msg>
<status status="PASS" starttime="20210729 10:03:14.660" endtime="20210729 10:03:14.673"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:14.674" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:14.673" endtime="20210729 10:03:14.674"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:14.674" level="INFO">${pids} = ['23018', '23025', '23030']</msg>
<status status="PASS" starttime="20210729 10:03:14.674" endtime="20210729 10:03:14.674"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23018</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:14.677" level="INFO">Running command 'kill 23018 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:14.675" endtime="20210729 10:03:14.678"/>
</kw>
<status status="PASS" starttime="20210729 10:03:14.675" endtime="20210729 10:03:14.678"/>
</iter>
<iter>
<var name="${pid}">23025</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:14.680" level="INFO">Running command 'kill 23025 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:14.678" endtime="20210729 10:03:14.681"/>
</kw>
<status status="PASS" starttime="20210729 10:03:14.678" endtime="20210729 10:03:14.681"/>
</iter>
<iter>
<var name="${pid}">23030</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:14.684" level="INFO">Running command 'kill 23030 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:14.681" endtime="20210729 10:03:14.685"/>
</kw>
<status status="PASS" starttime="20210729 10:03:14.681" endtime="20210729 10:03:14.685"/>
</iter>
<status status="PASS" starttime="20210729 10:03:14.675" endtime="20210729 10:03:14.685"/>
</for>
<status status="PASS" starttime="20210729 10:03:14.674" endtime="20210729 10:03:14.685"/>
</branch>
<status status="PASS" starttime="20210729 10:03:14.674" endtime="20210729 10:03:14.685"/>
</if>
<status status="PASS" starttime="20210729 10:03:14.660" endtime="20210729 10:03:14.685"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": 'hakan123456789123456789'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:13.067" endtime="20210729 10:03:14.685">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t14" name="With Any Valid Token, Updating Username Of Each System User With #¤%123! Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:14.691" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:14.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:14.700" level="INFO">${pids} = 23059</msg>
<status status="PASS" starttime="20210729 10:03:14.687" endtime="20210729 10:03:14.700"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:14.701" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:14.701" endtime="20210729 10:03:14.701"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:14.702" level="INFO">${pids} = ['23059']</msg>
<status status="PASS" starttime="20210729 10:03:14.701" endtime="20210729 10:03:14.702"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23059</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:14.707" level="INFO">Running command 'kill 23059 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:14.702" endtime="20210729 10:03:14.707"/>
</kw>
<status status="PASS" starttime="20210729 10:03:14.702" endtime="20210729 10:03:14.707"/>
</iter>
<status status="PASS" starttime="20210729 10:03:14.702" endtime="20210729 10:03:14.707"/>
</for>
<status status="PASS" starttime="20210729 10:03:14.701" endtime="20210729 10:03:14.707"/>
</branch>
<status status="PASS" starttime="20210729 10:03:14.701" endtime="20210729 10:03:14.707"/>
</if>
<status status="PASS" starttime="20210729 10:03:14.687" endtime="20210729 10:03:14.708"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:14.709" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:14.708" endtime="20210729 10:03:14.709"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:14.709" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:14.709" endtime="20210729 10:03:14.709"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:14.709" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:14.709" endtime="20210729 10:03:14.709"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:14.710" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:14.710" endtime="20210729 10:03:14.710"/>
</kw>
<msg timestamp="20210729 10:03:14.710" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:14.709" endtime="20210729 10:03:14.710"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:14.719" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:14.710" endtime="20210729 10:03:14.721"/>
</kw>
<status status="PASS" starttime="20210729 10:03:14.708" endtime="20210729 10:03:14.722"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:14.723" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:14.723" endtime="20210729 10:03:14.727"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:16.228" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:14.728" endtime="20210729 10:03:16.228"/>
</kw>
<status status="PASS" starttime="20210729 10:03:14.722" endtime="20210729 10:03:16.229"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:16.230" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:16.229" endtime="20210729 10:03:16.230"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:16.230" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:16.230" endtime="20210729 10:03:16.230"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:16.230" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:16.230" endtime="20210729 10:03:16.230"/>
</kw>
<msg timestamp="20210729 10:03:16.230" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:16.229" endtime="20210729 10:03:16.230"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:16.231" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:16.231" endtime="20210729 10:03:16.231"/>
</kw>
<status status="PASS" starttime="20210729 10:03:16.229" endtime="20210729 10:03:16.231"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:16.232" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:16.232" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:16.232" endtime="20210729 10:03:16.232"/>
</kw>
<status status="PASS" starttime="20210729 10:03:16.231" endtime="20210729 10:03:16.232"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:16.233" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:16.233" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:16.232" endtime="20210729 10:03:16.233"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:16.233" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:16.233" endtime="20210729 10:03:16.233"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:16.234" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:16.233" endtime="20210729 10:03:16.234"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:16.234" endtime="20210729 10:03:16.235"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:16.235" endtime="20210729 10:03:16.235"/>
</kw>
<status status="PASS" starttime="20210729 10:03:16.233" endtime="20210729 10:03:16.235"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:16.235" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:16.235" endtime="20210729 10:03:16.235"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:16.236" endtime="20210729 10:03:16.236"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:16.236" endtime="20210729 10:03:16.237"/>
</kw>
<status status="PASS" starttime="20210729 10:03:16.235" endtime="20210729 10:03:16.237"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:16.237" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:16.237" endtime="20210729 10:03:16.237"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:16.237" endtime="20210729 10:03:16.238"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:16.238" endtime="20210729 10:03:16.238"/>
</kw>
<status status="PASS" starttime="20210729 10:03:16.237" endtime="20210729 10:03:16.238"/>
</iter>
<status status="PASS" starttime="20210729 10:03:16.233" endtime="20210729 10:03:16.238"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:16.238" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:16.238" endtime="20210729 10:03:16.238"/>
</kw>
<status status="PASS" starttime="20210729 10:03:16.232" endtime="20210729 10:03:16.239"/>
</kw>
<status status="PASS" starttime="20210729 10:03:14.686" endtime="20210729 10:03:16.239"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤%123!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:16.240" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:16.239" endtime="20210729 10:03:16.240"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:16.240" level="INFO">${payload} = {'username': '#¤%123!'}</msg>
<status status="PASS" starttime="20210729 10:03:16.240" endtime="20210729 10:03:16.240"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:16.249" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:16.249" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:16.240" endtime="20210729 10:03:16.249"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:16.249" endtime="20210729 10:03:16.249"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:16.240" endtime="20210729 10:03:16.249"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:16.240" endtime="20210729 10:03:16.249"/>
</for>
<status status="FAIL" starttime="20210729 10:03:16.239" endtime="20210729 10:03:16.250"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:16.239" endtime="20210729 10:03:16.250"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤%123!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:16.251" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:16.251" endtime="20210729 10:03:16.251"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:16.252" level="INFO">${payload} = {'username': '#¤%123!'}</msg>
<status status="PASS" starttime="20210729 10:03:16.251" endtime="20210729 10:03:16.252"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:16.257" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:16.257" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:16.252" endtime="20210729 10:03:16.257"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:16.257" endtime="20210729 10:03:16.257"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:16.252" endtime="20210729 10:03:16.257"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:16.252" endtime="20210729 10:03:16.257"/>
</for>
<status status="FAIL" starttime="20210729 10:03:16.250" endtime="20210729 10:03:16.257"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:16.250" endtime="20210729 10:03:16.257"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤%123!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:16.258" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:16.258" endtime="20210729 10:03:16.258"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:16.259" level="INFO">${payload} = {'username': '#¤%123!'}</msg>
<status status="PASS" starttime="20210729 10:03:16.259" endtime="20210729 10:03:16.259"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:16.263" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:16.263" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:16.259" endtime="20210729 10:03:16.263"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:16.263" endtime="20210729 10:03:16.263"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:16.259" endtime="20210729 10:03:16.263"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:16.259" endtime="20210729 10:03:16.263"/>
</for>
<status status="FAIL" starttime="20210729 10:03:16.258" endtime="20210729 10:03:16.264"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:16.258" endtime="20210729 10:03:16.264"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:16.239" endtime="20210729 10:03:16.264"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:16.268" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:16.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:16.280" level="INFO">${pids} = 23082
23089
23099</msg>
<status status="PASS" starttime="20210729 10:03:16.264" endtime="20210729 10:03:16.280"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:16.281" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:16.280" endtime="20210729 10:03:16.281"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:16.282" level="INFO">${pids} = ['23082', '23089', '23099']</msg>
<status status="PASS" starttime="20210729 10:03:16.282" endtime="20210729 10:03:16.282"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23082</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:16.285" level="INFO">Running command 'kill 23082 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:16.282" endtime="20210729 10:03:16.287"/>
</kw>
<status status="PASS" starttime="20210729 10:03:16.282" endtime="20210729 10:03:16.287"/>
</iter>
<iter>
<var name="${pid}">23089</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:16.292" level="INFO">Running command 'kill 23089 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:16.288" endtime="20210729 10:03:16.292"/>
</kw>
<status status="PASS" starttime="20210729 10:03:16.288" endtime="20210729 10:03:16.292"/>
</iter>
<iter>
<var name="${pid}">23099</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:16.295" level="INFO">Running command 'kill 23099 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:16.293" endtime="20210729 10:03:16.295"/>
</kw>
<status status="PASS" starttime="20210729 10:03:16.293" endtime="20210729 10:03:16.296"/>
</iter>
<status status="PASS" starttime="20210729 10:03:16.282" endtime="20210729 10:03:16.296"/>
</for>
<status status="PASS" starttime="20210729 10:03:16.282" endtime="20210729 10:03:16.296"/>
</branch>
<status status="PASS" starttime="20210729 10:03:16.281" endtime="20210729 10:03:16.296"/>
</if>
<status status="PASS" starttime="20210729 10:03:16.264" endtime="20210729 10:03:16.296"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": '#¤%123!'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:14.686" endtime="20210729 10:03:16.296">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t15" name="With Any Valid Token, Updating Username Of Each System User With #¤%123!&amp; Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:16.301" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:16.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:16.309" level="INFO">${pids} = 23128</msg>
<status status="PASS" starttime="20210729 10:03:16.298" endtime="20210729 10:03:16.309"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:16.310" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:16.310" endtime="20210729 10:03:16.310"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:16.311" level="INFO">${pids} = ['23128']</msg>
<status status="PASS" starttime="20210729 10:03:16.311" endtime="20210729 10:03:16.311"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23128</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:16.315" level="INFO">Running command 'kill 23128 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:16.311" endtime="20210729 10:03:16.315"/>
</kw>
<status status="PASS" starttime="20210729 10:03:16.311" endtime="20210729 10:03:16.315"/>
</iter>
<status status="PASS" starttime="20210729 10:03:16.311" endtime="20210729 10:03:16.315"/>
</for>
<status status="PASS" starttime="20210729 10:03:16.311" endtime="20210729 10:03:16.315"/>
</branch>
<status status="PASS" starttime="20210729 10:03:16.310" endtime="20210729 10:03:16.315"/>
</if>
<status status="PASS" starttime="20210729 10:03:16.298" endtime="20210729 10:03:16.316"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:16.317" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:16.316" endtime="20210729 10:03:16.317"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:16.317" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:16.317" endtime="20210729 10:03:16.317"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:16.317" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:16.317" endtime="20210729 10:03:16.318"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:16.318" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:16.318" endtime="20210729 10:03:16.318"/>
</kw>
<msg timestamp="20210729 10:03:16.318" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:16.317" endtime="20210729 10:03:16.318"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:16.321" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:16.318" endtime="20210729 10:03:16.323"/>
</kw>
<status status="PASS" starttime="20210729 10:03:16.316" endtime="20210729 10:03:16.323"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:16.325" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:16.324" endtime="20210729 10:03:16.331"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:17.846" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:16.331" endtime="20210729 10:03:17.846"/>
</kw>
<status status="PASS" starttime="20210729 10:03:16.324" endtime="20210729 10:03:17.846"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:17.848" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:17.847" endtime="20210729 10:03:17.848"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:17.848" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:17.848" endtime="20210729 10:03:17.848"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:17.848" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:17.848" endtime="20210729 10:03:17.848"/>
</kw>
<msg timestamp="20210729 10:03:17.849" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:17.847" endtime="20210729 10:03:17.849"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:17.849" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:17.849" endtime="20210729 10:03:17.849"/>
</kw>
<status status="PASS" starttime="20210729 10:03:17.847" endtime="20210729 10:03:17.849"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:17.850" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:17.850" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:17.850" endtime="20210729 10:03:17.850"/>
</kw>
<status status="PASS" starttime="20210729 10:03:17.850" endtime="20210729 10:03:17.850"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:17.851" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:17.851" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:17.851" endtime="20210729 10:03:17.851"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:17.851" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:17.851" endtime="20210729 10:03:17.851"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:17.852" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:17.852" endtime="20210729 10:03:17.852"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:17.852" endtime="20210729 10:03:17.853"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:17.853" endtime="20210729 10:03:17.853"/>
</kw>
<status status="PASS" starttime="20210729 10:03:17.851" endtime="20210729 10:03:17.853"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:17.853" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:17.853" endtime="20210729 10:03:17.853"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:17.853" endtime="20210729 10:03:17.854"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:17.854" endtime="20210729 10:03:17.854"/>
</kw>
<status status="PASS" starttime="20210729 10:03:17.853" endtime="20210729 10:03:17.854"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:17.855" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:17.854" endtime="20210729 10:03:17.855"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:17.855" endtime="20210729 10:03:17.857"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:17.857" endtime="20210729 10:03:17.858"/>
</kw>
<status status="PASS" starttime="20210729 10:03:17.854" endtime="20210729 10:03:17.858"/>
</iter>
<status status="PASS" starttime="20210729 10:03:17.851" endtime="20210729 10:03:17.858"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:17.859" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:17.858" endtime="20210729 10:03:17.859"/>
</kw>
<status status="PASS" starttime="20210729 10:03:17.850" endtime="20210729 10:03:17.859"/>
</kw>
<status status="PASS" starttime="20210729 10:03:16.297" endtime="20210729 10:03:17.859"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤%123!&amp;</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:17.860" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:17.860" endtime="20210729 10:03:17.860"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:17.861" level="INFO">${payload} = {'username': '#¤%123!&amp;'}</msg>
<status status="PASS" starttime="20210729 10:03:17.861" endtime="20210729 10:03:17.861"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:17.869" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:17.870" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:17.861" endtime="20210729 10:03:17.870"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:17.870" endtime="20210729 10:03:17.870"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:17.861" endtime="20210729 10:03:17.870"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:17.861" endtime="20210729 10:03:17.870"/>
</for>
<status status="FAIL" starttime="20210729 10:03:17.860" endtime="20210729 10:03:17.870"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:17.859" endtime="20210729 10:03:17.870"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤%123!&amp;</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:17.872" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:17.871" endtime="20210729 10:03:17.872"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:17.872" level="INFO">${payload} = {'username': '#¤%123!&amp;'}</msg>
<status status="PASS" starttime="20210729 10:03:17.872" endtime="20210729 10:03:17.872"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:17.876" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:17.876" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:17.872" endtime="20210729 10:03:17.876"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:17.876" endtime="20210729 10:03:17.876"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:17.872" endtime="20210729 10:03:17.876"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:17.872" endtime="20210729 10:03:17.877"/>
</for>
<status status="FAIL" starttime="20210729 10:03:17.871" endtime="20210729 10:03:17.877"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:17.871" endtime="20210729 10:03:17.877"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤%123!&amp;</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:17.878" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:17.877" endtime="20210729 10:03:17.878"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:17.878" level="INFO">${payload} = {'username': '#¤%123!&amp;'}</msg>
<status status="PASS" starttime="20210729 10:03:17.878" endtime="20210729 10:03:17.878"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:17.882" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:17.882" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:17.878" endtime="20210729 10:03:17.882"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:17.882" endtime="20210729 10:03:17.882"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:17.878" endtime="20210729 10:03:17.882"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:17.878" endtime="20210729 10:03:17.882"/>
</for>
<status status="FAIL" starttime="20210729 10:03:17.877" endtime="20210729 10:03:17.882"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:17.877" endtime="20210729 10:03:17.882"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:17.859" endtime="20210729 10:03:17.882"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:17.886" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:17.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:17.899" level="INFO">${pids} = 23151
23158
23162</msg>
<status status="PASS" starttime="20210729 10:03:17.883" endtime="20210729 10:03:17.899"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:17.901" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:17.900" endtime="20210729 10:03:17.901"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:17.901" level="INFO">${pids} = ['23151', '23158', '23162']</msg>
<status status="PASS" starttime="20210729 10:03:17.901" endtime="20210729 10:03:17.901"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23151</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:17.904" level="INFO">Running command 'kill 23151 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:17.902" endtime="20210729 10:03:17.904"/>
</kw>
<status status="PASS" starttime="20210729 10:03:17.901" endtime="20210729 10:03:17.905"/>
</iter>
<iter>
<var name="${pid}">23158</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:17.908" level="INFO">Running command 'kill 23158 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:17.905" endtime="20210729 10:03:17.908"/>
</kw>
<status status="PASS" starttime="20210729 10:03:17.905" endtime="20210729 10:03:17.909"/>
</iter>
<iter>
<var name="${pid}">23162</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:17.911" level="INFO">Running command 'kill 23162 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:17.909" endtime="20210729 10:03:17.912"/>
</kw>
<status status="PASS" starttime="20210729 10:03:17.909" endtime="20210729 10:03:17.912"/>
</iter>
<status status="PASS" starttime="20210729 10:03:17.901" endtime="20210729 10:03:17.912"/>
</for>
<status status="PASS" starttime="20210729 10:03:17.901" endtime="20210729 10:03:17.912"/>
</branch>
<status status="PASS" starttime="20210729 10:03:17.901" endtime="20210729 10:03:17.912"/>
</if>
<status status="PASS" starttime="20210729 10:03:17.883" endtime="20210729 10:03:17.912"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": '#¤%123!&amp;'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:16.297" endtime="20210729 10:03:17.912">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t16" name="With Any Valid Token, Updating Username Of Each System User With #¤%123!&amp;7683##()=?@#¤%&amp;34567 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:17.916" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:17.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:17.927" level="INFO">${pids} = 23191</msg>
<status status="PASS" starttime="20210729 10:03:17.914" endtime="20210729 10:03:17.927"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:17.928" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:17.927" endtime="20210729 10:03:17.928"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:17.928" level="INFO">${pids} = ['23191']</msg>
<status status="PASS" starttime="20210729 10:03:17.928" endtime="20210729 10:03:17.928"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23191</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:17.931" level="INFO">Running command 'kill 23191 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:17.929" endtime="20210729 10:03:17.932"/>
</kw>
<status status="PASS" starttime="20210729 10:03:17.929" endtime="20210729 10:03:17.932"/>
</iter>
<status status="PASS" starttime="20210729 10:03:17.928" endtime="20210729 10:03:17.932"/>
</for>
<status status="PASS" starttime="20210729 10:03:17.928" endtime="20210729 10:03:17.932"/>
</branch>
<status status="PASS" starttime="20210729 10:03:17.928" endtime="20210729 10:03:17.932"/>
</if>
<status status="PASS" starttime="20210729 10:03:17.914" endtime="20210729 10:03:17.932"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:17.933" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:17.933" endtime="20210729 10:03:17.933"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:17.933" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:17.933" endtime="20210729 10:03:17.933"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:17.934" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:17.933" endtime="20210729 10:03:17.934"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:17.934" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:17.934" endtime="20210729 10:03:17.934"/>
</kw>
<msg timestamp="20210729 10:03:17.934" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:17.933" endtime="20210729 10:03:17.934"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:17.944" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:17.935" endtime="20210729 10:03:17.946"/>
</kw>
<status status="PASS" starttime="20210729 10:03:17.932" endtime="20210729 10:03:17.946"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:17.948" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:17.947" endtime="20210729 10:03:17.951"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:19.455" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:17.952" endtime="20210729 10:03:19.455"/>
</kw>
<status status="PASS" starttime="20210729 10:03:17.947" endtime="20210729 10:03:19.455"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:19.458" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:19.457" endtime="20210729 10:03:19.458"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:19.458" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:19.458" endtime="20210729 10:03:19.458"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:19.458" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:19.458" endtime="20210729 10:03:19.459"/>
</kw>
<msg timestamp="20210729 10:03:19.459" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:19.456" endtime="20210729 10:03:19.459"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:19.459" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:19.459" endtime="20210729 10:03:19.460"/>
</kw>
<status status="PASS" starttime="20210729 10:03:19.456" endtime="20210729 10:03:19.460"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:19.460" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:19.460" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:19.460" endtime="20210729 10:03:19.460"/>
</kw>
<status status="PASS" starttime="20210729 10:03:19.460" endtime="20210729 10:03:19.461"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:19.461" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:19.461" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:19.461" endtime="20210729 10:03:19.461"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:19.461" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:19.461" endtime="20210729 10:03:19.461"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:19.462" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:19.462" endtime="20210729 10:03:19.462"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:19.462" endtime="20210729 10:03:19.463"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:19.463" endtime="20210729 10:03:19.463"/>
</kw>
<status status="PASS" starttime="20210729 10:03:19.462" endtime="20210729 10:03:19.463"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:19.464" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:19.463" endtime="20210729 10:03:19.464"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:19.464" endtime="20210729 10:03:19.464"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:19.465" endtime="20210729 10:03:19.465"/>
</kw>
<status status="PASS" starttime="20210729 10:03:19.463" endtime="20210729 10:03:19.465"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:19.465" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:19.465" endtime="20210729 10:03:19.465"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:19.465" endtime="20210729 10:03:19.466"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:19.466" endtime="20210729 10:03:19.466"/>
</kw>
<status status="PASS" starttime="20210729 10:03:19.465" endtime="20210729 10:03:19.466"/>
</iter>
<status status="PASS" starttime="20210729 10:03:19.462" endtime="20210729 10:03:19.466"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:19.467" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:19.466" endtime="20210729 10:03:19.467"/>
</kw>
<status status="PASS" starttime="20210729 10:03:19.461" endtime="20210729 10:03:19.467"/>
</kw>
<status status="PASS" starttime="20210729 10:03:17.913" endtime="20210729 10:03:19.467"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤%123!&amp;7683##()=?@#¤%&amp;34567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:19.468" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:19.468" endtime="20210729 10:03:19.468"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:19.468" level="INFO">${payload} = {'username': '#¤%123!&amp;7683##()=?@#¤%&amp;34567'}</msg>
<status status="PASS" starttime="20210729 10:03:19.468" endtime="20210729 10:03:19.468"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:19.477" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:19.478" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:19.469" endtime="20210729 10:03:19.478"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:19.478" endtime="20210729 10:03:19.478"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:19.469" endtime="20210729 10:03:19.478"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:19.468" endtime="20210729 10:03:19.478"/>
</for>
<status status="FAIL" starttime="20210729 10:03:19.467" endtime="20210729 10:03:19.478"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:19.467" endtime="20210729 10:03:19.478"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤%123!&amp;7683##()=?@#¤%&amp;34567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:19.480" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:19.479" endtime="20210729 10:03:19.480"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:19.480" level="INFO">${payload} = {'username': '#¤%123!&amp;7683##()=?@#¤%&amp;34567'}</msg>
<status status="PASS" starttime="20210729 10:03:19.480" endtime="20210729 10:03:19.480"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:19.484" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:19.484" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:19.480" endtime="20210729 10:03:19.484"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:19.484" endtime="20210729 10:03:19.484"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:19.480" endtime="20210729 10:03:19.484"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:19.480" endtime="20210729 10:03:19.484"/>
</for>
<status status="FAIL" starttime="20210729 10:03:19.479" endtime="20210729 10:03:19.484"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:19.478" endtime="20210729 10:03:19.485"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤%123!&amp;7683##()=?@#¤%&amp;34567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:19.485" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:19.485" endtime="20210729 10:03:19.485"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:19.486" level="INFO">${payload} = {'username': '#¤%123!&amp;7683##()=?@#¤%&amp;34567'}</msg>
<status status="PASS" starttime="20210729 10:03:19.486" endtime="20210729 10:03:19.486"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:19.492" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:19.492" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:19.487" endtime="20210729 10:03:19.492"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:19.492" endtime="20210729 10:03:19.492"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:19.486" endtime="20210729 10:03:19.492"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:19.486" endtime="20210729 10:03:19.492"/>
</for>
<status status="FAIL" starttime="20210729 10:03:19.485" endtime="20210729 10:03:19.493"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:19.485" endtime="20210729 10:03:19.493"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:19.467" endtime="20210729 10:03:19.493"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:19.503" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:19.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:19.512" level="INFO">${pids} = 23214
23221
23257</msg>
<status status="PASS" starttime="20210729 10:03:19.493" endtime="20210729 10:03:19.512"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:19.513" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:19.512" endtime="20210729 10:03:19.513"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:19.513" level="INFO">${pids} = ['23214', '23221', '23257']</msg>
<status status="PASS" starttime="20210729 10:03:19.513" endtime="20210729 10:03:19.513"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23214</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:19.517" level="INFO">Running command 'kill 23214 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:19.514" endtime="20210729 10:03:19.517"/>
</kw>
<status status="PASS" starttime="20210729 10:03:19.514" endtime="20210729 10:03:19.518"/>
</iter>
<iter>
<var name="${pid}">23221</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:19.520" level="INFO">Running command 'kill 23221 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:19.518" endtime="20210729 10:03:19.523"/>
</kw>
<status status="PASS" starttime="20210729 10:03:19.518" endtime="20210729 10:03:19.524"/>
</iter>
<iter>
<var name="${pid}">23257</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:19.527" level="INFO">Running command 'kill 23257 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:19.524" endtime="20210729 10:03:19.528"/>
</kw>
<status status="PASS" starttime="20210729 10:03:19.524" endtime="20210729 10:03:19.528"/>
</iter>
<status status="PASS" starttime="20210729 10:03:19.514" endtime="20210729 10:03:19.528"/>
</for>
<status status="PASS" starttime="20210729 10:03:19.513" endtime="20210729 10:03:19.528"/>
</branch>
<status status="PASS" starttime="20210729 10:03:19.513" endtime="20210729 10:03:19.528"/>
</if>
<status status="PASS" starttime="20210729 10:03:19.493" endtime="20210729 10:03:19.528"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": '#¤%123!&amp;7683##()=?@#¤%&amp;34567'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:17.913" endtime="20210729 10:03:19.528">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t17" name="With Any Valid Token, Updating Username Of Each System User With #¤123ab Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:19.532" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:19.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:19.540" level="INFO">${pids} = 23286</msg>
<status status="PASS" starttime="20210729 10:03:19.530" endtime="20210729 10:03:19.540"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:19.541" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:19.540" endtime="20210729 10:03:19.541"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:19.541" level="INFO">${pids} = ['23286']</msg>
<status status="PASS" starttime="20210729 10:03:19.541" endtime="20210729 10:03:19.542"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23286</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:19.550" level="INFO">Running command 'kill 23286 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:19.542" endtime="20210729 10:03:19.550"/>
</kw>
<status status="PASS" starttime="20210729 10:03:19.542" endtime="20210729 10:03:19.550"/>
</iter>
<status status="PASS" starttime="20210729 10:03:19.542" endtime="20210729 10:03:19.550"/>
</for>
<status status="PASS" starttime="20210729 10:03:19.541" endtime="20210729 10:03:19.550"/>
</branch>
<status status="PASS" starttime="20210729 10:03:19.541" endtime="20210729 10:03:19.551"/>
</if>
<status status="PASS" starttime="20210729 10:03:19.530" endtime="20210729 10:03:19.551"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:19.552" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:19.552" endtime="20210729 10:03:19.552"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:19.552" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:19.552" endtime="20210729 10:03:19.552"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:19.553" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:19.552" endtime="20210729 10:03:19.553"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:19.553" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:19.553" endtime="20210729 10:03:19.553"/>
</kw>
<msg timestamp="20210729 10:03:19.553" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:19.552" endtime="20210729 10:03:19.553"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:19.559" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:19.553" endtime="20210729 10:03:19.562"/>
</kw>
<status status="PASS" starttime="20210729 10:03:19.551" endtime="20210729 10:03:19.562"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:19.564" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:19.563" endtime="20210729 10:03:19.568"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:21.069" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:19.568" endtime="20210729 10:03:21.070"/>
</kw>
<status status="PASS" starttime="20210729 10:03:19.563" endtime="20210729 10:03:21.070"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:21.071" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:21.071" endtime="20210729 10:03:21.071"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:21.071" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:21.071" endtime="20210729 10:03:21.071"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:21.072" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:21.072" endtime="20210729 10:03:21.072"/>
</kw>
<msg timestamp="20210729 10:03:21.072" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:21.070" endtime="20210729 10:03:21.072"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:21.073" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:21.072" endtime="20210729 10:03:21.076"/>
</kw>
<status status="PASS" starttime="20210729 10:03:21.070" endtime="20210729 10:03:21.076"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:21.077" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:21.077" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:21.076" endtime="20210729 10:03:21.077"/>
</kw>
<status status="PASS" starttime="20210729 10:03:21.076" endtime="20210729 10:03:21.077"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:21.077" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:21.078" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:21.077" endtime="20210729 10:03:21.078"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:21.078" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:21.078" endtime="20210729 10:03:21.078"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:21.079" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:21.078" endtime="20210729 10:03:21.079"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:21.079" endtime="20210729 10:03:21.080"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:21.080" endtime="20210729 10:03:21.080"/>
</kw>
<status status="PASS" starttime="20210729 10:03:21.078" endtime="20210729 10:03:21.080"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:21.080" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:21.080" endtime="20210729 10:03:21.080"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:21.080" endtime="20210729 10:03:21.081"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:21.081" endtime="20210729 10:03:21.081"/>
</kw>
<status status="PASS" starttime="20210729 10:03:21.080" endtime="20210729 10:03:21.082"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:21.082" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:21.082" endtime="20210729 10:03:21.082"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:21.082" endtime="20210729 10:03:21.083"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:21.083" endtime="20210729 10:03:21.083"/>
</kw>
<status status="PASS" starttime="20210729 10:03:21.082" endtime="20210729 10:03:21.083"/>
</iter>
<status status="PASS" starttime="20210729 10:03:21.078" endtime="20210729 10:03:21.083"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:21.084" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:21.083" endtime="20210729 10:03:21.084"/>
</kw>
<status status="PASS" starttime="20210729 10:03:21.077" endtime="20210729 10:03:21.084"/>
</kw>
<status status="PASS" starttime="20210729 10:03:19.529" endtime="20210729 10:03:21.084"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤123ab</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:21.085" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:21.085" endtime="20210729 10:03:21.085"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:21.086" level="INFO">${payload} = {'username': '#¤123ab'}</msg>
<status status="PASS" starttime="20210729 10:03:21.085" endtime="20210729 10:03:21.086"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:21.099" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:21.100" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:21.086" endtime="20210729 10:03:21.100"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:21.100" endtime="20210729 10:03:21.100"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:21.086" endtime="20210729 10:03:21.100"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:21.086" endtime="20210729 10:03:21.100"/>
</for>
<status status="FAIL" starttime="20210729 10:03:21.084" endtime="20210729 10:03:21.100"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:21.084" endtime="20210729 10:03:21.100"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤123ab</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:21.102" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:21.101" endtime="20210729 10:03:21.102"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:21.102" level="INFO">${payload} = {'username': '#¤123ab'}</msg>
<status status="PASS" starttime="20210729 10:03:21.102" endtime="20210729 10:03:21.102"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:21.107" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:21.108" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:21.102" endtime="20210729 10:03:21.108"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:21.108" endtime="20210729 10:03:21.108"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:21.102" endtime="20210729 10:03:21.108"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:21.102" endtime="20210729 10:03:21.108"/>
</for>
<status status="FAIL" starttime="20210729 10:03:21.101" endtime="20210729 10:03:21.108"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:21.101" endtime="20210729 10:03:21.108"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤123ab</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:21.109" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:21.109" endtime="20210729 10:03:21.109"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:21.110" level="INFO">${payload} = {'username': '#¤123ab'}</msg>
<status status="PASS" starttime="20210729 10:03:21.109" endtime="20210729 10:03:21.110"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:21.114" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:21.114" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:21.110" endtime="20210729 10:03:21.114"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:21.114" endtime="20210729 10:03:21.114"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:21.110" endtime="20210729 10:03:21.114"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:21.110" endtime="20210729 10:03:21.114"/>
</for>
<status status="FAIL" starttime="20210729 10:03:21.108" endtime="20210729 10:03:21.114"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:21.108" endtime="20210729 10:03:21.114"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:21.084" endtime="20210729 10:03:21.114"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:21.119" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:21.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:21.134" level="INFO">${pids} = 23309
23316
23328</msg>
<status status="PASS" starttime="20210729 10:03:21.116" endtime="20210729 10:03:21.134"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:21.136" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:21.134" endtime="20210729 10:03:21.136"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:21.136" level="INFO">${pids} = ['23309', '23316', '23328']</msg>
<status status="PASS" starttime="20210729 10:03:21.136" endtime="20210729 10:03:21.136"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23309</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:21.141" level="INFO">Running command 'kill 23309 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:21.137" endtime="20210729 10:03:21.142"/>
</kw>
<status status="PASS" starttime="20210729 10:03:21.136" endtime="20210729 10:03:21.142"/>
</iter>
<iter>
<var name="${pid}">23316</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:21.145" level="INFO">Running command 'kill 23316 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:21.142" endtime="20210729 10:03:21.147"/>
</kw>
<status status="PASS" starttime="20210729 10:03:21.142" endtime="20210729 10:03:21.147"/>
</iter>
<iter>
<var name="${pid}">23328</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:21.151" level="INFO">Running command 'kill 23328 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:21.148" endtime="20210729 10:03:21.151"/>
</kw>
<status status="PASS" starttime="20210729 10:03:21.148" endtime="20210729 10:03:21.151"/>
</iter>
<status status="PASS" starttime="20210729 10:03:21.136" endtime="20210729 10:03:21.152"/>
</for>
<status status="PASS" starttime="20210729 10:03:21.136" endtime="20210729 10:03:21.152"/>
</branch>
<status status="PASS" starttime="20210729 10:03:21.136" endtime="20210729 10:03:21.152"/>
</if>
<status status="PASS" starttime="20210729 10:03:21.115" endtime="20210729 10:03:21.152"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": '#¤123ab'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:19.529" endtime="20210729 10:03:21.152">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t18" name="With Any Valid Token, Updating Username Of Each System User With #¤123abc Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:21.157" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:21.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:21.168" level="INFO">${pids} = 23357</msg>
<status status="PASS" starttime="20210729 10:03:21.154" endtime="20210729 10:03:21.168"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:21.169" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:21.168" endtime="20210729 10:03:21.169"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:21.170" level="INFO">${pids} = ['23357']</msg>
<status status="PASS" starttime="20210729 10:03:21.169" endtime="20210729 10:03:21.170"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23357</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:21.178" level="INFO">Running command 'kill 23357 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:21.170" endtime="20210729 10:03:21.178"/>
</kw>
<status status="PASS" starttime="20210729 10:03:21.170" endtime="20210729 10:03:21.178"/>
</iter>
<status status="PASS" starttime="20210729 10:03:21.170" endtime="20210729 10:03:21.178"/>
</for>
<status status="PASS" starttime="20210729 10:03:21.169" endtime="20210729 10:03:21.178"/>
</branch>
<status status="PASS" starttime="20210729 10:03:21.169" endtime="20210729 10:03:21.178"/>
</if>
<status status="PASS" starttime="20210729 10:03:21.153" endtime="20210729 10:03:21.179"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:21.180" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:21.180" endtime="20210729 10:03:21.180"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:21.181" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:21.181" endtime="20210729 10:03:21.181"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:21.181" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:21.181" endtime="20210729 10:03:21.181"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:21.182" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:21.181" endtime="20210729 10:03:21.182"/>
</kw>
<msg timestamp="20210729 10:03:21.182" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:21.180" endtime="20210729 10:03:21.182"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:21.187" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:21.182" endtime="20210729 10:03:21.188"/>
</kw>
<status status="PASS" starttime="20210729 10:03:21.179" endtime="20210729 10:03:21.189"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:21.190" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:21.190" endtime="20210729 10:03:21.194"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:22.696" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:21.194" endtime="20210729 10:03:22.697"/>
</kw>
<status status="PASS" starttime="20210729 10:03:21.189" endtime="20210729 10:03:22.697"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:22.700" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:22.700" endtime="20210729 10:03:22.700"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:22.701" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:22.701" endtime="20210729 10:03:22.701"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:22.702" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:22.701" endtime="20210729 10:03:22.702"/>
</kw>
<msg timestamp="20210729 10:03:22.703" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:22.699" endtime="20210729 10:03:22.703"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:22.703" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:22.703" endtime="20210729 10:03:22.704"/>
</kw>
<status status="PASS" starttime="20210729 10:03:22.698" endtime="20210729 10:03:22.704"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:22.705" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:22.705" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:22.705" endtime="20210729 10:03:22.706"/>
</kw>
<status status="PASS" starttime="20210729 10:03:22.704" endtime="20210729 10:03:22.706"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:22.707" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:22.707" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:22.706" endtime="20210729 10:03:22.707"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:22.708" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:22.707" endtime="20210729 10:03:22.708"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:22.709" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:22.708" endtime="20210729 10:03:22.709"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:22.709" endtime="20210729 10:03:22.710"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:22.710" endtime="20210729 10:03:22.711"/>
</kw>
<status status="PASS" starttime="20210729 10:03:22.708" endtime="20210729 10:03:22.711"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:22.711" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:22.711" endtime="20210729 10:03:22.711"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:22.711" endtime="20210729 10:03:22.712"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:22.712" endtime="20210729 10:03:22.713"/>
</kw>
<status status="PASS" starttime="20210729 10:03:22.711" endtime="20210729 10:03:22.713"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:22.713" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:22.713" endtime="20210729 10:03:22.713"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:22.713" endtime="20210729 10:03:22.714"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:22.714" endtime="20210729 10:03:22.715"/>
</kw>
<status status="PASS" starttime="20210729 10:03:22.713" endtime="20210729 10:03:22.715"/>
</iter>
<status status="PASS" starttime="20210729 10:03:22.708" endtime="20210729 10:03:22.715"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:22.715" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:22.715" endtime="20210729 10:03:22.715"/>
</kw>
<status status="PASS" starttime="20210729 10:03:22.706" endtime="20210729 10:03:22.716"/>
</kw>
<status status="PASS" starttime="20210729 10:03:21.153" endtime="20210729 10:03:22.716"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤123abc</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:22.717" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:22.717" endtime="20210729 10:03:22.717"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:22.717" level="INFO">${payload} = {'username': '#¤123abc'}</msg>
<status status="PASS" starttime="20210729 10:03:22.717" endtime="20210729 10:03:22.718"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:22.729" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:22.729" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:22.718" endtime="20210729 10:03:22.729"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:22.729" endtime="20210729 10:03:22.729"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:22.718" endtime="20210729 10:03:22.730"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:22.718" endtime="20210729 10:03:22.730"/>
</for>
<status status="FAIL" starttime="20210729 10:03:22.716" endtime="20210729 10:03:22.730"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:22.716" endtime="20210729 10:03:22.730"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤123abc</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:22.731" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:22.730" endtime="20210729 10:03:22.731"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:22.731" level="INFO">${payload} = {'username': '#¤123abc'}</msg>
<status status="PASS" starttime="20210729 10:03:22.731" endtime="20210729 10:03:22.731"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:22.735" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:22.735" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:22.731" endtime="20210729 10:03:22.735"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:22.735" endtime="20210729 10:03:22.735"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:22.731" endtime="20210729 10:03:22.735"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:22.731" endtime="20210729 10:03:22.735"/>
</for>
<status status="FAIL" starttime="20210729 10:03:22.730" endtime="20210729 10:03:22.735"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:22.730" endtime="20210729 10:03:22.735"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤123abc</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:22.737" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:22.736" endtime="20210729 10:03:22.737"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:22.738" level="INFO">${payload} = {'username': '#¤123abc'}</msg>
<status status="PASS" starttime="20210729 10:03:22.737" endtime="20210729 10:03:22.738"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:22.742" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:22.743" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:22.738" endtime="20210729 10:03:22.743"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:22.743" endtime="20210729 10:03:22.743"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:22.738" endtime="20210729 10:03:22.743"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:22.738" endtime="20210729 10:03:22.743"/>
</for>
<status status="FAIL" starttime="20210729 10:03:22.736" endtime="20210729 10:03:22.743"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:22.735" endtime="20210729 10:03:22.743"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:22.716" endtime="20210729 10:03:22.743"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:22.752" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:22.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:22.763" level="INFO">${pids} = 23380
23387
23391</msg>
<status status="PASS" starttime="20210729 10:03:22.745" endtime="20210729 10:03:22.763"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:22.765" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:22.764" endtime="20210729 10:03:22.765"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:22.766" level="INFO">${pids} = ['23380', '23387', '23391']</msg>
<status status="PASS" starttime="20210729 10:03:22.765" endtime="20210729 10:03:22.766"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23380</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:22.769" level="INFO">Running command 'kill 23380 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:22.766" endtime="20210729 10:03:22.769"/>
</kw>
<status status="PASS" starttime="20210729 10:03:22.766" endtime="20210729 10:03:22.769"/>
</iter>
<iter>
<var name="${pid}">23387</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:22.773" level="INFO">Running command 'kill 23387 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:22.770" endtime="20210729 10:03:22.774"/>
</kw>
<status status="PASS" starttime="20210729 10:03:22.769" endtime="20210729 10:03:22.774"/>
</iter>
<iter>
<var name="${pid}">23391</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:22.780" level="INFO">Running command 'kill 23391 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:22.775" endtime="20210729 10:03:22.781"/>
</kw>
<status status="PASS" starttime="20210729 10:03:22.774" endtime="20210729 10:03:22.781"/>
</iter>
<status status="PASS" starttime="20210729 10:03:22.766" endtime="20210729 10:03:22.781"/>
</for>
<status status="PASS" starttime="20210729 10:03:22.765" endtime="20210729 10:03:22.781"/>
</branch>
<status status="PASS" starttime="20210729 10:03:22.765" endtime="20210729 10:03:22.781"/>
</if>
<status status="PASS" starttime="20210729 10:03:22.745" endtime="20210729 10:03:22.781"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": '#¤123abc'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:21.152" endtime="20210729 10:03:22.781">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t19" name="With Any Valid Token, Updating Username Of Each System User With #¤/&amp;¤!!123abc456hjk Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:22.786" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:22.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:22.796" level="INFO">${pids} = 23420</msg>
<status status="PASS" starttime="20210729 10:03:22.784" endtime="20210729 10:03:22.796"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:22.797" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:22.797" endtime="20210729 10:03:22.797"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:22.798" level="INFO">${pids} = ['23420']</msg>
<status status="PASS" starttime="20210729 10:03:22.798" endtime="20210729 10:03:22.798"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23420</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:22.802" level="INFO">Running command 'kill 23420 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:22.798" endtime="20210729 10:03:22.802"/>
</kw>
<status status="PASS" starttime="20210729 10:03:22.798" endtime="20210729 10:03:22.802"/>
</iter>
<status status="PASS" starttime="20210729 10:03:22.798" endtime="20210729 10:03:22.802"/>
</for>
<status status="PASS" starttime="20210729 10:03:22.797" endtime="20210729 10:03:22.802"/>
</branch>
<status status="PASS" starttime="20210729 10:03:22.797" endtime="20210729 10:03:22.803"/>
</if>
<status status="PASS" starttime="20210729 10:03:22.783" endtime="20210729 10:03:22.803"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:22.804" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:22.803" endtime="20210729 10:03:22.804"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:22.805" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:22.804" endtime="20210729 10:03:22.805"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:22.805" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:22.805" endtime="20210729 10:03:22.805"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:22.806" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:22.805" endtime="20210729 10:03:22.806"/>
</kw>
<msg timestamp="20210729 10:03:22.806" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:22.804" endtime="20210729 10:03:22.806"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:22.810" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:22.807" endtime="20210729 10:03:22.812"/>
</kw>
<status status="PASS" starttime="20210729 10:03:22.803" endtime="20210729 10:03:22.813"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:22.814" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:22.813" endtime="20210729 10:03:22.817"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:24.319" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:22.817" endtime="20210729 10:03:24.319"/>
</kw>
<status status="PASS" starttime="20210729 10:03:22.813" endtime="20210729 10:03:24.319"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:24.321" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:24.320" endtime="20210729 10:03:24.321"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:24.321" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:24.321" endtime="20210729 10:03:24.321"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:24.322" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:24.321" endtime="20210729 10:03:24.322"/>
</kw>
<msg timestamp="20210729 10:03:24.322" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:24.320" endtime="20210729 10:03:24.322"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:24.323" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:24.322" endtime="20210729 10:03:24.323"/>
</kw>
<status status="PASS" starttime="20210729 10:03:24.319" endtime="20210729 10:03:24.323"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:24.324" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:24.324" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:24.324" endtime="20210729 10:03:24.324"/>
</kw>
<status status="PASS" starttime="20210729 10:03:24.324" endtime="20210729 10:03:24.325"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:24.325" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:24.325" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:24.325" endtime="20210729 10:03:24.325"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:24.325" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:24.325" endtime="20210729 10:03:24.326"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:24.327" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:24.326" endtime="20210729 10:03:24.327"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:24.327" endtime="20210729 10:03:24.328"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:24.328" endtime="20210729 10:03:24.328"/>
</kw>
<status status="PASS" starttime="20210729 10:03:24.326" endtime="20210729 10:03:24.328"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:24.329" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:24.329" endtime="20210729 10:03:24.329"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:24.329" endtime="20210729 10:03:24.329"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:24.329" endtime="20210729 10:03:24.330"/>
</kw>
<status status="PASS" starttime="20210729 10:03:24.328" endtime="20210729 10:03:24.330"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:24.330" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:24.330" endtime="20210729 10:03:24.330"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:24.330" endtime="20210729 10:03:24.331"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:24.331" endtime="20210729 10:03:24.331"/>
</kw>
<status status="PASS" starttime="20210729 10:03:24.330" endtime="20210729 10:03:24.331"/>
</iter>
<status status="PASS" starttime="20210729 10:03:24.326" endtime="20210729 10:03:24.331"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:24.332" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:24.331" endtime="20210729 10:03:24.332"/>
</kw>
<status status="PASS" starttime="20210729 10:03:24.325" endtime="20210729 10:03:24.332"/>
</kw>
<status status="PASS" starttime="20210729 10:03:22.783" endtime="20210729 10:03:24.332"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/&amp;¤!!123abc456hjk</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:24.333" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:24.333" endtime="20210729 10:03:24.333"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:24.333" level="INFO">${payload} = {'username': '#¤/&amp;¤!!123abc456hjk'}</msg>
<status status="PASS" starttime="20210729 10:03:24.333" endtime="20210729 10:03:24.333"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:24.342" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:24.342" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:24.333" endtime="20210729 10:03:24.342"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:24.342" endtime="20210729 10:03:24.342"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:24.333" endtime="20210729 10:03:24.342"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:24.333" endtime="20210729 10:03:24.342"/>
</for>
<status status="FAIL" starttime="20210729 10:03:24.332" endtime="20210729 10:03:24.342"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:24.332" endtime="20210729 10:03:24.342"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/&amp;¤!!123abc456hjk</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:24.344" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:24.343" endtime="20210729 10:03:24.344"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:24.344" level="INFO">${payload} = {'username': '#¤/&amp;¤!!123abc456hjk'}</msg>
<status status="PASS" starttime="20210729 10:03:24.344" endtime="20210729 10:03:24.344"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:24.349" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:24.349" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:24.345" endtime="20210729 10:03:24.349"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:24.349" endtime="20210729 10:03:24.349"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:24.344" endtime="20210729 10:03:24.349"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:24.344" endtime="20210729 10:03:24.349"/>
</for>
<status status="FAIL" starttime="20210729 10:03:24.343" endtime="20210729 10:03:24.349"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:24.343" endtime="20210729 10:03:24.349"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/&amp;¤!!123abc456hjk</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:24.350" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:24.350" endtime="20210729 10:03:24.350"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:24.351" level="INFO">${payload} = {'username': '#¤/&amp;¤!!123abc456hjk'}</msg>
<status status="PASS" starttime="20210729 10:03:24.350" endtime="20210729 10:03:24.351"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:24.354" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:24.355" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:24.351" endtime="20210729 10:03:24.355"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:24.355" endtime="20210729 10:03:24.355"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:24.351" endtime="20210729 10:03:24.355"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:24.351" endtime="20210729 10:03:24.355"/>
</for>
<status status="FAIL" starttime="20210729 10:03:24.350" endtime="20210729 10:03:24.355"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:24.350" endtime="20210729 10:03:24.355"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:24.332" endtime="20210729 10:03:24.356"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:24.360" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:24.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:24.374" level="INFO">${pids} = 23443
23450
23457</msg>
<status status="PASS" starttime="20210729 10:03:24.357" endtime="20210729 10:03:24.374"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:24.375" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:24.374" endtime="20210729 10:03:24.375"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:24.376" level="INFO">${pids} = ['23443', '23450', '23457']</msg>
<status status="PASS" starttime="20210729 10:03:24.375" endtime="20210729 10:03:24.376"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23443</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:24.379" level="INFO">Running command 'kill 23443 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:24.376" endtime="20210729 10:03:24.379"/>
</kw>
<status status="PASS" starttime="20210729 10:03:24.376" endtime="20210729 10:03:24.379"/>
</iter>
<iter>
<var name="${pid}">23450</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:24.382" level="INFO">Running command 'kill 23450 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:24.380" endtime="20210729 10:03:24.382"/>
</kw>
<status status="PASS" starttime="20210729 10:03:24.379" endtime="20210729 10:03:24.382"/>
</iter>
<iter>
<var name="${pid}">23457</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:24.386" level="INFO">Running command 'kill 23457 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:24.383" endtime="20210729 10:03:24.386"/>
</kw>
<status status="PASS" starttime="20210729 10:03:24.383" endtime="20210729 10:03:24.386"/>
</iter>
<status status="PASS" starttime="20210729 10:03:24.376" endtime="20210729 10:03:24.386"/>
</for>
<status status="PASS" starttime="20210729 10:03:24.375" endtime="20210729 10:03:24.386"/>
</branch>
<status status="PASS" starttime="20210729 10:03:24.375" endtime="20210729 10:03:24.386"/>
</if>
<status status="PASS" starttime="20210729 10:03:24.356" endtime="20210729 10:03:24.387"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": '#¤/&amp;¤!!123abc456hjk'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:22.782" endtime="20210729 10:03:24.387">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t20" name="With Any Valid Token, Updating Username Of Each System User With #¤/abc! Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:24.397" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:24.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:24.405" level="INFO">${pids} = 23486</msg>
<status status="PASS" starttime="20210729 10:03:24.390" endtime="20210729 10:03:24.405"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:24.406" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:24.406" endtime="20210729 10:03:24.406"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:24.407" level="INFO">${pids} = ['23486']</msg>
<status status="PASS" starttime="20210729 10:03:24.407" endtime="20210729 10:03:24.407"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23486</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:24.410" level="INFO">Running command 'kill 23486 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:24.407" endtime="20210729 10:03:24.411"/>
</kw>
<status status="PASS" starttime="20210729 10:03:24.407" endtime="20210729 10:03:24.411"/>
</iter>
<status status="PASS" starttime="20210729 10:03:24.407" endtime="20210729 10:03:24.411"/>
</for>
<status status="PASS" starttime="20210729 10:03:24.406" endtime="20210729 10:03:24.411"/>
</branch>
<status status="PASS" starttime="20210729 10:03:24.406" endtime="20210729 10:03:24.411"/>
</if>
<status status="PASS" starttime="20210729 10:03:24.390" endtime="20210729 10:03:24.411"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:24.412" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:24.412" endtime="20210729 10:03:24.413"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:24.413" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:24.413" endtime="20210729 10:03:24.413"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:24.413" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:24.413" endtime="20210729 10:03:24.413"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:24.414" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:24.414" endtime="20210729 10:03:24.414"/>
</kw>
<msg timestamp="20210729 10:03:24.414" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:24.413" endtime="20210729 10:03:24.414"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:24.420" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:24.414" endtime="20210729 10:03:24.422"/>
</kw>
<status status="PASS" starttime="20210729 10:03:24.412" endtime="20210729 10:03:24.423"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:24.424" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:24.424" endtime="20210729 10:03:24.428"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:25.941" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:24.428" endtime="20210729 10:03:25.941"/>
</kw>
<status status="PASS" starttime="20210729 10:03:24.423" endtime="20210729 10:03:25.941"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:25.942" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:25.942" endtime="20210729 10:03:25.943"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:25.943" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:25.943" endtime="20210729 10:03:25.943"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:25.944" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:25.943" endtime="20210729 10:03:25.944"/>
</kw>
<msg timestamp="20210729 10:03:25.944" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:25.942" endtime="20210729 10:03:25.944"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:25.945" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:25.944" endtime="20210729 10:03:25.945"/>
</kw>
<status status="PASS" starttime="20210729 10:03:25.941" endtime="20210729 10:03:25.945"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:25.946" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:25.946" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:25.946" endtime="20210729 10:03:25.946"/>
</kw>
<status status="PASS" starttime="20210729 10:03:25.945" endtime="20210729 10:03:25.946"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:25.947" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:25.947" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:25.947" endtime="20210729 10:03:25.947"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:25.948" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:25.947" endtime="20210729 10:03:25.948"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:25.949" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:25.948" endtime="20210729 10:03:25.949"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:25.949" endtime="20210729 10:03:25.949"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:25.950" endtime="20210729 10:03:25.950"/>
</kw>
<status status="PASS" starttime="20210729 10:03:25.948" endtime="20210729 10:03:25.950"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:25.950" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:25.950" endtime="20210729 10:03:25.950"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:25.950" endtime="20210729 10:03:25.951"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:25.951" endtime="20210729 10:03:25.951"/>
</kw>
<status status="PASS" starttime="20210729 10:03:25.950" endtime="20210729 10:03:25.951"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:25.952" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:25.951" endtime="20210729 10:03:25.952"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:25.952" endtime="20210729 10:03:25.952"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:25.952" endtime="20210729 10:03:25.953"/>
</kw>
<status status="PASS" starttime="20210729 10:03:25.951" endtime="20210729 10:03:25.953"/>
</iter>
<status status="PASS" starttime="20210729 10:03:25.948" endtime="20210729 10:03:25.953"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:25.953" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:25.953" endtime="20210729 10:03:25.953"/>
</kw>
<status status="PASS" starttime="20210729 10:03:25.947" endtime="20210729 10:03:25.953"/>
</kw>
<status status="PASS" starttime="20210729 10:03:24.389" endtime="20210729 10:03:25.953"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/abc!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:25.954" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:25.954" endtime="20210729 10:03:25.954"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:25.955" level="INFO">${payload} = {'username': '#¤/abc!'}</msg>
<status status="PASS" starttime="20210729 10:03:25.955" endtime="20210729 10:03:25.955"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:25.964" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:25.964" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:25.956" endtime="20210729 10:03:25.964"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:25.965" endtime="20210729 10:03:25.965"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:25.956" endtime="20210729 10:03:25.965"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:25.955" endtime="20210729 10:03:25.965"/>
</for>
<status status="FAIL" starttime="20210729 10:03:25.954" endtime="20210729 10:03:25.965"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:25.954" endtime="20210729 10:03:25.965"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/abc!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:25.966" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:25.966" endtime="20210729 10:03:25.966"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:25.967" level="INFO">${payload} = {'username': '#¤/abc!'}</msg>
<status status="PASS" starttime="20210729 10:03:25.966" endtime="20210729 10:03:25.967"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:25.971" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:25.971" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:25.967" endtime="20210729 10:03:25.972"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:25.972" endtime="20210729 10:03:25.972"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:25.967" endtime="20210729 10:03:25.972"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:25.967" endtime="20210729 10:03:25.972"/>
</for>
<status status="FAIL" starttime="20210729 10:03:25.965" endtime="20210729 10:03:25.972"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:25.965" endtime="20210729 10:03:25.972"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/abc!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:25.973" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:25.973" endtime="20210729 10:03:25.973"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:25.973" level="INFO">${payload} = {'username': '#¤/abc!'}</msg>
<status status="PASS" starttime="20210729 10:03:25.973" endtime="20210729 10:03:25.973"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:25.977" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:25.978" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:25.974" endtime="20210729 10:03:25.978"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:25.978" endtime="20210729 10:03:25.978"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:25.974" endtime="20210729 10:03:25.978"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:25.973" endtime="20210729 10:03:25.978"/>
</for>
<status status="FAIL" starttime="20210729 10:03:25.972" endtime="20210729 10:03:25.978"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:25.972" endtime="20210729 10:03:25.978"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:25.953" endtime="20210729 10:03:25.978"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:25.982" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:25.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:25.992" level="INFO">${pids} = 23509
23516
23526</msg>
<status status="PASS" starttime="20210729 10:03:25.979" endtime="20210729 10:03:25.992"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:25.994" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:25.992" endtime="20210729 10:03:25.994"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:25.995" level="INFO">${pids} = ['23509', '23516', '23526']</msg>
<status status="PASS" starttime="20210729 10:03:25.994" endtime="20210729 10:03:25.995"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23509</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:25.999" level="INFO">Running command 'kill 23509 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:25.995" endtime="20210729 10:03:25.999"/>
</kw>
<status status="PASS" starttime="20210729 10:03:25.995" endtime="20210729 10:03:25.999"/>
</iter>
<iter>
<var name="${pid}">23516</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:26.002" level="INFO">Running command 'kill 23516 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:26.000" endtime="20210729 10:03:26.002"/>
</kw>
<status status="PASS" starttime="20210729 10:03:25.999" endtime="20210729 10:03:26.003"/>
</iter>
<iter>
<var name="${pid}">23526</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:26.007" level="INFO">Running command 'kill 23526 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:26.003" endtime="20210729 10:03:26.008"/>
</kw>
<status status="PASS" starttime="20210729 10:03:26.003" endtime="20210729 10:03:26.008"/>
</iter>
<status status="PASS" starttime="20210729 10:03:25.995" endtime="20210729 10:03:26.008"/>
</for>
<status status="PASS" starttime="20210729 10:03:25.994" endtime="20210729 10:03:26.008"/>
</branch>
<status status="PASS" starttime="20210729 10:03:25.994" endtime="20210729 10:03:26.008"/>
</if>
<status status="PASS" starttime="20210729 10:03:25.978" endtime="20210729 10:03:26.008"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": '#¤/abc!'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:24.388" endtime="20210729 10:03:26.008">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t21" name="With Any Valid Token, Updating Username Of Each System User With #¤/abc!g Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:26.014" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:26.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:26.025" level="INFO">${pids} = 23555</msg>
<status status="PASS" starttime="20210729 10:03:26.010" endtime="20210729 10:03:26.025"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:26.026" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:26.026" endtime="20210729 10:03:26.026"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:26.027" level="INFO">${pids} = ['23555']</msg>
<status status="PASS" starttime="20210729 10:03:26.027" endtime="20210729 10:03:26.027"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23555</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:26.039" level="INFO">Running command 'kill 23555 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:26.027" endtime="20210729 10:03:26.040"/>
</kw>
<status status="PASS" starttime="20210729 10:03:26.027" endtime="20210729 10:03:26.040"/>
</iter>
<status status="PASS" starttime="20210729 10:03:26.027" endtime="20210729 10:03:26.040"/>
</for>
<status status="PASS" starttime="20210729 10:03:26.027" endtime="20210729 10:03:26.040"/>
</branch>
<status status="PASS" starttime="20210729 10:03:26.026" endtime="20210729 10:03:26.040"/>
</if>
<status status="PASS" starttime="20210729 10:03:26.010" endtime="20210729 10:03:26.040"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:26.042" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:26.041" endtime="20210729 10:03:26.042"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:26.042" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:26.042" endtime="20210729 10:03:26.042"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:26.043" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:26.042" endtime="20210729 10:03:26.043"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:26.043" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:26.043" endtime="20210729 10:03:26.043"/>
</kw>
<msg timestamp="20210729 10:03:26.043" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:26.042" endtime="20210729 10:03:26.043"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:26.046" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:26.043" endtime="20210729 10:03:26.048"/>
</kw>
<status status="PASS" starttime="20210729 10:03:26.041" endtime="20210729 10:03:26.048"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:26.049" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:26.049" endtime="20210729 10:03:26.053"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:27.558" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:26.053" endtime="20210729 10:03:27.558"/>
</kw>
<status status="PASS" starttime="20210729 10:03:26.048" endtime="20210729 10:03:27.558"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:27.560" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:27.560" endtime="20210729 10:03:27.560"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:27.560" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:27.560" endtime="20210729 10:03:27.560"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:27.561" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:27.560" endtime="20210729 10:03:27.561"/>
</kw>
<msg timestamp="20210729 10:03:27.561" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:27.559" endtime="20210729 10:03:27.561"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:27.562" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:27.561" endtime="20210729 10:03:27.563"/>
</kw>
<status status="PASS" starttime="20210729 10:03:27.559" endtime="20210729 10:03:27.563"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:27.564" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:27.564" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:27.564" endtime="20210729 10:03:27.564"/>
</kw>
<status status="PASS" starttime="20210729 10:03:27.563" endtime="20210729 10:03:27.564"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:27.565" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:27.566" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:27.565" endtime="20210729 10:03:27.566"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:27.566" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:27.566" endtime="20210729 10:03:27.566"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:27.568" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:27.567" endtime="20210729 10:03:27.568"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:27.568" endtime="20210729 10:03:27.569"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:27.569" endtime="20210729 10:03:27.570"/>
</kw>
<status status="PASS" starttime="20210729 10:03:27.567" endtime="20210729 10:03:27.570"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:27.570" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:27.570" endtime="20210729 10:03:27.570"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:27.570" endtime="20210729 10:03:27.571"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:27.571" endtime="20210729 10:03:27.571"/>
</kw>
<status status="PASS" starttime="20210729 10:03:27.570" endtime="20210729 10:03:27.571"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:27.572" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:27.572" endtime="20210729 10:03:27.572"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:27.572" endtime="20210729 10:03:27.573"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:27.573" endtime="20210729 10:03:27.573"/>
</kw>
<status status="PASS" starttime="20210729 10:03:27.572" endtime="20210729 10:03:27.574"/>
</iter>
<status status="PASS" starttime="20210729 10:03:27.566" endtime="20210729 10:03:27.574"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:27.574" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:27.574" endtime="20210729 10:03:27.575"/>
</kw>
<status status="PASS" starttime="20210729 10:03:27.565" endtime="20210729 10:03:27.575"/>
</kw>
<status status="PASS" starttime="20210729 10:03:26.009" endtime="20210729 10:03:27.575"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/abc!g</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:27.577" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:27.576" endtime="20210729 10:03:27.577"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:27.577" level="INFO">${payload} = {'username': '#¤/abc!g'}</msg>
<status status="PASS" starttime="20210729 10:03:27.577" endtime="20210729 10:03:27.577"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:27.588" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:27.589" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:27.578" endtime="20210729 10:03:27.589"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:27.589" endtime="20210729 10:03:27.589"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:27.577" endtime="20210729 10:03:27.589"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:27.577" endtime="20210729 10:03:27.589"/>
</for>
<status status="FAIL" starttime="20210729 10:03:27.576" endtime="20210729 10:03:27.589"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:27.576" endtime="20210729 10:03:27.589"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/abc!g</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:27.591" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:27.590" endtime="20210729 10:03:27.591"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:27.591" level="INFO">${payload} = {'username': '#¤/abc!g'}</msg>
<status status="PASS" starttime="20210729 10:03:27.591" endtime="20210729 10:03:27.591"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:27.595" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:27.595" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:27.592" endtime="20210729 10:03:27.596"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:27.596" endtime="20210729 10:03:27.596"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:27.592" endtime="20210729 10:03:27.596"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:27.591" endtime="20210729 10:03:27.596"/>
</for>
<status status="FAIL" starttime="20210729 10:03:27.590" endtime="20210729 10:03:27.596"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:27.590" endtime="20210729 10:03:27.596"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/abc!g</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:27.597" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:27.597" endtime="20210729 10:03:27.597"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:27.597" level="INFO">${payload} = {'username': '#¤/abc!g'}</msg>
<status status="PASS" starttime="20210729 10:03:27.597" endtime="20210729 10:03:27.597"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:27.601" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:27.602" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:27.598" endtime="20210729 10:03:27.602"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:27.602" endtime="20210729 10:03:27.602"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:27.598" endtime="20210729 10:03:27.602"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:27.598" endtime="20210729 10:03:27.602"/>
</for>
<status status="FAIL" starttime="20210729 10:03:27.596" endtime="20210729 10:03:27.602"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:27.596" endtime="20210729 10:03:27.602"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:27.575" endtime="20210729 10:03:27.602"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:27.609" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:27.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:27.617" level="INFO">${pids} = 23578
23585
23589</msg>
<status status="PASS" starttime="20210729 10:03:27.603" endtime="20210729 10:03:27.617"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:27.618" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:27.617" endtime="20210729 10:03:27.618"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:27.619" level="INFO">${pids} = ['23578', '23585', '23589']</msg>
<status status="PASS" starttime="20210729 10:03:27.619" endtime="20210729 10:03:27.619"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23578</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:27.622" level="INFO">Running command 'kill 23578 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:27.619" endtime="20210729 10:03:27.623"/>
</kw>
<status status="PASS" starttime="20210729 10:03:27.619" endtime="20210729 10:03:27.623"/>
</iter>
<iter>
<var name="${pid}">23585</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:27.628" level="INFO">Running command 'kill 23585 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:27.624" endtime="20210729 10:03:27.629"/>
</kw>
<status status="PASS" starttime="20210729 10:03:27.624" endtime="20210729 10:03:27.629"/>
</iter>
<iter>
<var name="${pid}">23589</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:27.633" level="INFO">Running command 'kill 23589 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:27.630" endtime="20210729 10:03:27.633"/>
</kw>
<status status="PASS" starttime="20210729 10:03:27.630" endtime="20210729 10:03:27.633"/>
</iter>
<status status="PASS" starttime="20210729 10:03:27.619" endtime="20210729 10:03:27.633"/>
</for>
<status status="PASS" starttime="20210729 10:03:27.619" endtime="20210729 10:03:27.633"/>
</branch>
<status status="PASS" starttime="20210729 10:03:27.618" endtime="20210729 10:03:27.633"/>
</if>
<status status="PASS" starttime="20210729 10:03:27.603" endtime="20210729 10:03:27.633"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": '#¤/abc!g'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:26.009" endtime="20210729 10:03:27.633">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t22" name="With Any Valid Token, Updating Username Of Each System User With #¤/abc!g()=&amp;%¤fghjklQWERTY Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:27.640" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:27.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:27.649" level="INFO">${pids} = 23618</msg>
<status status="PASS" starttime="20210729 10:03:27.636" endtime="20210729 10:03:27.649"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:27.649" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:27.649" endtime="20210729 10:03:27.649"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:27.650" level="INFO">${pids} = ['23618']</msg>
<status status="PASS" starttime="20210729 10:03:27.650" endtime="20210729 10:03:27.650"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23618</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:27.653" level="INFO">Running command 'kill 23618 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:27.650" endtime="20210729 10:03:27.653"/>
</kw>
<status status="PASS" starttime="20210729 10:03:27.650" endtime="20210729 10:03:27.654"/>
</iter>
<status status="PASS" starttime="20210729 10:03:27.650" endtime="20210729 10:03:27.654"/>
</for>
<status status="PASS" starttime="20210729 10:03:27.650" endtime="20210729 10:03:27.654"/>
</branch>
<status status="PASS" starttime="20210729 10:03:27.650" endtime="20210729 10:03:27.654"/>
</if>
<status status="PASS" starttime="20210729 10:03:27.635" endtime="20210729 10:03:27.654"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:27.655" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:27.654" endtime="20210729 10:03:27.655"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:27.657" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:27.656" endtime="20210729 10:03:27.657"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:27.657" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:27.657" endtime="20210729 10:03:27.657"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:27.657" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:27.657" endtime="20210729 10:03:27.657"/>
</kw>
<msg timestamp="20210729 10:03:27.658" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:27.655" endtime="20210729 10:03:27.658"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:27.663" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:27.658" endtime="20210729 10:03:27.664"/>
</kw>
<status status="PASS" starttime="20210729 10:03:27.654" endtime="20210729 10:03:27.664"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:27.666" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:27.665" endtime="20210729 10:03:27.673"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:29.174" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:27.673" endtime="20210729 10:03:29.175"/>
</kw>
<status status="PASS" starttime="20210729 10:03:27.665" endtime="20210729 10:03:29.175"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:29.176" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:29.176" endtime="20210729 10:03:29.176"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:29.177" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:29.176" endtime="20210729 10:03:29.177"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:29.177" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:29.177" endtime="20210729 10:03:29.177"/>
</kw>
<msg timestamp="20210729 10:03:29.177" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:29.176" endtime="20210729 10:03:29.177"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:29.178" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:29.177" endtime="20210729 10:03:29.178"/>
</kw>
<status status="PASS" starttime="20210729 10:03:29.175" endtime="20210729 10:03:29.178"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:29.179" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:29.179" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:29.178" endtime="20210729 10:03:29.179"/>
</kw>
<status status="PASS" starttime="20210729 10:03:29.178" endtime="20210729 10:03:29.179"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:29.179" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:29.180" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:29.179" endtime="20210729 10:03:29.180"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:29.180" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:29.180" endtime="20210729 10:03:29.180"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:29.181" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:29.180" endtime="20210729 10:03:29.181"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:29.181" endtime="20210729 10:03:29.181"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:29.181" endtime="20210729 10:03:29.182"/>
</kw>
<status status="PASS" starttime="20210729 10:03:29.180" endtime="20210729 10:03:29.182"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:29.182" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:29.182" endtime="20210729 10:03:29.182"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:29.182" endtime="20210729 10:03:29.183"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:29.183" endtime="20210729 10:03:29.183"/>
</kw>
<status status="PASS" starttime="20210729 10:03:29.182" endtime="20210729 10:03:29.183"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:29.183" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:29.183" endtime="20210729 10:03:29.183"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:29.184" endtime="20210729 10:03:29.184"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:29.184" endtime="20210729 10:03:29.184"/>
</kw>
<status status="PASS" starttime="20210729 10:03:29.183" endtime="20210729 10:03:29.184"/>
</iter>
<status status="PASS" starttime="20210729 10:03:29.180" endtime="20210729 10:03:29.184"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:29.185" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:29.185" endtime="20210729 10:03:29.185"/>
</kw>
<status status="PASS" starttime="20210729 10:03:29.179" endtime="20210729 10:03:29.185"/>
</kw>
<status status="PASS" starttime="20210729 10:03:27.635" endtime="20210729 10:03:29.185"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/abc!g()=&amp;%¤fghjklQWERTY</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:29.186" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:29.186" endtime="20210729 10:03:29.186"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:29.187" level="INFO">${payload} = {'username': '#¤/abc!g()=&amp;%¤fghjklQWERTY'}</msg>
<status status="PASS" starttime="20210729 10:03:29.186" endtime="20210729 10:03:29.187"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:29.196" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:29.196" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:29.187" endtime="20210729 10:03:29.196"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:29.196" endtime="20210729 10:03:29.196"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:29.187" endtime="20210729 10:03:29.197"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:29.187" endtime="20210729 10:03:29.197"/>
</for>
<status status="FAIL" starttime="20210729 10:03:29.185" endtime="20210729 10:03:29.197"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:29.185" endtime="20210729 10:03:29.197"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/abc!g()=&amp;%¤fghjklQWERTY</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:29.198" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:29.198" endtime="20210729 10:03:29.198"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:29.198" level="INFO">${payload} = {'username': '#¤/abc!g()=&amp;%¤fghjklQWERTY'}</msg>
<status status="PASS" starttime="20210729 10:03:29.198" endtime="20210729 10:03:29.198"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:29.202" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:29.202" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:29.199" endtime="20210729 10:03:29.203"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:29.203" endtime="20210729 10:03:29.203"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:29.199" endtime="20210729 10:03:29.203"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:29.199" endtime="20210729 10:03:29.203"/>
</for>
<status status="FAIL" starttime="20210729 10:03:29.197" endtime="20210729 10:03:29.203"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:29.197" endtime="20210729 10:03:29.203"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/abc!g()=&amp;%¤fghjklQWERTY</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:29.204" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:29.204" endtime="20210729 10:03:29.204"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:29.204" level="INFO">${payload} = {'username': '#¤/abc!g()=&amp;%¤fghjklQWERTY'}</msg>
<status status="PASS" starttime="20210729 10:03:29.204" endtime="20210729 10:03:29.204"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:29.209" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:29.209" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:29.205" endtime="20210729 10:03:29.209"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:29.209" endtime="20210729 10:03:29.209"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:29.205" endtime="20210729 10:03:29.209"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:29.204" endtime="20210729 10:03:29.209"/>
</for>
<status status="FAIL" starttime="20210729 10:03:29.203" endtime="20210729 10:03:29.209"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:29.203" endtime="20210729 10:03:29.209"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:29.185" endtime="20210729 10:03:29.209"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:29.213" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:29.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:29.225" level="INFO">${pids} = 23641
23648
23653</msg>
<status status="PASS" starttime="20210729 10:03:29.210" endtime="20210729 10:03:29.225"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:29.227" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:29.226" endtime="20210729 10:03:29.227"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:29.227" level="INFO">${pids} = ['23641', '23648', '23653']</msg>
<status status="PASS" starttime="20210729 10:03:29.227" endtime="20210729 10:03:29.227"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23641</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:29.230" level="INFO">Running command 'kill 23641 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:29.228" endtime="20210729 10:03:29.230"/>
</kw>
<status status="PASS" starttime="20210729 10:03:29.227" endtime="20210729 10:03:29.230"/>
</iter>
<iter>
<var name="${pid}">23648</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:29.234" level="INFO">Running command 'kill 23648 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:29.231" endtime="20210729 10:03:29.234"/>
</kw>
<status status="PASS" starttime="20210729 10:03:29.231" endtime="20210729 10:03:29.234"/>
</iter>
<iter>
<var name="${pid}">23653</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:29.237" level="INFO">Running command 'kill 23653 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:29.234" endtime="20210729 10:03:29.237"/>
</kw>
<status status="PASS" starttime="20210729 10:03:29.234" endtime="20210729 10:03:29.237"/>
</iter>
<status status="PASS" starttime="20210729 10:03:29.227" endtime="20210729 10:03:29.237"/>
</for>
<status status="PASS" starttime="20210729 10:03:29.227" endtime="20210729 10:03:29.237"/>
</branch>
<status status="PASS" starttime="20210729 10:03:29.227" endtime="20210729 10:03:29.237"/>
</if>
<status status="PASS" starttime="20210729 10:03:29.210" endtime="20210729 10:03:29.238"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": '#¤/abc!g()=&amp;%¤fghjklQWERTY'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:27.634" endtime="20210729 10:03:29.238">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t23" name="With Any Valid Token, Updating Username Of Each System User With !# &amp;/¤% Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:29.243" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:29.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:29.252" level="INFO">${pids} = 23682</msg>
<status status="PASS" starttime="20210729 10:03:29.240" endtime="20210729 10:03:29.252"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:29.253" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:29.252" endtime="20210729 10:03:29.253"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:29.253" level="INFO">${pids} = ['23682']</msg>
<status status="PASS" starttime="20210729 10:03:29.253" endtime="20210729 10:03:29.253"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23682</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:29.258" level="INFO">Running command 'kill 23682 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:29.254" endtime="20210729 10:03:29.259"/>
</kw>
<status status="PASS" starttime="20210729 10:03:29.254" endtime="20210729 10:03:29.259"/>
</iter>
<status status="PASS" starttime="20210729 10:03:29.254" endtime="20210729 10:03:29.259"/>
</for>
<status status="PASS" starttime="20210729 10:03:29.253" endtime="20210729 10:03:29.259"/>
</branch>
<status status="PASS" starttime="20210729 10:03:29.253" endtime="20210729 10:03:29.259"/>
</if>
<status status="PASS" starttime="20210729 10:03:29.240" endtime="20210729 10:03:29.259"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:29.261" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:29.260" endtime="20210729 10:03:29.261"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:29.261" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:29.261" endtime="20210729 10:03:29.261"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:29.262" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:29.261" endtime="20210729 10:03:29.262"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:29.262" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:29.262" endtime="20210729 10:03:29.262"/>
</kw>
<msg timestamp="20210729 10:03:29.262" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:29.261" endtime="20210729 10:03:29.262"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:29.269" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:29.262" endtime="20210729 10:03:29.271"/>
</kw>
<status status="PASS" starttime="20210729 10:03:29.260" endtime="20210729 10:03:29.271"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:29.273" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:29.272" endtime="20210729 10:03:29.277"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:30.779" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:29.277" endtime="20210729 10:03:30.779"/>
</kw>
<status status="PASS" starttime="20210729 10:03:29.272" endtime="20210729 10:03:30.780"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:30.781" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:30.781" endtime="20210729 10:03:30.781"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:30.781" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:30.781" endtime="20210729 10:03:30.781"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:30.782" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:30.782" endtime="20210729 10:03:30.782"/>
</kw>
<msg timestamp="20210729 10:03:30.782" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:30.780" endtime="20210729 10:03:30.782"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:30.783" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:30.782" endtime="20210729 10:03:30.783"/>
</kw>
<status status="PASS" starttime="20210729 10:03:30.780" endtime="20210729 10:03:30.783"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:30.783" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:30.784" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:30.783" endtime="20210729 10:03:30.784"/>
</kw>
<status status="PASS" starttime="20210729 10:03:30.783" endtime="20210729 10:03:30.784"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:30.785" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:30.785" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:30.784" endtime="20210729 10:03:30.785"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:30.785" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:30.785" endtime="20210729 10:03:30.785"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:30.786" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:30.785" endtime="20210729 10:03:30.786"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:30.786" endtime="20210729 10:03:30.787"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:30.787" endtime="20210729 10:03:30.787"/>
</kw>
<status status="PASS" starttime="20210729 10:03:30.785" endtime="20210729 10:03:30.787"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:30.787" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:30.787" endtime="20210729 10:03:30.787"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:30.788" endtime="20210729 10:03:30.788"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:30.789" endtime="20210729 10:03:30.789"/>
</kw>
<status status="PASS" starttime="20210729 10:03:30.787" endtime="20210729 10:03:30.789"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:30.790" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:30.789" endtime="20210729 10:03:30.790"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:30.790" endtime="20210729 10:03:30.790"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:30.791" endtime="20210729 10:03:30.791"/>
</kw>
<status status="PASS" starttime="20210729 10:03:30.789" endtime="20210729 10:03:30.791"/>
</iter>
<status status="PASS" starttime="20210729 10:03:30.785" endtime="20210729 10:03:30.791"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:30.791" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:30.791" endtime="20210729 10:03:30.792"/>
</kw>
<status status="PASS" starttime="20210729 10:03:30.784" endtime="20210729 10:03:30.792"/>
</kw>
<status status="PASS" starttime="20210729 10:03:29.239" endtime="20210729 10:03:30.792"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!# &amp;/¤%</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:30.793" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:30.793" endtime="20210729 10:03:30.793"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:30.793" level="INFO">${payload} = {'username': '!# &amp;/¤%'}</msg>
<status status="PASS" starttime="20210729 10:03:30.793" endtime="20210729 10:03:30.793"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:30.801" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:30.802" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:30.794" endtime="20210729 10:03:30.802"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:30.802" endtime="20210729 10:03:30.802"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:30.793" endtime="20210729 10:03:30.802"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:30.793" endtime="20210729 10:03:30.802"/>
</for>
<status status="FAIL" starttime="20210729 10:03:30.792" endtime="20210729 10:03:30.802"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:30.792" endtime="20210729 10:03:30.802"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!# &amp;/¤%</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:30.803" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:30.803" endtime="20210729 10:03:30.803"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:30.804" level="INFO">${payload} = {'username': '!# &amp;/¤%'}</msg>
<status status="PASS" starttime="20210729 10:03:30.803" endtime="20210729 10:03:30.804"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:30.808" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:30.808" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:30.804" endtime="20210729 10:03:30.808"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:30.808" endtime="20210729 10:03:30.809"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:30.804" endtime="20210729 10:03:30.809"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:30.804" endtime="20210729 10:03:30.809"/>
</for>
<status status="FAIL" starttime="20210729 10:03:30.802" endtime="20210729 10:03:30.809"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:30.802" endtime="20210729 10:03:30.809"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!# &amp;/¤%</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:30.810" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:30.809" endtime="20210729 10:03:30.810"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:30.810" level="INFO">${payload} = {'username': '!# &amp;/¤%'}</msg>
<status status="PASS" starttime="20210729 10:03:30.810" endtime="20210729 10:03:30.810"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:30.814" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:30.814" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:30.810" endtime="20210729 10:03:30.814"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:30.814" endtime="20210729 10:03:30.814"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:30.810" endtime="20210729 10:03:30.814"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:30.810" endtime="20210729 10:03:30.814"/>
</for>
<status status="FAIL" starttime="20210729 10:03:30.809" endtime="20210729 10:03:30.814"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:30.809" endtime="20210729 10:03:30.814"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:30.792" endtime="20210729 10:03:30.814"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:30.818" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:30.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:30.830" level="INFO">${pids} = 23705
23712
23722</msg>
<status status="PASS" starttime="20210729 10:03:30.815" endtime="20210729 10:03:30.830"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:30.831" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:30.831" endtime="20210729 10:03:30.831"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:30.832" level="INFO">${pids} = ['23705', '23712', '23722']</msg>
<status status="PASS" starttime="20210729 10:03:30.832" endtime="20210729 10:03:30.832"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23705</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:30.835" level="INFO">Running command 'kill 23705 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:30.832" endtime="20210729 10:03:30.835"/>
</kw>
<status status="PASS" starttime="20210729 10:03:30.832" endtime="20210729 10:03:30.835"/>
</iter>
<iter>
<var name="${pid}">23712</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:30.839" level="INFO">Running command 'kill 23712 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:30.836" endtime="20210729 10:03:30.839"/>
</kw>
<status status="PASS" starttime="20210729 10:03:30.835" endtime="20210729 10:03:30.839"/>
</iter>
<iter>
<var name="${pid}">23722</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:30.843" level="INFO">Running command 'kill 23722 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:30.840" endtime="20210729 10:03:30.843"/>
</kw>
<status status="PASS" starttime="20210729 10:03:30.840" endtime="20210729 10:03:30.843"/>
</iter>
<status status="PASS" starttime="20210729 10:03:30.832" endtime="20210729 10:03:30.844"/>
</for>
<status status="PASS" starttime="20210729 10:03:30.832" endtime="20210729 10:03:30.844"/>
</branch>
<status status="PASS" starttime="20210729 10:03:30.831" endtime="20210729 10:03:30.844"/>
</if>
<status status="PASS" starttime="20210729 10:03:30.815" endtime="20210729 10:03:30.844"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": '!# &amp;/¤%'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:29.239" endtime="20210729 10:03:30.844">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t24" name="With Any Valid Token, Updating Username Of Each System User With !#%&amp;/¤ = Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:30.848" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:30.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:30.861" level="INFO">${pids} = 23751</msg>
<status status="PASS" starttime="20210729 10:03:30.846" endtime="20210729 10:03:30.861"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:30.862" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:30.862" endtime="20210729 10:03:30.862"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:30.863" level="INFO">${pids} = ['23751']</msg>
<status status="PASS" starttime="20210729 10:03:30.863" endtime="20210729 10:03:30.863"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23751</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:30.868" level="INFO">Running command 'kill 23751 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:30.863" endtime="20210729 10:03:30.869"/>
</kw>
<status status="PASS" starttime="20210729 10:03:30.863" endtime="20210729 10:03:30.869"/>
</iter>
<status status="PASS" starttime="20210729 10:03:30.863" endtime="20210729 10:03:30.869"/>
</for>
<status status="PASS" starttime="20210729 10:03:30.863" endtime="20210729 10:03:30.869"/>
</branch>
<status status="PASS" starttime="20210729 10:03:30.862" endtime="20210729 10:03:30.869"/>
</if>
<status status="PASS" starttime="20210729 10:03:30.845" endtime="20210729 10:03:30.870"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:30.871" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:30.870" endtime="20210729 10:03:30.871"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:30.877" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:30.877" endtime="20210729 10:03:30.877"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:30.878" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:30.877" endtime="20210729 10:03:30.878"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:30.878" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:30.878" endtime="20210729 10:03:30.878"/>
</kw>
<msg timestamp="20210729 10:03:30.879" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:30.877" endtime="20210729 10:03:30.879"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:30.882" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:30.879" endtime="20210729 10:03:30.884"/>
</kw>
<status status="PASS" starttime="20210729 10:03:30.870" endtime="20210729 10:03:30.884"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:30.886" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:30.885" endtime="20210729 10:03:30.890"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:32.392" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:30.891" endtime="20210729 10:03:32.392"/>
</kw>
<status status="PASS" starttime="20210729 10:03:30.885" endtime="20210729 10:03:32.393"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:32.394" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:32.393" endtime="20210729 10:03:32.394"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:32.394" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:32.394" endtime="20210729 10:03:32.394"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:32.394" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:32.394" endtime="20210729 10:03:32.394"/>
</kw>
<msg timestamp="20210729 10:03:32.394" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:32.393" endtime="20210729 10:03:32.395"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:32.395" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:32.395" endtime="20210729 10:03:32.395"/>
</kw>
<status status="PASS" starttime="20210729 10:03:32.393" endtime="20210729 10:03:32.395"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:32.396" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:32.396" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:32.396" endtime="20210729 10:03:32.396"/>
</kw>
<status status="PASS" starttime="20210729 10:03:32.396" endtime="20210729 10:03:32.396"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:32.397" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:32.397" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:32.397" endtime="20210729 10:03:32.397"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:32.397" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:32.397" endtime="20210729 10:03:32.398"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:32.398" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:32.398" endtime="20210729 10:03:32.398"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:32.398" endtime="20210729 10:03:32.399"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:32.399" endtime="20210729 10:03:32.399"/>
</kw>
<status status="PASS" starttime="20210729 10:03:32.398" endtime="20210729 10:03:32.399"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:32.400" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:32.399" endtime="20210729 10:03:32.400"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:32.400" endtime="20210729 10:03:32.400"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:32.400" endtime="20210729 10:03:32.401"/>
</kw>
<status status="PASS" starttime="20210729 10:03:32.399" endtime="20210729 10:03:32.401"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:32.401" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:32.401" endtime="20210729 10:03:32.401"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:32.401" endtime="20210729 10:03:32.402"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:32.402" endtime="20210729 10:03:32.402"/>
</kw>
<status status="PASS" starttime="20210729 10:03:32.401" endtime="20210729 10:03:32.402"/>
</iter>
<status status="PASS" starttime="20210729 10:03:32.398" endtime="20210729 10:03:32.402"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:32.403" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:32.402" endtime="20210729 10:03:32.403"/>
</kw>
<status status="PASS" starttime="20210729 10:03:32.396" endtime="20210729 10:03:32.403"/>
</kw>
<status status="PASS" starttime="20210729 10:03:30.845" endtime="20210729 10:03:32.403"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!#%&amp;/¤ =</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:32.404" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:32.404" endtime="20210729 10:03:32.404"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:32.404" level="INFO">${payload} = {'username': '!#%&amp;/¤ ='}</msg>
<status status="PASS" starttime="20210729 10:03:32.404" endtime="20210729 10:03:32.405"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:32.414" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:32.414" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:32.405" endtime="20210729 10:03:32.414"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:32.414" endtime="20210729 10:03:32.414"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:32.405" endtime="20210729 10:03:32.414"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:32.405" endtime="20210729 10:03:32.414"/>
</for>
<status status="FAIL" starttime="20210729 10:03:32.403" endtime="20210729 10:03:32.415"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:32.403" endtime="20210729 10:03:32.415"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!#%&amp;/¤ =</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:32.416" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:32.415" endtime="20210729 10:03:32.416"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:32.416" level="INFO">${payload} = {'username': '!#%&amp;/¤ ='}</msg>
<status status="PASS" starttime="20210729 10:03:32.416" endtime="20210729 10:03:32.416"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:32.422" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:32.422" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:32.417" endtime="20210729 10:03:32.422"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:32.423" endtime="20210729 10:03:32.423"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:32.416" endtime="20210729 10:03:32.423"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:32.416" endtime="20210729 10:03:32.423"/>
</for>
<status status="FAIL" starttime="20210729 10:03:32.415" endtime="20210729 10:03:32.423"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:32.415" endtime="20210729 10:03:32.423"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!#%&amp;/¤ =</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:32.425" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:32.424" endtime="20210729 10:03:32.425"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:32.425" level="INFO">${payload} = {'username': '!#%&amp;/¤ ='}</msg>
<status status="PASS" starttime="20210729 10:03:32.425" endtime="20210729 10:03:32.425"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:32.434" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:32.434" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:32.426" endtime="20210729 10:03:32.434"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:32.434" endtime="20210729 10:03:32.434"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:32.426" endtime="20210729 10:03:32.434"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:32.426" endtime="20210729 10:03:32.434"/>
</for>
<status status="FAIL" starttime="20210729 10:03:32.424" endtime="20210729 10:03:32.435"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:32.424" endtime="20210729 10:03:32.435"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:32.403" endtime="20210729 10:03:32.435"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:32.440" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:32.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:32.448" level="INFO">${pids} = 23774
23781
23785</msg>
<status status="PASS" starttime="20210729 10:03:32.436" endtime="20210729 10:03:32.448"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:32.449" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:32.448" endtime="20210729 10:03:32.449"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:32.449" level="INFO">${pids} = ['23774', '23781', '23785']</msg>
<status status="PASS" starttime="20210729 10:03:32.449" endtime="20210729 10:03:32.449"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23774</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:32.453" level="INFO">Running command 'kill 23774 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:32.450" endtime="20210729 10:03:32.453"/>
</kw>
<status status="PASS" starttime="20210729 10:03:32.449" endtime="20210729 10:03:32.453"/>
</iter>
<iter>
<var name="${pid}">23781</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:32.460" level="INFO">Running command 'kill 23781 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:32.454" endtime="20210729 10:03:32.461"/>
</kw>
<status status="PASS" starttime="20210729 10:03:32.453" endtime="20210729 10:03:32.461"/>
</iter>
<iter>
<var name="${pid}">23785</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:32.465" level="INFO">Running command 'kill 23785 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:32.461" endtime="20210729 10:03:32.465"/>
</kw>
<status status="PASS" starttime="20210729 10:03:32.461" endtime="20210729 10:03:32.465"/>
</iter>
<status status="PASS" starttime="20210729 10:03:32.449" endtime="20210729 10:03:32.465"/>
</for>
<status status="PASS" starttime="20210729 10:03:32.449" endtime="20210729 10:03:32.465"/>
</branch>
<status status="PASS" starttime="20210729 10:03:32.449" endtime="20210729 10:03:32.465"/>
</if>
<status status="PASS" starttime="20210729 10:03:32.435" endtime="20210729 10:03:32.466"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": '!#%&amp;/¤ ='
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:30.844" endtime="20210729 10:03:32.466">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t25" name="With Any Valid Token, Updating Username Of Each System User With !#%&amp;/¤%= ()=? Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:32.472" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:32.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:32.480" level="INFO">${pids} = 23814</msg>
<status status="PASS" starttime="20210729 10:03:32.468" endtime="20210729 10:03:32.480"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:32.481" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:32.480" endtime="20210729 10:03:32.481"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:32.481" level="INFO">${pids} = ['23814']</msg>
<status status="PASS" starttime="20210729 10:03:32.481" endtime="20210729 10:03:32.481"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23814</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:32.484" level="INFO">Running command 'kill 23814 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:32.482" endtime="20210729 10:03:32.484"/>
</kw>
<status status="PASS" starttime="20210729 10:03:32.481" endtime="20210729 10:03:32.485"/>
</iter>
<status status="PASS" starttime="20210729 10:03:32.481" endtime="20210729 10:03:32.485"/>
</for>
<status status="PASS" starttime="20210729 10:03:32.481" endtime="20210729 10:03:32.485"/>
</branch>
<status status="PASS" starttime="20210729 10:03:32.481" endtime="20210729 10:03:32.485"/>
</if>
<status status="PASS" starttime="20210729 10:03:32.468" endtime="20210729 10:03:32.485"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:32.486" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:32.486" endtime="20210729 10:03:32.486"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:32.487" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:32.486" endtime="20210729 10:03:32.487"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:32.487" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:32.487" endtime="20210729 10:03:32.487"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:32.487" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:32.487" endtime="20210729 10:03:32.487"/>
</kw>
<msg timestamp="20210729 10:03:32.488" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:32.486" endtime="20210729 10:03:32.488"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:32.495" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:32.488" endtime="20210729 10:03:32.496"/>
</kw>
<status status="PASS" starttime="20210729 10:03:32.485" endtime="20210729 10:03:32.497"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:32.498" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:32.497" endtime="20210729 10:03:32.502"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:34.004" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:32.502" endtime="20210729 10:03:34.004"/>
</kw>
<status status="PASS" starttime="20210729 10:03:32.497" endtime="20210729 10:03:34.004"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:34.006" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:34.006" endtime="20210729 10:03:34.006"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:34.006" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:34.006" endtime="20210729 10:03:34.007"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:34.007" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:34.007" endtime="20210729 10:03:34.007"/>
</kw>
<msg timestamp="20210729 10:03:34.007" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:34.005" endtime="20210729 10:03:34.007"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:34.008" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:34.007" endtime="20210729 10:03:34.008"/>
</kw>
<status status="PASS" starttime="20210729 10:03:34.005" endtime="20210729 10:03:34.008"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:34.009" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:34.009" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:34.009" endtime="20210729 10:03:34.009"/>
</kw>
<status status="PASS" starttime="20210729 10:03:34.008" endtime="20210729 10:03:34.009"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:34.010" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:34.010" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:34.010" endtime="20210729 10:03:34.010"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:34.010" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:34.010" endtime="20210729 10:03:34.010"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:34.011" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:34.011" endtime="20210729 10:03:34.011"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:34.011" endtime="20210729 10:03:34.012"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:34.012" endtime="20210729 10:03:34.012"/>
</kw>
<status status="PASS" starttime="20210729 10:03:34.011" endtime="20210729 10:03:34.012"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:34.012" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:34.012" endtime="20210729 10:03:34.012"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:34.013" endtime="20210729 10:03:34.013"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:34.013" endtime="20210729 10:03:34.013"/>
</kw>
<status status="PASS" starttime="20210729 10:03:34.012" endtime="20210729 10:03:34.013"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:34.014" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:34.014" endtime="20210729 10:03:34.014"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:34.014" endtime="20210729 10:03:34.014"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:34.015" endtime="20210729 10:03:34.015"/>
</kw>
<status status="PASS" starttime="20210729 10:03:34.013" endtime="20210729 10:03:34.015"/>
</iter>
<status status="PASS" starttime="20210729 10:03:34.010" endtime="20210729 10:03:34.015"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:34.015" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:34.015" endtime="20210729 10:03:34.015"/>
</kw>
<status status="PASS" starttime="20210729 10:03:34.009" endtime="20210729 10:03:34.015"/>
</kw>
<status status="PASS" starttime="20210729 10:03:32.467" endtime="20210729 10:03:34.015"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!#%&amp;/¤%= ()=?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:34.017" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:34.016" endtime="20210729 10:03:34.017"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:34.017" level="INFO">${payload} = {'username': '!#%&amp;/¤%= ()=?'}</msg>
<status status="PASS" starttime="20210729 10:03:34.017" endtime="20210729 10:03:34.017"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:34.028" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:34.029" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:34.017" endtime="20210729 10:03:34.029"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:34.029" endtime="20210729 10:03:34.029"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:34.017" endtime="20210729 10:03:34.029"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:34.017" endtime="20210729 10:03:34.029"/>
</for>
<status status="FAIL" starttime="20210729 10:03:34.016" endtime="20210729 10:03:34.029"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:34.016" endtime="20210729 10:03:34.029"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!#%&amp;/¤%= ()=?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:34.030" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:34.030" endtime="20210729 10:03:34.030"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:34.031" level="INFO">${payload} = {'username': '!#%&amp;/¤%= ()=?'}</msg>
<status status="PASS" starttime="20210729 10:03:34.030" endtime="20210729 10:03:34.031"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:34.034" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:34.035" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:34.031" endtime="20210729 10:03:34.035"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:34.035" endtime="20210729 10:03:34.035"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:34.031" endtime="20210729 10:03:34.035"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:34.031" endtime="20210729 10:03:34.035"/>
</for>
<status status="FAIL" starttime="20210729 10:03:34.029" endtime="20210729 10:03:34.035"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:34.029" endtime="20210729 10:03:34.035"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!#%&amp;/¤%= ()=?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:34.036" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:34.036" endtime="20210729 10:03:34.036"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:34.036" level="INFO">${payload} = {'username': '!#%&amp;/¤%= ()=?'}</msg>
<status status="PASS" starttime="20210729 10:03:34.036" endtime="20210729 10:03:34.037"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:34.040" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:34.041" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:34.037" endtime="20210729 10:03:34.041"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:34.041" endtime="20210729 10:03:34.041"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:34.037" endtime="20210729 10:03:34.041"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:34.037" endtime="20210729 10:03:34.041"/>
</for>
<status status="FAIL" starttime="20210729 10:03:34.035" endtime="20210729 10:03:34.041"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:34.035" endtime="20210729 10:03:34.041"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:34.016" endtime="20210729 10:03:34.041"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:34.047" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:34.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:34.057" level="INFO">${pids} = 23837
23844
23849</msg>
<status status="PASS" starttime="20210729 10:03:34.042" endtime="20210729 10:03:34.057"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:34.058" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:34.057" endtime="20210729 10:03:34.058"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:34.058" level="INFO">${pids} = ['23837', '23844', '23849']</msg>
<status status="PASS" starttime="20210729 10:03:34.058" endtime="20210729 10:03:34.058"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23837</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:34.062" level="INFO">Running command 'kill 23837 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:34.059" endtime="20210729 10:03:34.062"/>
</kw>
<status status="PASS" starttime="20210729 10:03:34.059" endtime="20210729 10:03:34.062"/>
</iter>
<iter>
<var name="${pid}">23844</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:34.065" level="INFO">Running command 'kill 23844 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:34.062" endtime="20210729 10:03:34.065"/>
</kw>
<status status="PASS" starttime="20210729 10:03:34.062" endtime="20210729 10:03:34.065"/>
</iter>
<iter>
<var name="${pid}">23849</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:34.068" level="INFO">Running command 'kill 23849 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:34.066" endtime="20210729 10:03:34.069"/>
</kw>
<status status="PASS" starttime="20210729 10:03:34.065" endtime="20210729 10:03:34.069"/>
</iter>
<status status="PASS" starttime="20210729 10:03:34.058" endtime="20210729 10:03:34.069"/>
</for>
<status status="PASS" starttime="20210729 10:03:34.058" endtime="20210729 10:03:34.069"/>
</branch>
<status status="PASS" starttime="20210729 10:03:34.058" endtime="20210729 10:03:34.069"/>
</if>
<status status="PASS" starttime="20210729 10:03:34.041" endtime="20210729 10:03:34.069"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": '!#%&amp;/¤%= ()=?'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:32.466" endtime="20210729 10:03:34.069">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t26" name="With Any Valid Token, Updating Username Of Each System User With 1234 67 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:34.074" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:34.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:34.087" level="INFO">${pids} = 23878</msg>
<status status="PASS" starttime="20210729 10:03:34.071" endtime="20210729 10:03:34.087"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:34.088" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:34.087" endtime="20210729 10:03:34.088"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:34.089" level="INFO">${pids} = ['23878']</msg>
<status status="PASS" starttime="20210729 10:03:34.088" endtime="20210729 10:03:34.089"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23878</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:34.093" level="INFO">Running command 'kill 23878 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:34.090" endtime="20210729 10:03:34.094"/>
</kw>
<status status="PASS" starttime="20210729 10:03:34.089" endtime="20210729 10:03:34.094"/>
</iter>
<status status="PASS" starttime="20210729 10:03:34.089" endtime="20210729 10:03:34.094"/>
</for>
<status status="PASS" starttime="20210729 10:03:34.088" endtime="20210729 10:03:34.094"/>
</branch>
<status status="PASS" starttime="20210729 10:03:34.088" endtime="20210729 10:03:34.094"/>
</if>
<status status="PASS" starttime="20210729 10:03:34.071" endtime="20210729 10:03:34.102"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:34.104" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:34.103" endtime="20210729 10:03:34.104"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:34.104" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:34.104" endtime="20210729 10:03:34.105"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:34.105" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:34.105" endtime="20210729 10:03:34.105"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:34.106" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:34.105" endtime="20210729 10:03:34.106"/>
</kw>
<msg timestamp="20210729 10:03:34.106" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:34.104" endtime="20210729 10:03:34.106"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:34.109" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:34.106" endtime="20210729 10:03:34.110"/>
</kw>
<status status="PASS" starttime="20210729 10:03:34.103" endtime="20210729 10:03:34.111"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:34.112" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:34.111" endtime="20210729 10:03:34.120"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:35.626" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:34.121" endtime="20210729 10:03:35.627"/>
</kw>
<status status="PASS" starttime="20210729 10:03:34.111" endtime="20210729 10:03:35.627"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:35.628" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:35.628" endtime="20210729 10:03:35.628"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:35.628" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:35.628" endtime="20210729 10:03:35.628"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:35.629" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:35.629" endtime="20210729 10:03:35.629"/>
</kw>
<msg timestamp="20210729 10:03:35.629" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:35.628" endtime="20210729 10:03:35.629"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:35.629" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:35.629" endtime="20210729 10:03:35.630"/>
</kw>
<status status="PASS" starttime="20210729 10:03:35.627" endtime="20210729 10:03:35.630"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:35.630" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:35.630" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:35.630" endtime="20210729 10:03:35.630"/>
</kw>
<status status="PASS" starttime="20210729 10:03:35.630" endtime="20210729 10:03:35.631"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:35.631" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:35.631" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:35.631" endtime="20210729 10:03:35.631"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:35.632" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:35.631" endtime="20210729 10:03:35.632"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:35.632" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:35.632" endtime="20210729 10:03:35.632"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:35.632" endtime="20210729 10:03:35.633"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:35.633" endtime="20210729 10:03:35.633"/>
</kw>
<status status="PASS" starttime="20210729 10:03:35.632" endtime="20210729 10:03:35.633"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:35.634" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:35.633" endtime="20210729 10:03:35.634"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:35.634" endtime="20210729 10:03:35.634"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:35.634" endtime="20210729 10:03:35.635"/>
</kw>
<status status="PASS" starttime="20210729 10:03:35.633" endtime="20210729 10:03:35.635"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:35.635" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:35.635" endtime="20210729 10:03:35.635"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:35.635" endtime="20210729 10:03:35.636"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:35.636" endtime="20210729 10:03:35.636"/>
</kw>
<status status="PASS" starttime="20210729 10:03:35.635" endtime="20210729 10:03:35.636"/>
</iter>
<status status="PASS" starttime="20210729 10:03:35.632" endtime="20210729 10:03:35.636"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:35.637" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:35.636" endtime="20210729 10:03:35.637"/>
</kw>
<status status="PASS" starttime="20210729 10:03:35.631" endtime="20210729 10:03:35.637"/>
</kw>
<status status="PASS" starttime="20210729 10:03:34.070" endtime="20210729 10:03:35.637"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=1234 67</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:35.638" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:35.638" endtime="20210729 10:03:35.638"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:35.638" level="INFO">${payload} = {'username': '1234 67'}</msg>
<status status="PASS" starttime="20210729 10:03:35.638" endtime="20210729 10:03:35.638"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:35.648" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:35.648" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:35.639" endtime="20210729 10:03:35.648"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:35.649" endtime="20210729 10:03:35.649"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:35.639" endtime="20210729 10:03:35.649"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:35.638" endtime="20210729 10:03:35.649"/>
</for>
<status status="FAIL" starttime="20210729 10:03:35.637" endtime="20210729 10:03:35.650"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:35.637" endtime="20210729 10:03:35.650"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=1234 67</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:35.652" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:35.652" endtime="20210729 10:03:35.652"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:35.653" level="INFO">${payload} = {'username': '1234 67'}</msg>
<status status="PASS" starttime="20210729 10:03:35.652" endtime="20210729 10:03:35.653"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:35.657" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:35.657" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:35.653" endtime="20210729 10:03:35.657"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:35.657" endtime="20210729 10:03:35.657"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:35.653" endtime="20210729 10:03:35.657"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:35.653" endtime="20210729 10:03:35.657"/>
</for>
<status status="FAIL" starttime="20210729 10:03:35.650" endtime="20210729 10:03:35.658"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:35.650" endtime="20210729 10:03:35.658"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=1234 67</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:35.659" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:35.658" endtime="20210729 10:03:35.659"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:35.659" level="INFO">${payload} = {'username': '1234 67'}</msg>
<status status="PASS" starttime="20210729 10:03:35.659" endtime="20210729 10:03:35.659"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:35.663" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:35.663" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:35.659" endtime="20210729 10:03:35.663"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:35.663" endtime="20210729 10:03:35.663"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:35.659" endtime="20210729 10:03:35.663"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:35.659" endtime="20210729 10:03:35.663"/>
</for>
<status status="FAIL" starttime="20210729 10:03:35.658" endtime="20210729 10:03:35.664"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:35.658" endtime="20210729 10:03:35.664"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:35.637" endtime="20210729 10:03:35.664"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:35.669" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:35.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:35.679" level="INFO">${pids} = 23901
23908
23912</msg>
<status status="PASS" starttime="20210729 10:03:35.665" endtime="20210729 10:03:35.680"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:35.680" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:35.680" endtime="20210729 10:03:35.680"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:35.681" level="INFO">${pids} = ['23901', '23908', '23912']</msg>
<status status="PASS" starttime="20210729 10:03:35.681" endtime="20210729 10:03:35.681"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23901</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:35.684" level="INFO">Running command 'kill 23901 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:35.681" endtime="20210729 10:03:35.684"/>
</kw>
<status status="PASS" starttime="20210729 10:03:35.681" endtime="20210729 10:03:35.684"/>
</iter>
<iter>
<var name="${pid}">23908</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:35.687" level="INFO">Running command 'kill 23908 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:35.685" endtime="20210729 10:03:35.688"/>
</kw>
<status status="PASS" starttime="20210729 10:03:35.684" endtime="20210729 10:03:35.688"/>
</iter>
<iter>
<var name="${pid}">23912</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:35.696" level="INFO">Running command 'kill 23912 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:35.689" endtime="20210729 10:03:35.697"/>
</kw>
<status status="PASS" starttime="20210729 10:03:35.688" endtime="20210729 10:03:35.697"/>
</iter>
<status status="PASS" starttime="20210729 10:03:35.681" endtime="20210729 10:03:35.697"/>
</for>
<status status="PASS" starttime="20210729 10:03:35.681" endtime="20210729 10:03:35.697"/>
</branch>
<status status="PASS" starttime="20210729 10:03:35.680" endtime="20210729 10:03:35.697"/>
</if>
<status status="PASS" starttime="20210729 10:03:35.664" endtime="20210729 10:03:35.697"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": '1234 67'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:34.070" endtime="20210729 10:03:35.697">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t27" name="With Any Valid Token, Updating Username Of Each System User With 123456 8 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:35.703" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:35.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:35.712" level="INFO">${pids} = 23941</msg>
<status status="PASS" starttime="20210729 10:03:35.699" endtime="20210729 10:03:35.712"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:35.713" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:35.712" endtime="20210729 10:03:35.713"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:35.714" level="INFO">${pids} = ['23941']</msg>
<status status="PASS" starttime="20210729 10:03:35.713" endtime="20210729 10:03:35.714"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23941</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:35.722" level="INFO">Running command 'kill 23941 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:35.714" endtime="20210729 10:03:35.723"/>
</kw>
<status status="PASS" starttime="20210729 10:03:35.714" endtime="20210729 10:03:35.723"/>
</iter>
<status status="PASS" starttime="20210729 10:03:35.714" endtime="20210729 10:03:35.723"/>
</for>
<status status="PASS" starttime="20210729 10:03:35.713" endtime="20210729 10:03:35.723"/>
</branch>
<status status="PASS" starttime="20210729 10:03:35.713" endtime="20210729 10:03:35.723"/>
</if>
<status status="PASS" starttime="20210729 10:03:35.699" endtime="20210729 10:03:35.724"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:35.725" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:35.725" endtime="20210729 10:03:35.725"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:35.726" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:35.725" endtime="20210729 10:03:35.726"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:35.727" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:35.726" endtime="20210729 10:03:35.727"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:35.727" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:35.727" endtime="20210729 10:03:35.727"/>
</kw>
<msg timestamp="20210729 10:03:35.727" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:35.725" endtime="20210729 10:03:35.727"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:35.732" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:35.727" endtime="20210729 10:03:35.733"/>
</kw>
<status status="PASS" starttime="20210729 10:03:35.724" endtime="20210729 10:03:35.733"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:35.734" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:35.734" endtime="20210729 10:03:35.738"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:37.244" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:35.739" endtime="20210729 10:03:37.244"/>
</kw>
<status status="PASS" starttime="20210729 10:03:35.734" endtime="20210729 10:03:37.244"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:37.245" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:37.245" endtime="20210729 10:03:37.245"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:37.246" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:37.246" endtime="20210729 10:03:37.246"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:37.246" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:37.246" endtime="20210729 10:03:37.246"/>
</kw>
<msg timestamp="20210729 10:03:37.247" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:37.245" endtime="20210729 10:03:37.247"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:37.247" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:37.247" endtime="20210729 10:03:37.247"/>
</kw>
<status status="PASS" starttime="20210729 10:03:37.244" endtime="20210729 10:03:37.247"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:37.248" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:37.248" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:37.248" endtime="20210729 10:03:37.248"/>
</kw>
<status status="PASS" starttime="20210729 10:03:37.247" endtime="20210729 10:03:37.248"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:37.249" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:37.249" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:37.248" endtime="20210729 10:03:37.249"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:37.249" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:37.249" endtime="20210729 10:03:37.249"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:37.250" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:37.249" endtime="20210729 10:03:37.250"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:37.250" endtime="20210729 10:03:37.251"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:37.251" endtime="20210729 10:03:37.251"/>
</kw>
<status status="PASS" starttime="20210729 10:03:37.249" endtime="20210729 10:03:37.251"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:37.251" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:37.251" endtime="20210729 10:03:37.251"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:37.252" endtime="20210729 10:03:37.252"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:37.252" endtime="20210729 10:03:37.252"/>
</kw>
<status status="PASS" starttime="20210729 10:03:37.251" endtime="20210729 10:03:37.252"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:37.253" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:37.253" endtime="20210729 10:03:37.253"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:37.253" endtime="20210729 10:03:37.254"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:37.254" endtime="20210729 10:03:37.254"/>
</kw>
<status status="PASS" starttime="20210729 10:03:37.253" endtime="20210729 10:03:37.254"/>
</iter>
<status status="PASS" starttime="20210729 10:03:37.249" endtime="20210729 10:03:37.254"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:37.254" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:37.254" endtime="20210729 10:03:37.254"/>
</kw>
<status status="PASS" starttime="20210729 10:03:37.248" endtime="20210729 10:03:37.255"/>
</kw>
<status status="PASS" starttime="20210729 10:03:35.699" endtime="20210729 10:03:37.255"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=123456 8</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:37.257" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:37.257" endtime="20210729 10:03:37.257"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:37.258" level="INFO">${payload} = {'username': '123456 8'}</msg>
<status status="PASS" starttime="20210729 10:03:37.257" endtime="20210729 10:03:37.258"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:37.267" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:37.267" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:37.258" endtime="20210729 10:03:37.267"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:37.267" endtime="20210729 10:03:37.267"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:37.258" endtime="20210729 10:03:37.268"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:37.258" endtime="20210729 10:03:37.268"/>
</for>
<status status="FAIL" starttime="20210729 10:03:37.255" endtime="20210729 10:03:37.268"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:37.255" endtime="20210729 10:03:37.268"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=123456 8</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:37.269" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:37.268" endtime="20210729 10:03:37.269"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:37.269" level="INFO">${payload} = {'username': '123456 8'}</msg>
<status status="PASS" starttime="20210729 10:03:37.269" endtime="20210729 10:03:37.269"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:37.273" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:37.274" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:37.269" endtime="20210729 10:03:37.274"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:37.274" endtime="20210729 10:03:37.274"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:37.269" endtime="20210729 10:03:37.274"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:37.269" endtime="20210729 10:03:37.274"/>
</for>
<status status="FAIL" starttime="20210729 10:03:37.268" endtime="20210729 10:03:37.274"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:37.268" endtime="20210729 10:03:37.274"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=123456 8</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:37.275" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:37.275" endtime="20210729 10:03:37.275"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:37.276" level="INFO">${payload} = {'username': '123456 8'}</msg>
<status status="PASS" starttime="20210729 10:03:37.275" endtime="20210729 10:03:37.276"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:37.280" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:37.280" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:37.276" endtime="20210729 10:03:37.280"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:37.280" endtime="20210729 10:03:37.280"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:37.276" endtime="20210729 10:03:37.280"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:37.276" endtime="20210729 10:03:37.280"/>
</for>
<status status="FAIL" starttime="20210729 10:03:37.274" endtime="20210729 10:03:37.280"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:37.274" endtime="20210729 10:03:37.280"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:37.255" endtime="20210729 10:03:37.280"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:37.289" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:37.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:37.298" level="INFO">${pids} = 23964
23971
23982</msg>
<status status="PASS" starttime="20210729 10:03:37.281" endtime="20210729 10:03:37.298"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:37.299" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:37.298" endtime="20210729 10:03:37.299"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:37.299" level="INFO">${pids} = ['23964', '23971', '23982']</msg>
<status status="PASS" starttime="20210729 10:03:37.299" endtime="20210729 10:03:37.299"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">23964</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:37.302" level="INFO">Running command 'kill 23964 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:37.300" endtime="20210729 10:03:37.303"/>
</kw>
<status status="PASS" starttime="20210729 10:03:37.300" endtime="20210729 10:03:37.303"/>
</iter>
<iter>
<var name="${pid}">23971</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:37.307" level="INFO">Running command 'kill 23971 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:37.303" endtime="20210729 10:03:37.307"/>
</kw>
<status status="PASS" starttime="20210729 10:03:37.303" endtime="20210729 10:03:37.308"/>
</iter>
<iter>
<var name="${pid}">23982</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:37.311" level="INFO">Running command 'kill 23982 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:37.308" endtime="20210729 10:03:37.311"/>
</kw>
<status status="PASS" starttime="20210729 10:03:37.308" endtime="20210729 10:03:37.311"/>
</iter>
<status status="PASS" starttime="20210729 10:03:37.299" endtime="20210729 10:03:37.312"/>
</for>
<status status="PASS" starttime="20210729 10:03:37.299" endtime="20210729 10:03:37.312"/>
</branch>
<status status="PASS" starttime="20210729 10:03:37.299" endtime="20210729 10:03:37.312"/>
</if>
<status status="PASS" starttime="20210729 10:03:37.281" endtime="20210729 10:03:37.312"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": '123456 8'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:35.698" endtime="20210729 10:03:37.312">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t28" name="With Any Valid Token, Updating Username Of Each System User With 12345678 12345 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:37.322" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:37.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:37.331" level="INFO">${pids} = 24011</msg>
<status status="PASS" starttime="20210729 10:03:37.314" endtime="20210729 10:03:37.331"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:37.332" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:37.332" endtime="20210729 10:03:37.332"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:37.333" level="INFO">${pids} = ['24011']</msg>
<status status="PASS" starttime="20210729 10:03:37.333" endtime="20210729 10:03:37.333"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24011</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:37.336" level="INFO">Running command 'kill 24011 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:37.333" endtime="20210729 10:03:37.336"/>
</kw>
<status status="PASS" starttime="20210729 10:03:37.333" endtime="20210729 10:03:37.336"/>
</iter>
<status status="PASS" starttime="20210729 10:03:37.333" endtime="20210729 10:03:37.336"/>
</for>
<status status="PASS" starttime="20210729 10:03:37.332" endtime="20210729 10:03:37.336"/>
</branch>
<status status="PASS" starttime="20210729 10:03:37.332" endtime="20210729 10:03:37.336"/>
</if>
<status status="PASS" starttime="20210729 10:03:37.314" endtime="20210729 10:03:37.337"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:37.338" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:37.337" endtime="20210729 10:03:37.338"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:37.338" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:37.338" endtime="20210729 10:03:37.338"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:37.338" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:37.338" endtime="20210729 10:03:37.339"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:37.339" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:37.339" endtime="20210729 10:03:37.339"/>
</kw>
<msg timestamp="20210729 10:03:37.339" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:37.338" endtime="20210729 10:03:37.339"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:37.346" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:37.339" endtime="20210729 10:03:37.348"/>
</kw>
<status status="PASS" starttime="20210729 10:03:37.337" endtime="20210729 10:03:37.348"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:37.349" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:37.349" endtime="20210729 10:03:37.353"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:38.855" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:37.353" endtime="20210729 10:03:38.856"/>
</kw>
<status status="PASS" starttime="20210729 10:03:37.348" endtime="20210729 10:03:38.857"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:38.860" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:38.859" endtime="20210729 10:03:38.860"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:38.860" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:38.860" endtime="20210729 10:03:38.860"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:38.860" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:38.860" endtime="20210729 10:03:38.860"/>
</kw>
<msg timestamp="20210729 10:03:38.860" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:38.859" endtime="20210729 10:03:38.860"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:38.861" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:38.861" endtime="20210729 10:03:38.861"/>
</kw>
<status status="PASS" starttime="20210729 10:03:38.857" endtime="20210729 10:03:38.861"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:38.862" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:38.862" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:38.862" endtime="20210729 10:03:38.862"/>
</kw>
<status status="PASS" starttime="20210729 10:03:38.861" endtime="20210729 10:03:38.862"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:38.863" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:38.863" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:38.863" endtime="20210729 10:03:38.863"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:38.863" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:38.863" endtime="20210729 10:03:38.863"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:38.864" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:38.864" endtime="20210729 10:03:38.864"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:38.864" endtime="20210729 10:03:38.865"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:38.865" endtime="20210729 10:03:38.865"/>
</kw>
<status status="PASS" starttime="20210729 10:03:38.864" endtime="20210729 10:03:38.865"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:38.865" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:38.865" endtime="20210729 10:03:38.865"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:38.865" endtime="20210729 10:03:38.866"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:38.866" endtime="20210729 10:03:38.866"/>
</kw>
<status status="PASS" starttime="20210729 10:03:38.865" endtime="20210729 10:03:38.866"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:38.867" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:38.867" endtime="20210729 10:03:38.867"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:38.867" endtime="20210729 10:03:38.867"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:38.868" endtime="20210729 10:03:38.868"/>
</kw>
<status status="PASS" starttime="20210729 10:03:38.866" endtime="20210729 10:03:38.868"/>
</iter>
<status status="PASS" starttime="20210729 10:03:38.863" endtime="20210729 10:03:38.868"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:38.868" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:38.868" endtime="20210729 10:03:38.868"/>
</kw>
<status status="PASS" starttime="20210729 10:03:38.862" endtime="20210729 10:03:38.868"/>
</kw>
<status status="PASS" starttime="20210729 10:03:37.313" endtime="20210729 10:03:38.868"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=12345678 12345</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:38.869" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:38.869" endtime="20210729 10:03:38.869"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:38.870" level="INFO">${payload} = {'username': '12345678 12345'}</msg>
<status status="PASS" starttime="20210729 10:03:38.870" endtime="20210729 10:03:38.870"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:38.880" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:38.880" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:38.870" endtime="20210729 10:03:38.880"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:38.880" endtime="20210729 10:03:38.880"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:38.870" endtime="20210729 10:03:38.880"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:38.870" endtime="20210729 10:03:38.880"/>
</for>
<status status="FAIL" starttime="20210729 10:03:38.869" endtime="20210729 10:03:38.881"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:38.869" endtime="20210729 10:03:38.881"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=12345678 12345</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:38.882" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:38.881" endtime="20210729 10:03:38.882"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:38.882" level="INFO">${payload} = {'username': '12345678 12345'}</msg>
<status status="PASS" starttime="20210729 10:03:38.882" endtime="20210729 10:03:38.882"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:38.886" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:38.886" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:38.882" endtime="20210729 10:03:38.886"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:38.886" endtime="20210729 10:03:38.886"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:38.882" endtime="20210729 10:03:38.886"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:38.882" endtime="20210729 10:03:38.886"/>
</for>
<status status="FAIL" starttime="20210729 10:03:38.881" endtime="20210729 10:03:38.887"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:38.881" endtime="20210729 10:03:38.887"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=12345678 12345</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:38.888" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:38.887" endtime="20210729 10:03:38.888"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:38.889" level="INFO">${payload} = {'username': '12345678 12345'}</msg>
<status status="PASS" starttime="20210729 10:03:38.888" endtime="20210729 10:03:38.889"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:38.894" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:38.894" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:38.890" endtime="20210729 10:03:38.894"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:38.894" endtime="20210729 10:03:38.894"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:38.890" endtime="20210729 10:03:38.894"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:38.889" endtime="20210729 10:03:38.895"/>
</for>
<status status="FAIL" starttime="20210729 10:03:38.887" endtime="20210729 10:03:38.895"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:38.887" endtime="20210729 10:03:38.895"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:38.869" endtime="20210729 10:03:38.895"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:38.900" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:38.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:38.911" level="INFO">${pids} = 24034
24041
24046</msg>
<status status="PASS" starttime="20210729 10:03:38.895" endtime="20210729 10:03:38.911"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:38.912" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:38.911" endtime="20210729 10:03:38.912"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:38.912" level="INFO">${pids} = ['24034', '24041', '24046']</msg>
<status status="PASS" starttime="20210729 10:03:38.912" endtime="20210729 10:03:38.912"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24034</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:38.916" level="INFO">Running command 'kill 24034 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:38.913" endtime="20210729 10:03:38.916"/>
</kw>
<status status="PASS" starttime="20210729 10:03:38.912" endtime="20210729 10:03:38.916"/>
</iter>
<iter>
<var name="${pid}">24041</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:38.919" level="INFO">Running command 'kill 24041 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:38.917" endtime="20210729 10:03:38.921"/>
</kw>
<status status="PASS" starttime="20210729 10:03:38.916" endtime="20210729 10:03:38.921"/>
</iter>
<iter>
<var name="${pid}">24046</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:38.927" level="INFO">Running command 'kill 24046 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:38.921" endtime="20210729 10:03:38.927"/>
</kw>
<status status="PASS" starttime="20210729 10:03:38.921" endtime="20210729 10:03:38.927"/>
</iter>
<status status="PASS" starttime="20210729 10:03:38.912" endtime="20210729 10:03:38.928"/>
</for>
<status status="PASS" starttime="20210729 10:03:38.912" endtime="20210729 10:03:38.928"/>
</branch>
<status status="PASS" starttime="20210729 10:03:38.912" endtime="20210729 10:03:38.928"/>
</if>
<status status="PASS" starttime="20210729 10:03:38.895" endtime="20210729 10:03:38.928"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": '12345678 12345'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:37.313" endtime="20210729 10:03:38.928">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t29" name="With Any Valid Token, Updating Username Of Each System User With abcd fg Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:38.936" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:38.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:38.944" level="INFO">${pids} = 24075</msg>
<status status="PASS" starttime="20210729 10:03:38.930" endtime="20210729 10:03:38.944"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:38.945" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:38.944" endtime="20210729 10:03:38.945"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:38.945" level="INFO">${pids} = ['24075']</msg>
<status status="PASS" starttime="20210729 10:03:38.945" endtime="20210729 10:03:38.945"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24075</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:38.949" level="INFO">Running command 'kill 24075 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:38.946" endtime="20210729 10:03:38.949"/>
</kw>
<status status="PASS" starttime="20210729 10:03:38.946" endtime="20210729 10:03:38.949"/>
</iter>
<status status="PASS" starttime="20210729 10:03:38.946" endtime="20210729 10:03:38.949"/>
</for>
<status status="PASS" starttime="20210729 10:03:38.945" endtime="20210729 10:03:38.949"/>
</branch>
<status status="PASS" starttime="20210729 10:03:38.945" endtime="20210729 10:03:38.949"/>
</if>
<status status="PASS" starttime="20210729 10:03:38.930" endtime="20210729 10:03:38.950"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:38.950" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:38.950" endtime="20210729 10:03:38.951"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:38.951" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:38.951" endtime="20210729 10:03:38.951"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:38.951" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:38.951" endtime="20210729 10:03:38.951"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:38.952" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:38.952" endtime="20210729 10:03:38.952"/>
</kw>
<msg timestamp="20210729 10:03:38.952" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:38.951" endtime="20210729 10:03:38.952"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:38.954" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:38.952" endtime="20210729 10:03:38.956"/>
</kw>
<status status="PASS" starttime="20210729 10:03:38.950" endtime="20210729 10:03:38.957"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:38.960" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:38.959" endtime="20210729 10:03:38.967"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:40.486" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:38.967" endtime="20210729 10:03:40.487"/>
</kw>
<status status="PASS" starttime="20210729 10:03:38.957" endtime="20210729 10:03:40.488"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:40.491" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:40.490" endtime="20210729 10:03:40.491"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:40.491" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:40.491" endtime="20210729 10:03:40.491"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:40.492" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:40.491" endtime="20210729 10:03:40.492"/>
</kw>
<msg timestamp="20210729 10:03:40.492" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:40.490" endtime="20210729 10:03:40.492"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:40.492" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:40.492" endtime="20210729 10:03:40.493"/>
</kw>
<status status="PASS" starttime="20210729 10:03:40.489" endtime="20210729 10:03:40.493"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:40.493" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:40.494" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:40.493" endtime="20210729 10:03:40.494"/>
</kw>
<status status="PASS" starttime="20210729 10:03:40.493" endtime="20210729 10:03:40.494"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:40.494" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:40.494" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:40.494" endtime="20210729 10:03:40.495"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:40.495" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:40.495" endtime="20210729 10:03:40.495"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:40.496" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:40.495" endtime="20210729 10:03:40.496"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:40.496" endtime="20210729 10:03:40.496"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:40.496" endtime="20210729 10:03:40.497"/>
</kw>
<status status="PASS" starttime="20210729 10:03:40.495" endtime="20210729 10:03:40.497"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:40.497" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:40.497" endtime="20210729 10:03:40.497"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:40.497" endtime="20210729 10:03:40.498"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:40.498" endtime="20210729 10:03:40.498"/>
</kw>
<status status="PASS" starttime="20210729 10:03:40.497" endtime="20210729 10:03:40.498"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:40.498" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:40.498" endtime="20210729 10:03:40.498"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:40.498" endtime="20210729 10:03:40.499"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:40.499" endtime="20210729 10:03:40.499"/>
</kw>
<status status="PASS" starttime="20210729 10:03:40.498" endtime="20210729 10:03:40.499"/>
</iter>
<status status="PASS" starttime="20210729 10:03:40.495" endtime="20210729 10:03:40.499"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:40.500" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:40.500" endtime="20210729 10:03:40.500"/>
</kw>
<status status="PASS" starttime="20210729 10:03:40.494" endtime="20210729 10:03:40.500"/>
</kw>
<status status="PASS" starttime="20210729 10:03:38.930" endtime="20210729 10:03:40.500"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=abcd fg</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:40.501" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:40.501" endtime="20210729 10:03:40.501"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:40.502" level="INFO">${payload} = {'username': 'abcd fg'}</msg>
<status status="PASS" starttime="20210729 10:03:40.501" endtime="20210729 10:03:40.502"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:40.510" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:40.510" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:40.502" endtime="20210729 10:03:40.510"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:40.511" endtime="20210729 10:03:40.511"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:40.502" endtime="20210729 10:03:40.511"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:40.502" endtime="20210729 10:03:40.511"/>
</for>
<status status="FAIL" starttime="20210729 10:03:40.500" endtime="20210729 10:03:40.511"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:40.500" endtime="20210729 10:03:40.511"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=abcd fg</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:40.512" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:40.512" endtime="20210729 10:03:40.512"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:40.513" level="INFO">${payload} = {'username': 'abcd fg'}</msg>
<status status="PASS" starttime="20210729 10:03:40.512" endtime="20210729 10:03:40.513"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:40.517" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:40.517" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:40.513" endtime="20210729 10:03:40.517"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:40.517" endtime="20210729 10:03:40.517"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:40.513" endtime="20210729 10:03:40.517"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:40.513" endtime="20210729 10:03:40.517"/>
</for>
<status status="FAIL" starttime="20210729 10:03:40.511" endtime="20210729 10:03:40.517"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:40.511" endtime="20210729 10:03:40.517"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=abcd fg</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:40.518" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:40.518" endtime="20210729 10:03:40.518"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:40.519" level="INFO">${payload} = {'username': 'abcd fg'}</msg>
<status status="PASS" starttime="20210729 10:03:40.518" endtime="20210729 10:03:40.519"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:40.523" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:40.523" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:40.519" endtime="20210729 10:03:40.523"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:40.523" endtime="20210729 10:03:40.524"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:40.519" endtime="20210729 10:03:40.524"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:40.519" endtime="20210729 10:03:40.524"/>
</for>
<status status="FAIL" starttime="20210729 10:03:40.518" endtime="20210729 10:03:40.524"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:40.517" endtime="20210729 10:03:40.524"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:40.500" endtime="20210729 10:03:40.524"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:40.531" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:40.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:40.544" level="INFO">${pids} = 24098
24105
24110</msg>
<status status="PASS" starttime="20210729 10:03:40.525" endtime="20210729 10:03:40.544"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:40.545" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:40.544" endtime="20210729 10:03:40.545"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:40.545" level="INFO">${pids} = ['24098', '24105', '24110']</msg>
<status status="PASS" starttime="20210729 10:03:40.545" endtime="20210729 10:03:40.545"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24098</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:40.548" level="INFO">Running command 'kill 24098 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:40.546" endtime="20210729 10:03:40.549"/>
</kw>
<status status="PASS" starttime="20210729 10:03:40.545" endtime="20210729 10:03:40.549"/>
</iter>
<iter>
<var name="${pid}">24105</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:40.551" level="INFO">Running command 'kill 24105 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:40.549" endtime="20210729 10:03:40.552"/>
</kw>
<status status="PASS" starttime="20210729 10:03:40.549" endtime="20210729 10:03:40.552"/>
</iter>
<iter>
<var name="${pid}">24110</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:40.554" level="INFO">Running command 'kill 24110 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:40.552" endtime="20210729 10:03:40.554"/>
</kw>
<status status="PASS" starttime="20210729 10:03:40.552" endtime="20210729 10:03:40.554"/>
</iter>
<status status="PASS" starttime="20210729 10:03:40.545" endtime="20210729 10:03:40.555"/>
</for>
<status status="PASS" starttime="20210729 10:03:40.545" endtime="20210729 10:03:40.555"/>
</branch>
<status status="PASS" starttime="20210729 10:03:40.545" endtime="20210729 10:03:40.555"/>
</if>
<status status="PASS" starttime="20210729 10:03:40.524" endtime="20210729 10:03:40.555"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": 'abcd fg'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:38.929" endtime="20210729 10:03:40.555">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t30" name="With Any Valid Token, Updating Username Of Each System User With ab defgh Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:40.565" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:40.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:40.574" level="INFO">${pids} = 24139</msg>
<status status="PASS" starttime="20210729 10:03:40.559" endtime="20210729 10:03:40.574"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:40.574" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:40.574" endtime="20210729 10:03:40.574"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:40.575" level="INFO">${pids} = ['24139']</msg>
<status status="PASS" starttime="20210729 10:03:40.575" endtime="20210729 10:03:40.575"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24139</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:40.585" level="INFO">Running command 'kill 24139 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:40.575" endtime="20210729 10:03:40.585"/>
</kw>
<status status="PASS" starttime="20210729 10:03:40.575" endtime="20210729 10:03:40.585"/>
</iter>
<status status="PASS" starttime="20210729 10:03:40.575" endtime="20210729 10:03:40.585"/>
</for>
<status status="PASS" starttime="20210729 10:03:40.575" endtime="20210729 10:03:40.585"/>
</branch>
<status status="PASS" starttime="20210729 10:03:40.575" endtime="20210729 10:03:40.585"/>
</if>
<status status="PASS" starttime="20210729 10:03:40.559" endtime="20210729 10:03:40.586"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:40.587" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:40.587" endtime="20210729 10:03:40.587"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:40.588" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:40.588" endtime="20210729 10:03:40.588"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:40.590" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:40.589" endtime="20210729 10:03:40.590"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:40.590" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:40.590" endtime="20210729 10:03:40.590"/>
</kw>
<msg timestamp="20210729 10:03:40.591" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:40.587" endtime="20210729 10:03:40.591"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:40.594" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:40.591" endtime="20210729 10:03:40.596"/>
</kw>
<status status="PASS" starttime="20210729 10:03:40.586" endtime="20210729 10:03:40.596"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:40.597" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:40.597" endtime="20210729 10:03:40.601"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:42.111" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:40.602" endtime="20210729 10:03:42.111"/>
</kw>
<status status="PASS" starttime="20210729 10:03:40.596" endtime="20210729 10:03:42.111"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:42.112" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:42.112" endtime="20210729 10:03:42.112"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:42.113" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:42.112" endtime="20210729 10:03:42.113"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:42.113" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:42.113" endtime="20210729 10:03:42.113"/>
</kw>
<msg timestamp="20210729 10:03:42.113" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:42.112" endtime="20210729 10:03:42.113"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:42.114" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:42.113" endtime="20210729 10:03:42.114"/>
</kw>
<status status="PASS" starttime="20210729 10:03:42.112" endtime="20210729 10:03:42.114"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:42.115" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:42.115" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:42.114" endtime="20210729 10:03:42.115"/>
</kw>
<status status="PASS" starttime="20210729 10:03:42.114" endtime="20210729 10:03:42.115"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:42.115" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:42.116" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:42.115" endtime="20210729 10:03:42.116"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:42.116" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:42.116" endtime="20210729 10:03:42.116"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:42.117" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:42.117" endtime="20210729 10:03:42.117"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:42.117" endtime="20210729 10:03:42.118"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:42.118" endtime="20210729 10:03:42.119"/>
</kw>
<status status="PASS" starttime="20210729 10:03:42.117" endtime="20210729 10:03:42.119"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:42.119" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:42.119" endtime="20210729 10:03:42.119"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:42.119" endtime="20210729 10:03:42.120"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:42.120" endtime="20210729 10:03:42.120"/>
</kw>
<status status="PASS" starttime="20210729 10:03:42.119" endtime="20210729 10:03:42.120"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:42.121" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:42.120" endtime="20210729 10:03:42.121"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:42.121" endtime="20210729 10:03:42.121"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:42.122" endtime="20210729 10:03:42.122"/>
</kw>
<status status="PASS" starttime="20210729 10:03:42.120" endtime="20210729 10:03:42.122"/>
</iter>
<status status="PASS" starttime="20210729 10:03:42.116" endtime="20210729 10:03:42.122"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:42.122" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:42.122" endtime="20210729 10:03:42.122"/>
</kw>
<status status="PASS" starttime="20210729 10:03:42.115" endtime="20210729 10:03:42.123"/>
</kw>
<status status="PASS" starttime="20210729 10:03:40.558" endtime="20210729 10:03:42.123"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=ab defgh</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:42.125" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:42.124" endtime="20210729 10:03:42.125"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:42.125" level="INFO">${payload} = {'username': 'ab defgh'}</msg>
<status status="PASS" starttime="20210729 10:03:42.125" endtime="20210729 10:03:42.125"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:42.141" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:42.141" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:42.126" endtime="20210729 10:03:42.141"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:42.141" endtime="20210729 10:03:42.141"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:42.125" endtime="20210729 10:03:42.141"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:42.125" endtime="20210729 10:03:42.141"/>
</for>
<status status="FAIL" starttime="20210729 10:03:42.123" endtime="20210729 10:03:42.141"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:42.123" endtime="20210729 10:03:42.141"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=ab defgh</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:42.142" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:42.142" endtime="20210729 10:03:42.142"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:42.143" level="INFO">${payload} = {'username': 'ab defgh'}</msg>
<status status="PASS" starttime="20210729 10:03:42.143" endtime="20210729 10:03:42.143"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:42.148" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:42.148" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:42.144" endtime="20210729 10:03:42.149"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:42.149" endtime="20210729 10:03:42.149"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:42.144" endtime="20210729 10:03:42.149"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:42.143" endtime="20210729 10:03:42.149"/>
</for>
<status status="FAIL" starttime="20210729 10:03:42.142" endtime="20210729 10:03:42.149"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:42.141" endtime="20210729 10:03:42.149"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=ab defgh</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:42.150" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:42.150" endtime="20210729 10:03:42.150"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:42.151" level="INFO">${payload} = {'username': 'ab defgh'}</msg>
<status status="PASS" starttime="20210729 10:03:42.151" endtime="20210729 10:03:42.151"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:42.157" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:42.157" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:42.152" endtime="20210729 10:03:42.157"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:42.158" endtime="20210729 10:03:42.158"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:42.152" endtime="20210729 10:03:42.158"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:42.151" endtime="20210729 10:03:42.158"/>
</for>
<status status="FAIL" starttime="20210729 10:03:42.149" endtime="20210729 10:03:42.158"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:42.149" endtime="20210729 10:03:42.158"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:42.123" endtime="20210729 10:03:42.158"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:42.167" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:42.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:42.176" level="INFO">${pids} = 24162
24169
24182</msg>
<status status="PASS" starttime="20210729 10:03:42.159" endtime="20210729 10:03:42.176"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:42.177" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:42.176" endtime="20210729 10:03:42.177"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:42.178" level="INFO">${pids} = ['24162', '24169', '24182']</msg>
<status status="PASS" starttime="20210729 10:03:42.178" endtime="20210729 10:03:42.178"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24162</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:42.181" level="INFO">Running command 'kill 24162 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:42.178" endtime="20210729 10:03:42.182"/>
</kw>
<status status="PASS" starttime="20210729 10:03:42.178" endtime="20210729 10:03:42.182"/>
</iter>
<iter>
<var name="${pid}">24169</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:42.191" level="INFO">Running command 'kill 24169 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:42.183" endtime="20210729 10:03:42.194"/>
</kw>
<status status="PASS" starttime="20210729 10:03:42.182" endtime="20210729 10:03:42.194"/>
</iter>
<iter>
<var name="${pid}">24182</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:42.203" level="INFO">Running command 'kill 24182 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:42.194" endtime="20210729 10:03:42.204"/>
</kw>
<status status="PASS" starttime="20210729 10:03:42.194" endtime="20210729 10:03:42.204"/>
</iter>
<status status="PASS" starttime="20210729 10:03:42.178" endtime="20210729 10:03:42.204"/>
</for>
<status status="PASS" starttime="20210729 10:03:42.177" endtime="20210729 10:03:42.204"/>
</branch>
<status status="PASS" starttime="20210729 10:03:42.177" endtime="20210729 10:03:42.204"/>
</if>
<status status="PASS" starttime="20210729 10:03:42.158" endtime="20210729 10:03:42.204"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": 'ab defgh'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:40.557" endtime="20210729 10:03:42.204">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t31" name="With Any Valid Token, Updating Username Of Each System User With abcdefghijklmnp stop Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:42.214" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:42.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:42.223" level="INFO">${pids} = 24211</msg>
<status status="PASS" starttime="20210729 10:03:42.207" endtime="20210729 10:03:42.223"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:42.224" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:42.224" endtime="20210729 10:03:42.224"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:42.225" level="INFO">${pids} = ['24211']</msg>
<status status="PASS" starttime="20210729 10:03:42.225" endtime="20210729 10:03:42.225"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24211</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:42.229" level="INFO">Running command 'kill 24211 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:42.226" endtime="20210729 10:03:42.229"/>
</kw>
<status status="PASS" starttime="20210729 10:03:42.226" endtime="20210729 10:03:42.229"/>
</iter>
<status status="PASS" starttime="20210729 10:03:42.225" endtime="20210729 10:03:42.229"/>
</for>
<status status="PASS" starttime="20210729 10:03:42.225" endtime="20210729 10:03:42.229"/>
</branch>
<status status="PASS" starttime="20210729 10:03:42.225" endtime="20210729 10:03:42.229"/>
</if>
<status status="PASS" starttime="20210729 10:03:42.207" endtime="20210729 10:03:42.230"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:42.231" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:42.230" endtime="20210729 10:03:42.231"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:42.231" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:42.231" endtime="20210729 10:03:42.231"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:42.232" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:42.231" endtime="20210729 10:03:42.232"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:42.232" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:42.232" endtime="20210729 10:03:42.232"/>
</kw>
<msg timestamp="20210729 10:03:42.232" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:42.231" endtime="20210729 10:03:42.232"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:42.237" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:42.232" endtime="20210729 10:03:42.246"/>
</kw>
<status status="PASS" starttime="20210729 10:03:42.230" endtime="20210729 10:03:42.246"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:42.248" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:42.248" endtime="20210729 10:03:42.252"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:43.753" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:42.252" endtime="20210729 10:03:43.753"/>
</kw>
<status status="PASS" starttime="20210729 10:03:42.247" endtime="20210729 10:03:43.753"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:43.755" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:43.754" endtime="20210729 10:03:43.755"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:43.755" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:43.755" endtime="20210729 10:03:43.755"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:43.756" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:43.755" endtime="20210729 10:03:43.756"/>
</kw>
<msg timestamp="20210729 10:03:43.756" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:43.754" endtime="20210729 10:03:43.756"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:43.757" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:43.756" endtime="20210729 10:03:43.757"/>
</kw>
<status status="PASS" starttime="20210729 10:03:43.754" endtime="20210729 10:03:43.758"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:43.758" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:43.759" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:43.758" endtime="20210729 10:03:43.759"/>
</kw>
<status status="PASS" starttime="20210729 10:03:43.758" endtime="20210729 10:03:43.759"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:43.759" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:43.759" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:43.759" endtime="20210729 10:03:43.760"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:43.760" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:43.760" endtime="20210729 10:03:43.760"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:43.760" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:43.760" endtime="20210729 10:03:43.761"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:43.761" endtime="20210729 10:03:43.761"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:43.761" endtime="20210729 10:03:43.761"/>
</kw>
<status status="PASS" starttime="20210729 10:03:43.760" endtime="20210729 10:03:43.762"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:43.762" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:43.762" endtime="20210729 10:03:43.762"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:43.762" endtime="20210729 10:03:43.763"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:43.763" endtime="20210729 10:03:43.763"/>
</kw>
<status status="PASS" starttime="20210729 10:03:43.762" endtime="20210729 10:03:43.763"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:43.763" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:43.763" endtime="20210729 10:03:43.763"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:43.763" endtime="20210729 10:03:43.764"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:43.764" endtime="20210729 10:03:43.764"/>
</kw>
<status status="PASS" starttime="20210729 10:03:43.763" endtime="20210729 10:03:43.764"/>
</iter>
<status status="PASS" starttime="20210729 10:03:43.760" endtime="20210729 10:03:43.764"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:43.765" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:43.764" endtime="20210729 10:03:43.765"/>
</kw>
<status status="PASS" starttime="20210729 10:03:43.759" endtime="20210729 10:03:43.765"/>
</kw>
<status status="PASS" starttime="20210729 10:03:42.206" endtime="20210729 10:03:43.765"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=abcdefghijklmnp stop</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:43.766" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:43.766" endtime="20210729 10:03:43.766"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:43.767" level="INFO">${payload} = {'username': 'abcdefghijklmnp stop'}</msg>
<status status="PASS" starttime="20210729 10:03:43.766" endtime="20210729 10:03:43.767"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:43.776" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:43.776" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:43.767" endtime="20210729 10:03:43.776"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:43.776" endtime="20210729 10:03:43.776"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:43.767" endtime="20210729 10:03:43.776"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:43.767" endtime="20210729 10:03:43.776"/>
</for>
<status status="FAIL" starttime="20210729 10:03:43.765" endtime="20210729 10:03:43.777"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:43.765" endtime="20210729 10:03:43.777"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=abcdefghijklmnp stop</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:43.778" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:43.777" endtime="20210729 10:03:43.778"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:43.778" level="INFO">${payload} = {'username': 'abcdefghijklmnp stop'}</msg>
<status status="PASS" starttime="20210729 10:03:43.778" endtime="20210729 10:03:43.778"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:43.782" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:43.783" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:43.779" endtime="20210729 10:03:43.783"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:43.783" endtime="20210729 10:03:43.783"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:43.779" endtime="20210729 10:03:43.783"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:43.778" endtime="20210729 10:03:43.783"/>
</for>
<status status="FAIL" starttime="20210729 10:03:43.777" endtime="20210729 10:03:43.783"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:43.777" endtime="20210729 10:03:43.783"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=abcdefghijklmnp stop</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:43.784" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:43.784" endtime="20210729 10:03:43.784"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:43.785" level="INFO">${payload} = {'username': 'abcdefghijklmnp stop'}</msg>
<status status="PASS" starttime="20210729 10:03:43.784" endtime="20210729 10:03:43.785"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:43.789" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:43.789" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:43.785" endtime="20210729 10:03:43.789"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:43.790" endtime="20210729 10:03:43.790"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:43.785" endtime="20210729 10:03:43.790"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:43.785" endtime="20210729 10:03:43.790"/>
</for>
<status status="FAIL" starttime="20210729 10:03:43.783" endtime="20210729 10:03:43.790"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:43.783" endtime="20210729 10:03:43.790"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:43.765" endtime="20210729 10:03:43.791"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:43.797" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:43.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:43.808" level="INFO">${pids} = 24234
24241
24246</msg>
<status status="PASS" starttime="20210729 10:03:43.792" endtime="20210729 10:03:43.808"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:43.809" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:43.809" endtime="20210729 10:03:43.809"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:43.810" level="INFO">${pids} = ['24234', '24241', '24246']</msg>
<status status="PASS" starttime="20210729 10:03:43.810" endtime="20210729 10:03:43.810"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24234</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:43.813" level="INFO">Running command 'kill 24234 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:43.810" endtime="20210729 10:03:43.813"/>
</kw>
<status status="PASS" starttime="20210729 10:03:43.810" endtime="20210729 10:03:43.813"/>
</iter>
<iter>
<var name="${pid}">24241</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:43.817" level="INFO">Running command 'kill 24241 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:43.814" endtime="20210729 10:03:43.817"/>
</kw>
<status status="PASS" starttime="20210729 10:03:43.813" endtime="20210729 10:03:43.817"/>
</iter>
<iter>
<var name="${pid}">24246</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:43.820" level="INFO">Running command 'kill 24246 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:43.817" endtime="20210729 10:03:43.821"/>
</kw>
<status status="PASS" starttime="20210729 10:03:43.817" endtime="20210729 10:03:43.821"/>
</iter>
<status status="PASS" starttime="20210729 10:03:43.810" endtime="20210729 10:03:43.821"/>
</for>
<status status="PASS" starttime="20210729 10:03:43.809" endtime="20210729 10:03:43.821"/>
</branch>
<status status="PASS" starttime="20210729 10:03:43.809" endtime="20210729 10:03:43.821"/>
</if>
<status status="PASS" starttime="20210729 10:03:43.791" endtime="20210729 10:03:43.822"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": 'abcdefghijklmnp stop'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:42.205" endtime="20210729 10:03:43.822">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t32" name="With Any Valid Token, Updating Username Of Each System User With haka 12 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:43.832" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:43.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:43.840" level="INFO">${pids} = 24275</msg>
<status status="PASS" starttime="20210729 10:03:43.825" endtime="20210729 10:03:43.840"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:43.841" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:43.840" endtime="20210729 10:03:43.841"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:43.841" level="INFO">${pids} = ['24275']</msg>
<status status="PASS" starttime="20210729 10:03:43.841" endtime="20210729 10:03:43.841"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24275</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:43.844" level="INFO">Running command 'kill 24275 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:43.842" endtime="20210729 10:03:43.845"/>
</kw>
<status status="PASS" starttime="20210729 10:03:43.842" endtime="20210729 10:03:43.845"/>
</iter>
<status status="PASS" starttime="20210729 10:03:43.842" endtime="20210729 10:03:43.845"/>
</for>
<status status="PASS" starttime="20210729 10:03:43.841" endtime="20210729 10:03:43.845"/>
</branch>
<status status="PASS" starttime="20210729 10:03:43.841" endtime="20210729 10:03:43.845"/>
</if>
<status status="PASS" starttime="20210729 10:03:43.825" endtime="20210729 10:03:43.845"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:43.846" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:43.845" endtime="20210729 10:03:43.846"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:43.846" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:43.846" endtime="20210729 10:03:43.846"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:43.847" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:43.847" endtime="20210729 10:03:43.847"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:43.848" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:43.847" endtime="20210729 10:03:43.848"/>
</kw>
<msg timestamp="20210729 10:03:43.848" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:43.846" endtime="20210729 10:03:43.848"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:43.851" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:43.848" endtime="20210729 10:03:43.852"/>
</kw>
<status status="PASS" starttime="20210729 10:03:43.845" endtime="20210729 10:03:43.852"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:43.854" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:43.853" endtime="20210729 10:03:43.860"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:45.362" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:43.861" endtime="20210729 10:03:45.362"/>
</kw>
<status status="PASS" starttime="20210729 10:03:43.853" endtime="20210729 10:03:45.362"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:45.364" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:45.363" endtime="20210729 10:03:45.364"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:45.364" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:45.364" endtime="20210729 10:03:45.364"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:45.364" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:45.364" endtime="20210729 10:03:45.364"/>
</kw>
<msg timestamp="20210729 10:03:45.365" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:45.363" endtime="20210729 10:03:45.365"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:45.365" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:45.365" endtime="20210729 10:03:45.365"/>
</kw>
<status status="PASS" starttime="20210729 10:03:45.363" endtime="20210729 10:03:45.365"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:45.366" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:45.366" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:45.366" endtime="20210729 10:03:45.366"/>
</kw>
<status status="PASS" starttime="20210729 10:03:45.365" endtime="20210729 10:03:45.366"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:45.367" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:45.367" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:45.367" endtime="20210729 10:03:45.367"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:45.368" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:45.367" endtime="20210729 10:03:45.368"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:45.368" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:45.368" endtime="20210729 10:03:45.368"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:45.369" endtime="20210729 10:03:45.369"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:45.369" endtime="20210729 10:03:45.369"/>
</kw>
<status status="PASS" starttime="20210729 10:03:45.368" endtime="20210729 10:03:45.369"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:45.370" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:45.370" endtime="20210729 10:03:45.370"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:45.370" endtime="20210729 10:03:45.370"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:45.371" endtime="20210729 10:03:45.371"/>
</kw>
<status status="PASS" starttime="20210729 10:03:45.369" endtime="20210729 10:03:45.371"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:45.371" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:45.371" endtime="20210729 10:03:45.371"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:45.371" endtime="20210729 10:03:45.372"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:45.372" endtime="20210729 10:03:45.372"/>
</kw>
<status status="PASS" starttime="20210729 10:03:45.371" endtime="20210729 10:03:45.372"/>
</iter>
<status status="PASS" starttime="20210729 10:03:45.368" endtime="20210729 10:03:45.373"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:45.373" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:45.373" endtime="20210729 10:03:45.373"/>
</kw>
<status status="PASS" starttime="20210729 10:03:45.366" endtime="20210729 10:03:45.373"/>
</kw>
<status status="PASS" starttime="20210729 10:03:43.825" endtime="20210729 10:03:45.373"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=haka 12</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:45.374" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:45.374" endtime="20210729 10:03:45.374"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:45.375" level="INFO">${payload} = {'username': 'haka 12'}</msg>
<status status="PASS" starttime="20210729 10:03:45.374" endtime="20210729 10:03:45.375"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:45.384" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:45.384" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:45.375" endtime="20210729 10:03:45.384"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:45.384" endtime="20210729 10:03:45.384"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:45.375" endtime="20210729 10:03:45.384"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:45.375" endtime="20210729 10:03:45.384"/>
</for>
<status status="FAIL" starttime="20210729 10:03:45.374" endtime="20210729 10:03:45.384"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:45.373" endtime="20210729 10:03:45.385"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=haka 12</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:45.386" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:45.385" endtime="20210729 10:03:45.386"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:45.386" level="INFO">${payload} = {'username': 'haka 12'}</msg>
<status status="PASS" starttime="20210729 10:03:45.386" endtime="20210729 10:03:45.386"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:45.391" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:45.392" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:45.387" endtime="20210729 10:03:45.392"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:45.392" endtime="20210729 10:03:45.392"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:45.386" endtime="20210729 10:03:45.392"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:45.386" endtime="20210729 10:03:45.392"/>
</for>
<status status="FAIL" starttime="20210729 10:03:45.385" endtime="20210729 10:03:45.392"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:45.385" endtime="20210729 10:03:45.392"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=haka 12</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:45.393" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:45.393" endtime="20210729 10:03:45.393"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:45.394" level="INFO">${payload} = {'username': 'haka 12'}</msg>
<status status="PASS" starttime="20210729 10:03:45.393" endtime="20210729 10:03:45.394"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:45.398" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:45.398" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:45.394" endtime="20210729 10:03:45.398"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:45.398" endtime="20210729 10:03:45.398"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:45.394" endtime="20210729 10:03:45.398"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:45.394" endtime="20210729 10:03:45.398"/>
</for>
<status status="FAIL" starttime="20210729 10:03:45.392" endtime="20210729 10:03:45.398"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:45.392" endtime="20210729 10:03:45.398"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:45.373" endtime="20210729 10:03:45.398"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:45.402" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:45.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:45.415" level="INFO">${pids} = 24298
24305
24309</msg>
<status status="PASS" starttime="20210729 10:03:45.399" endtime="20210729 10:03:45.415"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:45.416" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:45.416" endtime="20210729 10:03:45.416"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:45.417" level="INFO">${pids} = ['24298', '24305', '24309']</msg>
<status status="PASS" starttime="20210729 10:03:45.417" endtime="20210729 10:03:45.417"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24298</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:45.420" level="INFO">Running command 'kill 24298 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:45.417" endtime="20210729 10:03:45.420"/>
</kw>
<status status="PASS" starttime="20210729 10:03:45.417" endtime="20210729 10:03:45.420"/>
</iter>
<iter>
<var name="${pid}">24305</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:45.425" level="INFO">Running command 'kill 24305 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:45.421" endtime="20210729 10:03:45.425"/>
</kw>
<status status="PASS" starttime="20210729 10:03:45.420" endtime="20210729 10:03:45.425"/>
</iter>
<iter>
<var name="${pid}">24309</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:45.429" level="INFO">Running command 'kill 24309 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:45.426" endtime="20210729 10:03:45.429"/>
</kw>
<status status="PASS" starttime="20210729 10:03:45.425" endtime="20210729 10:03:45.429"/>
</iter>
<status status="PASS" starttime="20210729 10:03:45.417" endtime="20210729 10:03:45.429"/>
</for>
<status status="PASS" starttime="20210729 10:03:45.417" endtime="20210729 10:03:45.429"/>
</branch>
<status status="PASS" starttime="20210729 10:03:45.416" endtime="20210729 10:03:45.429"/>
</if>
<status status="PASS" starttime="20210729 10:03:45.399" endtime="20210729 10:03:45.430"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": 'haka 12'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:43.823" endtime="20210729 10:03:45.430">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t33" name="With Any Valid Token, Updating Username Of Each System User With haka 123 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:45.437" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:45.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:45.445" level="INFO">${pids} = 24338</msg>
<status status="PASS" starttime="20210729 10:03:45.431" endtime="20210729 10:03:45.445"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:45.446" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:45.446" endtime="20210729 10:03:45.446"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:45.447" level="INFO">${pids} = ['24338']</msg>
<status status="PASS" starttime="20210729 10:03:45.447" endtime="20210729 10:03:45.447"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24338</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:45.451" level="INFO">Running command 'kill 24338 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:45.448" endtime="20210729 10:03:45.452"/>
</kw>
<status status="PASS" starttime="20210729 10:03:45.448" endtime="20210729 10:03:45.452"/>
</iter>
<status status="PASS" starttime="20210729 10:03:45.447" endtime="20210729 10:03:45.452"/>
</for>
<status status="PASS" starttime="20210729 10:03:45.447" endtime="20210729 10:03:45.452"/>
</branch>
<status status="PASS" starttime="20210729 10:03:45.446" endtime="20210729 10:03:45.452"/>
</if>
<status status="PASS" starttime="20210729 10:03:45.431" endtime="20210729 10:03:45.458"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:45.460" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:45.459" endtime="20210729 10:03:45.460"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:45.460" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:45.460" endtime="20210729 10:03:45.461"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:45.461" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:45.461" endtime="20210729 10:03:45.461"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:45.461" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:45.461" endtime="20210729 10:03:45.461"/>
</kw>
<msg timestamp="20210729 10:03:45.462" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:45.460" endtime="20210729 10:03:45.462"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:45.465" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:45.462" endtime="20210729 10:03:45.467"/>
</kw>
<status status="PASS" starttime="20210729 10:03:45.459" endtime="20210729 10:03:45.467"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:45.468" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:45.468" endtime="20210729 10:03:45.472"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:46.980" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:45.473" endtime="20210729 10:03:46.981"/>
</kw>
<status status="PASS" starttime="20210729 10:03:45.467" endtime="20210729 10:03:46.982"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:46.987" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:46.985" endtime="20210729 10:03:46.987"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:46.989" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:46.988" endtime="20210729 10:03:46.989"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:46.992" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:46.990" endtime="20210729 10:03:46.992"/>
</kw>
<msg timestamp="20210729 10:03:46.993" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:46.984" endtime="20210729 10:03:46.993"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:46.994" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:46.993" endtime="20210729 10:03:46.995"/>
</kw>
<status status="PASS" starttime="20210729 10:03:46.982" endtime="20210729 10:03:46.996"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:46.997" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:46.997" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:46.997" endtime="20210729 10:03:46.997"/>
</kw>
<status status="PASS" starttime="20210729 10:03:46.996" endtime="20210729 10:03:46.998"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:46.999" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:46.999" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:46.998" endtime="20210729 10:03:46.999"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:47.000" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:46.999" endtime="20210729 10:03:47.000"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:47.001" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:47.001" endtime="20210729 10:03:47.001"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:47.001" endtime="20210729 10:03:47.003"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:47.003" endtime="20210729 10:03:47.003"/>
</kw>
<status status="PASS" starttime="20210729 10:03:47.001" endtime="20210729 10:03:47.003"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:47.004" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:47.003" endtime="20210729 10:03:47.004"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:47.004" endtime="20210729 10:03:47.005"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:47.005" endtime="20210729 10:03:47.006"/>
</kw>
<status status="PASS" starttime="20210729 10:03:47.003" endtime="20210729 10:03:47.006"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:47.007" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:47.006" endtime="20210729 10:03:47.007"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:47.007" endtime="20210729 10:03:47.008"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:47.008" endtime="20210729 10:03:47.008"/>
</kw>
<status status="PASS" starttime="20210729 10:03:47.006" endtime="20210729 10:03:47.008"/>
</iter>
<status status="PASS" starttime="20210729 10:03:47.000" endtime="20210729 10:03:47.008"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:47.009" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:47.008" endtime="20210729 10:03:47.009"/>
</kw>
<status status="PASS" starttime="20210729 10:03:46.998" endtime="20210729 10:03:47.009"/>
</kw>
<status status="PASS" starttime="20210729 10:03:45.431" endtime="20210729 10:03:47.009"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=haka 123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:47.011" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:47.010" endtime="20210729 10:03:47.011"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:47.011" level="INFO">${payload} = {'username': 'haka 123'}</msg>
<status status="PASS" starttime="20210729 10:03:47.011" endtime="20210729 10:03:47.011"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:47.021" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:47.022" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:47.012" endtime="20210729 10:03:47.022"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:47.022" endtime="20210729 10:03:47.022"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:47.012" endtime="20210729 10:03:47.022"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:47.011" endtime="20210729 10:03:47.022"/>
</for>
<status status="FAIL" starttime="20210729 10:03:47.010" endtime="20210729 10:03:47.023"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:47.010" endtime="20210729 10:03:47.023"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=haka 123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:47.024" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:47.024" endtime="20210729 10:03:47.024"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:47.025" level="INFO">${payload} = {'username': 'haka 123'}</msg>
<status status="PASS" starttime="20210729 10:03:47.025" endtime="20210729 10:03:47.025"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:47.029" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:47.029" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:47.025" endtime="20210729 10:03:47.029"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:47.029" endtime="20210729 10:03:47.030"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:47.025" endtime="20210729 10:03:47.030"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:47.025" endtime="20210729 10:03:47.030"/>
</for>
<status status="FAIL" starttime="20210729 10:03:47.023" endtime="20210729 10:03:47.030"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:47.023" endtime="20210729 10:03:47.030"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=haka 123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:47.031" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:47.031" endtime="20210729 10:03:47.031"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:47.031" level="INFO">${payload} = {'username': 'haka 123'}</msg>
<status status="PASS" starttime="20210729 10:03:47.031" endtime="20210729 10:03:47.031"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:47.035" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:47.036" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:47.032" endtime="20210729 10:03:47.036"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:47.036" endtime="20210729 10:03:47.036"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:47.032" endtime="20210729 10:03:47.036"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:47.031" endtime="20210729 10:03:47.036"/>
</for>
<status status="FAIL" starttime="20210729 10:03:47.030" endtime="20210729 10:03:47.037"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:47.030" endtime="20210729 10:03:47.037"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:47.010" endtime="20210729 10:03:47.037"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:47.047" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:47.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:47.055" level="INFO">${pids} = 24361
24368
24378</msg>
<status status="PASS" starttime="20210729 10:03:47.039" endtime="20210729 10:03:47.056"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:47.058" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:47.056" endtime="20210729 10:03:47.058"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:47.059" level="INFO">${pids} = ['24361', '24368', '24378']</msg>
<status status="PASS" starttime="20210729 10:03:47.058" endtime="20210729 10:03:47.059"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24361</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:47.067" level="INFO">Running command 'kill 24361 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:47.059" endtime="20210729 10:03:47.070"/>
</kw>
<status status="PASS" starttime="20210729 10:03:47.059" endtime="20210729 10:03:47.070"/>
</iter>
<iter>
<var name="${pid}">24368</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:47.076" level="INFO">Running command 'kill 24368 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:47.070" endtime="20210729 10:03:47.076"/>
</kw>
<status status="PASS" starttime="20210729 10:03:47.070" endtime="20210729 10:03:47.076"/>
</iter>
<iter>
<var name="${pid}">24378</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:47.081" level="INFO">Running command 'kill 24378 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:47.077" endtime="20210729 10:03:47.081"/>
</kw>
<status status="PASS" starttime="20210729 10:03:47.077" endtime="20210729 10:03:47.081"/>
</iter>
<status status="PASS" starttime="20210729 10:03:47.059" endtime="20210729 10:03:47.081"/>
</for>
<status status="PASS" starttime="20210729 10:03:47.058" endtime="20210729 10:03:47.081"/>
</branch>
<status status="PASS" starttime="20210729 10:03:47.058" endtime="20210729 10:03:47.081"/>
</if>
<status status="PASS" starttime="20210729 10:03:47.037" endtime="20210729 10:03:47.081"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": 'haka 123'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:45.430" endtime="20210729 10:03:47.082">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t34" name="With Any Valid Token, Updating Username Of Each System User With haka 123456789123456789 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:47.091" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:47.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:47.100" level="INFO">${pids} = 24407</msg>
<status status="PASS" starttime="20210729 10:03:47.084" endtime="20210729 10:03:47.100"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:47.101" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:47.101" endtime="20210729 10:03:47.101"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:47.102" level="INFO">${pids} = ['24407']</msg>
<status status="PASS" starttime="20210729 10:03:47.102" endtime="20210729 10:03:47.102"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24407</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:47.106" level="INFO">Running command 'kill 24407 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:47.102" endtime="20210729 10:03:47.107"/>
</kw>
<status status="PASS" starttime="20210729 10:03:47.102" endtime="20210729 10:03:47.107"/>
</iter>
<status status="PASS" starttime="20210729 10:03:47.102" endtime="20210729 10:03:47.107"/>
</for>
<status status="PASS" starttime="20210729 10:03:47.101" endtime="20210729 10:03:47.107"/>
</branch>
<status status="PASS" starttime="20210729 10:03:47.101" endtime="20210729 10:03:47.107"/>
</if>
<status status="PASS" starttime="20210729 10:03:47.083" endtime="20210729 10:03:47.107"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:47.108" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:47.108" endtime="20210729 10:03:47.108"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:47.109" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:47.109" endtime="20210729 10:03:47.109"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:47.109" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:47.109" endtime="20210729 10:03:47.109"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:47.110" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:47.109" endtime="20210729 10:03:47.110"/>
</kw>
<msg timestamp="20210729 10:03:47.110" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:47.108" endtime="20210729 10:03:47.110"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:47.113" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:47.110" endtime="20210729 10:03:47.115"/>
</kw>
<status status="PASS" starttime="20210729 10:03:47.108" endtime="20210729 10:03:47.115"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:47.116" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:47.115" endtime="20210729 10:03:47.120"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:48.622" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:47.121" endtime="20210729 10:03:48.623"/>
</kw>
<status status="PASS" starttime="20210729 10:03:47.115" endtime="20210729 10:03:48.624"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:48.625" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:48.625" endtime="20210729 10:03:48.625"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:48.626" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:48.625" endtime="20210729 10:03:48.626"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:48.626" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:48.626" endtime="20210729 10:03:48.626"/>
</kw>
<msg timestamp="20210729 10:03:48.627" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:48.624" endtime="20210729 10:03:48.627"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:48.627" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:48.627" endtime="20210729 10:03:48.627"/>
</kw>
<status status="PASS" starttime="20210729 10:03:48.624" endtime="20210729 10:03:48.628"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:48.628" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:48.628" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:48.628" endtime="20210729 10:03:48.628"/>
</kw>
<status status="PASS" starttime="20210729 10:03:48.628" endtime="20210729 10:03:48.629"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:48.629" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:48.629" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:48.629" endtime="20210729 10:03:48.629"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:48.630" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:48.629" endtime="20210729 10:03:48.630"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:48.630" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:48.630" endtime="20210729 10:03:48.630"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:48.630" endtime="20210729 10:03:48.631"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:48.631" endtime="20210729 10:03:48.631"/>
</kw>
<status status="PASS" starttime="20210729 10:03:48.630" endtime="20210729 10:03:48.631"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:48.632" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:48.631" endtime="20210729 10:03:48.632"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:48.632" endtime="20210729 10:03:48.632"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:48.632" endtime="20210729 10:03:48.633"/>
</kw>
<status status="PASS" starttime="20210729 10:03:48.631" endtime="20210729 10:03:48.633"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:48.633" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:48.633" endtime="20210729 10:03:48.633"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:48.633" endtime="20210729 10:03:48.634"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:48.634" endtime="20210729 10:03:48.634"/>
</kw>
<status status="PASS" starttime="20210729 10:03:48.633" endtime="20210729 10:03:48.634"/>
</iter>
<status status="PASS" starttime="20210729 10:03:48.630" endtime="20210729 10:03:48.634"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:48.635" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:48.634" endtime="20210729 10:03:48.635"/>
</kw>
<status status="PASS" starttime="20210729 10:03:48.629" endtime="20210729 10:03:48.635"/>
</kw>
<status status="PASS" starttime="20210729 10:03:47.083" endtime="20210729 10:03:48.635"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=haka 123456789123456789</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:48.636" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:48.636" endtime="20210729 10:03:48.636"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:48.636" level="INFO">${payload} = {'username': 'haka 123456789123456789'}</msg>
<status status="PASS" starttime="20210729 10:03:48.636" endtime="20210729 10:03:48.636"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:48.649" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:48.649" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:48.637" endtime="20210729 10:03:48.649"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:48.649" endtime="20210729 10:03:48.649"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:48.636" endtime="20210729 10:03:48.649"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:48.636" endtime="20210729 10:03:48.650"/>
</for>
<status status="FAIL" starttime="20210729 10:03:48.635" endtime="20210729 10:03:48.650"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:48.635" endtime="20210729 10:03:48.650"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=haka 123456789123456789</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:48.651" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:48.650" endtime="20210729 10:03:48.651"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:48.651" level="INFO">${payload} = {'username': 'haka 123456789123456789'}</msg>
<status status="PASS" starttime="20210729 10:03:48.651" endtime="20210729 10:03:48.651"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:48.655" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:48.656" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:48.651" endtime="20210729 10:03:48.656"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:48.656" endtime="20210729 10:03:48.656"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:48.651" endtime="20210729 10:03:48.656"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:48.651" endtime="20210729 10:03:48.656"/>
</for>
<status status="FAIL" starttime="20210729 10:03:48.650" endtime="20210729 10:03:48.656"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:48.650" endtime="20210729 10:03:48.657"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=haka 123456789123456789</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:48.658" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:48.658" endtime="20210729 10:03:48.658"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:48.659" level="INFO">${payload} = {'username': 'haka 123456789123456789'}</msg>
<status status="PASS" starttime="20210729 10:03:48.658" endtime="20210729 10:03:48.659"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:48.664" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:48.665" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:48.659" endtime="20210729 10:03:48.665"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:48.665" endtime="20210729 10:03:48.665"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:48.659" endtime="20210729 10:03:48.665"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:48.659" endtime="20210729 10:03:48.665"/>
</for>
<status status="FAIL" starttime="20210729 10:03:48.657" endtime="20210729 10:03:48.665"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:48.657" endtime="20210729 10:03:48.665"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:48.635" endtime="20210729 10:03:48.665"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:48.674" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:48.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:48.682" level="INFO">${pids} = 24430
24437
24444</msg>
<status status="PASS" starttime="20210729 10:03:48.668" endtime="20210729 10:03:48.682"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:48.683" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:48.682" endtime="20210729 10:03:48.683"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:48.684" level="INFO">${pids} = ['24430', '24437', '24444']</msg>
<status status="PASS" starttime="20210729 10:03:48.683" endtime="20210729 10:03:48.684"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24430</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:48.687" level="INFO">Running command 'kill 24430 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:48.684" endtime="20210729 10:03:48.687"/>
</kw>
<status status="PASS" starttime="20210729 10:03:48.684" endtime="20210729 10:03:48.687"/>
</iter>
<iter>
<var name="${pid}">24437</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:48.691" level="INFO">Running command 'kill 24437 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:48.688" endtime="20210729 10:03:48.692"/>
</kw>
<status status="PASS" starttime="20210729 10:03:48.687" endtime="20210729 10:03:48.692"/>
</iter>
<iter>
<var name="${pid}">24444</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:48.700" level="INFO">Running command 'kill 24444 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:48.693" endtime="20210729 10:03:48.701"/>
</kw>
<status status="PASS" starttime="20210729 10:03:48.692" endtime="20210729 10:03:48.701"/>
</iter>
<status status="PASS" starttime="20210729 10:03:48.684" endtime="20210729 10:03:48.701"/>
</for>
<status status="PASS" starttime="20210729 10:03:48.683" endtime="20210729 10:03:48.701"/>
</branch>
<status status="PASS" starttime="20210729 10:03:48.683" endtime="20210729 10:03:48.701"/>
</if>
<status status="PASS" starttime="20210729 10:03:48.666" endtime="20210729 10:03:48.701"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": 'haka 123456789123456789'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:47.082" endtime="20210729 10:03:48.701">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t35" name="With Any Valid Token, Updating Username Of Each System User With #¤% 23! Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:48.707" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:48.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:48.716" level="INFO">${pids} = 24473</msg>
<status status="PASS" starttime="20210729 10:03:48.704" endtime="20210729 10:03:48.716"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:48.717" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:48.716" endtime="20210729 10:03:48.717"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:48.718" level="INFO">${pids} = ['24473']</msg>
<status status="PASS" starttime="20210729 10:03:48.717" endtime="20210729 10:03:48.718"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24473</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:48.721" level="INFO">Running command 'kill 24473 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:48.718" endtime="20210729 10:03:48.721"/>
</kw>
<status status="PASS" starttime="20210729 10:03:48.718" endtime="20210729 10:03:48.721"/>
</iter>
<status status="PASS" starttime="20210729 10:03:48.718" endtime="20210729 10:03:48.721"/>
</for>
<status status="PASS" starttime="20210729 10:03:48.717" endtime="20210729 10:03:48.721"/>
</branch>
<status status="PASS" starttime="20210729 10:03:48.717" endtime="20210729 10:03:48.721"/>
</if>
<status status="PASS" starttime="20210729 10:03:48.704" endtime="20210729 10:03:48.722"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:48.724" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:48.723" endtime="20210729 10:03:48.724"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:48.725" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:48.724" endtime="20210729 10:03:48.725"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:48.725" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:48.725" endtime="20210729 10:03:48.725"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:48.726" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:48.726" endtime="20210729 10:03:48.726"/>
</kw>
<msg timestamp="20210729 10:03:48.727" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:48.724" endtime="20210729 10:03:48.727"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:48.745" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:48.727" endtime="20210729 10:03:48.747"/>
</kw>
<status status="PASS" starttime="20210729 10:03:48.722" endtime="20210729 10:03:48.747"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:48.748" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:48.748" endtime="20210729 10:03:48.759"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:50.262" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:48.760" endtime="20210729 10:03:50.263"/>
</kw>
<status status="PASS" starttime="20210729 10:03:48.747" endtime="20210729 10:03:50.264"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:50.267" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:50.266" endtime="20210729 10:03:50.267"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:50.268" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:50.267" endtime="20210729 10:03:50.268"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:50.269" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:50.268" endtime="20210729 10:03:50.269"/>
</kw>
<msg timestamp="20210729 10:03:50.269" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:50.265" endtime="20210729 10:03:50.270"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:50.271" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:50.270" endtime="20210729 10:03:50.271"/>
</kw>
<status status="PASS" starttime="20210729 10:03:50.264" endtime="20210729 10:03:50.272"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:50.273" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:50.273" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:50.272" endtime="20210729 10:03:50.273"/>
</kw>
<status status="PASS" starttime="20210729 10:03:50.272" endtime="20210729 10:03:50.273"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:50.274" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:50.275" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:50.274" endtime="20210729 10:03:50.275"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:50.276" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:50.275" endtime="20210729 10:03:50.276"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:50.277" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:50.276" endtime="20210729 10:03:50.277"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:50.277" endtime="20210729 10:03:50.278"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:50.278" endtime="20210729 10:03:50.278"/>
</kw>
<status status="PASS" starttime="20210729 10:03:50.276" endtime="20210729 10:03:50.278"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:50.279" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:50.279" endtime="20210729 10:03:50.279"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:50.279" endtime="20210729 10:03:50.280"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:50.281" endtime="20210729 10:03:50.281"/>
</kw>
<status status="PASS" starttime="20210729 10:03:50.279" endtime="20210729 10:03:50.281"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:50.281" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:50.281" endtime="20210729 10:03:50.281"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:50.282" endtime="20210729 10:03:50.282"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:50.282" endtime="20210729 10:03:50.283"/>
</kw>
<status status="PASS" starttime="20210729 10:03:50.281" endtime="20210729 10:03:50.283"/>
</iter>
<status status="PASS" starttime="20210729 10:03:50.276" endtime="20210729 10:03:50.283"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:50.283" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:50.283" endtime="20210729 10:03:50.284"/>
</kw>
<status status="PASS" starttime="20210729 10:03:50.274" endtime="20210729 10:03:50.284"/>
</kw>
<status status="PASS" starttime="20210729 10:03:48.703" endtime="20210729 10:03:50.284"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤% 23!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:50.285" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:50.285" endtime="20210729 10:03:50.285"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:50.286" level="INFO">${payload} = {'username': '#¤% 23!'}</msg>
<status status="PASS" starttime="20210729 10:03:50.285" endtime="20210729 10:03:50.286"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:50.297" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:50.297" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:50.286" endtime="20210729 10:03:50.297"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:50.297" endtime="20210729 10:03:50.297"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:50.286" endtime="20210729 10:03:50.297"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:50.286" endtime="20210729 10:03:50.297"/>
</for>
<status status="FAIL" starttime="20210729 10:03:50.284" endtime="20210729 10:03:50.297"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:50.284" endtime="20210729 10:03:50.297"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤% 23!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:50.298" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:50.298" endtime="20210729 10:03:50.298"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:50.299" level="INFO">${payload} = {'username': '#¤% 23!'}</msg>
<status status="PASS" starttime="20210729 10:03:50.299" endtime="20210729 10:03:50.299"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:50.303" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:50.303" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:50.299" endtime="20210729 10:03:50.303"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:50.303" endtime="20210729 10:03:50.303"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:50.299" endtime="20210729 10:03:50.303"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:50.299" endtime="20210729 10:03:50.303"/>
</for>
<status status="FAIL" starttime="20210729 10:03:50.298" endtime="20210729 10:03:50.303"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:50.298" endtime="20210729 10:03:50.303"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤% 23!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:50.304" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:50.304" endtime="20210729 10:03:50.304"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:50.305" level="INFO">${payload} = {'username': '#¤% 23!'}</msg>
<status status="PASS" starttime="20210729 10:03:50.304" endtime="20210729 10:03:50.305"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:50.309" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:50.309" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:50.305" endtime="20210729 10:03:50.309"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:50.310" endtime="20210729 10:03:50.310"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:50.305" endtime="20210729 10:03:50.310"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:50.305" endtime="20210729 10:03:50.310"/>
</for>
<status status="FAIL" starttime="20210729 10:03:50.303" endtime="20210729 10:03:50.310"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:50.303" endtime="20210729 10:03:50.311"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:50.284" endtime="20210729 10:03:50.311"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:50.319" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:50.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:50.329" level="INFO">${pids} = 24497
24504
24508</msg>
<status status="PASS" starttime="20210729 10:03:50.311" endtime="20210729 10:03:50.329"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:50.330" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:50.329" endtime="20210729 10:03:50.330"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:50.330" level="INFO">${pids} = ['24497', '24504', '24508']</msg>
<status status="PASS" starttime="20210729 10:03:50.330" endtime="20210729 10:03:50.330"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24497</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:50.334" level="INFO">Running command 'kill 24497 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:50.331" endtime="20210729 10:03:50.334"/>
</kw>
<status status="PASS" starttime="20210729 10:03:50.331" endtime="20210729 10:03:50.334"/>
</iter>
<iter>
<var name="${pid}">24504</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:50.337" level="INFO">Running command 'kill 24504 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:50.335" endtime="20210729 10:03:50.339"/>
</kw>
<status status="PASS" starttime="20210729 10:03:50.334" endtime="20210729 10:03:50.339"/>
</iter>
<iter>
<var name="${pid}">24508</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:50.345" level="INFO">Running command 'kill 24508 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:50.340" endtime="20210729 10:03:50.345"/>
</kw>
<status status="PASS" starttime="20210729 10:03:50.340" endtime="20210729 10:03:50.346"/>
</iter>
<status status="PASS" starttime="20210729 10:03:50.330" endtime="20210729 10:03:50.346"/>
</for>
<status status="PASS" starttime="20210729 10:03:50.330" endtime="20210729 10:03:50.346"/>
</branch>
<status status="PASS" starttime="20210729 10:03:50.330" endtime="20210729 10:03:50.346"/>
</if>
<status status="PASS" starttime="20210729 10:03:50.311" endtime="20210729 10:03:50.346"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": '#¤% 23!'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:48.702" endtime="20210729 10:03:50.346">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t36" name="With Any Valid Token, Updating Username Of Each System User With # %123!&amp; Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:50.352" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:50.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:50.361" level="INFO">${pids} = 24537</msg>
<status status="PASS" starttime="20210729 10:03:50.348" endtime="20210729 10:03:50.361"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:50.362" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:50.361" endtime="20210729 10:03:50.362"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:50.362" level="INFO">${pids} = ['24537']</msg>
<status status="PASS" starttime="20210729 10:03:50.362" endtime="20210729 10:03:50.362"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24537</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:50.366" level="INFO">Running command 'kill 24537 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:50.363" endtime="20210729 10:03:50.366"/>
</kw>
<status status="PASS" starttime="20210729 10:03:50.363" endtime="20210729 10:03:50.366"/>
</iter>
<status status="PASS" starttime="20210729 10:03:50.363" endtime="20210729 10:03:50.366"/>
</for>
<status status="PASS" starttime="20210729 10:03:50.362" endtime="20210729 10:03:50.366"/>
</branch>
<status status="PASS" starttime="20210729 10:03:50.362" endtime="20210729 10:03:50.366"/>
</if>
<status status="PASS" starttime="20210729 10:03:50.348" endtime="20210729 10:03:50.367"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:50.367" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:50.367" endtime="20210729 10:03:50.368"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:50.368" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:50.368" endtime="20210729 10:03:50.368"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:50.368" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:50.368" endtime="20210729 10:03:50.369"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:50.369" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:50.369" endtime="20210729 10:03:50.369"/>
</kw>
<msg timestamp="20210729 10:03:50.369" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:50.368" endtime="20210729 10:03:50.369"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:50.372" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:50.369" endtime="20210729 10:03:50.379"/>
</kw>
<status status="PASS" starttime="20210729 10:03:50.367" endtime="20210729 10:03:50.379"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:50.380" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:50.380" endtime="20210729 10:03:50.384"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:51.887" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:50.385" endtime="20210729 10:03:51.887"/>
</kw>
<status status="PASS" starttime="20210729 10:03:50.380" endtime="20210729 10:03:51.887"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:51.889" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:51.888" endtime="20210729 10:03:51.889"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:51.890" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:51.889" endtime="20210729 10:03:51.890"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:51.891" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:51.890" endtime="20210729 10:03:51.891"/>
</kw>
<msg timestamp="20210729 10:03:51.891" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:51.888" endtime="20210729 10:03:51.891"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:51.892" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:51.891" endtime="20210729 10:03:51.892"/>
</kw>
<status status="PASS" starttime="20210729 10:03:51.888" endtime="20210729 10:03:51.892"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:51.893" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:51.893" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:51.892" endtime="20210729 10:03:51.893"/>
</kw>
<status status="PASS" starttime="20210729 10:03:51.892" endtime="20210729 10:03:51.893"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:51.894" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:51.894" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:51.893" endtime="20210729 10:03:51.894"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:51.894" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:51.894" endtime="20210729 10:03:51.894"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:51.895" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:51.895" endtime="20210729 10:03:51.895"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:51.895" endtime="20210729 10:03:51.896"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:51.896" endtime="20210729 10:03:51.896"/>
</kw>
<status status="PASS" starttime="20210729 10:03:51.895" endtime="20210729 10:03:51.896"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:51.897" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:51.896" endtime="20210729 10:03:51.897"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:51.897" endtime="20210729 10:03:51.897"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:51.897" endtime="20210729 10:03:51.898"/>
</kw>
<status status="PASS" starttime="20210729 10:03:51.896" endtime="20210729 10:03:51.898"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:51.898" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:51.898" endtime="20210729 10:03:51.898"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:51.898" endtime="20210729 10:03:51.899"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:51.899" endtime="20210729 10:03:51.899"/>
</kw>
<status status="PASS" starttime="20210729 10:03:51.898" endtime="20210729 10:03:51.899"/>
</iter>
<status status="PASS" starttime="20210729 10:03:51.894" endtime="20210729 10:03:51.899"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:51.899" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:51.899" endtime="20210729 10:03:51.899"/>
</kw>
<status status="PASS" starttime="20210729 10:03:51.893" endtime="20210729 10:03:51.900"/>
</kw>
<status status="PASS" starttime="20210729 10:03:50.348" endtime="20210729 10:03:51.900"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=# %123!&amp;</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:51.901" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:51.900" endtime="20210729 10:03:51.901"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:51.901" level="INFO">${payload} = {'username': '# %123!&amp;'}</msg>
<status status="PASS" starttime="20210729 10:03:51.901" endtime="20210729 10:03:51.901"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:51.910" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:51.910" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:51.901" endtime="20210729 10:03:51.910"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:51.911" endtime="20210729 10:03:51.911"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:51.901" endtime="20210729 10:03:51.911"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:51.901" endtime="20210729 10:03:51.911"/>
</for>
<status status="FAIL" starttime="20210729 10:03:51.900" endtime="20210729 10:03:51.911"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:51.900" endtime="20210729 10:03:51.911"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=# %123!&amp;</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:51.912" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:51.912" endtime="20210729 10:03:51.912"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:51.913" level="INFO">${payload} = {'username': '# %123!&amp;'}</msg>
<status status="PASS" starttime="20210729 10:03:51.912" endtime="20210729 10:03:51.913"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:51.917" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:51.917" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:51.913" endtime="20210729 10:03:51.917"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:51.917" endtime="20210729 10:03:51.917"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:51.913" endtime="20210729 10:03:51.917"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:51.913" endtime="20210729 10:03:51.917"/>
</for>
<status status="FAIL" starttime="20210729 10:03:51.911" endtime="20210729 10:03:51.917"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:51.911" endtime="20210729 10:03:51.917"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=# %123!&amp;</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:51.918" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:51.918" endtime="20210729 10:03:51.918"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:51.919" level="INFO">${payload} = {'username': '# %123!&amp;'}</msg>
<status status="PASS" starttime="20210729 10:03:51.918" endtime="20210729 10:03:51.919"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:51.922" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:51.923" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:51.919" endtime="20210729 10:03:51.923"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:51.923" endtime="20210729 10:03:51.923"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:51.919" endtime="20210729 10:03:51.923"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:51.919" endtime="20210729 10:03:51.923"/>
</for>
<status status="FAIL" starttime="20210729 10:03:51.917" endtime="20210729 10:03:51.923"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:51.917" endtime="20210729 10:03:51.923"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:51.900" endtime="20210729 10:03:51.924"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:51.928" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:51.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:51.938" level="INFO">${pids} = 24560
24567
24577</msg>
<status status="PASS" starttime="20210729 10:03:51.924" endtime="20210729 10:03:51.938"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:51.938" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:51.938" endtime="20210729 10:03:51.938"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:51.939" level="INFO">${pids} = ['24560', '24567', '24577']</msg>
<status status="PASS" starttime="20210729 10:03:51.939" endtime="20210729 10:03:51.939"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24560</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:51.942" level="INFO">Running command 'kill 24560 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:51.940" endtime="20210729 10:03:51.943"/>
</kw>
<status status="PASS" starttime="20210729 10:03:51.940" endtime="20210729 10:03:51.943"/>
</iter>
<iter>
<var name="${pid}">24567</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:51.946" level="INFO">Running command 'kill 24567 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:51.943" endtime="20210729 10:03:51.947"/>
</kw>
<status status="PASS" starttime="20210729 10:03:51.943" endtime="20210729 10:03:51.948"/>
</iter>
<iter>
<var name="${pid}">24577</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:51.951" level="INFO">Running command 'kill 24577 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:51.948" endtime="20210729 10:03:51.951"/>
</kw>
<status status="PASS" starttime="20210729 10:03:51.948" endtime="20210729 10:03:51.951"/>
</iter>
<status status="PASS" starttime="20210729 10:03:51.939" endtime="20210729 10:03:51.951"/>
</for>
<status status="PASS" starttime="20210729 10:03:51.939" endtime="20210729 10:03:51.951"/>
</branch>
<status status="PASS" starttime="20210729 10:03:51.939" endtime="20210729 10:03:51.951"/>
</if>
<status status="PASS" starttime="20210729 10:03:51.924" endtime="20210729 10:03:51.952"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": '# %123!&amp;'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:50.347" endtime="20210729 10:03:51.952">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t37" name="With Any Valid Token, Updating Username Of Each System User With #¤%123!&amp;7683##() ?@#¤%&amp;34567 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:51.955" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:51.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:51.965" level="INFO">${pids} = 24606</msg>
<status status="PASS" starttime="20210729 10:03:51.953" endtime="20210729 10:03:51.965"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:51.966" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:51.966" endtime="20210729 10:03:51.966"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:51.967" level="INFO">${pids} = ['24606']</msg>
<status status="PASS" starttime="20210729 10:03:51.967" endtime="20210729 10:03:51.967"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24606</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:51.970" level="INFO">Running command 'kill 24606 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:51.967" endtime="20210729 10:03:51.970"/>
</kw>
<status status="PASS" starttime="20210729 10:03:51.967" endtime="20210729 10:03:51.970"/>
</iter>
<status status="PASS" starttime="20210729 10:03:51.967" endtime="20210729 10:03:51.971"/>
</for>
<status status="PASS" starttime="20210729 10:03:51.967" endtime="20210729 10:03:51.971"/>
</branch>
<status status="PASS" starttime="20210729 10:03:51.966" endtime="20210729 10:03:51.971"/>
</if>
<status status="PASS" starttime="20210729 10:03:51.953" endtime="20210729 10:03:51.971"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:51.972" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:51.972" endtime="20210729 10:03:51.972"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:51.973" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:51.973" endtime="20210729 10:03:51.973"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:51.973" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:51.973" endtime="20210729 10:03:51.973"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:51.973" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:51.973" endtime="20210729 10:03:51.974"/>
</kw>
<msg timestamp="20210729 10:03:51.974" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:51.972" endtime="20210729 10:03:51.974"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:51.977" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:51.974" endtime="20210729 10:03:51.984"/>
</kw>
<status status="PASS" starttime="20210729 10:03:51.971" endtime="20210729 10:03:51.985"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:51.986" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:51.985" endtime="20210729 10:03:51.993"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:53.507" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:51.994" endtime="20210729 10:03:53.507"/>
</kw>
<status status="PASS" starttime="20210729 10:03:51.985" endtime="20210729 10:03:53.508"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:53.509" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:53.508" endtime="20210729 10:03:53.509"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:53.509" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:53.509" endtime="20210729 10:03:53.509"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:53.509" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:53.509" endtime="20210729 10:03:53.509"/>
</kw>
<msg timestamp="20210729 10:03:53.510" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:53.508" endtime="20210729 10:03:53.510"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:53.510" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:53.510" endtime="20210729 10:03:53.510"/>
</kw>
<status status="PASS" starttime="20210729 10:03:53.508" endtime="20210729 10:03:53.510"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:53.511" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:53.511" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:53.511" endtime="20210729 10:03:53.511"/>
</kw>
<status status="PASS" starttime="20210729 10:03:53.511" endtime="20210729 10:03:53.511"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:53.512" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:53.512" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:53.512" endtime="20210729 10:03:53.512"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:53.512" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:53.512" endtime="20210729 10:03:53.512"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:53.513" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:53.513" endtime="20210729 10:03:53.513"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:53.513" endtime="20210729 10:03:53.514"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:53.514" endtime="20210729 10:03:53.514"/>
</kw>
<status status="PASS" starttime="20210729 10:03:53.513" endtime="20210729 10:03:53.514"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:53.514" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:53.514" endtime="20210729 10:03:53.514"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:53.514" endtime="20210729 10:03:53.515"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:53.515" endtime="20210729 10:03:53.515"/>
</kw>
<status status="PASS" starttime="20210729 10:03:53.514" endtime="20210729 10:03:53.515"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:53.516" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:53.515" endtime="20210729 10:03:53.516"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:53.516" endtime="20210729 10:03:53.516"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:53.517" endtime="20210729 10:03:53.517"/>
</kw>
<status status="PASS" starttime="20210729 10:03:53.515" endtime="20210729 10:03:53.517"/>
</iter>
<status status="PASS" starttime="20210729 10:03:53.513" endtime="20210729 10:03:53.517"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:53.517" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:53.517" endtime="20210729 10:03:53.517"/>
</kw>
<status status="PASS" starttime="20210729 10:03:53.511" endtime="20210729 10:03:53.517"/>
</kw>
<status status="PASS" starttime="20210729 10:03:51.953" endtime="20210729 10:03:53.518"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤%123!&amp;7683##() ?@#¤%&amp;34567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:53.519" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:53.518" endtime="20210729 10:03:53.519"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:53.519" level="INFO">${payload} = {'username': '#¤%123!&amp;7683##() ?@#¤%&amp;34567'}</msg>
<status status="PASS" starttime="20210729 10:03:53.519" endtime="20210729 10:03:53.519"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:53.529" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:53.529" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:53.519" endtime="20210729 10:03:53.530"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:53.530" endtime="20210729 10:03:53.530"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:53.519" endtime="20210729 10:03:53.530"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:53.519" endtime="20210729 10:03:53.530"/>
</for>
<status status="FAIL" starttime="20210729 10:03:53.518" endtime="20210729 10:03:53.530"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:53.518" endtime="20210729 10:03:53.530"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤%123!&amp;7683##() ?@#¤%&amp;34567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:53.531" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:53.531" endtime="20210729 10:03:53.531"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:53.532" level="INFO">${payload} = {'username': '#¤%123!&amp;7683##() ?@#¤%&amp;34567'}</msg>
<status status="PASS" starttime="20210729 10:03:53.531" endtime="20210729 10:03:53.532"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:53.536" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:53.536" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:53.532" endtime="20210729 10:03:53.536"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:53.536" endtime="20210729 10:03:53.536"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:53.532" endtime="20210729 10:03:53.536"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:53.532" endtime="20210729 10:03:53.536"/>
</for>
<status status="FAIL" starttime="20210729 10:03:53.530" endtime="20210729 10:03:53.536"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:53.530" endtime="20210729 10:03:53.536"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤%123!&amp;7683##() ?@#¤%&amp;34567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:53.537" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:53.537" endtime="20210729 10:03:53.537"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:53.538" level="INFO">${payload} = {'username': '#¤%123!&amp;7683##() ?@#¤%&amp;34567'}</msg>
<status status="PASS" starttime="20210729 10:03:53.537" endtime="20210729 10:03:53.538"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:53.542" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:53.542" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:53.538" endtime="20210729 10:03:53.542"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:53.542" endtime="20210729 10:03:53.542"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:53.538" endtime="20210729 10:03:53.542"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:53.538" endtime="20210729 10:03:53.542"/>
</for>
<status status="FAIL" starttime="20210729 10:03:53.536" endtime="20210729 10:03:53.542"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:53.536" endtime="20210729 10:03:53.542"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:53.518" endtime="20210729 10:03:53.542"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:53.547" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:53.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:53.559" level="INFO">${pids} = 24629
24636
24640</msg>
<status status="PASS" starttime="20210729 10:03:53.543" endtime="20210729 10:03:53.559"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:53.560" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:53.560" endtime="20210729 10:03:53.560"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:53.561" level="INFO">${pids} = ['24629', '24636', '24640']</msg>
<status status="PASS" starttime="20210729 10:03:53.561" endtime="20210729 10:03:53.561"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24629</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:53.564" level="INFO">Running command 'kill 24629 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:53.561" endtime="20210729 10:03:53.564"/>
</kw>
<status status="PASS" starttime="20210729 10:03:53.561" endtime="20210729 10:03:53.564"/>
</iter>
<iter>
<var name="${pid}">24636</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:53.567" level="INFO">Running command 'kill 24636 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:53.565" endtime="20210729 10:03:53.567"/>
</kw>
<status status="PASS" starttime="20210729 10:03:53.565" endtime="20210729 10:03:53.567"/>
</iter>
<iter>
<var name="${pid}">24640</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:53.571" level="INFO">Running command 'kill 24640 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:53.568" endtime="20210729 10:03:53.571"/>
</kw>
<status status="PASS" starttime="20210729 10:03:53.568" endtime="20210729 10:03:53.572"/>
</iter>
<status status="PASS" starttime="20210729 10:03:53.561" endtime="20210729 10:03:53.572"/>
</for>
<status status="PASS" starttime="20210729 10:03:53.560" endtime="20210729 10:03:53.572"/>
</branch>
<status status="PASS" starttime="20210729 10:03:53.560" endtime="20210729 10:03:53.572"/>
</if>
<status status="PASS" starttime="20210729 10:03:53.543" endtime="20210729 10:03:53.572"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": '#¤%123!&amp;7683##() ?@#¤%&amp;34567'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:51.952" endtime="20210729 10:03:53.572">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t38" name="With Any Valid Token, Updating Username Of Each System User With #¤12 ab Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:53.580" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:53.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:53.591" level="INFO">${pids} = 24669</msg>
<status status="PASS" starttime="20210729 10:03:53.574" endtime="20210729 10:03:53.591"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:53.592" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:53.592" endtime="20210729 10:03:53.592"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:53.593" level="INFO">${pids} = ['24669']</msg>
<status status="PASS" starttime="20210729 10:03:53.593" endtime="20210729 10:03:53.593"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24669</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:53.598" level="INFO">Running command 'kill 24669 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:53.593" endtime="20210729 10:03:53.599"/>
</kw>
<status status="PASS" starttime="20210729 10:03:53.593" endtime="20210729 10:03:53.599"/>
</iter>
<status status="PASS" starttime="20210729 10:03:53.593" endtime="20210729 10:03:53.599"/>
</for>
<status status="PASS" starttime="20210729 10:03:53.592" endtime="20210729 10:03:53.599"/>
</branch>
<status status="PASS" starttime="20210729 10:03:53.592" endtime="20210729 10:03:53.599"/>
</if>
<status status="PASS" starttime="20210729 10:03:53.574" endtime="20210729 10:03:53.599"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:53.600" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:53.600" endtime="20210729 10:03:53.600"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:53.601" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:53.601" endtime="20210729 10:03:53.601"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:53.601" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:53.601" endtime="20210729 10:03:53.601"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:53.602" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:53.602" endtime="20210729 10:03:53.602"/>
</kw>
<msg timestamp="20210729 10:03:53.602" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:53.601" endtime="20210729 10:03:53.602"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:53.607" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:53.602" endtime="20210729 10:03:53.609"/>
</kw>
<status status="PASS" starttime="20210729 10:03:53.600" endtime="20210729 10:03:53.609"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:53.610" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:53.610" endtime="20210729 10:03:53.614"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:55.115" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:53.614" endtime="20210729 10:03:55.115"/>
</kw>
<status status="PASS" starttime="20210729 10:03:53.609" endtime="20210729 10:03:55.116"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:55.120" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:55.120" endtime="20210729 10:03:55.120"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:55.121" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:55.121" endtime="20210729 10:03:55.121"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:55.122" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:55.121" endtime="20210729 10:03:55.122"/>
</kw>
<msg timestamp="20210729 10:03:55.122" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:55.119" endtime="20210729 10:03:55.122"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:55.123" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:55.122" endtime="20210729 10:03:55.123"/>
</kw>
<status status="PASS" starttime="20210729 10:03:55.117" endtime="20210729 10:03:55.123"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:55.124" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:55.124" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:55.124" endtime="20210729 10:03:55.124"/>
</kw>
<status status="PASS" starttime="20210729 10:03:55.124" endtime="20210729 10:03:55.125"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:55.125" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:55.126" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:55.125" endtime="20210729 10:03:55.126"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:55.126" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:55.126" endtime="20210729 10:03:55.126"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:55.127" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:55.127" endtime="20210729 10:03:55.127"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:55.127" endtime="20210729 10:03:55.128"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:55.128" endtime="20210729 10:03:55.128"/>
</kw>
<status status="PASS" starttime="20210729 10:03:55.126" endtime="20210729 10:03:55.128"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:55.129" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:55.128" endtime="20210729 10:03:55.129"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:55.129" endtime="20210729 10:03:55.129"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:55.129" endtime="20210729 10:03:55.129"/>
</kw>
<status status="PASS" starttime="20210729 10:03:55.128" endtime="20210729 10:03:55.129"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:55.130" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:55.130" endtime="20210729 10:03:55.130"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:55.130" endtime="20210729 10:03:55.130"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:55.131" endtime="20210729 10:03:55.131"/>
</kw>
<status status="PASS" starttime="20210729 10:03:55.130" endtime="20210729 10:03:55.131"/>
</iter>
<status status="PASS" starttime="20210729 10:03:55.126" endtime="20210729 10:03:55.131"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:55.131" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:55.131" endtime="20210729 10:03:55.131"/>
</kw>
<status status="PASS" starttime="20210729 10:03:55.125" endtime="20210729 10:03:55.131"/>
</kw>
<status status="PASS" starttime="20210729 10:03:53.573" endtime="20210729 10:03:55.131"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤12 ab</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:55.133" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:55.132" endtime="20210729 10:03:55.133"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:55.133" level="INFO">${payload} = {'username': '#¤12 ab'}</msg>
<status status="PASS" starttime="20210729 10:03:55.133" endtime="20210729 10:03:55.133"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:55.142" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:55.142" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:55.133" endtime="20210729 10:03:55.142"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:55.142" endtime="20210729 10:03:55.142"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:55.133" endtime="20210729 10:03:55.142"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:55.133" endtime="20210729 10:03:55.142"/>
</for>
<status status="FAIL" starttime="20210729 10:03:55.132" endtime="20210729 10:03:55.142"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:55.132" endtime="20210729 10:03:55.143"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤12 ab</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:55.143" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:55.143" endtime="20210729 10:03:55.144"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:55.144" level="INFO">${payload} = {'username': '#¤12 ab'}</msg>
<status status="PASS" starttime="20210729 10:03:55.144" endtime="20210729 10:03:55.144"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:55.148" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:55.148" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:55.144" endtime="20210729 10:03:55.148"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:55.148" endtime="20210729 10:03:55.148"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:55.144" endtime="20210729 10:03:55.148"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:55.144" endtime="20210729 10:03:55.148"/>
</for>
<status status="FAIL" starttime="20210729 10:03:55.143" endtime="20210729 10:03:55.148"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:55.143" endtime="20210729 10:03:55.148"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤12 ab</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:55.149" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:55.149" endtime="20210729 10:03:55.149"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:55.150" level="INFO">${payload} = {'username': '#¤12 ab'}</msg>
<status status="PASS" starttime="20210729 10:03:55.149" endtime="20210729 10:03:55.150"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:55.159" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:55.159" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:55.150" endtime="20210729 10:03:55.159"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:55.159" endtime="20210729 10:03:55.159"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:55.150" endtime="20210729 10:03:55.160"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:55.150" endtime="20210729 10:03:55.160"/>
</for>
<status status="FAIL" starttime="20210729 10:03:55.148" endtime="20210729 10:03:55.160"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:55.148" endtime="20210729 10:03:55.160"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:55.132" endtime="20210729 10:03:55.160"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:55.171" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:55.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:55.182" level="INFO">${pids} = 24692
24699
24704</msg>
<status status="PASS" starttime="20210729 10:03:55.162" endtime="20210729 10:03:55.182"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:55.183" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:55.183" endtime="20210729 10:03:55.183"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:55.184" level="INFO">${pids} = ['24692', '24699', '24704']</msg>
<status status="PASS" starttime="20210729 10:03:55.184" endtime="20210729 10:03:55.184"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24692</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:55.191" level="INFO">Running command 'kill 24692 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:55.185" endtime="20210729 10:03:55.191"/>
</kw>
<status status="PASS" starttime="20210729 10:03:55.185" endtime="20210729 10:03:55.191"/>
</iter>
<iter>
<var name="${pid}">24699</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:55.197" level="INFO">Running command 'kill 24699 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:55.192" endtime="20210729 10:03:55.198"/>
</kw>
<status status="PASS" starttime="20210729 10:03:55.191" endtime="20210729 10:03:55.198"/>
</iter>
<iter>
<var name="${pid}">24704</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:55.204" level="INFO">Running command 'kill 24704 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:55.198" endtime="20210729 10:03:55.204"/>
</kw>
<status status="PASS" starttime="20210729 10:03:55.198" endtime="20210729 10:03:55.204"/>
</iter>
<status status="PASS" starttime="20210729 10:03:55.184" endtime="20210729 10:03:55.204"/>
</for>
<status status="PASS" starttime="20210729 10:03:55.183" endtime="20210729 10:03:55.204"/>
</branch>
<status status="PASS" starttime="20210729 10:03:55.183" endtime="20210729 10:03:55.204"/>
</if>
<status status="PASS" starttime="20210729 10:03:55.161" endtime="20210729 10:03:55.205"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": '#¤12 ab'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:53.573" endtime="20210729 10:03:55.205">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t39" name="With Any Valid Token, Updating Username Of Each System User With # 123abc Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:55.210" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:55.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:55.220" level="INFO">${pids} = 24733</msg>
<status status="PASS" starttime="20210729 10:03:55.207" endtime="20210729 10:03:55.220"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:55.221" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:55.220" endtime="20210729 10:03:55.221"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:55.222" level="INFO">${pids} = ['24733']</msg>
<status status="PASS" starttime="20210729 10:03:55.222" endtime="20210729 10:03:55.222"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24733</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:55.226" level="INFO">Running command 'kill 24733 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:55.223" endtime="20210729 10:03:55.227"/>
</kw>
<status status="PASS" starttime="20210729 10:03:55.222" endtime="20210729 10:03:55.227"/>
</iter>
<status status="PASS" starttime="20210729 10:03:55.222" endtime="20210729 10:03:55.227"/>
</for>
<status status="PASS" starttime="20210729 10:03:55.221" endtime="20210729 10:03:55.227"/>
</branch>
<status status="PASS" starttime="20210729 10:03:55.221" endtime="20210729 10:03:55.227"/>
</if>
<status status="PASS" starttime="20210729 10:03:55.207" endtime="20210729 10:03:55.227"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:55.228" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:55.228" endtime="20210729 10:03:55.228"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:55.229" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:55.229" endtime="20210729 10:03:55.229"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:55.229" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:55.229" endtime="20210729 10:03:55.229"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:55.230" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:55.229" endtime="20210729 10:03:55.230"/>
</kw>
<msg timestamp="20210729 10:03:55.230" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:55.228" endtime="20210729 10:03:55.230"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:55.233" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:55.230" endtime="20210729 10:03:55.234"/>
</kw>
<status status="PASS" starttime="20210729 10:03:55.228" endtime="20210729 10:03:55.235"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:55.236" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:55.235" endtime="20210729 10:03:55.248"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:56.759" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:55.249" endtime="20210729 10:03:56.759"/>
</kw>
<status status="PASS" starttime="20210729 10:03:55.235" endtime="20210729 10:03:56.759"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:56.760" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:56.760" endtime="20210729 10:03:56.760"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:56.761" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:56.760" endtime="20210729 10:03:56.761"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:56.761" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:56.761" endtime="20210729 10:03:56.761"/>
</kw>
<msg timestamp="20210729 10:03:56.761" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:56.760" endtime="20210729 10:03:56.761"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:56.762" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:56.762" endtime="20210729 10:03:56.762"/>
</kw>
<status status="PASS" starttime="20210729 10:03:56.759" endtime="20210729 10:03:56.762"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:56.766" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:56.766" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:56.765" endtime="20210729 10:03:56.766"/>
</kw>
<status status="PASS" starttime="20210729 10:03:56.763" endtime="20210729 10:03:56.766"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:56.766" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:56.767" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:56.766" endtime="20210729 10:03:56.767"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:56.767" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:56.767" endtime="20210729 10:03:56.767"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:56.768" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:56.768" endtime="20210729 10:03:56.768"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:56.768" endtime="20210729 10:03:56.768"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:56.769" endtime="20210729 10:03:56.769"/>
</kw>
<status status="PASS" starttime="20210729 10:03:56.767" endtime="20210729 10:03:56.769"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:56.769" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:56.769" endtime="20210729 10:03:56.769"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:56.769" endtime="20210729 10:03:56.770"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:56.770" endtime="20210729 10:03:56.770"/>
</kw>
<status status="PASS" starttime="20210729 10:03:56.769" endtime="20210729 10:03:56.770"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:56.771" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:56.770" endtime="20210729 10:03:56.771"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:56.771" endtime="20210729 10:03:56.771"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:56.771" endtime="20210729 10:03:56.772"/>
</kw>
<status status="PASS" starttime="20210729 10:03:56.770" endtime="20210729 10:03:56.772"/>
</iter>
<status status="PASS" starttime="20210729 10:03:56.767" endtime="20210729 10:03:56.772"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:56.772" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:56.772" endtime="20210729 10:03:56.772"/>
</kw>
<status status="PASS" starttime="20210729 10:03:56.766" endtime="20210729 10:03:56.772"/>
</kw>
<status status="PASS" starttime="20210729 10:03:55.206" endtime="20210729 10:03:56.772"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=# 123abc</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:56.774" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:56.773" endtime="20210729 10:03:56.774"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:56.774" level="INFO">${payload} = {'username': '# 123abc'}</msg>
<status status="PASS" starttime="20210729 10:03:56.774" endtime="20210729 10:03:56.774"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:56.783" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:56.783" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:56.775" endtime="20210729 10:03:56.783"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:56.784" endtime="20210729 10:03:56.784"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:56.774" endtime="20210729 10:03:56.784"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:56.774" endtime="20210729 10:03:56.784"/>
</for>
<status status="FAIL" starttime="20210729 10:03:56.773" endtime="20210729 10:03:56.784"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:56.773" endtime="20210729 10:03:56.784"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=# 123abc</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:56.786" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:56.786" endtime="20210729 10:03:56.786"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:56.787" level="INFO">${payload} = {'username': '# 123abc'}</msg>
<status status="PASS" starttime="20210729 10:03:56.786" endtime="20210729 10:03:56.787"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:56.792" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:56.792" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:56.787" endtime="20210729 10:03:56.792"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:56.792" endtime="20210729 10:03:56.792"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:56.787" endtime="20210729 10:03:56.792"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:56.787" endtime="20210729 10:03:56.793"/>
</for>
<status status="FAIL" starttime="20210729 10:03:56.784" endtime="20210729 10:03:56.793"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:56.784" endtime="20210729 10:03:56.793"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=# 123abc</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:56.794" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:56.794" endtime="20210729 10:03:56.794"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:56.795" level="INFO">${payload} = {'username': '# 123abc'}</msg>
<status status="PASS" starttime="20210729 10:03:56.794" endtime="20210729 10:03:56.795"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:56.799" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:56.799" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:56.795" endtime="20210729 10:03:56.799"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:56.799" endtime="20210729 10:03:56.799"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:56.795" endtime="20210729 10:03:56.799"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:56.795" endtime="20210729 10:03:56.799"/>
</for>
<status status="FAIL" starttime="20210729 10:03:56.793" endtime="20210729 10:03:56.799"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:56.793" endtime="20210729 10:03:56.799"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:56.773" endtime="20210729 10:03:56.799"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:56.803" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:56.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:56.815" level="INFO">${pids} = 24756
24763
24773</msg>
<status status="PASS" starttime="20210729 10:03:56.800" endtime="20210729 10:03:56.815"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:56.816" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:56.816" endtime="20210729 10:03:56.816"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:56.817" level="INFO">${pids} = ['24756', '24763', '24773']</msg>
<status status="PASS" starttime="20210729 10:03:56.817" endtime="20210729 10:03:56.817"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24756</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:56.823" level="INFO">Running command 'kill 24756 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:56.818" endtime="20210729 10:03:56.823"/>
</kw>
<status status="PASS" starttime="20210729 10:03:56.818" endtime="20210729 10:03:56.823"/>
</iter>
<iter>
<var name="${pid}">24763</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:56.827" level="INFO">Running command 'kill 24763 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:56.824" endtime="20210729 10:03:56.828"/>
</kw>
<status status="PASS" starttime="20210729 10:03:56.824" endtime="20210729 10:03:56.828"/>
</iter>
<iter>
<var name="${pid}">24773</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:56.833" level="INFO">Running command 'kill 24773 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:56.828" endtime="20210729 10:03:56.833"/>
</kw>
<status status="PASS" starttime="20210729 10:03:56.828" endtime="20210729 10:03:56.833"/>
</iter>
<status status="PASS" starttime="20210729 10:03:56.817" endtime="20210729 10:03:56.833"/>
</for>
<status status="PASS" starttime="20210729 10:03:56.817" endtime="20210729 10:03:56.833"/>
</branch>
<status status="PASS" starttime="20210729 10:03:56.817" endtime="20210729 10:03:56.833"/>
</if>
<status status="PASS" starttime="20210729 10:03:56.800" endtime="20210729 10:03:56.834"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": '# 123abc'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:55.205" endtime="20210729 10:03:56.834">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t40" name="With Any Valid Token, Updating Username Of Each System User With #¤/&amp;  !123abc456hjk Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:56.849" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:56.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:56.850" level="INFO">${pids} = 24802</msg>
<status status="PASS" starttime="20210729 10:03:56.836" endtime="20210729 10:03:56.851"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:56.852" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:56.852" endtime="20210729 10:03:56.852"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:56.853" level="INFO">${pids} = ['24802']</msg>
<status status="PASS" starttime="20210729 10:03:56.853" endtime="20210729 10:03:56.853"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24802</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:56.858" level="INFO">Running command 'kill 24802 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:56.853" endtime="20210729 10:03:56.858"/>
</kw>
<status status="PASS" starttime="20210729 10:03:56.853" endtime="20210729 10:03:56.858"/>
</iter>
<status status="PASS" starttime="20210729 10:03:56.853" endtime="20210729 10:03:56.858"/>
</for>
<status status="PASS" starttime="20210729 10:03:56.853" endtime="20210729 10:03:56.858"/>
</branch>
<status status="PASS" starttime="20210729 10:03:56.852" endtime="20210729 10:03:56.858"/>
</if>
<status status="PASS" starttime="20210729 10:03:56.836" endtime="20210729 10:03:56.859"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:56.860" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:56.859" endtime="20210729 10:03:56.860"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:56.861" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:56.860" endtime="20210729 10:03:56.861"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:56.861" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:56.861" endtime="20210729 10:03:56.861"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:56.862" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:56.861" endtime="20210729 10:03:56.862"/>
</kw>
<msg timestamp="20210729 10:03:56.862" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:56.860" endtime="20210729 10:03:56.862"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:56.866" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:56.862" endtime="20210729 10:03:56.868"/>
</kw>
<status status="PASS" starttime="20210729 10:03:56.859" endtime="20210729 10:03:56.868"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:56.869" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:56.869" endtime="20210729 10:03:56.874"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:58.375" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:56.874" endtime="20210729 10:03:58.376"/>
</kw>
<status status="PASS" starttime="20210729 10:03:56.869" endtime="20210729 10:03:58.376"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:58.377" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:58.377" endtime="20210729 10:03:58.377"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:58.378" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:58.377" endtime="20210729 10:03:58.378"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:58.378" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:58.378" endtime="20210729 10:03:58.378"/>
</kw>
<msg timestamp="20210729 10:03:58.378" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:58.377" endtime="20210729 10:03:58.378"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:03:58.379" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:03:58.378" endtime="20210729 10:03:58.379"/>
</kw>
<status status="PASS" starttime="20210729 10:03:58.376" endtime="20210729 10:03:58.379"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:03:58.380" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:03:58.380" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:03:58.380" endtime="20210729 10:03:58.380"/>
</kw>
<status status="PASS" starttime="20210729 10:03:58.379" endtime="20210729 10:03:58.380"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:03:58.380" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:03:58.381" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:03:58.380" endtime="20210729 10:03:58.381"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:03:58.381" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:03:58.381" endtime="20210729 10:03:58.381"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:58.382" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:58.381" endtime="20210729 10:03:58.382"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:58.382" endtime="20210729 10:03:58.382"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:58.382" endtime="20210729 10:03:58.383"/>
</kw>
<status status="PASS" starttime="20210729 10:03:58.381" endtime="20210729 10:03:58.383"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:58.383" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:58.383" endtime="20210729 10:03:58.383"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:58.383" endtime="20210729 10:03:58.384"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:58.384" endtime="20210729 10:03:58.384"/>
</kw>
<status status="PASS" starttime="20210729 10:03:58.383" endtime="20210729 10:03:58.384"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:58.385" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:03:58.384" endtime="20210729 10:03:58.385"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:03:58.385" endtime="20210729 10:03:58.385"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:03:58.385" endtime="20210729 10:03:58.386"/>
</kw>
<status status="PASS" starttime="20210729 10:03:58.384" endtime="20210729 10:03:58.386"/>
</iter>
<status status="PASS" starttime="20210729 10:03:58.381" endtime="20210729 10:03:58.386"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:03:58.386" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:03:58.386" endtime="20210729 10:03:58.386"/>
</kw>
<status status="PASS" starttime="20210729 10:03:58.380" endtime="20210729 10:03:58.386"/>
</kw>
<status status="PASS" starttime="20210729 10:03:56.835" endtime="20210729 10:03:58.386"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/&amp;\ \ !123abc456hjk</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:58.387" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:03:58.387" endtime="20210729 10:03:58.388"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:58.388" level="INFO">${payload} = {'username': '#¤/&amp;  !123abc456hjk'}</msg>
<status status="PASS" starttime="20210729 10:03:58.388" endtime="20210729 10:03:58.388"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:58.400" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:58.400" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:58.389" endtime="20210729 10:03:58.400"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:58.400" endtime="20210729 10:03:58.400"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:58.389" endtime="20210729 10:03:58.400"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:58.389" endtime="20210729 10:03:58.400"/>
</for>
<status status="FAIL" starttime="20210729 10:03:58.387" endtime="20210729 10:03:58.401"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:58.387" endtime="20210729 10:03:58.401"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/&amp;\ \ !123abc456hjk</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:58.402" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:03:58.401" endtime="20210729 10:03:58.402"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:58.402" level="INFO">${payload} = {'username': '#¤/&amp;  !123abc456hjk'}</msg>
<status status="PASS" starttime="20210729 10:03:58.402" endtime="20210729 10:03:58.402"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:58.406" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:58.406" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:58.403" endtime="20210729 10:03:58.406"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:58.407" endtime="20210729 10:03:58.407"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:58.402" endtime="20210729 10:03:58.407"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:58.402" endtime="20210729 10:03:58.407"/>
</for>
<status status="FAIL" starttime="20210729 10:03:58.401" endtime="20210729 10:03:58.407"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:58.401" endtime="20210729 10:03:58.407"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/&amp;\ \ !123abc456hjk</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:58.408" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:03:58.408" endtime="20210729 10:03:58.408"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:03:58.409" level="INFO">${payload} = {'username': '#¤/&amp;  !123abc456hjk'}</msg>
<status status="PASS" starttime="20210729 10:03:58.408" endtime="20210729 10:03:58.409"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:03:58.413" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:03:58.414" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:03:58.409" endtime="20210729 10:03:58.414"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:03:58.414" endtime="20210729 10:03:58.414"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:58.409" endtime="20210729 10:03:58.414"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:58.409" endtime="20210729 10:03:58.414"/>
</for>
<status status="FAIL" starttime="20210729 10:03:58.407" endtime="20210729 10:03:58.414"/>
</kw>
<status status="FAIL" starttime="20210729 10:03:58.407" endtime="20210729 10:03:58.414"/>
</iter>
<status status="FAIL" starttime="20210729 10:03:58.386" endtime="20210729 10:03:58.415"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:58.421" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:58.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:58.431" level="INFO">${pids} = 24825
24832
24836</msg>
<status status="PASS" starttime="20210729 10:03:58.415" endtime="20210729 10:03:58.431"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:58.432" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:58.432" endtime="20210729 10:03:58.432"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:58.433" level="INFO">${pids} = ['24825', '24832', '24836']</msg>
<status status="PASS" starttime="20210729 10:03:58.433" endtime="20210729 10:03:58.433"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24825</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:58.436" level="INFO">Running command 'kill 24825 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:58.433" endtime="20210729 10:03:58.436"/>
</kw>
<status status="PASS" starttime="20210729 10:03:58.433" endtime="20210729 10:03:58.436"/>
</iter>
<iter>
<var name="${pid}">24832</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:58.440" level="INFO">Running command 'kill 24832 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:58.437" endtime="20210729 10:03:58.441"/>
</kw>
<status status="PASS" starttime="20210729 10:03:58.436" endtime="20210729 10:03:58.441"/>
</iter>
<iter>
<var name="${pid}">24836</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:58.445" level="INFO">Running command 'kill 24836 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:58.441" endtime="20210729 10:03:58.446"/>
</kw>
<status status="PASS" starttime="20210729 10:03:58.441" endtime="20210729 10:03:58.446"/>
</iter>
<status status="PASS" starttime="20210729 10:03:58.433" endtime="20210729 10:03:58.446"/>
</for>
<status status="PASS" starttime="20210729 10:03:58.432" endtime="20210729 10:03:58.446"/>
</branch>
<status status="PASS" starttime="20210729 10:03:58.432" endtime="20210729 10:03:58.446"/>
</if>
<status status="PASS" starttime="20210729 10:03:58.415" endtime="20210729 10:03:58.446"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": '#¤/&amp; !123abc456hjk'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:56.834" endtime="20210729 10:03:58.447">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t41" name="With Any Valid Token, Updating Username Of Each System User With #¤ abc! Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:03:58.451" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:03:58.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:03:58.461" level="INFO">${pids} = 24865</msg>
<status status="PASS" starttime="20210729 10:03:58.448" endtime="20210729 10:03:58.461"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:58.462" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:03:58.462" endtime="20210729 10:03:58.462"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:03:58.463" level="INFO">${pids} = ['24865']</msg>
<status status="PASS" starttime="20210729 10:03:58.463" endtime="20210729 10:03:58.463"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24865</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:58.469" level="INFO">Running command 'kill 24865 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:58.463" endtime="20210729 10:03:58.470"/>
</kw>
<status status="PASS" starttime="20210729 10:03:58.463" endtime="20210729 10:03:58.470"/>
</iter>
<status status="PASS" starttime="20210729 10:03:58.463" endtime="20210729 10:03:58.470"/>
</for>
<status status="PASS" starttime="20210729 10:03:58.463" endtime="20210729 10:03:58.470"/>
</branch>
<status status="PASS" starttime="20210729 10:03:58.462" endtime="20210729 10:03:58.470"/>
</if>
<status status="PASS" starttime="20210729 10:03:58.448" endtime="20210729 10:03:58.470"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:58.471" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:58.471" endtime="20210729 10:03:58.471"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:58.472" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:58.472" endtime="20210729 10:03:58.472"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:58.472" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:58.472" endtime="20210729 10:03:58.472"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:58.473" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:58.473" endtime="20210729 10:03:58.473"/>
</kw>
<msg timestamp="20210729 10:03:58.473" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:58.471" endtime="20210729 10:03:58.473"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:03:58.480" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:03:58.473" endtime="20210729 10:03:58.482"/>
</kw>
<status status="PASS" starttime="20210729 10:03:58.470" endtime="20210729 10:03:58.482"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:03:58.483" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:03:58.483" endtime="20210729 10:03:58.487"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:03:59.997" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:03:58.488" endtime="20210729 10:03:59.997"/>
</kw>
<status status="PASS" starttime="20210729 10:03:58.482" endtime="20210729 10:03:59.997"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:03:59.999" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:03:59.999" endtime="20210729 10:03:59.999"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:03:59.999" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:03:59.999" endtime="20210729 10:03:59.999"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:04:00.000" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:59.999" endtime="20210729 10:04:00.000"/>
</kw>
<msg timestamp="20210729 10:04:00.000" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:03:59.998" endtime="20210729 10:04:00.000"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:04:00.000" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:04:00.000" endtime="20210729 10:04:00.001"/>
</kw>
<status status="PASS" starttime="20210729 10:03:59.998" endtime="20210729 10:04:00.001"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:04:00.001" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:04:00.001" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:04:00.001" endtime="20210729 10:04:00.001"/>
</kw>
<status status="PASS" starttime="20210729 10:04:00.001" endtime="20210729 10:04:00.002"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:04:00.002" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:04:00.002" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:04:00.002" endtime="20210729 10:04:00.002"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:04:00.003" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:04:00.002" endtime="20210729 10:04:00.003"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:04:00.004" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:04:00.004" endtime="20210729 10:04:00.004"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:04:00.004" endtime="20210729 10:04:00.005"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:04:00.005" endtime="20210729 10:04:00.005"/>
</kw>
<status status="PASS" starttime="20210729 10:04:00.003" endtime="20210729 10:04:00.005"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:04:00.005" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:04:00.005" endtime="20210729 10:04:00.005"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:04:00.005" endtime="20210729 10:04:00.007"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:04:00.007" endtime="20210729 10:04:00.007"/>
</kw>
<status status="PASS" starttime="20210729 10:04:00.005" endtime="20210729 10:04:00.007"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:04:00.008" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:04:00.008" endtime="20210729 10:04:00.008"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:04:00.008" endtime="20210729 10:04:00.009"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:04:00.009" endtime="20210729 10:04:00.009"/>
</kw>
<status status="PASS" starttime="20210729 10:04:00.008" endtime="20210729 10:04:00.009"/>
</iter>
<status status="PASS" starttime="20210729 10:04:00.003" endtime="20210729 10:04:00.009"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:04:00.009" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:04:00.009" endtime="20210729 10:04:00.009"/>
</kw>
<status status="PASS" starttime="20210729 10:04:00.002" endtime="20210729 10:04:00.010"/>
</kw>
<status status="PASS" starttime="20210729 10:03:58.448" endtime="20210729 10:04:00.010"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤ abc!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:04:00.011" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:04:00.010" endtime="20210729 10:04:00.011"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:04:00.011" level="INFO">${payload} = {'username': '#¤ abc!'}</msg>
<status status="PASS" starttime="20210729 10:04:00.011" endtime="20210729 10:04:00.011"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:04:00.019" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:04:00.020" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:04:00.011" endtime="20210729 10:04:00.020"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:04:00.020" endtime="20210729 10:04:00.020"/>
</kw>
<status status="FAIL" starttime="20210729 10:04:00.011" endtime="20210729 10:04:00.020"/>
</iter>
<status status="FAIL" starttime="20210729 10:04:00.011" endtime="20210729 10:04:00.020"/>
</for>
<status status="FAIL" starttime="20210729 10:04:00.010" endtime="20210729 10:04:00.020"/>
</kw>
<status status="FAIL" starttime="20210729 10:04:00.010" endtime="20210729 10:04:00.020"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤ abc!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:04:00.023" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:04:00.022" endtime="20210729 10:04:00.023"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:04:00.024" level="INFO">${payload} = {'username': '#¤ abc!'}</msg>
<status status="PASS" starttime="20210729 10:04:00.023" endtime="20210729 10:04:00.024"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:04:00.028" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:04:00.029" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:04:00.025" endtime="20210729 10:04:00.029"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:04:00.029" endtime="20210729 10:04:00.029"/>
</kw>
<status status="FAIL" starttime="20210729 10:04:00.024" endtime="20210729 10:04:00.029"/>
</iter>
<status status="FAIL" starttime="20210729 10:04:00.024" endtime="20210729 10:04:00.029"/>
</for>
<status status="FAIL" starttime="20210729 10:04:00.021" endtime="20210729 10:04:00.029"/>
</kw>
<status status="FAIL" starttime="20210729 10:04:00.020" endtime="20210729 10:04:00.029"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤ abc!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:04:00.030" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:04:00.030" endtime="20210729 10:04:00.030"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:04:00.031" level="INFO">${payload} = {'username': '#¤ abc!'}</msg>
<status status="PASS" starttime="20210729 10:04:00.030" endtime="20210729 10:04:00.031"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:04:00.035" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:04:00.036" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:04:00.031" endtime="20210729 10:04:00.036"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:04:00.036" endtime="20210729 10:04:00.036"/>
</kw>
<status status="FAIL" starttime="20210729 10:04:00.031" endtime="20210729 10:04:00.036"/>
</iter>
<status status="FAIL" starttime="20210729 10:04:00.031" endtime="20210729 10:04:00.036"/>
</for>
<status status="FAIL" starttime="20210729 10:04:00.029" endtime="20210729 10:04:00.037"/>
</kw>
<status status="FAIL" starttime="20210729 10:04:00.029" endtime="20210729 10:04:00.037"/>
</iter>
<status status="FAIL" starttime="20210729 10:04:00.010" endtime="20210729 10:04:00.037"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:04:00.046" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:04:00.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:04:00.054" level="INFO">${pids} = 24888
24895
24900</msg>
<status status="PASS" starttime="20210729 10:04:00.038" endtime="20210729 10:04:00.054"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:04:00.055" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:04:00.055" endtime="20210729 10:04:00.055"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:04:00.056" level="INFO">${pids} = ['24888', '24895', '24900']</msg>
<status status="PASS" starttime="20210729 10:04:00.056" endtime="20210729 10:04:00.056"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24888</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:04:00.061" level="INFO">Running command 'kill 24888 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:04:00.057" endtime="20210729 10:04:00.062"/>
</kw>
<status status="PASS" starttime="20210729 10:04:00.057" endtime="20210729 10:04:00.062"/>
</iter>
<iter>
<var name="${pid}">24895</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:04:00.066" level="INFO">Running command 'kill 24895 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:04:00.062" endtime="20210729 10:04:00.068"/>
</kw>
<status status="PASS" starttime="20210729 10:04:00.062" endtime="20210729 10:04:00.068"/>
</iter>
<iter>
<var name="${pid}">24900</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:04:00.074" level="INFO">Running command 'kill 24900 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:04:00.069" endtime="20210729 10:04:00.074"/>
</kw>
<status status="PASS" starttime="20210729 10:04:00.069" endtime="20210729 10:04:00.074"/>
</iter>
<status status="PASS" starttime="20210729 10:04:00.057" endtime="20210729 10:04:00.074"/>
</for>
<status status="PASS" starttime="20210729 10:04:00.056" endtime="20210729 10:04:00.074"/>
</branch>
<status status="PASS" starttime="20210729 10:04:00.055" endtime="20210729 10:04:00.074"/>
</if>
<status status="PASS" starttime="20210729 10:04:00.038" endtime="20210729 10:04:00.075"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": '#¤ abc!'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:03:58.447" endtime="20210729 10:04:00.075">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t42" name="With Any Valid Token, Updating Username Of Each System User With #¤ abc!g Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:04:00.080" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:04:00.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:04:00.087" level="INFO">${pids} = 24929</msg>
<status status="PASS" starttime="20210729 10:04:00.076" endtime="20210729 10:04:00.087"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:04:00.089" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:04:00.088" endtime="20210729 10:04:00.089"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:04:00.090" level="INFO">${pids} = ['24929']</msg>
<status status="PASS" starttime="20210729 10:04:00.089" endtime="20210729 10:04:00.090"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24929</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:04:00.096" level="INFO">Running command 'kill 24929 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:04:00.091" endtime="20210729 10:04:00.096"/>
</kw>
<status status="PASS" starttime="20210729 10:04:00.091" endtime="20210729 10:04:00.096"/>
</iter>
<status status="PASS" starttime="20210729 10:04:00.090" endtime="20210729 10:04:00.096"/>
</for>
<status status="PASS" starttime="20210729 10:04:00.089" endtime="20210729 10:04:00.096"/>
</branch>
<status status="PASS" starttime="20210729 10:04:00.089" endtime="20210729 10:04:00.096"/>
</if>
<status status="PASS" starttime="20210729 10:04:00.076" endtime="20210729 10:04:00.096"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:04:00.098" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:04:00.097" endtime="20210729 10:04:00.098"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:04:00.098" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:04:00.098" endtime="20210729 10:04:00.098"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:04:00.099" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:04:00.098" endtime="20210729 10:04:00.099"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:04:00.099" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:04:00.099" endtime="20210729 10:04:00.099"/>
</kw>
<msg timestamp="20210729 10:04:00.100" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:04:00.098" endtime="20210729 10:04:00.100"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:04:00.105" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:04:00.100" endtime="20210729 10:04:00.107"/>
</kw>
<status status="PASS" starttime="20210729 10:04:00.097" endtime="20210729 10:04:00.107"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:04:00.109" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:04:00.108" endtime="20210729 10:04:00.112"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:04:01.626" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:04:00.112" endtime="20210729 10:04:01.626"/>
</kw>
<status status="PASS" starttime="20210729 10:04:00.108" endtime="20210729 10:04:01.626"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:04:01.627" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:04:01.627" endtime="20210729 10:04:01.627"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:04:01.628" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:04:01.627" endtime="20210729 10:04:01.628"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:04:01.628" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:04:01.628" endtime="20210729 10:04:01.628"/>
</kw>
<msg timestamp="20210729 10:04:01.628" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:04:01.627" endtime="20210729 10:04:01.628"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:04:01.629" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:04:01.628" endtime="20210729 10:04:01.629"/>
</kw>
<status status="PASS" starttime="20210729 10:04:01.626" endtime="20210729 10:04:01.629"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:04:01.630" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:04:01.630" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:04:01.630" endtime="20210729 10:04:01.630"/>
</kw>
<status status="PASS" starttime="20210729 10:04:01.629" endtime="20210729 10:04:01.630"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:04:01.631" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:04:01.631" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:04:01.631" endtime="20210729 10:04:01.631"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:04:01.631" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:04:01.631" endtime="20210729 10:04:01.632"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:04:01.632" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:04:01.632" endtime="20210729 10:04:01.632"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:04:01.632" endtime="20210729 10:04:01.633"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:04:01.633" endtime="20210729 10:04:01.633"/>
</kw>
<status status="PASS" starttime="20210729 10:04:01.632" endtime="20210729 10:04:01.633"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:04:01.634" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:04:01.634" endtime="20210729 10:04:01.634"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:04:01.634" endtime="20210729 10:04:01.634"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:04:01.635" endtime="20210729 10:04:01.635"/>
</kw>
<status status="PASS" starttime="20210729 10:04:01.634" endtime="20210729 10:04:01.635"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:04:01.635" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:04:01.635" endtime="20210729 10:04:01.635"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:04:01.635" endtime="20210729 10:04:01.636"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:04:01.636" endtime="20210729 10:04:01.636"/>
</kw>
<status status="PASS" starttime="20210729 10:04:01.635" endtime="20210729 10:04:01.636"/>
</iter>
<status status="PASS" starttime="20210729 10:04:01.632" endtime="20210729 10:04:01.636"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:04:01.637" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:04:01.636" endtime="20210729 10:04:01.637"/>
</kw>
<status status="PASS" starttime="20210729 10:04:01.630" endtime="20210729 10:04:01.637"/>
</kw>
<status status="PASS" starttime="20210729 10:04:00.076" endtime="20210729 10:04:01.637"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤ abc!g</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:04:01.638" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:04:01.638" endtime="20210729 10:04:01.638"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:04:01.639" level="INFO">${payload} = {'username': '#¤ abc!g'}</msg>
<status status="PASS" starttime="20210729 10:04:01.639" endtime="20210729 10:04:01.639"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:04:01.648" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:04:01.648" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:04:01.639" endtime="20210729 10:04:01.648"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:04:01.649" endtime="20210729 10:04:01.649"/>
</kw>
<status status="FAIL" starttime="20210729 10:04:01.639" endtime="20210729 10:04:01.649"/>
</iter>
<status status="FAIL" starttime="20210729 10:04:01.639" endtime="20210729 10:04:01.649"/>
</for>
<status status="FAIL" starttime="20210729 10:04:01.638" endtime="20210729 10:04:01.649"/>
</kw>
<status status="FAIL" starttime="20210729 10:04:01.638" endtime="20210729 10:04:01.649"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤ abc!g</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:04:01.650" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:04:01.650" endtime="20210729 10:04:01.650"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:04:01.651" level="INFO">${payload} = {'username': '#¤ abc!g'}</msg>
<status status="PASS" starttime="20210729 10:04:01.651" endtime="20210729 10:04:01.651"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:04:01.655" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:04:01.655" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:04:01.651" endtime="20210729 10:04:01.655"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:04:01.656" endtime="20210729 10:04:01.656"/>
</kw>
<status status="FAIL" starttime="20210729 10:04:01.651" endtime="20210729 10:04:01.656"/>
</iter>
<status status="FAIL" starttime="20210729 10:04:01.651" endtime="20210729 10:04:01.656"/>
</for>
<status status="FAIL" starttime="20210729 10:04:01.649" endtime="20210729 10:04:01.656"/>
</kw>
<status status="FAIL" starttime="20210729 10:04:01.649" endtime="20210729 10:04:01.656"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤ abc!g</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:04:01.659" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:04:01.658" endtime="20210729 10:04:01.659"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:04:01.660" level="INFO">${payload} = {'username': '#¤ abc!g'}</msg>
<status status="PASS" starttime="20210729 10:04:01.659" endtime="20210729 10:04:01.660"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:04:01.668" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:04:01.668" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:04:01.661" endtime="20210729 10:04:01.668"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:04:01.668" endtime="20210729 10:04:01.668"/>
</kw>
<status status="FAIL" starttime="20210729 10:04:01.660" endtime="20210729 10:04:01.670"/>
</iter>
<status status="FAIL" starttime="20210729 10:04:01.660" endtime="20210729 10:04:01.670"/>
</for>
<status status="FAIL" starttime="20210729 10:04:01.657" endtime="20210729 10:04:01.670"/>
</kw>
<status status="FAIL" starttime="20210729 10:04:01.657" endtime="20210729 10:04:01.670"/>
</iter>
<status status="FAIL" starttime="20210729 10:04:01.637" endtime="20210729 10:04:01.671"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:04:01.676" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:04:01.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:04:01.684" level="INFO">${pids} = 24952
24959
24972</msg>
<status status="PASS" starttime="20210729 10:04:01.672" endtime="20210729 10:04:01.684"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:04:01.685" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:04:01.684" endtime="20210729 10:04:01.685"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:04:01.686" level="INFO">${pids} = ['24952', '24959', '24972']</msg>
<status status="PASS" starttime="20210729 10:04:01.685" endtime="20210729 10:04:01.686"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">24952</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:04:01.689" level="INFO">Running command 'kill 24952 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:04:01.686" endtime="20210729 10:04:01.689"/>
</kw>
<status status="PASS" starttime="20210729 10:04:01.686" endtime="20210729 10:04:01.689"/>
</iter>
<iter>
<var name="${pid}">24959</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:04:01.695" level="INFO">Running command 'kill 24959 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:04:01.691" endtime="20210729 10:04:01.696"/>
</kw>
<status status="PASS" starttime="20210729 10:04:01.690" endtime="20210729 10:04:01.696"/>
</iter>
<iter>
<var name="${pid}">24972</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:04:01.704" level="INFO">Running command 'kill 24972 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:04:01.697" endtime="20210729 10:04:01.704"/>
</kw>
<status status="PASS" starttime="20210729 10:04:01.696" endtime="20210729 10:04:01.704"/>
</iter>
<status status="PASS" starttime="20210729 10:04:01.686" endtime="20210729 10:04:01.704"/>
</for>
<status status="PASS" starttime="20210729 10:04:01.685" endtime="20210729 10:04:01.704"/>
</branch>
<status status="PASS" starttime="20210729 10:04:01.685" endtime="20210729 10:04:01.704"/>
</if>
<status status="PASS" starttime="20210729 10:04:01.672" endtime="20210729 10:04:01.704"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": '#¤ abc!g'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:04:00.075" endtime="20210729 10:04:01.705">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t43" name="With Any Valid Token, Updating Username Of Each System User With #¤/abc!g() &amp;%¤fghjklQWERTY Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:04:01.710" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:04:01.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:04:01.719" level="INFO">${pids} = 25001</msg>
<status status="PASS" starttime="20210729 10:04:01.707" endtime="20210729 10:04:01.719"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:04:01.720" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:04:01.719" endtime="20210729 10:04:01.720"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:04:01.720" level="INFO">${pids} = ['25001']</msg>
<status status="PASS" starttime="20210729 10:04:01.720" endtime="20210729 10:04:01.720"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">25001</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:04:01.725" level="INFO">Running command 'kill 25001 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:04:01.721" endtime="20210729 10:04:01.725"/>
</kw>
<status status="PASS" starttime="20210729 10:04:01.720" endtime="20210729 10:04:01.725"/>
</iter>
<status status="PASS" starttime="20210729 10:04:01.720" endtime="20210729 10:04:01.726"/>
</for>
<status status="PASS" starttime="20210729 10:04:01.720" endtime="20210729 10:04:01.726"/>
</branch>
<status status="PASS" starttime="20210729 10:04:01.720" endtime="20210729 10:04:01.726"/>
</if>
<status status="PASS" starttime="20210729 10:04:01.706" endtime="20210729 10:04:01.726"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:04:01.729" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 10:04:01.728" endtime="20210729 10:04:01.729"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:04:01.730" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:04:01.729" endtime="20210729 10:04:01.730"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:04:01.730" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:04:01.730" endtime="20210729 10:04:01.730"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:04:01.730" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:04:01.730" endtime="20210729 10:04:01.730"/>
</kw>
<msg timestamp="20210729 10:04:01.731" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:04:01.729" endtime="20210729 10:04:01.731"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:04:01.735" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:04:01.731" endtime="20210729 10:04:01.736"/>
</kw>
<status status="PASS" starttime="20210729 10:04:01.726" endtime="20210729 10:04:01.737"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 10:04:01.738" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 10:04:01.737" endtime="20210729 10:04:01.742"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 10:04:03.243" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 10:04:01.742" endtime="20210729 10:04:03.243"/>
</kw>
<status status="PASS" starttime="20210729 10:04:01.737" endtime="20210729 10:04:03.243"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:04:03.245" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 10:04:03.244" endtime="20210729 10:04:03.245"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 10:04:03.245" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 10:04:03.245" endtime="20210729 10:04:03.245"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 10:04:03.245" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:04:03.245" endtime="20210729 10:04:03.245"/>
</kw>
<msg timestamp="20210729 10:04:03.246" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 10:04:03.244" endtime="20210729 10:04:03.246"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 10:04:03.246" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 10:04:03.246" endtime="20210729 10:04:03.246"/>
</kw>
<status status="PASS" starttime="20210729 10:04:03.244" endtime="20210729 10:04:03.247"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 10:04:03.247" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 10:04:03.247" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 10:04:03.247" endtime="20210729 10:04:03.247"/>
</kw>
<status status="PASS" starttime="20210729 10:04:03.247" endtime="20210729 10:04:03.248"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 10:04:03.248" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 10:04:03.248" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 10:04:03.248" endtime="20210729 10:04:03.248"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 10:04:03.249" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 10:04:03.248" endtime="20210729 10:04:03.249"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:04:03.249" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:04:03.249" endtime="20210729 10:04:03.249"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:04:03.249" endtime="20210729 10:04:03.250"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:04:03.250" endtime="20210729 10:04:03.250"/>
</kw>
<status status="PASS" starttime="20210729 10:04:03.249" endtime="20210729 10:04:03.250"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:04:03.251" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:04:03.250" endtime="20210729 10:04:03.251"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:04:03.251" endtime="20210729 10:04:03.251"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:04:03.251" endtime="20210729 10:04:03.252"/>
</kw>
<status status="PASS" starttime="20210729 10:04:03.250" endtime="20210729 10:04:03.252"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:04:03.252" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 10:04:03.252" endtime="20210729 10:04:03.252"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 10:04:03.252" endtime="20210729 10:04:03.253"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 10:04:03.253" endtime="20210729 10:04:03.253"/>
</kw>
<status status="PASS" starttime="20210729 10:04:03.252" endtime="20210729 10:04:03.253"/>
</iter>
<status status="PASS" starttime="20210729 10:04:03.249" endtime="20210729 10:04:03.253"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 10:04:03.253" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 10:04:03.253" endtime="20210729 10:04:03.253"/>
</kw>
<status status="PASS" starttime="20210729 10:04:03.248" endtime="20210729 10:04:03.254"/>
</kw>
<status status="PASS" starttime="20210729 10:04:01.706" endtime="20210729 10:04:03.254"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/abc!g() &amp;%¤fghjklQWERTY</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:04:03.255" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 10:04:03.254" endtime="20210729 10:04:03.255"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:04:03.255" level="INFO">${payload} = {'username': '#¤/abc!g() &amp;%¤fghjklQWERTY'}</msg>
<status status="PASS" starttime="20210729 10:04:03.255" endtime="20210729 10:04:03.255"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:04:03.265" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:04:03.265" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:04:03.255" endtime="20210729 10:04:03.265"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:04:03.265" endtime="20210729 10:04:03.265"/>
</kw>
<status status="FAIL" starttime="20210729 10:04:03.255" endtime="20210729 10:04:03.265"/>
</iter>
<status status="FAIL" starttime="20210729 10:04:03.255" endtime="20210729 10:04:03.265"/>
</for>
<status status="FAIL" starttime="20210729 10:04:03.254" endtime="20210729 10:04:03.266"/>
</kw>
<status status="FAIL" starttime="20210729 10:04:03.254" endtime="20210729 10:04:03.266"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/abc!g() &amp;%¤fghjklQWERTY</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:04:03.267" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 10:04:03.266" endtime="20210729 10:04:03.267"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:04:03.267" level="INFO">${payload} = {'username': '#¤/abc!g() &amp;%¤fghjklQWERTY'}</msg>
<status status="PASS" starttime="20210729 10:04:03.267" endtime="20210729 10:04:03.267"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:04:03.271" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:04:03.271" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:04:03.267" endtime="20210729 10:04:03.272"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:04:03.272" endtime="20210729 10:04:03.272"/>
</kw>
<status status="FAIL" starttime="20210729 10:04:03.267" endtime="20210729 10:04:03.272"/>
</iter>
<status status="FAIL" starttime="20210729 10:04:03.267" endtime="20210729 10:04:03.272"/>
</for>
<status status="FAIL" starttime="20210729 10:04:03.266" endtime="20210729 10:04:03.272"/>
</kw>
<status status="FAIL" starttime="20210729 10:04:03.266" endtime="20210729 10:04:03.272"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/abc!g() &amp;%¤fghjklQWERTY</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:04:03.273" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 10:04:03.273" endtime="20210729 10:04:03.273"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 10:04:03.274" level="INFO">${payload} = {'username': '#¤/abc!g() &amp;%¤fghjklQWERTY'}</msg>
<status status="PASS" starttime="20210729 10:04:03.273" endtime="20210729 10:04:03.274"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 10:04:03.278" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 10:04:03.278" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 10:04:03.274" endtime="20210729 10:04:03.278"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 10:04:03.278" endtime="20210729 10:04:03.278"/>
</kw>
<status status="FAIL" starttime="20210729 10:04:03.274" endtime="20210729 10:04:03.278"/>
</iter>
<status status="FAIL" starttime="20210729 10:04:03.274" endtime="20210729 10:04:03.278"/>
</for>
<status status="FAIL" starttime="20210729 10:04:03.272" endtime="20210729 10:04:03.278"/>
</kw>
<status status="FAIL" starttime="20210729 10:04:03.272" endtime="20210729 10:04:03.278"/>
</iter>
<status status="FAIL" starttime="20210729 10:04:03.254" endtime="20210729 10:04:03.278"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 10:04:03.285" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 10:04:03.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 10:04:03.297" level="INFO">${pids} = 25024
25031
25035</msg>
<status status="PASS" starttime="20210729 10:04:03.279" endtime="20210729 10:04:03.297"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:04:03.298" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 10:04:03.297" endtime="20210729 10:04:03.298"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 10:04:03.298" level="INFO">${pids} = ['25024', '25031', '25035']</msg>
<status status="PASS" starttime="20210729 10:04:03.298" endtime="20210729 10:04:03.298"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">25024</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:04:03.301" level="INFO">Running command 'kill 25024 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:04:03.299" endtime="20210729 10:04:03.302"/>
</kw>
<status status="PASS" starttime="20210729 10:04:03.299" endtime="20210729 10:04:03.302"/>
</iter>
<iter>
<var name="${pid}">25031</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:04:03.305" level="INFO">Running command 'kill 25031 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:04:03.302" endtime="20210729 10:04:03.305"/>
</kw>
<status status="PASS" starttime="20210729 10:04:03.302" endtime="20210729 10:04:03.305"/>
</iter>
<iter>
<var name="${pid}">25035</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 10:04:03.310" level="INFO">Running command 'kill 25035 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 10:04:03.306" endtime="20210729 10:04:03.310"/>
</kw>
<status status="PASS" starttime="20210729 10:04:03.306" endtime="20210729 10:04:03.310"/>
</iter>
<status status="PASS" starttime="20210729 10:04:03.298" endtime="20210729 10:04:03.310"/>
</for>
<status status="PASS" starttime="20210729 10:04:03.298" endtime="20210729 10:04:03.310"/>
</branch>
<status status="PASS" starttime="20210729 10:04:03.298" endtime="20210729 10:04:03.310"/>
</if>
<status status="PASS" starttime="20210729 10:04:03.279" endtime="20210729 10:04:03.310"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z. We make PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any registered user's username. In the requests' body, we set a
username as such:
{
"username": '#¤/abc!g() &amp;%¤fghjklQWERTY'
}
Then, Each time, the request should fail each time with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 10:04:01.705" endtime="20210729 10:04:03.311">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<doc>This test suite contains test cases for CRF Demo API.
Documentation for the API can be found:
https://github.com/Interview-demoapp/Flasky
The acceptance criteria we verify here is
"3: As an API Consumer, if authenticated, I can update personal information of users"
Definitions
(1) System User: The user, who is registered to the system under test with a valid token
(2) API User: The user, who calls the API to update personal information of the system user</doc>
<status status="FAIL" starttime="20210729 10:02:53.093" endtime="20210729 10:04:03.313"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="43" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="43" skip="0" id="s1" name="3-Updating-Personal-Information">3-Updating-Personal-Information</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
